

##file cppcheck-2.8/test/testsuite.h

1:
|
31:
32: class options ;
33:
34: class TestFixture : public ErrorLogger {
35: private:
36: static std :: ostringstream errmsg@var1 ;
37: static unsigned int countTests@var2 ;
38: static unsigned long fails_counter@var3 ;
39: static unsigned long todos_counter@var4 ;
40: static unsigned long succeeded_todos_counter@var5 ;
41: static std :: set < std :: string > missingLibs@var6 ;
42: bool mVerbose@var7 ;
43: std :: string mTemplateFormat@var8 ;
44: std :: string mTemplateLocation@var9 ;
45: std :: string mTestname@var10 ;
46:
47: protected:
48: std :: string exename@var11 ;
49: std :: string testToRun@var12 ;
50: bool quiet_tests@var13 ;
51:
52: virtual void run ( ) = 0 ;
53:
54: bool prepareTest ( const char testname@var14 [ ] ) ;
55: std :: string getLocationStr ( const char * const filename@var15 , const unsigned int linenr@var16 ) const ;
56:
57: bool assert_ ( const char * const filename@var17 , const unsigned int linenr@var18 , const bool condition@var19 ) const ;
58:
59: template < typename T , typename U >
60: bool assertEquals ( const char * const filename@var20 , const unsigned int linenr@var21 , const T & expected@var22 , const U & actual@var23 , const std :: string & msg@var24 = emptyString ) const {
61: if (@expr1073741954 expected@var22 !=@expr1073741955 actual@var23 ) {
62: std ::@expr1073741956 ostringstream expectedStr@var25 ;
63: expectedStr@var25 <<@expr1073741957 expected@var22 ;
64: std ::@expr1073741958 ostringstream actualStr@var26 ;
65: actualStr@var26 <<@expr1073741959 actual@var23 ;
66:
67: assertEqualsFailed (@expr1073741960 filename@var20 , linenr@var21 , expectedStr@var25 .@expr1073741961 str (@expr1073741962 ) , actualStr@var26 .@expr1073741963 str (@expr1073741964 ) , msg@var24 ) ;
68: }
69: return expected@var22 ==@expr1073741965 actual@var23 ;
70: }
71:
72:
73:
74: void assertEqualsFailed ( const char * const filename@var27 , const unsigned int linenr@var28 , const std :: string & expected@var29 , const std :: string & actual@var30 , const std :: string & msg@var31 ) const ;
75:
76: bool assertEquals ( const char * const filename@var32 , const unsigned int linenr@var33 , const std :: string & expected@var34 , const std :: string & actual@var35 , const std :: string & msg@var36 = emptyString ) const ;
77: void assertEqualsWithoutLineNumbers ( const char * const filename@var37 , const unsigned int linenr@var38 , const std :: string & expected@var39 , const std :: string & actual@var40 , const std :: string & msg@var41 = emptyString ) const ;
78: bool assertEquals ( const char * const filename@var42 , const unsigned int linenr@var43 , const char expected@var44 [ ] , const std :: string & actual@var45 , const std :: string & msg@var46 = emptyString ) const ;
79: bool assertEquals ( const char * const filename@var47 , const unsigned int linenr@var48 , const char expected@var49 [ ] , const char actual@var50 [ ] , const std :: string & msg@var51 = emptyString ) const ;
80: bool assertEquals ( const char * const filename@var52 , const unsigned int linenr@var53 , const std :: string & expected@var54 , const char actual@var55 [ ] , const std :: string & msg@var56 = emptyString ) const ;
81: bool assertEquals ( const char * const filename@var57 , const unsigned int linenr@var58 , const long long expected@var59 , const long long actual@var60 , const std :: string & msg@var61 = emptyString ) const ;
82: void assertEqualsDouble ( const char * const filename@var62 , const unsigned int linenr@var63 , const double expected@var64 , const double actual@var65 , const double tolerance@var66 , const std :: string & msg@var67 = emptyString ) const ;
83:
84: void todoAssertEquals ( const char * const filename@var68 , const unsigned int linenr@var69 , const std :: string & wanted@var70 ,
85: const std :: string & current@var71 , const std :: string & actual@var72 ) const ;
86: void todoAssertEquals ( const char * const filename@var73 , const unsigned int linenr@var74 , const char wanted@var75 [ ] ,
87: const char current@var76 [ ] , const std :: string & actual@var77 ) const ;
88: void todoAssertEquals ( const char * const filename@var78 , const unsigned int linenr@var79 , const long long wanted@var80 ,
89: const long long current@var81 , const long long actual@var82 ) const ;
90: void assertThrow ( const char * const filename@var83 , const unsigned int linenr@var84 ) const ;
91: void assertThrowFail ( const char * const filename@var85 , const unsigned int linenr@var86 ) const ;
92: void assertNoThrowFail ( const char * const filename@var87 , const unsigned int linenr@var88 ) const ;
93: static void complainMissingLib ( const char * const libname@var89 ) ;
94: static std :: string deleteLineNumber ( const std :: string & message@var90 ) ;
95:
96: void setVerbose ( bool v@var91 ) {
97: mVerbose@var7 =@expr1073741966 v@var91 ;
98: }
99:
100: void setMultiline ( ) {
101: mTemplateFormat@var8 =@expr1073741967 "{file}:{line}:{severity}:{message}" ;
102: mTemplateLocation@var9 =@expr1073741968 "{file}:{line}:note:{info}" ;
103: }
104:
105: void processOptions ( const options & args@var92 ) ;
106: public:
107: void reportOut ( const std :: string & outmsg@var93 , Color c@var94 = Color :: Reset ) override ;
108: void reportErr ( const ErrorMessage & msg@var95 ) override ;
109: void run ( const std :: string & str@var96 ) ;
110: static void printHelp ( ) ;
111: const std :: string classname@var97 ;
112:
113: explicit TestFixture ( const char * const _name@var98 ) ;
114: ~ TestFixture ( ) override { }
115:
116: static unsigned long runTests ( const options & args@var99 ) ;
117: } ;
118:
119: extern std :: ostringstream errout@var100 ;
120: extern std :: ostringstream output@var101 ;

##file cppcheck-2.8/test/testconstructors.cpp

1:
|
31:
32: class TestConstructors : public TestFixture {
33: public:
34: TestConstructors ( ) : TestFixture ( "TestConstructors" ) { }
35:
36: private:
37: Settings settings@var102 ;
38:
39:
40: void check_ ( const char * file@var103 , int line@var104 , const char code@var105 [ ] , bool inconclusive@var106 = false ) {
41:
42: errout@var100 .@expr1073741970 str (@expr1073741971 "" ) ;
43:
44: settings@var102 .@expr1073741972 certainty@var107 .@expr1073741973 setEnabled (@expr1073741974 Certainty ::@expr1073741975 inconclusive@expr1073741969 , inconclusive@var106 ) ;
45:
46:
47: Tokenizer tokenizer@var108 (@expr1073741976 &@expr153 settings@var102 , this@expr154 ) ;
48: std ::@expr1073741979 istringstream istr@var109 (@expr1073741980 code@var105 ) ;
49: $assert_ $(@expr1073741981 file@var103 $, line@var104 $, $(@expr1073741982 tokenizer@var108 .@expr1073741983 tokenize (@expr1073741984 istr@var109 , "test.cpp" ) $) $) ;
50:
51:
52: CheckClass checkClass@var110 (@expr1073741985 &@expr1073741986 tokenizer@var108 , &@expr153 settings@var102 , this@expr154 ) ;
53: checkClass@var110 .@expr1073741988 constructors (@expr1073741989 ) ;
54: }
55:
56: void check_ ( const char * file@var111 , int line@var112 , const char code@var113 [ ] , const Settings & s@var114 ) {
57:
58: errout@var100 .@expr1073741990 str (@expr1073741991 "" ) ;
59:
60:
61: Tokenizer tokenizer@var115 (@expr1073741992 &@expr169 s@var114 , this@expr170 ) ;
62: std ::@expr1073741995 istringstream istr@var116 (@expr1073741996 code@var113 ) ;
63: $assert_ $(@expr1073741997 file@var111 $, line@var112 $, $(@expr1073741998 tokenizer@var115 .@expr1073741999 tokenize (@expr1073742000 istr@var116 , "test.cpp" ) $) $) ;
64:
65:
66: CheckClass checkClass@var117 (@expr1073742001 &@expr1073742002 tokenizer@var115 , &@expr169 s@var114 , this@expr170 ) ;
67: checkClass@var117 .@expr1073742004 constructors (@expr1073742005 ) ;
68: }
69:
70: void run ( ) override {
71: settings@var102 .@expr184 severity@var118 .@expr185 enable (@expr1073742010 Severity ::@expr1073742011 style@expr1073742006 ) ;
72: settings@var102 .@expr184 severity@var118 .@expr185 enable (@expr1073742014 Severity ::@expr1073742015 warning@expr1073742007 ) ;
73:
74: $do ${ $if $(@expr1073742016 $prepareTest $(@expr1073742017 "simple1" $) $) ${ $setVerbose $(@expr1073742018 $false $) $; simple1 $(@expr1073742019 $) $; $} $} $while $(@expr1073742020 $false $) ;
75: $do ${ $if $(@expr1073742021 $prepareTest $(@expr1073742022 "simple2" $) $) ${ $setVerbose $(@expr1073742023 $false $) $; simple2 $(@expr1073742024 $) $; $} $} $while $(@expr1073742025 $false $) ;
76: $do ${ $if $(@expr1073742026 $prepareTest $(@expr1073742027 "simple3" $) $) ${ $setVerbose $(@expr1073742028 $false $) $; simple3 $(@expr1073742029 $) $; $} $} $while $(@expr1073742030 $false $) ;
77: $do ${ $if $(@expr1073742031 $prepareTest $(@expr1073742032 "simple4" $) $) ${ $setVerbose $(@expr1073742033 $false $) $; simple4 $(@expr1073742034 $) $; $} $} $while $(@expr1073742035 $false $) ;
78: $do ${ $if $(@expr1073742036 $prepareTest $(@expr1073742037 "simple5" $) $) ${ $setVerbose $(@expr1073742038 $false $) $; simple5 $(@expr1073742039 $) $; $} $} $while $(@expr1073742040 $false $) ;
79: $do ${ $if $(@expr1073742041 $prepareTest $(@expr1073742042 "simple6" $) $) ${ $setVerbose $(@expr1073742043 $false $) $; simple6 $(@expr1073742044 $) $; $} $} $while $(@expr1073742045 $false $) ;
80: $do ${ $if $(@expr1073742046 $prepareTest $(@expr1073742047 "simple7" $) $) ${ $setVerbose $(@expr1073742048 $false $) $; simple7 $(@expr1073742049 $) $; $} $} $while $(@expr1073742050 $false $) ;
81: $do ${ $if $(@expr1073742051 $prepareTest $(@expr1073742052 "simple8" $) $) ${ $setVerbose $(@expr1073742053 $false $) $; simple8 $(@expr1073742054 $) $; $} $} $while $(@expr1073742055 $false $) ;
82: $do ${ $if $(@expr1073742056 $prepareTest $(@expr1073742057 "simple9" $) $) ${ $setVerbose $(@expr1073742058 $false $) $; simple9 $(@expr1073742059 $) $; $} $} $while $(@expr1073742060 $false $) ;
83: $do ${ $if $(@expr1073742061 $prepareTest $(@expr1073742062 "simple10" $) $) ${ $setVerbose $(@expr1073742063 $false $) $; simple10 $(@expr1073742064 $) $; $} $} $while $(@expr1073742065 $false $) ;
84: $do ${ $if $(@expr1073742066 $prepareTest $(@expr1073742067 "simple11" $) $) ${ $setVerbose $(@expr1073742068 $false $) $; simple11 $(@expr1073742069 $) $; $} $} $while $(@expr1073742070 $false $) ;
85: $do ${ $if $(@expr1073742071 $prepareTest $(@expr1073742072 "simple12" $) $) ${ $setVerbose $(@expr1073742073 $false $) $; simple12 $(@expr1073742074 $) $; $} $} $while $(@expr1073742075 $false $) ;
86: $do ${ $if $(@expr1073742076 $prepareTest $(@expr1073742077 "simple13" $) $) ${ $setVerbose $(@expr1073742078 $false $) $; simple13 $(@expr1073742079 $) $; $} $} $while $(@expr1073742080 $false $) ;
87: $do ${ $if $(@expr1073742081 $prepareTest $(@expr1073742082 "simple14" $) $) ${ $setVerbose $(@expr1073742083 $false $) $; simple14 $(@expr1073742084 $) $; $} $} $while $(@expr1073742085 $false $) ;
88: $do ${ $if $(@expr1073742086 $prepareTest $(@expr1073742087 "simple15" $) $) ${ $setVerbose $(@expr1073742088 $false $) $; simple15 $(@expr1073742089 $) $; $} $} $while $(@expr1073742090 $false $) ;
89: $do ${ $if $(@expr1073742091 $prepareTest $(@expr1073742092 "simple16" $) $) ${ $setVerbose $(@expr1073742093 $false $) $; simple16 $(@expr1073742094 $) $; $} $} $while $(@expr1073742095 $false $) ;
90: $do ${ $if $(@expr1073742096 $prepareTest $(@expr1073742097 "simple17" $) $) ${ $setVerbose $(@expr1073742098 $false $) $; simple17 $(@expr1073742099 $) $; $} $} $while $(@expr1073742100 $false $) ;
91:
92: $do ${ $if $(@expr1073742101 $prepareTest $(@expr1073742102 "noConstructor1" $) $) ${ $setVerbose $(@expr1073742103 $false $) $; noConstructor1 $(@expr1073742104 $) $; $} $} $while $(@expr1073742105 $false $) ;
93: $do ${ $if $(@expr1073742106 $prepareTest $(@expr1073742107 "noConstructor2" $) $) ${ $setVerbose $(@expr1073742108 $false $) $; noConstructor2 $(@expr1073742109 $) $; $} $} $while $(@expr1073742110 $false $) ;
94: $do ${ $if $(@expr1073742111 $prepareTest $(@expr1073742112 "noConstructor3" $) $) ${ $setVerbose $(@expr1073742113 $false $) $; noConstructor3 $(@expr1073742114 $) $; $} $} $while $(@expr1073742115 $false $) ;
95: $do ${ $if $(@expr1073742116 $prepareTest $(@expr1073742117 "noConstructor4" $) $) ${ $setVerbose $(@expr1073742118 $false $) $; noConstructor4 $(@expr1073742119 $) $; $} $} $while $(@expr1073742120 $false $) ;
96: $do ${ $if $(@expr1073742121 $prepareTest $(@expr1073742122 "noConstructor5" $) $) ${ $setVerbose $(@expr1073742123 $false $) $; noConstructor5 $(@expr1073742124 $) $; $} $} $while $(@expr1073742125 $false $) ;
97: $do ${ $if $(@expr1073742126 $prepareTest $(@expr1073742127 "noConstructor6" $) $) ${ $setVerbose $(@expr1073742128 $false $) $; noConstructor6 $(@expr1073742129 $) $; $} $} $while $(@expr1073742130 $false $) ;
98: $do ${ $if $(@expr1073742131 $prepareTest $(@expr1073742132 "noConstructor7" $) $) ${ $setVerbose $(@expr1073742133 $false $) $; noConstructor7 $(@expr1073742134 $) $; $} $} $while $(@expr1073742135 $false $) ;
99: $do ${ $if $(@expr1073742136 $prepareTest $(@expr1073742137 "noConstructor8" $) $) ${ $setVerbose $(@expr1073742138 $false $) $; noConstructor8 $(@expr1073742139 $) $; $} $} $while $(@expr1073742140 $false $) ;
100: $do ${ $if $(@expr1073742141 $prepareTest $(@expr1073742142 "noConstructor9" $) $) ${ $setVerbose $(@expr1073742143 $false $) $; noConstructor9 $(@expr1073742144 $) $; $} $} $while $(@expr1073742145 $false $) ;
101: $do ${ $if $(@expr1073742146 $prepareTest $(@expr1073742147 "noConstructor10" $) $) ${ $setVerbose $(@expr1073742148 $false $) $; noConstructor10 $(@expr1073742149 $) $; $} $} $while $(@expr1073742150 $false $) ;
102: $do ${ $if $(@expr1073742151 $prepareTest $(@expr1073742152 "noConstructor11" $) $) ${ $setVerbose $(@expr1073742153 $false $) $; noConstructor11 $(@expr1073742154 $) $; $} $} $while $(@expr1073742155 $false $) ;
103: $do ${ $if $(@expr1073742156 $prepareTest $(@expr1073742157 "noConstructor12" $) $) ${ $setVerbose $(@expr1073742158 $false $) $; noConstructor12 $(@expr1073742159 $) $; $} $} $while $(@expr1073742160 $false $) ;
104: $do ${ $if $(@expr1073742161 $prepareTest $(@expr1073742162 "noConstructor13" $) $) ${ $setVerbose $(@expr1073742163 $false $) $; noConstructor13 $(@expr1073742164 $) $; $} $} $while $(@expr1073742165 $false $) ;
105: $do ${ $if $(@expr1073742166 $prepareTest $(@expr1073742167 "noConstructor14" $) $) ${ $setVerbose $(@expr1073742168 $false $) $; noConstructor14 $(@expr1073742169 $) $; $} $} $while $(@expr1073742170 $false $) ;
106: $do ${ $if $(@expr1073742171 $prepareTest $(@expr1073742172 "noConstructor15" $) $) ${ $setVerbose $(@expr1073742173 $false $) $; noConstructor15 $(@expr1073742174 $) $; $} $} $while $(@expr1073742175 $false $) ;
107:
108: $do ${ $if $(@expr1073742176 $prepareTest $(@expr1073742177 "forwardDeclaration" $) $) ${ $setVerbose $(@expr1073742178 $false $) $; forwardDeclaration $(@expr1073742179 $) $; $} $} $while $(@expr1073742180 $false $) ;
109:
110: $do ${ $if $(@expr1073742181 $prepareTest $(@expr1073742182 "initvar_with_this" $) $) ${ $setVerbose $(@expr1073742183 $false $) $; initvar_with_this $(@expr1073742184 $) $; $} $} $while $(@expr1073742185 $false $) ;
111: $do ${ $if $(@expr1073742186 $prepareTest $(@expr1073742187 "initvar_if" $) $) ${ $setVerbose $(@expr1073742188 $false $) $; initvar_if $(@expr1073742189 $) $; $} $} $while $(@expr1073742190 $false $) ;
112: $do ${ $if $(@expr1073742191 $prepareTest $(@expr1073742192 "initvar_operator_eq1" $) $) ${ $setVerbose $(@expr1073742193 $false $) $; initvar_operator_eq1 $(@expr1073742194 $) $; $} $} $while $(@expr1073742195 $false $) ;
113: $do ${ $if $(@expr1073742196 $prepareTest $(@expr1073742197 "initvar_operator_eq2" $) $) ${ $setVerbose $(@expr1073742198 $false $) $; initvar_operator_eq2 $(@expr1073742199 $) $; $} $} $while $(@expr1073742200 $false $) ;
114: $do ${ $if $(@expr1073742201 $prepareTest $(@expr1073742202 "initvar_operator_eq3" $) $) ${ $setVerbose $(@expr1073742203 $false $) $; initvar_operator_eq3 $(@expr1073742204 $) $; $} $} $while $(@expr1073742205 $false $) ;
115: $do ${ $if $(@expr1073742206 $prepareTest $(@expr1073742207 "initvar_operator_eq4" $) $) ${ $setVerbose $(@expr1073742208 $false $) $; initvar_operator_eq4 $(@expr1073742209 $) $; $} $} $while $(@expr1073742210 $false $) ;
116: $do ${ $if $(@expr1073742211 $prepareTest $(@expr1073742212 "initvar_operator_eq5" $) $) ${ $setVerbose $(@expr1073742213 $false $) $; initvar_operator_eq5 $(@expr1073742214 $) $; $} $} $while $(@expr1073742215 $false $) ;
117: $do ${ $if $(@expr1073742216 $prepareTest $(@expr1073742217 "initvar_operator_eq6" $) $) ${ $setVerbose $(@expr1073742218 $false $) $; initvar_operator_eq6 $(@expr1073742219 $) $; $} $} $while $(@expr1073742220 $false $) ;
118: $do ${ $if $(@expr1073742221 $prepareTest $(@expr1073742222 "initvar_operator_eq7" $) $) ${ $setVerbose $(@expr1073742223 $false $) $; initvar_operator_eq7 $(@expr1073742224 $) $; $} $} $while $(@expr1073742225 $false $) ;
119: $do ${ $if $(@expr1073742226 $prepareTest $(@expr1073742227 "initvar_same_classname" $) $) ${ $setVerbose $(@expr1073742228 $false $) $; initvar_same_classname $(@expr1073742229 $) $; $} $} $while $(@expr1073742230 $false $) ;
120: $do ${ $if $(@expr1073742231 $prepareTest $(@expr1073742232 "initvar_chained_assign" $) $) ${ $setVerbose $(@expr1073742233 $false $) $; initvar_chained_assign $(@expr1073742234 $) $; $} $} $while $(@expr1073742235 $false $) ;
121: $do ${ $if $(@expr1073742236 $prepareTest $(@expr1073742237 "initvar_2constructors" $) $) ${ $setVerbose $(@expr1073742238 $false $) $; initvar_2constructors $(@expr1073742239 $) $; $} $} $while $(@expr1073742240 $false $) ;
122: $do ${ $if $(@expr1073742241 $prepareTest $(@expr1073742242 "initvar_constvar" $) $) ${ $setVerbose $(@expr1073742243 $false $) $; initvar_constvar $(@expr1073742244 $) $; $} $} $while $(@expr1073742245 $false $) ;
123: $do ${ $if $(@expr1073742246 $prepareTest $(@expr1073742247 "initvar_staticvar" $) $) ${ $setVerbose $(@expr1073742248 $false $) $; initvar_staticvar $(@expr1073742249 $) $; $} $} $while $(@expr1073742250 $false $) ;
124: $do ${ $if $(@expr1073742251 $prepareTest $(@expr1073742252 "initvar_brace_init" $) $) ${ $setVerbose $(@expr1073742253 $false $) $; initvar_brace_init $(@expr1073742254 $) $; $} $} $while $(@expr1073742255 $false $) ;
125: $do ${ $if $(@expr1073742256 $prepareTest $(@expr1073742257 "initvar_union" $) $) ${ $setVerbose $(@expr1073742258 $false $) $; initvar_union $(@expr1073742259 $) $; $} $} $while $(@expr1073742260 $false $) ;
126: $do ${ $if $(@expr1073742261 $prepareTest $(@expr1073742262 "initvar_delegate" $) $) ${ $setVerbose $(@expr1073742263 $false $) $; initvar_delegate $(@expr1073742264 $) $; $} $} $while $(@expr1073742265 $false $) ;
127: $do ${ $if $(@expr1073742266 $prepareTest $(@expr1073742267 "initvar_delegate2" $) $) ${ $setVerbose $(@expr1073742268 $false $) $; initvar_delegate2 $(@expr1073742269 $) $; $} $} $while $(@expr1073742270 $false $) ;
128: $do ${ $if $(@expr1073742271 $prepareTest $(@expr1073742272 "initvar_derived_class" $) $) ${ $setVerbose $(@expr1073742273 $false $) $; initvar_derived_class $(@expr1073742274 $) $; $} $} $while $(@expr1073742275 $false $) ;
129:
130: $do ${ $if $(@expr1073742276 $prepareTest $(@expr1073742277 "initvar_private_constructor" $) $) ${ $setVerbose $(@expr1073742278 $false $) $; initvar_private_constructor $(@expr1073742279 $) $; $} $} $while $(@expr1073742280 $false $) ;
131: $do ${ $if $(@expr1073742281 $prepareTest $(@expr1073742282 "initvar_copy_constructor" $) $) ${ $setVerbose $(@expr1073742283 $false $) $; initvar_copy_constructor $(@expr1073742284 $) $; $} $} $while $(@expr1073742285 $false $) ;
132: $do ${ $if $(@expr1073742286 $prepareTest $(@expr1073742287 "initvar_nested_constructor" $) $) ${ $setVerbose $(@expr1073742288 $false $) $; initvar_nested_constructor $(@expr1073742289 $) $; $} $} $while $(@expr1073742290 $false $) ;
133: $do ${ $if $(@expr1073742291 $prepareTest $(@expr1073742292 "initvar_nocopy1" $) $) ${ $setVerbose $(@expr1073742293 $false $) $; initvar_nocopy1 $(@expr1073742294 $) $; $} $} $while $(@expr1073742295 $false $) ;
134: $do ${ $if $(@expr1073742296 $prepareTest $(@expr1073742297 "initvar_nocopy2" $) $) ${ $setVerbose $(@expr1073742298 $false $) $; initvar_nocopy2 $(@expr1073742299 $) $; $} $} $while $(@expr1073742300 $false $) ;
135: $do ${ $if $(@expr1073742301 $prepareTest $(@expr1073742302 "initvar_nocopy3" $) $) ${ $setVerbose $(@expr1073742303 $false $) $; initvar_nocopy3 $(@expr1073742304 $) $; $} $} $while $(@expr1073742305 $false $) ;
136: $do ${ $if $(@expr1073742306 $prepareTest $(@expr1073742307 "initvar_nocopy4" $) $) ${ $setVerbose $(@expr1073742308 $false $) $; initvar_nocopy4 $(@expr1073742309 $) $; $} $} $while $(@expr1073742310 $false $) ;
137: $do ${ $if $(@expr1073742311 $prepareTest $(@expr1073742312 "initvar_with_member_function_this" $) $) ${ $setVerbose $(@expr1073742313 $false $) $; initvar_with_member_function_this $(@expr1073742314 $) $; $} $} $while $(@expr1073742315 $false $) ;
138:
139: $do ${ $if $(@expr1073742316 $prepareTest $(@expr1073742317 "initvar_destructor" $) $) ${ $setVerbose $(@expr1073742318 $false $) $; initvar_destructor $(@expr1073742319 $) $; $} $} $while $(@expr1073742320 $false $) ;
140: $do ${ $if $(@expr1073742321 $prepareTest $(@expr1073742322 "initvar_func_ret_func_ptr" $) $) ${ $setVerbose $(@expr1073742323 $false $) $; initvar_func_ret_func_ptr $(@expr1073742324 $) $; $} $} $while $(@expr1073742325 $false $) ;
141:
142: $do ${ $if $(@expr1073742326 $prepareTest $(@expr1073742327 "initvar_alias" $) $) ${ $setVerbose $(@expr1073742328 $false $) $; initvar_alias $(@expr1073742329 $) $; $} $} $while $(@expr1073742330 $false $) ;
143:
144: $do ${ $if $(@expr1073742331 $prepareTest $(@expr1073742332 "initvar_templateMember" $) $) ${ $setVerbose $(@expr1073742333 $false $) $; initvar_templateMember $(@expr1073742334 $) $; $} $} $while $(@expr1073742335 $false $) ;
145: $do ${ $if $(@expr1073742336 $prepareTest $(@expr1073742337 "initvar_smartptr" $) $) ${ $setVerbose $(@expr1073742338 $false $) $; initvar_smartptr $(@expr1073742339 $) $; $} $} $while $(@expr1073742340 $false $) ;
146:
147: $do ${ $if $(@expr1073742341 $prepareTest $(@expr1073742342 "operatorEqSTL" $) $) ${ $setVerbose $(@expr1073742343 $false $) $; operatorEqSTL $(@expr1073742344 $) $; $} $} $while $(@expr1073742345 $false $) ;
148:
149: $do ${ $if $(@expr1073742346 $prepareTest $(@expr1073742347 "uninitVar1" $) $) ${ $setVerbose $(@expr1073742348 $false $) $; uninitVar1 $(@expr1073742349 $) $; $} $} $while $(@expr1073742350 $false $) ;
150: $do ${ $if $(@expr1073742351 $prepareTest $(@expr1073742352 "uninitVar2" $) $) ${ $setVerbose $(@expr1073742353 $false $) $; uninitVar2 $(@expr1073742354 $) $; $} $} $while $(@expr1073742355 $false $) ;
151: $do ${ $if $(@expr1073742356 $prepareTest $(@expr1073742357 "uninitVar3" $) $) ${ $setVerbose $(@expr1073742358 $false $) $; uninitVar3 $(@expr1073742359 $) $; $} $} $while $(@expr1073742360 $false $) ;
152: $do ${ $if $(@expr1073742361 $prepareTest $(@expr1073742362 "uninitVar4" $) $) ${ $setVerbose $(@expr1073742363 $false $) $; uninitVar4 $(@expr1073742364 $) $; $} $} $while $(@expr1073742365 $false $) ;
153: $do ${ $if $(@expr1073742366 $prepareTest $(@expr1073742367 "uninitVar5" $) $) ${ $setVerbose $(@expr1073742368 $false $) $; uninitVar5 $(@expr1073742369 $) $; $} $} $while $(@expr1073742370 $false $) ;
154: $do ${ $if $(@expr1073742371 $prepareTest $(@expr1073742372 "uninitVar6" $) $) ${ $setVerbose $(@expr1073742373 $false $) $; uninitVar6 $(@expr1073742374 $) $; $} $} $while $(@expr1073742375 $false $) ;
155: $do ${ $if $(@expr1073742376 $prepareTest $(@expr1073742377 "uninitVar7" $) $) ${ $setVerbose $(@expr1073742378 $false $) $; uninitVar7 $(@expr1073742379 $) $; $} $} $while $(@expr1073742380 $false $) ;
156: $do ${ $if $(@expr1073742381 $prepareTest $(@expr1073742382 "uninitVar8" $) $) ${ $setVerbose $(@expr1073742383 $false $) $; uninitVar8 $(@expr1073742384 $) $; $} $} $while $(@expr1073742385 $false $) ;
157: $do ${ $if $(@expr1073742386 $prepareTest $(@expr1073742387 "uninitVar9" $) $) ${ $setVerbose $(@expr1073742388 $false $) $; uninitVar9 $(@expr1073742389 $) $; $} $} $while $(@expr1073742390 $false $) ;
158: $do ${ $if $(@expr1073742391 $prepareTest $(@expr1073742392 "uninitVar10" $) $) ${ $setVerbose $(@expr1073742393 $false $) $; uninitVar10 $(@expr1073742394 $) $; $} $} $while $(@expr1073742395 $false $) ;
159: $do ${ $if $(@expr1073742396 $prepareTest $(@expr1073742397 "uninitVar11" $) $) ${ $setVerbose $(@expr1073742398 $false $) $; uninitVar11 $(@expr1073742399 $) $; $} $} $while $(@expr1073742400 $false $) ;
160: $do ${ $if $(@expr1073742401 $prepareTest $(@expr1073742402 "uninitVar12" $) $) ${ $setVerbose $(@expr1073742403 $false $) $; uninitVar12 $(@expr1073742404 $) $; $} $} $while $(@expr1073742405 $false $) ;
161: $do ${ $if $(@expr1073742406 $prepareTest $(@expr1073742407 "uninitVar13" $) $) ${ $setVerbose $(@expr1073742408 $false $) $; uninitVar13 $(@expr1073742409 $) $; $} $} $while $(@expr1073742410 $false $) ;
162: $do ${ $if $(@expr1073742411 $prepareTest $(@expr1073742412 "uninitVar14" $) $) ${ $setVerbose $(@expr1073742413 $false $) $; uninitVar14 $(@expr1073742414 $) $; $} $} $while $(@expr1073742415 $false $) ;
163: $do ${ $if $(@expr1073742416 $prepareTest $(@expr1073742417 "uninitVar15" $) $) ${ $setVerbose $(@expr1073742418 $false $) $; uninitVar15 $(@expr1073742419 $) $; $} $} $while $(@expr1073742420 $false $) ;
164: $do ${ $if $(@expr1073742421 $prepareTest $(@expr1073742422 "uninitVar16" $) $) ${ $setVerbose $(@expr1073742423 $false $) $; uninitVar16 $(@expr1073742424 $) $; $} $} $while $(@expr1073742425 $false $) ;
165: $do ${ $if $(@expr1073742426 $prepareTest $(@expr1073742427 "uninitVar17" $) $) ${ $setVerbose $(@expr1073742428 $false $) $; uninitVar17 $(@expr1073742429 $) $; $} $} $while $(@expr1073742430 $false $) ;
166: $do ${ $if $(@expr1073742431 $prepareTest $(@expr1073742432 "uninitVar18" $) $) ${ $setVerbose $(@expr1073742433 $false $) $; uninitVar18 $(@expr1073742434 $) $; $} $} $while $(@expr1073742435 $false $) ;
167: $do ${ $if $(@expr1073742436 $prepareTest $(@expr1073742437 "uninitVar19" $) $) ${ $setVerbose $(@expr1073742438 $false $) $; uninitVar19 $(@expr1073742439 $) $; $} $} $while $(@expr1073742440 $false $) ;
168: $do ${ $if $(@expr1073742441 $prepareTest $(@expr1073742442 "uninitVar20" $) $) ${ $setVerbose $(@expr1073742443 $false $) $; uninitVar20 $(@expr1073742444 $) $; $} $} $while $(@expr1073742445 $false $) ;
169: $do ${ $if $(@expr1073742446 $prepareTest $(@expr1073742447 "uninitVar21" $) $) ${ $setVerbose $(@expr1073742448 $false $) $; uninitVar21 $(@expr1073742449 $) $; $} $} $while $(@expr1073742450 $false $) ;
170: $do ${ $if $(@expr1073742451 $prepareTest $(@expr1073742452 "uninitVar22" $) $) ${ $setVerbose $(@expr1073742453 $false $) $; uninitVar22 $(@expr1073742454 $) $; $} $} $while $(@expr1073742455 $false $) ;
171: $do ${ $if $(@expr1073742456 $prepareTest $(@expr1073742457 "uninitVar23" $) $) ${ $setVerbose $(@expr1073742458 $false $) $; uninitVar23 $(@expr1073742459 $) $; $} $} $while $(@expr1073742460 $false $) ;
172: $do ${ $if $(@expr1073742461 $prepareTest $(@expr1073742462 "uninitVar24" $) $) ${ $setVerbose $(@expr1073742463 $false $) $; uninitVar24 $(@expr1073742464 $) $; $} $} $while $(@expr1073742465 $false $) ;
173: $do ${ $if $(@expr1073742466 $prepareTest $(@expr1073742467 "uninitVar25" $) $) ${ $setVerbose $(@expr1073742468 $false $) $; uninitVar25 $(@expr1073742469 $) $; $} $} $while $(@expr1073742470 $false $) ;
174: $do ${ $if $(@expr1073742471 $prepareTest $(@expr1073742472 "uninitVar26" $) $) ${ $setVerbose $(@expr1073742473 $false $) $; uninitVar26 $(@expr1073742474 $) $; $} $} $while $(@expr1073742475 $false $) ;
175: $do ${ $if $(@expr1073742476 $prepareTest $(@expr1073742477 "uninitVar27" $) $) ${ $setVerbose $(@expr1073742478 $false $) $; uninitVar27 $(@expr1073742479 $) $; $} $} $while $(@expr1073742480 $false $) ;
176: $do ${ $if $(@expr1073742481 $prepareTest $(@expr1073742482 "uninitVar28" $) $) ${ $setVerbose $(@expr1073742483 $false $) $; uninitVar28 $(@expr1073742484 $) $; $} $} $while $(@expr1073742485 $false $) ;
177: $do ${ $if $(@expr1073742486 $prepareTest $(@expr1073742487 "uninitVar29" $) $) ${ $setVerbose $(@expr1073742488 $false $) $; uninitVar29 $(@expr1073742489 $) $; $} $} $while $(@expr1073742490 $false $) ;
178: $do ${ $if $(@expr1073742491 $prepareTest $(@expr1073742492 "uninitVar30" $) $) ${ $setVerbose $(@expr1073742493 $false $) $; uninitVar30 $(@expr1073742494 $) $; $} $} $while $(@expr1073742495 $false $) ;
179: $do ${ $if $(@expr1073742496 $prepareTest $(@expr1073742497 "uninitVar31" $) $) ${ $setVerbose $(@expr1073742498 $false $) $; uninitVar31 $(@expr1073742499 $) $; $} $} $while $(@expr1073742500 $false $) ;
180: $do ${ $if $(@expr1073742501 $prepareTest $(@expr1073742502 "uninitVar32" $) $) ${ $setVerbose $(@expr1073742503 $false $) $; uninitVar32 $(@expr1073742504 $) $; $} $} $while $(@expr1073742505 $false $) ;
181: $do ${ $if $(@expr1073742506 $prepareTest $(@expr1073742507 "uninitVar33" $) $) ${ $setVerbose $(@expr1073742508 $false $) $; uninitVar33 $(@expr1073742509 $) $; $} $} $while $(@expr1073742510 $false $) ;
182: $do ${ $if $(@expr1073742511 $prepareTest $(@expr1073742512 "uninitVar34" $) $) ${ $setVerbose $(@expr1073742513 $false $) $; uninitVar34 $(@expr1073742514 $) $; $} $} $while $(@expr1073742515 $false $) ;
183: $do ${ $if $(@expr1073742516 $prepareTest $(@expr1073742517 "uninitVarEnum1" $) $) ${ $setVerbose $(@expr1073742518 $false $) $; uninitVarEnum1 $(@expr1073742519 $) $; $} $} $while $(@expr1073742520 $false $) ;
184: $do ${ $if $(@expr1073742521 $prepareTest $(@expr1073742522 "uninitVarEnum2" $) $) ${ $setVerbose $(@expr1073742523 $false $) $; uninitVarEnum2 $(@expr1073742524 $) $; $} $} $while $(@expr1073742525 $false $) ;
185: $do ${ $if $(@expr1073742526 $prepareTest $(@expr1073742527 "uninitVarStream" $) $) ${ $setVerbose $(@expr1073742528 $false $) $; uninitVarStream $(@expr1073742529 $) $; $} $} $while $(@expr1073742530 $false $) ;
186: $do ${ $if $(@expr1073742531 $prepareTest $(@expr1073742532 "uninitVarTypedef" $) $) ${ $setVerbose $(@expr1073742533 $false $) $; uninitVarTypedef $(@expr1073742534 $) $; $} $} $while $(@expr1073742535 $false $) ;
187: $do ${ $if $(@expr1073742536 $prepareTest $(@expr1073742537 "uninitVarMemset" $) $) ${ $setVerbose $(@expr1073742538 $false $) $; uninitVarMemset $(@expr1073742539 $) $; $} $} $while $(@expr1073742540 $false $) ;
188: $do ${ $if $(@expr1073742541 $prepareTest $(@expr1073742542 "uninitVarArray1" $) $) ${ $setVerbose $(@expr1073742543 $false $) $; uninitVarArray1 $(@expr1073742544 $) $; $} $} $while $(@expr1073742545 $false $) ;
189: $do ${ $if $(@expr1073742546 $prepareTest $(@expr1073742547 "uninitVarArray2" $) $) ${ $setVerbose $(@expr1073742548 $false $) $; uninitVarArray2 $(@expr1073742549 $) $; $} $} $while $(@expr1073742550 $false $) ;
190: $do ${ $if $(@expr1073742551 $prepareTest $(@expr1073742552 "uninitVarArray3" $) $) ${ $setVerbose $(@expr1073742553 $false $) $; uninitVarArray3 $(@expr1073742554 $) $; $} $} $while $(@expr1073742555 $false $) ;
191: $do ${ $if $(@expr1073742556 $prepareTest $(@expr1073742557 "uninitVarArray4" $) $) ${ $setVerbose $(@expr1073742558 $false $) $; uninitVarArray4 $(@expr1073742559 $) $; $} $} $while $(@expr1073742560 $false $) ;
192: $do ${ $if $(@expr1073742561 $prepareTest $(@expr1073742562 "uninitVarArray5" $) $) ${ $setVerbose $(@expr1073742563 $false $) $; uninitVarArray5 $(@expr1073742564 $) $; $} $} $while $(@expr1073742565 $false $) ;
193: $do ${ $if $(@expr1073742566 $prepareTest $(@expr1073742567 "uninitVarArray6" $) $) ${ $setVerbose $(@expr1073742568 $false $) $; uninitVarArray6 $(@expr1073742569 $) $; $} $} $while $(@expr1073742570 $false $) ;
194: $do ${ $if $(@expr1073742571 $prepareTest $(@expr1073742572 "uninitVarArray7" $) $) ${ $setVerbose $(@expr1073742573 $false $) $; uninitVarArray7 $(@expr1073742574 $) $; $} $} $while $(@expr1073742575 $false $) ;
195: $do ${ $if $(@expr1073742576 $prepareTest $(@expr1073742577 "uninitVarArray8" $) $) ${ $setVerbose $(@expr1073742578 $false $) $; uninitVarArray8 $(@expr1073742579 $) $; $} $} $while $(@expr1073742580 $false $) ;
196: $do ${ $if $(@expr1073742581 $prepareTest $(@expr1073742582 "uninitVarArray9" $) $) ${ $setVerbose $(@expr1073742583 $false $) $; uninitVarArray9 $(@expr1073742584 $) $; $} $} $while $(@expr1073742585 $false $) ;
197: $do ${ $if $(@expr1073742586 $prepareTest $(@expr1073742587 "uninitVarArray2D" $) $) ${ $setVerbose $(@expr1073742588 $false $) $; uninitVarArray2D $(@expr1073742589 $) $; $} $} $while $(@expr1073742590 $false $) ;
198: $do ${ $if $(@expr1073742591 $prepareTest $(@expr1073742592 "uninitVarArray3D" $) $) ${ $setVerbose $(@expr1073742593 $false $) $; uninitVarArray3D $(@expr1073742594 $) $; $} $} $while $(@expr1073742595 $false $) ;
199: $do ${ $if $(@expr1073742596 $prepareTest $(@expr1073742597 "uninitVarCpp11Init1" $) $) ${ $setVerbose $(@expr1073742598 $false $) $; uninitVarCpp11Init1 $(@expr1073742599 $) $; $} $} $while $(@expr1073742600 $false $) ;
200: $do ${ $if $(@expr1073742601 $prepareTest $(@expr1073742602 "uninitVarCpp11Init2" $) $) ${ $setVerbose $(@expr1073742603 $false $) $; uninitVarCpp11Init2 $(@expr1073742604 $) $; $} $} $while $(@expr1073742605 $false $) ;
201: $do ${ $if $(@expr1073742606 $prepareTest $(@expr1073742607 "uninitVarStruct1" $) $) ${ $setVerbose $(@expr1073742608 $false $) $; uninitVarStruct1 $(@expr1073742609 $) $; $} $} $while $(@expr1073742610 $false $) ;
202: $do ${ $if $(@expr1073742611 $prepareTest $(@expr1073742612 "uninitVarStruct2" $) $) ${ $setVerbose $(@expr1073742613 $false $) $; uninitVarStruct2 $(@expr1073742614 $) $; $} $} $while $(@expr1073742615 $false $) ;
203: $do ${ $if $(@expr1073742616 $prepareTest $(@expr1073742617 "uninitVarUnion1" $) $) ${ $setVerbose $(@expr1073742618 $false $) $; uninitVarUnion1 $(@expr1073742619 $) $; $} $} $while $(@expr1073742620 $false $) ;
204: $do ${ $if $(@expr1073742621 $prepareTest $(@expr1073742622 "uninitVarUnion2" $) $) ${ $setVerbose $(@expr1073742623 $false $) $; uninitVarUnion2 $(@expr1073742624 $) $; $} $} $while $(@expr1073742625 $false $) ;
205: $do ${ $if $(@expr1073742626 $prepareTest $(@expr1073742627 "uninitMissingFuncDef" $) $) ${ $setVerbose $(@expr1073742628 $false $) $; uninitMissingFuncDef $(@expr1073742629 $) $; $} $} $while $(@expr1073742630 $false $) ;
206: $do ${ $if $(@expr1073742631 $prepareTest $(@expr1073742632 "privateCtor1" $) $) ${ $setVerbose $(@expr1073742633 $false $) $; privateCtor1 $(@expr1073742634 $) $; $} $} $while $(@expr1073742635 $false $) ;
207: $do ${ $if $(@expr1073742636 $prepareTest $(@expr1073742637 "privateCtor2" $) $) ${ $setVerbose $(@expr1073742638 $false $) $; privateCtor2 $(@expr1073742639 $) $; $} $} $while $(@expr1073742640 $false $) ;
208: $do ${ $if $(@expr1073742641 $prepareTest $(@expr1073742642 "function" $) $) ${ $setVerbose $(@expr1073742643 $false $) $; function $(@expr1073742644 $) $; $} $} $while $(@expr1073742645 $false $) ;
209: $do ${ $if $(@expr1073742646 $prepareTest $(@expr1073742647 "uninitVarPublished" $) $) ${ $setVerbose $(@expr1073742648 $false $) $; uninitVarPublished $(@expr1073742649 $) $; $} $} $while $(@expr1073742650 $false $) ;
210: $do ${ $if $(@expr1073742651 $prepareTest $(@expr1073742652 "uninitVarInheritClassInit" $) $) ${ $setVerbose $(@expr1073742653 $false $) $; uninitVarInheritClassInit $(@expr1073742654 $) $; $} $} $while $(@expr1073742655 $false $) ;
211: $do ${ $if $(@expr1073742656 $prepareTest $(@expr1073742657 "uninitOperator" $) $) ${ $setVerbose $(@expr1073742658 $false $) $; uninitOperator $(@expr1073742659 $) $; $} $} $while $(@expr1073742660 $false $) ;
212: $do ${ $if $(@expr1073742661 $prepareTest $(@expr1073742662 "uninitFunction1" $) $) ${ $setVerbose $(@expr1073742663 $false $) $; uninitFunction1 $(@expr1073742664 $) $; $} $} $while $(@expr1073742665 $false $) ;
213: $do ${ $if $(@expr1073742666 $prepareTest $(@expr1073742667 "uninitFunction2" $) $) ${ $setVerbose $(@expr1073742668 $false $) $; uninitFunction2 $(@expr1073742669 $) $; $} $} $while $(@expr1073742670 $false $) ;
214: $do ${ $if $(@expr1073742671 $prepareTest $(@expr1073742672 "uninitFunction3" $) $) ${ $setVerbose $(@expr1073742673 $false $) $; uninitFunction3 $(@expr1073742674 $) $; $} $} $while $(@expr1073742675 $false $) ;
215: $do ${ $if $(@expr1073742676 $prepareTest $(@expr1073742677 "uninitFunction4" $) $) ${ $setVerbose $(@expr1073742678 $false $) $; uninitFunction4 $(@expr1073742679 $) $; $} $} $while $(@expr1073742680 $false $) ;
216: $do ${ $if $(@expr1073742681 $prepareTest $(@expr1073742682 "uninitFunction5" $) $) ${ $setVerbose $(@expr1073742683 $false $) $; uninitFunction5 $(@expr1073742684 $) $; $} $} $while $(@expr1073742685 $false $) ;
217: $do ${ $if $(@expr1073742686 $prepareTest $(@expr1073742687 "uninitSameClassName" $) $) ${ $setVerbose $(@expr1073742688 $false $) $; uninitSameClassName $(@expr1073742689 $) $; $} $} $while $(@expr1073742690 $false $) ;
218: $do ${ $if $(@expr1073742691 $prepareTest $(@expr1073742692 "uninitFunctionOverload" $) $) ${ $setVerbose $(@expr1073742693 $false $) $; uninitFunctionOverload $(@expr1073742694 $) $; $} $} $while $(@expr1073742695 $false $) ;
219: $do ${ $if $(@expr1073742696 $prepareTest $(@expr1073742697 "uninitVarOperatorEqual" $) $) ${ $setVerbose $(@expr1073742698 $false $) $; uninitVarOperatorEqual $(@expr1073742699 $) $; $} $} $while $(@expr1073742700 $false $) ;
220: $do ${ $if $(@expr1073742701 $prepareTest $(@expr1073742702 "uninitVarPointer" $) $) ${ $setVerbose $(@expr1073742703 $false $) $; uninitVarPointer $(@expr1073742704 $) $; $} $} $while $(@expr1073742705 $false $) ;
221: $do ${ $if $(@expr1073742706 $prepareTest $(@expr1073742707 "uninitConstVar" $) $) ${ $setVerbose $(@expr1073742708 $false $) $; uninitConstVar $(@expr1073742709 $) $; $} $} $while $(@expr1073742710 $false $) ;
222: $do ${ $if $(@expr1073742711 $prepareTest $(@expr1073742712 "constructors_crash1" $) $) ${ $setVerbose $(@expr1073742713 $false $) $; constructors_crash1 $(@expr1073742714 $) $; $} $} $while $(@expr1073742715 $false $) ;
223: $do ${ $if $(@expr1073742716 $prepareTest $(@expr1073742717 "classWithOperatorInName" $) $) ${ $setVerbose $(@expr1073742718 $false $) $; classWithOperatorInName $(@expr1073742719 $) $; $} $} $while $(@expr1073742720 $false $) ;
224: $do ${ $if $(@expr1073742721 $prepareTest $(@expr1073742722 "templateConstructor" $) $) ${ $setVerbose $(@expr1073742723 $false $) $; templateConstructor $(@expr1073742724 $) $; $} $} $while $(@expr1073742725 $false $) ;
225: $do ${ $if $(@expr1073742726 $prepareTest $(@expr1073742727 "typedefArray" $) $) ${ $setVerbose $(@expr1073742728 $false $) $; typedefArray $(@expr1073742729 $) $; $} $} $while $(@expr1073742730 $false $) ;
226:
227: $do ${ $if $(@expr1073742731 $prepareTest $(@expr1073742732 "uninitAssignmentWithOperator" $) $) ${ $setVerbose $(@expr1073742733 $false $) $; uninitAssignmentWithOperator $(@expr1073742734 $) $; $} $} $while $(@expr1073742735 $false $) ;
228: $do ${ $if $(@expr1073742736 $prepareTest $(@expr1073742737 "uninitCompoundAssignment" $) $) ${ $setVerbose $(@expr1073742738 $false $) $; uninitCompoundAssignment $(@expr1073742739 $) $; $} $} $while $(@expr1073742740 $false $) ;
229: $do ${ $if $(@expr1073742741 $prepareTest $(@expr1073742742 "uninitComparisonAssignment" $) $) ${ $setVerbose $(@expr1073742743 $false $) $; uninitComparisonAssignment $(@expr1073742744 $) $; $} $} $while $(@expr1073742745 $false $) ;
230:
231: $do ${ $if $(@expr1073742746 $prepareTest $(@expr1073742747 "uninitTemplate1" $) $) ${ $setVerbose $(@expr1073742748 $false $) $; uninitTemplate1 $(@expr1073742749 $) $; $} $} $while $(@expr1073742750 $false $) ;
232:
233: $do ${ $if $(@expr1073742751 $prepareTest $(@expr1073742752 "unknownTemplateType" $) $) ${ $setVerbose $(@expr1073742753 $false $) $; unknownTemplateType $(@expr1073742754 $) $; $} $} $while $(@expr1073742755 $false $) ;
234: }
235:
236:
237: void simple1 ( ) {
238: $check_ $(@expr1073742756 "cppcheck-2.8/test/testconstructors.cpp" $, 238 $, "class Fred\n{\npublic:\n    int i;\n};" $)
239:
240:
241:
242: ;
243: $if $(@expr1073742757 $!@expr1073742758 $assertEquals $(@expr1073742759 "cppcheck-2.8/test/testconstructors.cpp" $, 243 $, "" $, errout@var100 .@expr936 str (@expr937 ) $) $) { $return ; }
244:
245: $check_ $(@expr1073742762 "cppcheck-2.8/test/testconstructors.cpp" $, 245 $, "class Fred\n{\nprivate:\n    int i;\n};" $)
246:
247:
248:
249: ;
250: $if $(@expr1073742763 $!@expr1073742764 $assertEquals $(@expr1073742765 "cppcheck-2.8/test/testconstructors.cpp" $, 250 $, "[test.cpp:1]: (style) The class 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n" $, errout@var100 .@expr936 str (@expr937 ) $) $) { $return ; }
251:
252: $check_ $(@expr1073742768 "cppcheck-2.8/test/testconstructors.cpp" $, 252 $, "struct Fred\n{\nprivate:\n    int i;\n};" $)
253:
254:
255:
256: ;
257: $if $(@expr1073742769 $!@expr1073742770 $assertEquals $(@expr1073742771 "cppcheck-2.8/test/testconstructors.cpp" $, 257 $, "[test.cpp:1]: (style) The struct 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n" $, errout@var100 .@expr936 str (@expr937 ) $) $) { $return ; }
258: }
259:
260:
261: void simple2 ( ) {
262: $check_ $(@expr1073742774 "cppcheck-2.8/test/testconstructors.cpp" $, 262 $, "class Fred\n{\npublic:\n    Fred() : i(0) { }\n    Fred(Fred const & other) : i(other.i) {}\n    Fred(Fred && other) : i(other.i) {}\n    int i;\n};" $)
263:
|
268:
269: ;
270: $if $(@expr1073742775 $!@expr1073742776 $assertEquals $(@expr1073742777 "cppcheck-2.8/test/testconstructors.cpp" $, 270 $, "" $, errout@var100 .@expr954 str (@expr955 ) $) $) { $return ; }
271:
272: $check_ $(@expr1073742780 "cppcheck-2.8/test/testconstructors.cpp" $, 272 $, "class Fred\n{\npublic:\n    Fred() { i = 0; }\n    Fred(Fred const & other) {i=other.i}\n    Fred(Fred && other) {i=other.i}\n    int i;\n};" $)
273:
|
278:
279: ;
280: $if $(@expr1073742781 $!@expr1073742782 $assertEquals $(@expr1073742783 "cppcheck-2.8/test/testconstructors.cpp" $, 280 $, "" $, errout@var100 .@expr954 str (@expr955 ) $) $) { $return ; }
281:
282: $check_ $(@expr1073742786 "cppcheck-2.8/test/testconstructors.cpp" $, 282 $, "class Fred\n{\npublic:\n    Fred() { }\n    Fred(Fred const & other) {}\n    Fred(Fred && other) {}\n    int i;\n};" $)
283:
|
288:
289: ;
290: $if $(@expr1073742787 $!@expr1073742788 $assertEquals $(@expr1073742789 "cppcheck-2.8/test/testconstructors.cpp" $, 290 $, "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the copy constructor.\n[test.cpp:6]: (warning) Member variable 'Fred::i' is not initialized in the move constructor.\n" $, errout@var100 .@expr954 str (@expr955 ) $) $) { $return
291:
292: ; }
293:
294: $check_ $(@expr1073742792 "cppcheck-2.8/test/testconstructors.cpp" $, 294 $, "struct Fred\n{\n    Fred() { }\n    Fred(Fred const & other) {}\n    Fred(Fred && other) {}\n    int i;\n};" $)
295:
|
299:
300: ;
301: $if $(@expr1073742793 $!@expr1073742794 $assertEquals $(@expr1073742795 "cppcheck-2.8/test/testconstructors.cpp" $, 301 $, "[test.cpp:3]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the move constructor.\n" $, errout@var100 .@expr954 str (@expr955 ) $) $) { $return
302:
303: ; }
304: }
305:
306:
307: void simple3 ( ) {
308: $check_ $(@expr1073742798 "cppcheck-2.8/test/testconstructors.cpp" $, 308 $, "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred() :i(0)\n{ }" $)
309:
|
313:
314: ;
315: $if $(@expr1073742799 $!@expr1073742800 $assertEquals $(@expr1073742801 "cppcheck-2.8/test/testconstructors.cpp" $, 315 $, "" $, errout@var100 .@expr978 str (@expr979 ) $) $) { $return ; }
316:
317: $check_ $(@expr1073742804 "cppcheck-2.8/test/testconstructors.cpp" $, 317 $, "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred()\n{ i = 0; }" $)
318:
|
322:
323: ;
324: $if $(@expr1073742805 $!@expr1073742806 $assertEquals $(@expr1073742807 "cppcheck-2.8/test/testconstructors.cpp" $, 324 $, "" $, errout@var100 .@expr978 str (@expr979 ) $) $) { $return ; }
325:
326: $check_ $(@expr1073742810 "cppcheck-2.8/test/testconstructors.cpp" $, 326 $, "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred()\n{ }" $)
327:
|
331:
332: ;
333: $if $(@expr1073742811 $!@expr1073742812 $assertEquals $(@expr1073742813 "cppcheck-2.8/test/testconstructors.cpp" $, 333 $, "[test.cpp:6]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" $, errout@var100 .@expr978 str (@expr979 ) $) $) { $return ; }
334: }
335:
336:
337: void simple4 ( ) {
338: $check_ $(@expr1073742816 "cppcheck-2.8/test/testconstructors.cpp" $, 338 $, "struct Fred\n{\n    Fred();\n    explicit Fred(int _i);\n    Fred(Fred const & other);\n    int i;\n};\nFred::Fred()\n{ }\nFred::Fred(int _i)\n{\n    i = _i;\n}\n" , true $)
339:
|
349:
350: ;
351: $if $(@expr1073742817 $!@expr1073742818 $assertEquals $(@expr1073742819 "cppcheck-2.8/test/testconstructors.cpp" $, 351 $, "[test.cpp:8]: (warning, inconclusive) Member variable 'Fred::i' is not initialized in the constructor.\n" $, errout@var100 .@expr1073742820 str (@expr1073742821 ) $) $) { $return ; }
352: }
353:
354: void simple5 ( ) {
355: $check_ $(@expr1073742822 "cppcheck-2.8/test/testconstructors.cpp" $, 355 $, "namespace Nsp\n{\n    class B { };\n}\nclass Altren : public Nsp::B\n{\npublic:\n    Altren () : Nsp::B(), mValue(0)\n    {\n    }\nprivate:\n    int mValue;\n};" $)
356:
|
366:
367: ;
368: $if $(@expr1073742823 $!@expr1073742824 $assertEquals $(@expr1073742825 "cppcheck-2.8/test/testconstructors.cpp" $, 368 $, "" $, errout@var100 .@expr1073742826 str (@expr1073742827 ) $) $) { $return ; }
369: }
370:
371: void simple6 ( ) {
372: $check_ $(@expr1073742828 "cppcheck-2.8/test/testconstructors.cpp" $, 372 $, "template <class T> struct A {\n    A<T>() { x = 0; }\n    A<T>(const T & t) { x = t.x; }\nprivate:\n    int x;\n};" $)
373:
|
376:
377: ;
378: $if $(@expr1073742829 $!@expr1073742830 $assertEquals $(@expr1073742831 "cppcheck-2.8/test/testconstructors.cpp" $, 378 $, "" $, errout@var100 .@expr1008 str (@expr1009 ) $) $) { $return ; }
379:
380: $check_ $(@expr1073742834 "cppcheck-2.8/test/testconstructors.cpp" $, 380 $, "template <class T> struct A {\n    A<T>() : x(0) { }\n    A<T>(const T & t) : x(t.x) { }\nprivate:\n    int x;\n};" $)
381:
|
384:
385: ;
386: $if $(@expr1073742835 $!@expr1073742836 $assertEquals $(@expr1073742837 "cppcheck-2.8/test/testconstructors.cpp" $, 386 $, "" $, errout@var100 .@expr1008 str (@expr1009 ) $) $) { $return ; }
387:
388: $check_ $(@expr1073742840 "cppcheck-2.8/test/testconstructors.cpp" $, 388 $, "template <class T> struct A {\n    A<T>() : x(0) { }\n    A<T>(const T & t) : x(t.x) { }\nprivate:\n    int x;\n    int y;\n};" $)
389:
|
393:
394: ;
395: $if $(@expr1073742841 $!@expr1073742842 $assertEquals $(@expr1073742843 "cppcheck-2.8/test/testconstructors.cpp" $, 395 $, "[test.cpp:2]: (warning) Member variable 'A::y' is not initialized in the constructor.\n[test.cpp:3]: (warning) Member variable 'A::y' is not initialized in the constructor.\n" $, errout@var100 .@expr1008 str (@expr1009 ) $) $) { $return
396: ; }
397: }
398:
399: void simple7 ( ) {
400: $check_ $(@expr1073742846 "cppcheck-2.8/test/testconstructors.cpp" $, 400 $, "class Fred;\nstruct Fred {\n    int x;\n};" $)
401:
402:
403: ;
404: $if $(@expr1073742847 $!@expr1073742848 $assertEquals $(@expr1073742849 "cppcheck-2.8/test/testconstructors.cpp" $, 404 $, "" $, errout@var100 .@expr1073742850 str (@expr1073742851 ) $) $) { $return ; }
405: }
406:
407: void simple8 ( ) {
408: $check_ $(@expr1073742852 "cppcheck-2.8/test/testconstructors.cpp" $, 408 $, "struct Fred { int x; };\nclass Barney { Fred fred; };\nclass Wilma { struct Betty { int x; } betty; };" $)
409:
410: ;
411: $if $(@expr1073742853 $!@expr1073742854 $assertEquals $(@expr1073742855 "cppcheck-2.8/test/testconstructors.cpp" $, 411 $, "[test.cpp:2]: (style) The class 'Barney' does not declare a constructor although it has private member variables which likely require initialization.\n[test.cpp:3]: (style) The class 'Wilma' does not declare a constructor although it has private member variables which likely require initialization.\n" $, errout@var100 .@expr1073742856 str (@expr1073742857 ) $) $) { $return
412: ; }
413: }
414:
415: void simple9 ( ) {
416: $check_ $(@expr1073742858 "cppcheck-2.8/test/testconstructors.cpp" $, 416 $, "class Unknown::Fred {\npublic:\n    Fred() : x(0) { }\nprivate:\n    int x;\n};" $)
417:
|
420:
421: ;
422: $if $(@expr1073742859 $!@expr1073742860 $assertEquals $(@expr1073742861 "cppcheck-2.8/test/testconstructors.cpp" $, 422 $, "" $, errout@var100 .@expr1073742862 str (@expr1073742863 ) $) $) { $return ; }
423: }
424:
425: void simple10 ( ) {
426: $check_ $(@expr1073742864 "cppcheck-2.8/test/testconstructors.cpp" $, 426 $, "class Fred {\npublic:\n    Fred() = default;\nprivate:\n    int x;\n};" $)
427:
|
430:
431: ;
432: $if $(@expr1073742865 $!@expr1073742866 $assertEquals $(@expr1073742867 "cppcheck-2.8/test/testconstructors.cpp" $, 432 $, "[test.cpp:3]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n" $, errout@var100 .@expr1044 str (@expr1045 ) $) $) { $return ; }
433:
434: $check_ $(@expr1073742870 "cppcheck-2.8/test/testconstructors.cpp" $, 434 $, "struct S {\n    S() = default;\n    ~S() = default;\n    S(const S&) = default;\n    S(S&&) = default;\n    S& operator=(const S&) = default;\n    S& operator=(S&&) = default;\n    int i;\n};\n" $)
435:
|
441:
442: ;
443: $if $(@expr1073742871 $!@expr1073742872 $assertEquals $(@expr1073742873 "cppcheck-2.8/test/testconstructors.cpp" $, 443 $, "[test.cpp:2]: (warning) Member variable 'S::i' is not initialized in the constructor.\n" $, errout@var100 .@expr1044 str (@expr1045 ) $) $) { $return ; }
444: }
445:
446: void simple11 ( ) {
447: $check_ $(@expr1073742876 "cppcheck-2.8/test/testconstructors.cpp" $, 447 $, "class Fred {\npublic:\n    Fred() {}\nprivate:\n    int x = 0;\n    int y = f();\n    int z{0};\n    int (*pf[2])(){nullptr, nullptr};\n    int a[2][3] = {{1,2,3},{4,5,6}};\n    int b{1}, c{2};\n    int d, e{3};\n    int f{4}, g;\n};" $)
448:
|
458:
459: ;
460: $if $(@expr1073742877 $!@expr1073742878 $assertEquals $(@expr1073742879 "cppcheck-2.8/test/testconstructors.cpp" $, 460 $, "[test.cpp:3]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n[test.cpp:3]: (warning) Member variable 'Fred::g' is not initialized in the constructor.\n" $, errout@var100 .@expr1073742880 str (@expr1073742881 ) $) $) { $return
461: ; }
462: }
463:
464: void simple12 ( ) {
465: $check_ $(@expr1073742882 "cppcheck-2.8/test/testconstructors.cpp" $, 465 $, "class Fred {\n    int x;\npublic:\n    Fred() { Init(); }\n    void Init(int i = 0);\n};\nvoid Fred::Init(int i) { x = i; }" $)
466:
|
470:
471: ;
472: $if $(@expr1073742883 $!@expr1073742884 $assertEquals $(@expr1073742885 "cppcheck-2.8/test/testconstructors.cpp" $, 472 $, "" $, errout@var100 .@expr1062 str (@expr1063 ) $) $) { $return ; }
473:
474: $check_ $(@expr1073742888 "cppcheck-2.8/test/testconstructors.cpp" $, 474 $, "class Fred {\n    int x;\n    int y;\npublic:\n    Fred() { Init(0); }\n    void Init(int i, int j = 0);\n};\nvoid Fred::Init(int i, int j) { x = i; y = j; }" $)
475:
|
480:
481: ;
482: $if $(@expr1073742889 $!@expr1073742890 $assertEquals $(@expr1073742891 "cppcheck-2.8/test/testconstructors.cpp" $, 482 $, "" $, errout@var100 .@expr1062 str (@expr1063 ) $) $) { $return ; }
483: }
484:
485: void simple13 ( ) {
486: $check_ $(@expr1073742894 "cppcheck-2.8/test/testconstructors.cpp" $, 486 $, "class Fred {\n    int x=1;\n    int *y=0;\n};" $)
487:
488:
489: ;
490: $if $(@expr1073742895 $!@expr1073742896 $assertEquals $(@expr1073742897 "cppcheck-2.8/test/testconstructors.cpp" $, 490 $, "" $, errout@var100 .@expr1073742898 str (@expr1073742899 ) $) $) { $return ; }
491: }
492:
493: void simple14 ( ) {
494: $check_ $(@expr1073742900 "cppcheck-2.8/test/testconstructors.cpp" $, 494 $, "class Fred : public Base<A, B> {public:    Fred()\n    :Base<A, B>(1),\n     x(1)\n    {}\nprivate:\n    int x;\n};" $)
495:
|
501:
502: ;
503: $if $(@expr1073742901 $!@expr1073742902 $assertEquals $(@expr1073742903 "cppcheck-2.8/test/testconstructors.cpp" $, 503 $, "" $, errout@var100 .@expr1080 str (@expr1081 ) $) $) { $return ; }
504:
505: $check_ $(@expr1073742906 "cppcheck-2.8/test/testconstructors.cpp" $, 505 $, "class Fred : public Base<A, B> {public:    Fred()\n    :Base<A, B>{1},\n     x{1}\n    {}\nprivate:\n    int x;\n};" $)
506:
|
512:
513: ;
514: $if $(@expr1073742907 $!@expr1073742908 $assertEquals $(@expr1073742909 "cppcheck-2.8/test/testconstructors.cpp" $, 514 $, "" $, errout@var100 .@expr1080 str (@expr1081 ) $) $) { $return ; }
515: }
516:
517: void simple16 ( ) {
518: $check_ $(@expr1073742912 "cppcheck-2.8/test/testconstructors.cpp" $, 518 $, "struct S {\n    int i{};\n    S() = default;\n    S(const S& s) {}\n    S& operator=(const S& s) { return *this; }\n};\n" , true $)
519:
|
522:
523: ;
524: $if $(@expr1073742913 $!@expr1073742914 $assertEquals $(@expr1073742915 "cppcheck-2.8/test/testconstructors.cpp" $, 524 $, "[test.cpp:4]: (warning, inconclusive) Member variable 'S::i' is not assigned in the copy constructor. Should it be copied?\n[test.cpp:5]: (warning) Member variable 'S::i' is not assigned a value in 'S::operator='.\n" $, errout@var100 .@expr1092 str (@expr1093 ) $) $) { $return
525:
526: ; }
527:
528: $check_ $(@expr1073742918 "cppcheck-2.8/test/testconstructors.cpp" $, 528 $, "struct S {\n    int i;\n    S() : i(0) {}\n    S(const S& s) {}\n    S& operator=(const S& s) { return *this; }\n};\n" $)
529:
|
532:
533: ;
534: $if $(@expr1073742919 $!@expr1073742920 $assertEquals $(@expr1073742921 "cppcheck-2.8/test/testconstructors.cpp" $, 534 $, "[test.cpp:4]: (warning) Member variable 'S::i' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'S::i' is not assigned a value in 'S::operator='.\n" $, errout@var100 .@expr1092 str (@expr1093 ) $) $) { $return
535:
536: ; }
537: }
538:
539: void simple17 ( ) {
540: $check_ $(@expr1073742924 "cppcheck-2.8/test/testconstructors.cpp" $, 540 $, "class Base {\npublic:\n    virtual void Copy(const Base& Src) = 0;\n};\nclass Derived : public Base {\npublic:\n    Derived() : i(0) {}\n    Derived(const Derived& Src);\n    void Copy(const Base& Src) override;\n    int i;\n};\nDerived::Derived(const Derived& Src) {\n    Copy(Src);\n}\nvoid Derived::Copy(const Base& Src) {\n    auto d = dynamic_cast<const Derived&>(Src);\n    i = d.i;\n}\n" $)
541:
|
556:
557: ;
558: $if $(@expr1073742925 $!@expr1073742926 $assertEquals $(@expr1073742927 "cppcheck-2.8/test/testconstructors.cpp" $, 558 $, "" $, errout@var100 .@expr1073742928 str (@expr1073742929 ) $) $) { $return ; }
559: }
560:
561: void simple15 ( ) {
562: $check_ $(@expr1073742930 "cppcheck-2.8/test/testconstructors.cpp" $, 562 $, "class A\n{\npublic:\n  int member;\n};\nclass B\n{\npublic:\n  B(const decltype(A::member)& x, const decltype(A::member)& y) : x(x), y(y) {}\nprivate:\n  const decltype(A::member)& x;\n  const decltype(A::member)& y;\n};\n" $)
563:
|
573:
574: ;
575: $if $(@expr1073742931 $!@expr1073742932 $assertEquals $(@expr1073742933 "cppcheck-2.8/test/testconstructors.cpp" $, 575 $, "" $, errout@var100 .@expr1073742934 str (@expr1073742935 ) $) $) { $return ; }
576: }
577:
578: void noConstructor1 ( ) {
579:
580: $check_ $(@expr1073742936 "cppcheck-2.8/test/testconstructors.cpp" $, 580 $, "class Fred\n{\n    int i;\n};" $)
581:
582:
583: ;
584: $if $(@expr1073742937 $!@expr1073742938 $assertEquals $(@expr1073742939 "cppcheck-2.8/test/testconstructors.cpp" $, 584 $, "[test.cpp:1]: (style) The class 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n" $, errout@var100 .@expr1073742940 str (@expr1073742941 ) $) $) { $return ; }
585: }
586:
587: void noConstructor2 ( ) {
588: $check_ $(@expr1073742942 "cppcheck-2.8/test/testconstructors.cpp" $, 588 $, "class Fred\n{\npublic:\n    static void foobar();\n};\n\nvoid Fred::foobar()\n{ }" $)
589:
|
594:
595: ;
596: $if $(@expr1073742943 $!@expr1073742944 $assertEquals $(@expr1073742945 "cppcheck-2.8/test/testconstructors.cpp" $, 596 $, "" $, errout@var100 .@expr1073742946 str (@expr1073742947 ) $) $) { $return ; }
597: }
598:
599: void noConstructor3 ( ) {
600: $check_ $(@expr1073742948 "cppcheck-2.8/test/testconstructors.cpp" $, 600 $, "class Fred\n{\nprivate:\n    static int foobar;\n};" $)
601:
602:
603:
604: ;
605: $if $(@expr1073742949 $!@expr1073742950 $assertEquals $(@expr1073742951 "cppcheck-2.8/test/testconstructors.cpp" $, 605 $, "" $, errout@var100 .@expr1073742952 str (@expr1073742953 ) $) $) { $return ; }
606: }
607:
608: void noConstructor4 ( ) {
609: $check_ $(@expr1073742954 "cppcheck-2.8/test/testconstructors.cpp" $, 609 $, "class Fred\n{\npublic:\n    int foobar;\n};" $)
610:
611:
612:
613: ;
614: $if $(@expr1073742955 $!@expr1073742956 $assertEquals $(@expr1073742957 "cppcheck-2.8/test/testconstructors.cpp" $, 614 $, "" $, errout@var100 .@expr1073742958 str (@expr1073742959 ) $) $) { $return ; }
615: }
616:
617: void noConstructor5 ( ) {
618: $check_ $(@expr1073742960 "cppcheck-2.8/test/testconstructors.cpp" $, 618 $, "namespace Foo\n{\n    int i;\n}" $)
619:
620:
621: ;
622: $if $(@expr1073742961 $!@expr1073742962 $assertEquals $(@expr1073742963 "cppcheck-2.8/test/testconstructors.cpp" $, 622 $, "" $, errout@var100 .@expr1073742964 str (@expr1073742965 ) $) $) { $return ; }
623: }
624:
625: void noConstructor6 ( ) {
626:
627: $check_ $(@expr1073742966 "cppcheck-2.8/test/testconstructors.cpp" $, 627 $, "class Ccpucycles {\n    friend class foo::bar;\n    Ccpucycles() :\n    m_v(0), m_b(true)\n    {}\nprivate:\n    cpucyclesT m_v;\n    bool m_b;\n};" $)
628:
|
634:
635: ;
636: $if $(@expr1073742967 $!@expr1073742968 $assertEquals $(@expr1073742969 "cppcheck-2.8/test/testconstructors.cpp" $, 636 $, "" $, errout@var100 .@expr1073742970 str (@expr1073742971 ) $) $) { $return ; }
637: }
638:
639: void noConstructor7 ( ) {
640:
641: $check_ $(@expr1073742972 "cppcheck-2.8/test/testconstructors.cpp" $, 641 $, "short bar;\nclass foo;" $)
642: ;
643: $if $(@expr1073742973 $!@expr1073742974 $assertEquals $(@expr1073742975 "cppcheck-2.8/test/testconstructors.cpp" $, 643 $, "" $, errout@var100 .@expr1073742976 str (@expr1073742977 ) $) $) { $return ; }
644: }
645:
646: void noConstructor8 ( ) {
647:
648: $check_ $(@expr1073742978 "cppcheck-2.8/test/testconstructors.cpp" $, 648 $, "class LineSegment;\nclass PointArray  { };\nvoid* tech_ = NULL;" $)
649:
650: ;
651: $if $(@expr1073742979 $!@expr1073742980 $assertEquals $(@expr1073742981 "cppcheck-2.8/test/testconstructors.cpp" $, 651 $, "" $, errout@var100 .@expr1073742982 str (@expr1073742983 ) $) $) { $return ; }
652: }
653:
654: void noConstructor9 ( ) {
655:
656: $check_ $(@expr1073742984 "cppcheck-2.8/test/testconstructors.cpp" $, 656 $, "class CGreeting : public CGreetingBase<char> {\npublic:\n CGreeting() : CGreetingBase<char>(), MessageSet(false) {}\nprivate:\n bool MessageSet;\n};" $)
657:
|
660:
661: ;
662: $if $(@expr1073742985 $!@expr1073742986 $assertEquals $(@expr1073742987 "cppcheck-2.8/test/testconstructors.cpp" $, 662 $, "" $, errout@var100 .@expr1073742988 str (@expr1073742989 ) $) $) { $return ; }
663: }
664:
665: void noConstructor10 ( ) {
666:
667: $check_ $(@expr1073742990 "cppcheck-2.8/test/testconstructors.cpp" $, 667 $, "class A : public wxDialog\n{\nprivate:\n    DECLARE_EVENT_TABLE()\npublic:\n    A(wxWindow *parent,\n      wxWindowID id = 1,\n      const wxString &title = wxT(),\n      const wxPoint& pos = wxDefaultPosition,\n      const wxSize& size = wxDefaultSize,\n      long style = wxDIALOG_NO_PARENT | wxMINIMIZE_BOX | wxMAXIMIZE_BOX | wxCLOSE_BOX);\n    virtual ~A();\nprivate:\n    wxTimer *WxTimer1;\n};" $)
668:
|
680:
681: ;
682: $if $(@expr1073742991 $!@expr1073742992 $assertEquals $(@expr1073742993 "cppcheck-2.8/test/testconstructors.cpp" $, 682 $, "" $, errout@var100 .@expr1073742994 str (@expr1073742995 ) $) $) { $return ; }
683: }
684:
685:
686: void noConstructor11 ( ) {
687: $check_ $(@expr1073742996 "cppcheck-2.8/test/testconstructors.cpp" $, 687 $, "class Fred { int x; };\nunion U { int y; Fred fred; };" $)
688: ;
689: $if $(@expr1073742997 $!@expr1073742998 $assertEquals $(@expr1073742999 "cppcheck-2.8/test/testconstructors.cpp" $, 689 $, "" $, errout@var100 .@expr1073743000 str (@expr1073743001 ) $) $) { $return ; }
690: }
691:
692: void noConstructor12 ( ) {
693: $check_ $(@expr1073743002 "cppcheck-2.8/test/testconstructors.cpp" $, 693 $, "class Fred { int x{0}; };" $) ;
694: $if $(@expr1073743003 $!@expr1073743004 $assertEquals $(@expr1073743005 "cppcheck-2.8/test/testconstructors.cpp" $, 694 $, "" $, errout@var100 .@expr1182 str (@expr1183 ) $) $) { $return ; }
695:
696: $check_ $(@expr1073743008 "cppcheck-2.8/test/testconstructors.cpp" $, 696 $, "class Fred { int x=0; };" $) ;
697: $if $(@expr1073743009 $!@expr1073743010 $assertEquals $(@expr1073743011 "cppcheck-2.8/test/testconstructors.cpp" $, 697 $, "" $, errout@var100 .@expr1182 str (@expr1183 ) $) $) { $return ; }
698:
699: $check_ $(@expr1073743014 "cppcheck-2.8/test/testconstructors.cpp" $, 699 $, "class Fred { int x[1]={0}; };" $) ;
700: $if $(@expr1073743015 $!@expr1073743016 $assertEquals $(@expr1073743017 "cppcheck-2.8/test/testconstructors.cpp" $, 700 $, "" $, errout@var100 .@expr1182 str (@expr1183 ) $) $) { $return ; }
701:
702: $check_ $(@expr1073743020 "cppcheck-2.8/test/testconstructors.cpp" $, 702 $, "class Fred { int x[1]{0}; };" $) ;
703: $if $(@expr1073743021 $!@expr1073743022 $assertEquals $(@expr1073743023 "cppcheck-2.8/test/testconstructors.cpp" $, 703 $, "" $, errout@var100 .@expr1182 str (@expr1183 ) $) $) { $return ; }
704: }
705:
706: void noConstructor13 ( ) {
707: $check_ $(@expr1073743026 "cppcheck-2.8/test/testconstructors.cpp" $, 707 $, "struct C { int v; };\nstruct B { C c[5] = {}; };\nstruct A {\n    A() {}\n    B b;\n};\n" $)
708:
|
711:
712: ;
713: $if $(@expr1073743027 $!@expr1073743028 $assertEquals $(@expr1073743029 "cppcheck-2.8/test/testconstructors.cpp" $, 713 $, "" $, errout@var100 .@expr1073743030 str (@expr1073743031 ) $) $) { $return ; }
714: }
715:
716: void noConstructor14 ( ) {
717: $check_ $(@expr1073743032 "cppcheck-2.8/test/testconstructors.cpp" $, 717 $, "typedef void (*Func)();\nclass C {\npublic:\n    void f();\nprivate:\n    Func fp = nullptr;\n};\n" $)
718:
|
722:
723: ;
724: $if $(@expr1073743033 $!@expr1073743034 $assertEquals $(@expr1073743035 "cppcheck-2.8/test/testconstructors.cpp" $, 724 $, "" $, errout@var100 .@expr1073743036 str (@expr1073743037 ) $) $) { $return ; }
725: }
726:
727: void noConstructor15 ( ) {
728: $check_ $(@expr1073743038 "cppcheck-2.8/test/testconstructors.cpp" $, 728 $, "class C {\nprivate:\n    int i1 = 0;\n    int i2;\n};\n" $)
729:
730:
731:
732: ;
733: $if $(@expr1073743039 $!@expr1073743040 $assertEquals $(@expr1073743041 "cppcheck-2.8/test/testconstructors.cpp" $, 733 $, "[test.cpp:4]: (warning) Member variable 'C::i2' is not initialized.\n" $, errout@var100 .@expr1218 str (@expr1219 ) $) $) { $return ; }
734:
735: $check_ $(@expr1073743044 "cppcheck-2.8/test/testconstructors.cpp" $, 735 $, "class C {\nprivate:\n    int i1;\n    int i2;\n};\n" $)
736:
737:
738:
739: ;
740: $if $(@expr1073743045 $!@expr1073743046 $assertEquals $(@expr1073743047 "cppcheck-2.8/test/testconstructors.cpp" $, 740 $, "[test.cpp:1]: (style) The class 'C' does not declare a constructor although it has private member variables which likely require initialization.\n" $, errout@var100 .@expr1218 str (@expr1219 ) $) $) { $return ; }
741:
742: $check_ $(@expr1073743050 "cppcheck-2.8/test/testconstructors.cpp" $, 742 $, "class C {\npublic:\n    C(int i) : i1(i) {}\nprivate:\n    int i1;\n    int i2;\n};\n" $)
743:
|
747:
748: ;
749: $if $(@expr1073743051 $!@expr1073743052 $assertEquals $(@expr1073743053 "cppcheck-2.8/test/testconstructors.cpp" $, 749 $, "[test.cpp:3]: (warning) Member variable 'C::i2' is not initialized in the constructor.\n" $, errout@var100 .@expr1218 str (@expr1219 ) $) $) { $return ; }
750: }
751:
752:
753:
754: void forwardDeclaration ( ) {
755: $check_ $(@expr1073743056 "cppcheck-2.8/test/testconstructors.cpp" $, 755 $, "class foo;\nint bar;" $)
756: ;
757: $if $(@expr1073743057 $!@expr1073743058 $assertEquals $(@expr1073743059 "cppcheck-2.8/test/testconstructors.cpp" $, 757 $, "" $, errout@var100 .@expr1236 str (@expr1237 ) $) $) { $return ; }
758:
759: $check_ $(@expr1073743062 "cppcheck-2.8/test/testconstructors.cpp" $, 759 $, "class foo;\nclass foo;" $)
760: ;
761: $if $(@expr1073743063 $!@expr1073743064 $assertEquals $(@expr1073743065 "cppcheck-2.8/test/testconstructors.cpp" $, 761 $, "" $, errout@var100 .@expr1236 str (@expr1237 ) $) $) { $return ; }
762:
763: $check_ $(@expr1073743068 "cppcheck-2.8/test/testconstructors.cpp" $, 763 $, "class foo{};\nclass foo;" $)
764: ;
765: $if $(@expr1073743069 $!@expr1073743070 $assertEquals $(@expr1073743071 "cppcheck-2.8/test/testconstructors.cpp" $, 765 $, "" $, errout@var100 .@expr1236 str (@expr1237 ) $) $) { $return ; }
766: }
767:
768: void initvar_with_this ( ) {
769: $check_ $(@expr1073743074 "cppcheck-2.8/test/testconstructors.cpp" $, 769 $, "struct Fred\n{\n    Fred()\n    { this->i = 0; }\n    int i;\n};" $)
770:
|
773:
774: ;
775: $if $(@expr1073743075 $!@expr1073743076 $assertEquals $(@expr1073743077 "cppcheck-2.8/test/testconstructors.cpp" $, 775 $, "" $, errout@var100 .@expr1073743078 str (@expr1073743079 ) $) $) { $return ; }
776: }
777:
778: void initvar_if ( ) {
779: $check_ $(@expr1073743080 "cppcheck-2.8/test/testconstructors.cpp" $, 779 $, "struct Fred\n{\n    Fred()\n    {\n        if (true)\n            i = 0;\n        else\n            i = 1;\n    }\n    int i;\n};" $)
780:
|
788:
789: ;
790: $if $(@expr1073743081 $!@expr1073743082 $assertEquals $(@expr1073743083 "cppcheck-2.8/test/testconstructors.cpp" $, 790 $, "" $, errout@var100 .@expr1073743084 str (@expr1073743085 ) $) $) { $return ; }
791: }
792:
793: void initvar_operator_eq1 ( ) {
794:
795:
796: $check_ $(@expr1073743086 "cppcheck-2.8/test/testconstructors.cpp" $, 796 $, "struct Fred\n{\n    int i;\n\n    Fred()\n    { i = 0; }\n\n    Fred(const Fred &fred)\n    { *this = fred; }\n\n    const Fred & operator=(const Fred &fred)\n    { i = fred.i; return *this; }\n};" $)
797:
|
807:
808: ;
809: $if $(@expr1073743087 $!@expr1073743088 $assertEquals $(@expr1073743089 "cppcheck-2.8/test/testconstructors.cpp" $, 809 $, "" $, errout@var100 .@expr1266 str (@expr1267 ) $) $) { $return ; }
810:
811: $check_ $(@expr1073743092 "cppcheck-2.8/test/testconstructors.cpp" $, 811 $, "struct Fred {\n    int i;\n\n    Fred(const Fred &fred)\n    { (*this) = fred; }\n\n    const Fred & operator=(const Fred &fred)\n    { i = fred.i; return *this; }\n};" $)
812:
|
818:
819: ;
820: $if $(@expr1073743093 $!@expr1073743094 $assertEquals $(@expr1073743095 "cppcheck-2.8/test/testconstructors.cpp" $, 820 $, "" $, errout@var100 .@expr1266 str (@expr1267 ) $) $) { $return ; }
821:
822: $check_ $(@expr1073743098 "cppcheck-2.8/test/testconstructors.cpp" $, 822 $, "struct A\n{\n  A() : i(0), j(0) {}\n\n  A &operator=(const int &value)\n  {\n    i = value;\n    return (*this);\n  }\n\n  int i;\n  int j;\n};" $)
823:
|
833:
834: ;
835: $if $(@expr1073743099 $!@expr1073743100 $assertEquals $(@expr1073743101 "cppcheck-2.8/test/testconstructors.cpp" $, 835 $, "" $, errout@var100 .@expr1266 str (@expr1267 ) $) $) { $return ; }
836: }
837:
838:
839: void initvar_operator_eq2 ( ) {
840: $check_ $(@expr1073743104 "cppcheck-2.8/test/testconstructors.cpp" $, 840 $, "struct Fred\n{\n    Fred() { i = 0; }\n    void operator=(const Fred &fred) { }\n    int i;\n};" $)
841:
|
844:
845: ;
846: $if $(@expr1073743105 $!@expr1073743106 $assertEquals $(@expr1073743107 "cppcheck-2.8/test/testconstructors.cpp" $, 846 $, "[test.cpp:4]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr1073743108 str (@expr1073743109 ) $) $) { $return ; }
847: }
848:
849: void initvar_operator_eq3 ( ) {
850: $check_ $(@expr1073743110 "cppcheck-2.8/test/testconstructors.cpp" $, 850 $, "struct Fred\n{\n    Fred() { Init(); }\n    void operator=(const Fred &fred) { Init(); }\nprivate:\n    void Init() { i = 0; }\n    int i;\n};" $)
851:
|
856:
857: ;
858: $if $(@expr1073743111 $!@expr1073743112 $assertEquals $(@expr1073743113 "cppcheck-2.8/test/testconstructors.cpp" $, 858 $, "" $, errout@var100 .@expr1073743114 str (@expr1073743115 ) $) $) { $return ; }
859: }
860:
861: void initvar_operator_eq4 ( ) {
862: $check_ $(@expr1073743116 "cppcheck-2.8/test/testconstructors.cpp" $, 862 $, "class Fred\n{\n    int i;\npublic:\n    Fred() : i(5) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};" $)
863:
|
873:
874: ;
875: $if $(@expr1073743117 $!@expr1073743118 $assertEquals $(@expr1073743119 "cppcheck-2.8/test/testconstructors.cpp" $, 875 $, "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr1296 str (@expr1297 ) $) $) { $return ; }
876:
877: $check_ $(@expr1073743122 "cppcheck-2.8/test/testconstructors.cpp" $, 877 $, "class Fred\n{\n    int * i;\npublic:\n    Fred() : i(NULL) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};" $)
878:
|
888:
889: ;
890: $if $(@expr1073743123 $!@expr1073743124 $assertEquals $(@expr1073743125 "cppcheck-2.8/test/testconstructors.cpp" $, 890 $, "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr1296 str (@expr1297 ) $) $) { $return ; }
891:
892: $check_ $(@expr1073743128 "cppcheck-2.8/test/testconstructors.cpp" $, 892 $, "class Fred\n{\n    const int * i;\npublic:\n    Fred() : i(NULL) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};" $)
893:
|
903:
904: ;
905: $if $(@expr1073743129 $!@expr1073743130 $assertEquals $(@expr1073743131 "cppcheck-2.8/test/testconstructors.cpp" $, 905 $, "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr1296 str (@expr1297 ) $) $) { $return ; }
906:
907: $check_ $(@expr1073743134 "cppcheck-2.8/test/testconstructors.cpp" $, 907 $, "class Fred\n{\n    const int i;\npublic:\n    Fred() : i(5) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};" $)
908:
|
918:
919: ;
920: $if $(@expr1073743135 $!@expr1073743136 $assertEquals $(@expr1073743137 "cppcheck-2.8/test/testconstructors.cpp" $, 920 $, "" $, errout@var100 .@expr1296 str (@expr1297 ) $) $) { $return ; }
921: }
922:
923: void initvar_operator_eq5 ( ) {
924: $check_ $(@expr1073743140 "cppcheck-2.8/test/testconstructors.cpp" $, 924 $, "class Fred {\n    int i;\npublic:\n    Fred() : i(5) { }\n    ~Fred() { }\n    Fred(const Fred &fred) : i(fred.i) { }\n    Fred & operator=(const Fred &rhs) {\n        Fred(rhs).swap(*this);\n        return *this;\n    }\n};" $)
925:
|
933:
934: ;
935: $if $(@expr1073743141 $!@expr1073743142 $assertEquals $(@expr1073743143 "cppcheck-2.8/test/testconstructors.cpp" $, 935 $, "" $, errout@var100 .@expr1073743144 str (@expr1073743145 ) $) $) { $return ; }
936: }
937:
938: void initvar_operator_eq6 ( ) {
939: $check_ $(@expr1073743146 "cppcheck-2.8/test/testconstructors.cpp" $, 939 $, "struct Fred {\n    uint8_t data;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};" , true $)
940:
|
943:
944: ;
945: $if $(@expr1073743147 $!@expr1073743148 $assertEquals $(@expr1073743149 "cppcheck-2.8/test/testconstructors.cpp" $, 945 $, "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::data' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr1326 str (@expr1327 ) $) $) { $return ; }
946:
947: $check_ $(@expr1073743152 "cppcheck-2.8/test/testconstructors.cpp" $, 947 $, "struct Fred {\n    std::vector<int> ints;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};" , true $)
948:
|
951:
952: ;
953: $if $(@expr1073743153 $!@expr1073743154 $assertEquals $(@expr1073743155 "cppcheck-2.8/test/testconstructors.cpp" $, 953 $, "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::ints' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr1326 str (@expr1327 ) $) $) { $return ; }
954:
955: $check_ $(@expr1073743158 "cppcheck-2.8/test/testconstructors.cpp" $, 955 $, "struct Fred {\n    Data data;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};" , true $)
956:
|
959:
960: ;
961: $if $(@expr1073743159 $!@expr1073743160 $assertEquals $(@expr1073743161 "cppcheck-2.8/test/testconstructors.cpp" $, 961 $, "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::data' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr1326 str (@expr1327 ) $) $) { $return ; }
962: }
963:
964: void initvar_operator_eq7 ( ) {
965: $check_ $(@expr1073743164 "cppcheck-2.8/test/testconstructors.cpp" $, 965 $, "struct B {\n    virtual void CopyImpl(const B& Src) = 0;\n    void Copy(const B& Src);\n};\nstruct D : B {};\nstruct DD : D {\n    void CopyImpl(const B& Src) override;\n    DD& operator=(const DD& Src);\n    int i{};\n};\nDD& DD::operator=(const DD& Src) {\n    if (this != &Src)\n        Copy(Src);\n    return *this;\n}\n" , true $)
966:
|
978:
979: ;
980: $if $(@expr1073743165 $!@expr1073743166 $assertEquals $(@expr1073743167 "cppcheck-2.8/test/testconstructors.cpp" $, 980 $, "" $, errout@var100 .@expr1073743168 str (@expr1073743169 ) $) $) { $return ; }
981: }
982:
983: void initvar_same_classname ( ) {
984:
985:
986: $check_ $(@expr1073743170 "cppcheck-2.8/test/testconstructors.cpp" $, 986 $, "void func1()\n{\n    class Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    class Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}" $)
987:
|
1001:
1002: ;
1003:
1004: $if $(@expr1073743171 $!@expr1073743172 $assertEquals $(@expr1073743173 "cppcheck-2.8/test/testconstructors.cpp" $, 1004 $, "" $, errout@var100 .@expr1350 str (@expr1351 ) $) $) { $return ; }
1005:
1006: $check_ $(@expr1073743176 "cppcheck-2.8/test/testconstructors.cpp" $, 1006 $, "void func1()\n{\n    struct Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    class Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}" $)
1007:
|
1021:
1022: ;
1023:
1024: $if $(@expr1073743177 $!@expr1073743178 $assertEquals $(@expr1073743179 "cppcheck-2.8/test/testconstructors.cpp" $, 1024 $, "" $, errout@var100 .@expr1350 str (@expr1351 ) $) $) { $return ; }
1025:
1026: $check_ $(@expr1073743182 "cppcheck-2.8/test/testconstructors.cpp" $, 1026 $, "void func1()\n{\n    struct Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    struct Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}" $)
1027:
|
1041:
1042: ;
1043:
1044: $if $(@expr1073743183 $!@expr1073743184 $assertEquals $(@expr1073743185 "cppcheck-2.8/test/testconstructors.cpp" $, 1044 $, "" $, errout@var100 .@expr1350 str (@expr1351 ) $) $) { $return ; }
1045:
1046: $check_ $(@expr1073743188 "cppcheck-2.8/test/testconstructors.cpp" $, 1046 $, "class Foo {\n    void func1()\n    {\n        struct Fred\n        {\n            int a;\n            Fred() { a = 0; }\n        };\n    }\n\n    void func2()\n    {\n        struct Fred\n        {\n            int b;\n            Fred() { b = 0; }\n        };\n    }\n};" $)
1047:
|
1063:
1064: ;
1065:
1066: $if $(@expr1073743189 $!@expr1073743190 $assertEquals $(@expr1073743191 "cppcheck-2.8/test/testconstructors.cpp" $, 1066 $, "" $, errout@var100 .@expr1350 str (@expr1351 ) $) $) { $return ; }
1067:
1068: $check_ $(@expr1073743194 "cppcheck-2.8/test/testconstructors.cpp" $, 1068 $, "class Foo {\n    void func1()\n    {\n        struct Fred\n        {\n            int a;\n            Fred() { }\n        };\n    }\n\n    void func2()\n    {\n        struct Fred\n        {\n            int b;\n            Fred() { }\n        };\n    }\n};" $)
1069:
|
1085:
1086: ;
1087:
1088: $if $(@expr1073743195 $!@expr1073743196 $assertEquals $(@expr1073743197 "cppcheck-2.8/test/testconstructors.cpp" $, 1088 $, "[test.cpp:7]: (warning) Member variable 'Fred::a' is not initialized in the constructor.\n[test.cpp:16]: (warning) Member variable 'Fred::b' is not initialized in the constructor.\n" $, errout@var100 .@expr1350 str (@expr1351 ) $) $) { $return
1089: ; }
1090: }
1091:
1092: void initvar_chained_assign ( ) {
1093:
1094:
1095: $check_ $(@expr1073743200 "cppcheck-2.8/test/testconstructors.cpp" $, 1095 $, "struct c\n{\n    c();\n\n    int m_iMyInt1;\n    int m_iMyInt2;\n}\n\nc::c()\n{\n    m_iMyInt1 = m_iMyInt2 = 0;\n}" $)
1096:
|
1105:
1106: ;
1107:
1108: $if $(@expr1073743201 $!@expr1073743202 $assertEquals $(@expr1073743203 "cppcheck-2.8/test/testconstructors.cpp" $, 1108 $, "" $, errout@var100 .@expr1073743204 str (@expr1073743205 ) $) $) { $return ; }
1109: }
1110:
1111:
1112: void initvar_2constructors ( ) {
1113: $check_ $(@expr1073743206 "cppcheck-2.8/test/testconstructors.cpp" $, 1113 $, "struct c\n{\n    c();\n    explicit c(bool b);\n    void InitInt();\n\n    int m_iMyInt;\n    int m_bMyBool;\n}\n\nc::c()\n{\n    m_bMyBool = false;\n    InitInt();}\n\nc::c(bool b)\n{\n    m_bMyBool = b;\n    InitInt();\n}\n\nvoid c::InitInt()\n{\n    m_iMyInt = 0;\n}" $)
1114:
|
1138:
1139: ;
1140:
1141: $if $(@expr1073743207 $!@expr1073743208 $assertEquals $(@expr1073743209 "cppcheck-2.8/test/testconstructors.cpp" $, 1141 $, "" $, errout@var100 .@expr1073743210 str (@expr1073743211 ) $) $) { $return ; }
1142: }
1143:
1144:
1145: void initvar_constvar ( ) {
1146: $check_ $(@expr1073743212 "cppcheck-2.8/test/testconstructors.cpp" $, 1146 $, "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred() : s(NULL)\n{ }" $)
1147:
|
1151:
1152: ;
1153: $if $(@expr1073743213 $!@expr1073743214 $assertEquals $(@expr1073743215 "cppcheck-2.8/test/testconstructors.cpp" $, 1153 $, "" $, errout@var100 .@expr1392 str (@expr1393 ) $) $) { $return ; }
1154:
1155: $check_ $(@expr1073743218 "cppcheck-2.8/test/testconstructors.cpp" $, 1155 $, "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred()\n{ s = NULL; }" $)
1156:
|
1160:
1161: ;
1162: $if $(@expr1073743219 $!@expr1073743220 $assertEquals $(@expr1073743221 "cppcheck-2.8/test/testconstructors.cpp" $, 1162 $, "" $, errout@var100 .@expr1392 str (@expr1393 ) $) $) { $return ; }
1163:
1164: $check_ $(@expr1073743224 "cppcheck-2.8/test/testconstructors.cpp" $, 1164 $, "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred()\n{ }" $)
1165:
|
1169:
1170: ;
1171: $if $(@expr1073743225 $!@expr1073743226 $assertEquals $(@expr1073743227 "cppcheck-2.8/test/testconstructors.cpp" $, 1171 $, "[test.cpp:6]: (warning) Member variable 'Fred::s' is not initialized in the constructor.\n" $, errout@var100 .@expr1392 str (@expr1393 ) $) $) { $return ; }
1172: }
1173:
1174:
1175: void initvar_staticvar ( ) {
1176: $check_ $(@expr1073743230 "cppcheck-2.8/test/testconstructors.cpp" $, 1176 $, "class Fred\n{\npublic:\n    Fred() { }\n    static void *p;\n};" $)
1177:
|
1180:
1181: ;
1182: $if $(@expr1073743231 $!@expr1073743232 $assertEquals $(@expr1073743233 "cppcheck-2.8/test/testconstructors.cpp" $, 1182 $, "" $, errout@var100 .@expr1073743234 str (@expr1073743235 ) $) $) { $return ; }
1183: }
1184:
1185:
1186: void initvar_brace_init ( ) {
1187: $check_ $(@expr1073743236 "cppcheck-2.8/test/testconstructors.cpp" $, 1187 $, "class C\n{\npublic:\n  C() {}\n\nprivate:\n  std::map<int, double> * values_{};\n};" $)
1188:
|
1193:
1194: ;
1195: $if $(@expr1073743237 $!@expr1073743238 $assertEquals $(@expr1073743239 "cppcheck-2.8/test/testconstructors.cpp" $, 1195 $, "" $, errout@var100 .@expr1073743240 str (@expr1073743241 ) $) $) { $return ; }
1196: }
1197:
1198:
1199: void initvar_union ( ) {
1200: $check_ $(@expr1073743242 "cppcheck-2.8/test/testconstructors.cpp" $, 1200 $, "class Fred\n{\n    union\n    {\n        int a;\n        char b[4];\n    } U;\npublic:\n    Fred()\n    {\n        U.a = 0;\n    }\n};" $)
1201:
|
1211:
1212: ;
1213: $if $(@expr1073743243 $!@expr1073743244 $assertEquals $(@expr1073743245 "cppcheck-2.8/test/testconstructors.cpp" $, 1213 $, "" $, errout@var100 .@expr1422 str (@expr1423 ) $) $) { $return ; }
1214:
1215: $check_ $(@expr1073743248 "cppcheck-2.8/test/testconstructors.cpp" $, 1215 $, "class Fred\n{\n    union\n    {\n        int a;\n        char b[4];\n    } U;\npublic:\n    Fred()\n    {\n    }\n};" $)
1216:
|
1225:
1226: ;
1227: $todoAssertEquals $(@expr1073743249 "cppcheck-2.8/test/testconstructors.cpp" $, 1227 $, "[test.cpp:9]: (warning) Member variable 'Fred::U' is not initialized in the constructor.\n" $, "" $, errout@var100 .@expr1422 str (@expr1423 ) $) ;
1228: }
1229:
1230:
1231: void initvar_delegate ( ) {
1232: $check_ $(@expr1073743252 "cppcheck-2.8/test/testconstructors.cpp" $, 1232 $, "class A {\n    int number;\npublic:\n    A(int n) { }\n    A() : A(42) {}\n};" $)
1233:
|
1236:
1237: ;
1238: $if $(@expr1073743253 $!@expr1073743254 $assertEquals $(@expr1073743255 "cppcheck-2.8/test/testconstructors.cpp" $, 1238 $, "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'A::number' is not initialized in the constructor.\n" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return
1239: ; }
1240:
1241: $check_ $(@expr1073743258 "cppcheck-2.8/test/testconstructors.cpp" $, 1241 $, "class A {\n    int number;\npublic:\n    A(int n) { number = n; }\n    A() : A(42) {}\n};" $)
1242:
|
1245:
1246: ;
1247: $if $(@expr1073743259 $!@expr1073743260 $assertEquals $(@expr1073743261 "cppcheck-2.8/test/testconstructors.cpp" $, 1247 $, "" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return ; }
1248:
1249: $check_ $(@expr1073743264 "cppcheck-2.8/test/testconstructors.cpp" $, 1249 $, "class A {\n    int number;\npublic:\n    A(int n) : A() { }\n    A() {}\n};" , true $)
1250:
|
1253:
1254: ;
1255: $if $(@expr1073743265 $!@expr1073743266 $assertEquals $(@expr1073743267 "cppcheck-2.8/test/testconstructors.cpp" $, 1255 $, "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning, inconclusive) Member variable 'A::number' is not initialized in the constructor.\n" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return
1256: ; }
1257:
1258: $check_ $(@expr1073743270 "cppcheck-2.8/test/testconstructors.cpp" $, 1258 $, "class A {\n    int number;\npublic:\n    A(int n) : A() { }\n    A() { number = 42; }\n};" $)
1259:
|
1262:
1263: ;
1264: $if $(@expr1073743271 $!@expr1073743272 $assertEquals $(@expr1073743273 "cppcheck-2.8/test/testconstructors.cpp" $, 1264 $, "" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return ; }
1265:
1266: $check_ $(@expr1073743276 "cppcheck-2.8/test/testconstructors.cpp" $, 1266 $, "class A {\n    int number;\npublic:\n    A(int n) { }\n    A() : A{42} {}\n};" $)
1267:
|
1270:
1271: ;
1272: $if $(@expr1073743277 $!@expr1073743278 $assertEquals $(@expr1073743279 "cppcheck-2.8/test/testconstructors.cpp" $, 1272 $, "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'A::number' is not initialized in the constructor.\n" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return
1273: ; }
1274:
1275: $check_ $(@expr1073743282 "cppcheck-2.8/test/testconstructors.cpp" $, 1275 $, "class A {\n    int number;\npublic:\n    A(int n) { number = n; }\n    A() : A{42} {}\n};" $)
1276:
|
1279:
1280: ;
1281: $if $(@expr1073743283 $!@expr1073743284 $assertEquals $(@expr1073743285 "cppcheck-2.8/test/testconstructors.cpp" $, 1281 $, "" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return ; }
1282:
1283: $check_ $(@expr1073743288 "cppcheck-2.8/test/testconstructors.cpp" $, 1283 $, "class A {\n    int number;\npublic:\n    A(int n) : A{} { }\n    A() {}\n};" , true $)
1284:
|
1287:
1288: ;
1289: $if $(@expr1073743289 $!@expr1073743290 $assertEquals $(@expr1073743291 "cppcheck-2.8/test/testconstructors.cpp" $, 1289 $, "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning, inconclusive) Member variable 'A::number' is not initialized in the constructor.\n" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return
1290: ; }
1291:
1292: $check_ $(@expr1073743294 "cppcheck-2.8/test/testconstructors.cpp" $, 1292 $, "class A {\n    int number;\npublic:\n    A(int n) : A{} { }\n    A() { number = 42; }\n};" $)
1293:
|
1296:
1297: ;
1298: $if $(@expr1073743295 $!@expr1073743296 $assertEquals $(@expr1073743297 "cppcheck-2.8/test/testconstructors.cpp" $, 1298 $, "" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return ; }
1299:
1300:
1301: $check_ $(@expr1073743300 "cppcheck-2.8/test/testconstructors.cpp" $, 1301 $, "struct Foo {\n  Foo();\n  Foo(int foo);\n  int foo_;\n};\nFoo::Foo() : Foo(0) {}\nFoo::Foo(int foo) : foo_(foo) {}" $)
1302:
|
1306:
1307: ;
1308: $if $(@expr1073743301 $!@expr1073743302 $assertEquals $(@expr1073743303 "cppcheck-2.8/test/testconstructors.cpp" $, 1308 $, "" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return ; }
1309:
1310:
1311: $check_ $(@expr1073743306 "cppcheck-2.8/test/testconstructors.cpp" $, 1311 $, "class A {\nprivate:\n    int _a;\npublic:\n    A(const int a) noexcept : _a{a} {}\n    A() noexcept;\n};\n\nA::A() noexcept: A(0) {}" $)
1312:
|
1318:
1319: ;
1320: $if $(@expr1073743307 $!@expr1073743308 $assertEquals $(@expr1073743309 "cppcheck-2.8/test/testconstructors.cpp" $, 1320 $, "" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return ; }
1321:
1322:
1323: $check_ $(@expr1073743312 "cppcheck-2.8/test/testconstructors.cpp" $, 1323 $, "class A {\nprivate:\n    int _a;\npublic:\n    A(int a) : _a(a) {}\n    A(float a) : A(int(a)) {}\n};" $)
1324:
|
1328:
1329: ;
1330: $if $(@expr1073743313 $!@expr1073743314 $assertEquals $(@expr1073743315 "cppcheck-2.8/test/testconstructors.cpp" $, 1330 $, "" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return ; }
1331:
1332:
1333: $check_ $(@expr1073743318 "cppcheck-2.8/test/testconstructors.cpp" $, 1333 $, "struct F{};\nstruct Foo {\n    Foo(int a, F&& f, int b = 21) : _a(a), _b(b), _f(f) {}\n    Foo(int x, const char* value) : Foo(x, F(), 42) {}\n    Foo(int x, int* value) : Foo(x, F()) {}\n    int _a;\n    int _b;\n    F _f;\n};" $)
1334:
|
1340:
1341: ;
1342: $if $(@expr1073743319 $!@expr1073743320 $assertEquals $(@expr1073743321 "cppcheck-2.8/test/testconstructors.cpp" $, 1342 $, "" $, errout@var100 .@expr1432 str (@expr1433 ) $) $) { $return ; }
1343: }
1344:
1345: void initvar_delegate2 ( ) {
1346: $check_ $(@expr1073743324 "cppcheck-2.8/test/testconstructors.cpp" $, 1346 $, "class Foo {\npublic:\n    explicit Foo(const Bar bar);\n    Foo(const std::string& id);\n    virtual ~RtpSession() { }\nprotected:\n    bool a;\n    uint16_t b;\n};\n\nFoo::Foo(const Bar var)\n    : Foo(bar->getId())\n{\n}\n\nFoo::Foo(const std::string& id)\n    : a(true)\n    , b(0)\n{\n}" $)
1347:
|
1364:
1365: ;
1366: $if $(@expr1073743325 $!@expr1073743326 $assertEquals $(@expr1073743327 "cppcheck-2.8/test/testconstructors.cpp" $, 1366 $, "" $, errout@var100 .@expr1073743328 str (@expr1073743329 ) $) $) { $return ; }
1367: }
1368:
1369: void initvar_derived_class ( ) {
1370: $check_ $(@expr1073743330 "cppcheck-2.8/test/testconstructors.cpp" $, 1370 $, "class Base {\npublic:\n  virtual void foo() = 0;\n  int x;\n};\n\nclass Derived: public Base {\npublic:\n  Derived() {}\n  void foo() override;\n};" $)
1371:
|
1379:
1380: ;
1381: $if $(@expr1073743331 $!@expr1073743332 $assertEquals $(@expr1073743333 "cppcheck-2.8/test/testconstructors.cpp" $, 1381 $, "[test.cpp:9]: (warning) Member variable 'Base::x' is not initialized in the constructor. Maybe it should be initialized directly in the class Base?\n" $, errout@var100 .@expr1510 str (@expr1511 ) $) $) { $return ; }
1382:
1383: $check_ $(@expr1073743336 "cppcheck-2.8/test/testconstructors.cpp" $, 1383 $, "struct A {\n    char ca;\n    A& operator=(const A& a) {\n        ca = a.ca;\n        return *this;\n    }\n};\nstruct B : public A {\n    char cb;\n    B& operator=(const B& b) {\n        A::operator=(b);\n        return *this;\n    }\n};\n" $)
1384:
|
1395:
1396: ;
1397: $if $(@expr1073743337 $!@expr1073743338 $assertEquals $(@expr1073743339 "cppcheck-2.8/test/testconstructors.cpp" $, 1397 $, "[test.cpp:10]: (warning) Member variable 'B::cb' is not assigned a value in 'B::operator='.\n" $, errout@var100 .@expr1510 str (@expr1511 ) $) $) { $return ; }
1398:
1399: $check_ $(@expr1073743342 "cppcheck-2.8/test/testconstructors.cpp" $, 1399 $, "struct A {\n    char ca;\n    A& operator=(const A& a) {\n        return *this;\n    }\n};\nstruct B : public A {\n    char cb;\n    B& operator=(const B& b) {\n        A::operator=(b);\n        return *this;\n    }\n};\n" $)
1400:
|
1410:
1411: ;
1412: $if $(@expr1073743343 $!@expr1073743344 $assertEquals $(@expr1073743345 "cppcheck-2.8/test/testconstructors.cpp" $, 1412 $, "[test.cpp:3]: (warning) Member variable 'A::ca' is not assigned a value in 'A::operator='.\n[test.cpp:9]: (warning) Member variable 'B::cb' is not assigned a value in 'B::operator='.\n[test.cpp:9]: (warning) Member variable 'B::ca' is not assigned a value in 'B::operator='.\n" $, errout@var100 .@expr1510 str (@expr1511 ) $) $) { $return
1413:
1414:
1415: ; }
1416:
1417: }
1418:
1419: void initvar_private_constructor ( ) {
1420: settings@var102 .@expr1526 standards@var119 .@expr1527 cpp@var120 =@expr1073743352 Standards ::@expr1073743353 CPP11@expr1073743348 ;
1421: $check_ $(@expr1073743354 "cppcheck-2.8/test/testconstructors.cpp" $, 1421 $, "class Fred\n{\nprivate:\n    int var;\n    Fred();\n};\nFred::Fred()\n{ }" $)
1422:
|
1427:
1428: ;
1429: $if $(@expr1073743355 $!@expr1073743356 $assertEquals $(@expr1073743357 "cppcheck-2.8/test/testconstructors.cpp" $, 1429 $, "[test.cpp:7]: (warning) Member variable 'Fred::var' is not initialized in the constructor.\n" $, errout@var100 .@expr1534 str (@expr1535 ) $) $) { $return ; }
1430:
1431: settings@var102 .@expr1526 standards@var119 .@expr1527 cpp@var120 =@expr1073743362 Standards ::@expr1073743363 CPP03@expr1073743349 ;
1432: $check_ $(@expr1073743364 "cppcheck-2.8/test/testconstructors.cpp" $, 1432 $, "class Fred\n{\nprivate:\n    int var;\n    Fred();\n};\nFred::Fred()\n{ }" $)
1433:
|
1438:
1439: ;
1440: $if $(@expr1073743365 $!@expr1073743366 $assertEquals $(@expr1073743367 "cppcheck-2.8/test/testconstructors.cpp" $, 1440 $, "" $, errout@var100 .@expr1534 str (@expr1535 ) $) $) { $return ; }
1441: }
1442:
1443: void initvar_copy_constructor ( ) {
1444: $check_ $(@expr1073743370 "cppcheck-2.8/test/testconstructors.cpp" $, 1444 $, "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred() { };\n    Fred(const Fred &) { };\n};" $)
1445:
|
1450:
1451: ;
1452: $if $(@expr1073743371 $!@expr1073743372 $assertEquals $(@expr1073743373 "cppcheck-2.8/test/testconstructors.cpp" $, 1452 $, "" $, errout@var100 .@expr1550 str (@expr1551 ) $) $) { $return ; }
1453:
1454: $check_ $(@expr1073743376 "cppcheck-2.8/test/testconstructors.cpp" $, 1454 $, "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred() { };\n    Fred(const Fred &) { };\n};" , true $)
1455:
|
1460:
1461: ;
1462: $if $(@expr1073743377 $!@expr1073743378 $assertEquals $(@expr1073743379 "cppcheck-2.8/test/testconstructors.cpp" $, 1462 $, "[test.cpp:7]: (warning, inconclusive) Member variable 'Fred::var' is not assigned in the copy constructor. Should it be copied?\n" $, errout@var100 .@expr1550 str (@expr1551 ) $) $) { $return ; }
1463:
1464: $check_ $(@expr1073743382 "cppcheck-2.8/test/testconstructors.cpp" $, 1464 $, "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred();\n    Fred(const Fred &);\n};\nFred::Fred() { };\nFred::Fred(const Fred &) { };\n" , true $)
1465:
|
1472:
1473: ;
1474: $if $(@expr1073743383 $!@expr1073743384 $assertEquals $(@expr1073743385 "cppcheck-2.8/test/testconstructors.cpp" $, 1474 $, "[test.cpp:10]: (warning, inconclusive) Member variable 'Fred::var' is not assigned in the copy constructor. Should it be copied?\n" $, errout@var100 .@expr1550 str (@expr1551 ) $) $) { $return ; }
1475:
1476: $check_ $(@expr1073743388 "cppcheck-2.8/test/testconstructors.cpp" $, 1476 $, "class Baz {};\nclass Bar {\npublic:\n    explicit Bar(Baz* pBaz = NULL) : i(0) {}\n    Bar(const Bar& bar) {}\n    int i;\n};\n" , true $)
1477:
|
1481:
1482: ;
1483: $if $(@expr1073743389 $!@expr1073743390 $assertEquals $(@expr1073743391 "cppcheck-2.8/test/testconstructors.cpp" $, 1483 $, "[test.cpp:5]: (warning) Member variable 'Bar::i' is not initialized in the copy constructor.\n" $, errout@var100 .@expr1550 str (@expr1551 ) $) $) { $return ; }
1484: }
1485:
1486: void initvar_nested_constructor ( ) {
1487: $check_ $(@expr1073743394 "cppcheck-2.8/test/testconstructors.cpp" $, 1487 $, "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                int d;\n                explicit D(int z);\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(int z){}" $)
1488:
|
1508:
1509: ;
1510:
1511:
1512: $if $(@expr1073743395 $!@expr1073743396 $assertEquals $(@expr1073743397 "cppcheck-2.8/test/testconstructors.cpp" $, 1512 $, "[test.cpp:20]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'D::d' is not initialized in the constructor.\n" $, errout@var100 .@expr1574 str (@expr1575 ) $) $) { $return
1513:
1514:
1515: ; }
1516:
1517: $check_ $(@expr1073743400 "cppcheck-2.8/test/testconstructors.cpp" $, 1517 $, "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                D(const D &);\n                int d;\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(const A::B::C::D & d){}" $)
1518:
|
1538:
1539: ;
1540:
1541:
1542: $if $(@expr1073743401 $!@expr1073743402 $assertEquals $(@expr1073743403 "cppcheck-2.8/test/testconstructors.cpp" $, 1542 $, "[test.cpp:20]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'D::d' is not initialized in the copy constructor.\n" $, errout@var100 .@expr1574 str (@expr1575 ) $) $) { $return
1543:
1544:
1545: ; }
1546:
1547: $check_ $(@expr1073743406 "cppcheck-2.8/test/testconstructors.cpp" $, 1547 $, "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                struct E { int e; };\n                struct E d;\n                explicit D(const E &);\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(const A::B::C::D::E & e){}" $)
1548:
|
1569:
1570: ;
1571:
1572:
1573: $if $(@expr1073743407 $!@expr1073743408 $assertEquals $(@expr1073743409 "cppcheck-2.8/test/testconstructors.cpp" $, 1573 $, "[test.cpp:21]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:24]: (warning) Member variable 'D::d' is not initialized in the constructor.\n" $, errout@var100 .@expr1574 str (@expr1575 ) $) $) { $return
1574:
1575:
1576: ; }
1577: }
1578:
1579: void initvar_nocopy1 ( ) {
1580: $check_ $(@expr1073743412 "cppcheck-2.8/test/testconstructors.cpp" $, 1580 $, "class B\n{\n    B (const B & Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" $)
1581:
|
1591:
1592: ;
1593: $if $(@expr1073743413 $!@expr1073743414 $assertEquals $(@expr1073743415 "cppcheck-2.8/test/testconstructors.cpp" $, 1593 $, "" $, errout@var100 .@expr1592 str (@expr1593 ) $) $) { $return ; }
1594:
1595: $check_ $(@expr1073743418 "cppcheck-2.8/test/testconstructors.cpp" $, 1595 $, "class B\n{\n    B (B && Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" $)
1596:
|
1606:
1607: ;
1608: $if $(@expr1073743419 $!@expr1073743420 $assertEquals $(@expr1073743421 "cppcheck-2.8/test/testconstructors.cpp" $, 1608 $, "" $, errout@var100 .@expr1592 str (@expr1593 ) $) $) { $return ; }
1609:
1610: $check_ $(@expr1073743424 "cppcheck-2.8/test/testconstructors.cpp" $, 1610 $, "class B\n{\n    B & operator= (const B & Var);\npublic:\n    B ();\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" $)
1611:
|
1623:
1624: ;
1625: $if $(@expr1073743425 $!@expr1073743426 $assertEquals $(@expr1073743427 "cppcheck-2.8/test/testconstructors.cpp" $, 1625 $, "" $, errout@var100 .@expr1592 str (@expr1593 ) $) $) { $return ; }
1626:
1627: $check_ $(@expr1073743430 "cppcheck-2.8/test/testconstructors.cpp" $, 1627 $, "class B\n{\npublic:\n    B (const B & Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" $)
1628:
|
1639:
1640: ;
1641: $if $(@expr1073743431 $!@expr1073743432 $assertEquals $(@expr1073743433 "cppcheck-2.8/test/testconstructors.cpp" $, 1641 $, "" $, errout@var100 .@expr1592 str (@expr1593 ) $) $) { $return ; }
1642:
1643: $check_ $(@expr1073743436 "cppcheck-2.8/test/testconstructors.cpp" $, 1643 $, "class A : public std::vector<int>\n{\npublic:\n    A(const A &a);\n};\nclass B\n{\n    A a;\npublic:\n    B(){}\n    B(const B&){}\n    B(B &&){}\n    const B& operator=(const B&){return *this;}\n};" , true $)
1644:
|
1655:
1656: ;
1657: $if $(@expr1073743437 $!@expr1073743438 $assertEquals $(@expr1073743439 "cppcheck-2.8/test/testconstructors.cpp" $, 1657 $, "[test.cpp:11]: (warning, inconclusive) Member variable 'B::a' is not assigned in the copy constructor. Should it be copied?\n[test.cpp:12]: (warning, inconclusive) Member variable 'B::a' is not assigned in the move constructor. Should it be moved?\n[test.cpp:13]: (warning, inconclusive) Member variable 'B::a' is not assigned a value in 'B::operator='.\n" $, errout@var100 .@expr1592 str (@expr1593 ) $) $) { $return
1658:
1659:
1660: ; }
1661:
1662: $check_ $(@expr1073743442 "cppcheck-2.8/test/testconstructors.cpp" $, 1662 $, "class B\n{\npublic:\n    B (B && Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" $)
1663:
|
1675:
1676: ;
1677: $if $(@expr1073743443 $!@expr1073743444 $assertEquals $(@expr1073743445 "cppcheck-2.8/test/testconstructors.cpp" $, 1677 $, "[test.cpp:13]: (warning) Member variable 'A::m_SemVar' is not initialized in the move constructor.\n" $, errout@var100 .@expr1592 str (@expr1593 ) $) $) { $return ; }
1678:
1679: $check_ $(@expr1073743448 "cppcheck-2.8/test/testconstructors.cpp" $, 1679 $, "class B\n{\npublic:\n    B ();\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" $)
1680:
|
1693:
1694: ;
1695: $if $(@expr1073743449 $!@expr1073743450 $assertEquals $(@expr1073743451 "cppcheck-2.8/test/testconstructors.cpp" $, 1695 $, "" $, errout@var100 .@expr1592 str (@expr1593 ) $) $) { $return ; }
1696:
1697: $check_ $(@expr1073743454 "cppcheck-2.8/test/testconstructors.cpp" $, 1697 $, "class A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};" $)
1698:
|
1703:
1704: ;
1705: $if $(@expr1073743455 $!@expr1073743456 $assertEquals $(@expr1073743457 "cppcheck-2.8/test/testconstructors.cpp" $, 1705 $, "" $, errout@var100 .@expr1592 str (@expr1593 ) $) $) { $return ; }
1706: }
1707:
1708: void initvar_nocopy2 ( ) {
1709: $check_ $(@expr1073743460 "cppcheck-2.8/test/testconstructors.cpp" $, 1709 $, "class B\n{\n    B (B & Var);\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};" , true $)
1710:
|
1721:
1722: ;
1723: $if $(@expr1073743461 $!@expr1073743462 $assertEquals $(@expr1073743463 "cppcheck-2.8/test/testconstructors.cpp" $, 1723 $, "" $, errout@var100 .@expr1640 str (@expr1641 ) $) $) { $return ; }
1724:
1725: $check_ $(@expr1073743466 "cppcheck-2.8/test/testconstructors.cpp" $, 1725 $, "class B\n{\npublic:\n    B (B & Var);\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};" , true $)
1726:
|
1738:
1739: ;
1740: $if $(@expr1073743467 $!@expr1073743468 $assertEquals $(@expr1073743469 "cppcheck-2.8/test/testconstructors.cpp" $, 1740 $, "[test.cpp:12]: (warning) Member variable 'A::m_SemVar' is not initialized in the constructor.\n[test.cpp:13]: (warning) Member variable 'A::m_SemVar' is not initialized in the copy constructor.\n[test.cpp:14]: (warning) Member variable 'A::m_SemVar' is not assigned a value in 'A::operator='.\n" $, errout@var100 .@expr1640 str (@expr1641 ) $) $) { $return
1741:
1742: ; }
1743: }
1744:
1745: void initvar_nocopy3 ( ) {
1746: $check_ $(@expr1073743472 "cppcheck-2.8/test/testconstructors.cpp" $, 1746 $, "struct A {\n    B b;\n    A() {}\n    A(const A& rhs) {}\n};" $)
1747:
1748:
1749:
1750: ;
1751: $if $(@expr1073743473 $!@expr1073743474 $assertEquals $(@expr1073743475 "cppcheck-2.8/test/testconstructors.cpp" $, 1751 $, "" $, errout@var100 .@expr1652 str (@expr1653 ) $) $) { $return ; }
1752:
1753: $check_ $(@expr1073743478 "cppcheck-2.8/test/testconstructors.cpp" $, 1753 $, "struct A {\n    B b;\n    A() {}\n    A(const A& rhs) {}\n};" , true $)
1754:
1755:
1756:
1757: ;
1758: $if $(@expr1073743479 $!@expr1073743480 $assertEquals $(@expr1073743481 "cppcheck-2.8/test/testconstructors.cpp" $, 1758 $, "[test.cpp:4]: (warning, inconclusive) Member variable 'A::b' is not assigned in the copy constructor. Should it be copied?\n" $, errout@var100 .@expr1652 str (@expr1653 ) $) $) { $return ; }
1759: }
1760:
1761: void initvar_nocopy4 ( ) {
1762: $check_ $(@expr1073743484 "cppcheck-2.8/test/testconstructors.cpp" $, 1762 $, "struct S {\n    S(const S & s);\n    void S::Set(const T& val);\n    void S::Set(const U& val);\n    T t;\n};\nS::S(const S& s) {\n    Set(s.t);\n}\nvoid S::Set(const T& val) {\n    t = val;\n}" , true $)
1763:
|
1772:
1773: ;
1774: $if $(@expr1073743485 $!@expr1073743486 $assertEquals $(@expr1073743487 "cppcheck-2.8/test/testconstructors.cpp" $, 1774 $, "" $, errout@var100 .@expr1073743488 str (@expr1073743489 ) $) $) { $return ; }
1775: }
1776:
1777: void initvar_with_member_function_this ( ) {
1778: $check_ $(@expr1073743490 "cppcheck-2.8/test/testconstructors.cpp" $, 1778 $, "struct Foo {\n  Foo(int m) { this->setMember(m); }\n  void setMember(int m) { member = m; }\n  int member;\n};" $)
1779:
1780:
1781:
1782: ;
1783: $if $(@expr1073743491 $!@expr1073743492 $assertEquals $(@expr1073743493 "cppcheck-2.8/test/testconstructors.cpp" $, 1783 $, "" $, errout@var100 .@expr1073743494 str (@expr1073743495 ) $) $) { $return ; }
1784: }
1785:
1786: void initvar_destructor ( ) {
1787: $check_ $(@expr1073743496 "cppcheck-2.8/test/testconstructors.cpp" $, 1787 $, "class Fred\n{\nprivate:\n    int var;\npublic:\n    Fred() : var(0) {}\n    ~Fred() {}\n};" $)
1788:
|
1793:
1794: ;
1795: $if $(@expr1073743497 $!@expr1073743498 $assertEquals $(@expr1073743499 "cppcheck-2.8/test/testconstructors.cpp" $, 1795 $, "" $, errout@var100 .@expr1073743500 str (@expr1073743501 ) $) $) { $return ; }
1796: }
1797:
1798: void initvar_func_ret_func_ptr ( ) {
1799: $check_ $(@expr1073743502 "cppcheck-2.8/test/testconstructors.cpp" $, 1799 $, "class something {\n    int * ( something :: * process()) () { return 0; }\n    something() { process(); }\n};" $)
1800:
1801:
1802: ;
1803: $if $(@expr1073743503 $!@expr1073743504 $assertEquals $(@expr1073743505 "cppcheck-2.8/test/testconstructors.cpp" $, 1803 $, "" $, errout@var100 .@expr1073743506 str (@expr1073743507 ) $) $) { $return ; }
1804: }
1805:
1806: void initvar_alias ( ) {
1807: $check_ $(@expr1073743508 "cppcheck-2.8/test/testconstructors.cpp" $, 1807 $, "struct S {\n    int a;\n    S() {\n        int& pa = a;\n        pa = 4;\n    }\n};" $)
1808:
|
1812:
1813: ;
1814: $if $(@expr1073743509 $!@expr1073743510 $assertEquals $(@expr1073743511 "cppcheck-2.8/test/testconstructors.cpp" $, 1814 $, "" $, errout@var100 .@expr1688 str (@expr1689 ) $) $) { $return ; }
1815:
1816: $check_ $(@expr1073743514 "cppcheck-2.8/test/testconstructors.cpp" $, 1816 $, "struct S {\n    int a;\n    S() {\n        int* pa = &a;\n        *pa = 4;\n    }\n};" $)
1817:
|
1821:
1822: ;
1823: $if $(@expr1073743515 $!@expr1073743516 $assertEquals $(@expr1073743517 "cppcheck-2.8/test/testconstructors.cpp" $, 1823 $, "" $, errout@var100 .@expr1688 str (@expr1689 ) $) $) { $return ; }
1824:
1825: $check_ $(@expr1073743520 "cppcheck-2.8/test/testconstructors.cpp" $, 1825 $, "struct S {\n    int a[2];\n    S() {\n        int* pa = a;\n        for (int i = 0; i < 2; i++)\n            *pa++ = i;\n    }\n};" $)
1826:
|
1831:
1832: ;
1833: $if $(@expr1073743521 $!@expr1073743522 $assertEquals $(@expr1073743523 "cppcheck-2.8/test/testconstructors.cpp" $, 1833 $, "" $, errout@var100 .@expr1688 str (@expr1689 ) $) $) { $return ; }
1834:
1835: $check_ $(@expr1073743526 "cppcheck-2.8/test/testconstructors.cpp" $, 1835 $, "struct S {\n    int* a[2];\n    S() {\n        int* pa = a[1];\n        *pa = 0;\n    }\n};" $)
1836:
|
1840:
1841: ;
1842: $if $(@expr1073743527 $!@expr1073743528 $assertEquals $(@expr1073743529 "cppcheck-2.8/test/testconstructors.cpp" $, 1842 $, "[test.cpp:3]: (warning) Member variable 'S::a' is not initialized in the constructor.\n" $, errout@var100 .@expr1688 str (@expr1689 ) $) $) { $return ; }
1843:
1844: $check_ $(@expr1073743532 "cppcheck-2.8/test/testconstructors.cpp" $, 1844 $, "struct S {\n    int a;\n    S() {\n        int pa = a;\n        pa = 4;\n    }\n};" $)
1845:
|
1849:
1850: ;
1851: $if $(@expr1073743533 $!@expr1073743534 $assertEquals $(@expr1073743535 "cppcheck-2.8/test/testconstructors.cpp" $, 1851 $, "[test.cpp:3]: (warning) Member variable 'S::a' is not initialized in the constructor.\n" $, errout@var100 .@expr1688 str (@expr1689 ) $) $) { $return ; }
1852: }
1853:
1854: void initvar_templateMember ( ) {
1855: $check_ $(@expr1073743538 "cppcheck-2.8/test/testconstructors.cpp" $, 1855 $, "template<int n_>\nstruct Wrapper {\n    static void foo(int * x) {\n        for (int i(0); i <= n_; ++i)\n            x[i] = 5;\n    }\n};\nclass A {\npublic:\n    static constexpr int dim = 5;\n    int x[dim + 1];\n    A() {\n        Wrapper<dim>::foo(x);\n    }\n};" $)
1856:
|
1868:
1869: ;
1870: $if $(@expr1073743539 $!@expr1073743540 $assertEquals $(@expr1073743541 "cppcheck-2.8/test/testconstructors.cpp" $, 1870 $, "" $, errout@var100 .@expr1073743542 str (@expr1073743543 ) $) $) { $return ; }
1871: }
1872:
1873: void initvar_smartptr ( ) {
1874: Settings s@var121 ;
1875: s@var121 .@expr1073743544 libraries@var122 .@expr1073743545 emplace_back (@expr1073743546 "std" ) ;
1876: $check_ $(@expr1073743547 "cppcheck-2.8/test/testconstructors.cpp" $, 1876 $, "struct S {\n    explicit S(const std::shared_ptr<S>& sp) {\n        set(*sp);\n    }\n    double get() const {\n        return d;\n    }\n    void set(const S& rhs) {\n        d = rhs.get();\n    }\n    double d;\n};" , s@var121 $)
1877:
|
1886:
1887: ;
1888: $if $(@expr1073743548 $!@expr1073743549 $assertEquals $(@expr1073743550 "cppcheck-2.8/test/testconstructors.cpp" $, 1888 $, "" $, errout@var100 .@expr1727 str (@expr1728 ) $) $) { $return ; }
1889:
1890: $check_ $(@expr1073743553 "cppcheck-2.8/test/testconstructors.cpp" $, 1890 $, "struct S {\n    explicit S(const T& rhs) { set(*rhs); }\n    void set(const S& v) {\n        d = v.d;\n    }\n    double d; \n};\n" $)
1891:
|
1895:
1896: ;
1897: $if $(@expr1073743554 $!@expr1073743555 $assertEquals $(@expr1073743556 "cppcheck-2.8/test/testconstructors.cpp" $, 1897 $, "" $, errout@var100 .@expr1727 str (@expr1728 ) $) $) { $return ; }
1898: }
1899:
1900: void operatorEqSTL ( ) {
1901: $check_ $(@expr1073743561 "cppcheck-2.8/test/testconstructors.cpp" $, 1901 $, "class Fred\n{\nprivate:\n    std::vector<int> ints;\npublic:\n    Fred();\n    void operator=(const Fred &f);\n};\n\nFred::Fred()\n{ }\n\nvoid Fred::operator=(const Fred &f)\n{ }" , true $)
1902:
|
1913:
1914: ;
1915: $if $(@expr1073743562 $!@expr1073743563 $assertEquals $(@expr1073743564 "cppcheck-2.8/test/testconstructors.cpp" $, 1915 $, "[test.cpp:13]: (warning, inconclusive) Member variable 'Fred::ints' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr1741 str (@expr1742 ) $) $) { $return ; }
1916:
1917: Settings s@var123 ;
1918: s@var123 .@expr1073743567 certainty@var124 .@expr1073743568 setEnabled (@expr1073743569 Certainty ::@expr1073743570 inconclusive , true ) ;
1919: s@var123 .@expr1747 severity@var125 .@expr1748 enable (@expr1073743573 Severity ::@expr1073743574 style@expr1073743559 ) ;
1920: s@var123 .@expr1747 severity@var125 .@expr1748 enable (@expr1073743577 Severity ::@expr1073743578 warning@expr1073743560 ) ;
1921: $do ${ $if $(@expr1073743579 s@var123 .@expr1073743580 library@var126 $.@expr1073743581 $load $(@expr1073743582 $exename@var11 $.@expr1073743583 $c_str $(@expr1073743584 $) $, "std.cfg" $) $.@expr1073743585 $errorcode $!=@expr1073743586 $Library $::@expr1073743587 $ErrorCode $::@expr1073743588 $OK $) ${ $complainMissingLib $(@expr1073743589 "std.cfg" $) $; $return $; $} $} $while $(@expr1073743590 $false $) ;
1922: $check_ $(@expr1073743591 "cppcheck-2.8/test/testconstructors.cpp" $, 1922 $, "struct S {\n    S& operator=(const S& s) { return *this; }\n    std::mutex m;\n};\n" , s@var123 $)
1923:
1924:
1925: ;
1926: $if $(@expr1073743592 $!@expr1073743593 $assertEquals $(@expr1073743594 "cppcheck-2.8/test/testconstructors.cpp" $, 1926 $, "" $, errout@var100 .@expr1741 str (@expr1742 ) $) $) { $return ; }
1927: }
1928:
1929: void uninitVar1 ( ) {
1930: $check_ $(@expr1073743597 "cppcheck-2.8/test/testconstructors.cpp" $, 1930 $, "enum ECODES\n{\n    CODE_1 = 0,\n    CODE_2 = 1\n};\n\nclass Fred\n{\npublic:\n    Fred() {}\n\nprivate:\n    ECODES _code;\n};" $)
1931:
|
1942:
1943: ;
1944:
1945: $if $(@expr1073743598 $!@expr1073743599 $assertEquals $(@expr1073743600 "cppcheck-2.8/test/testconstructors.cpp" $, 1945 $, "[test.cpp:10]: (warning) Member variable 'Fred::_code' is not initialized in the constructor.\n" $, errout@var100 .@expr1777 str (@expr1778 ) $) $) { $return ; }
1946:
1947:
1948: $check_ $(@expr1073743603 "cppcheck-2.8/test/testconstructors.cpp" $, 1948 $, "class A{};\n\nclass B : public A\n{\npublic:\n  B() {}\nprivate:\n  float f;\n};" $)
1949:
|
1955:
1956: ;
1957: $if $(@expr1073743604 $!@expr1073743605 $assertEquals $(@expr1073743606 "cppcheck-2.8/test/testconstructors.cpp" $, 1957 $, "[test.cpp:6]: (warning) Member variable 'B::f' is not initialized in the constructor.\n" $, errout@var100 .@expr1777 str (@expr1778 ) $) $) { $return ; }
1958:
1959: $check_ $(@expr1073743609 "cppcheck-2.8/test/testconstructors.cpp" $, 1959 $, "class C\n{\n    FILE *fp;\n\npublic:\n    explicit C(FILE *fp);\n};\n\nC::C(FILE *fp) {\n    C::fp = fp;\n}" $)
1960:
|
1968:
1969: ;
1970: $if $(@expr1073743610 $!@expr1073743611 $assertEquals $(@expr1073743612 "cppcheck-2.8/test/testconstructors.cpp" $, 1970 $, "" $, errout@var100 .@expr1777 str (@expr1778 ) $) $) { $return ; }
1971: }
1972:
1973: void uninitVar2 ( ) {
1974: $check_ $(@expr1073743615 "cppcheck-2.8/test/testconstructors.cpp" $, 1974 $, "class John\n{\npublic:\n    John() { (*this).i = 0; }\nprivate:\n    int i;\n};" $)
1975:
|
1979:
1980: ;
1981: $if $(@expr1073743616 $!@expr1073743617 $assertEquals $(@expr1073743618 "cppcheck-2.8/test/testconstructors.cpp" $, 1981 $, "" $, errout@var100 .@expr1073743619 str (@expr1073743620 ) $) $) { $return ; }
1982: }
1983:
1984: void uninitVar3 ( ) {
1985:
1986: $check_ $(@expr1073743621 "cppcheck-2.8/test/testconstructors.cpp" $, 1986 $, "class Foo\n{\npublic:\n    Foo() { }\nprivate:\n    struct Bar {\n        Bar();\n    };\n    Bar bars[2];\n};" $)
1987:
|
1994:
1995: ;
1996: $if $(@expr1073743622 $!@expr1073743623 $assertEquals $(@expr1073743624 "cppcheck-2.8/test/testconstructors.cpp" $, 1996 $, "" $, errout@var100 .@expr1801 str (@expr1802 ) $) $) { $return ; }
1997:
1998:
1999: $check_ $(@expr1073743627 "cppcheck-2.8/test/testconstructors.cpp" $, 1999 $, "class Foo\n{\npublic:\n    Foo() { }\nprivate:\n    struct Bar {\n        int x;\n    };\n    Bar bars[2];\n};" $)
2000:
|
2007:
2008: ;
2009: $if $(@expr1073743628 $!@expr1073743629 $assertEquals $(@expr1073743630 "cppcheck-2.8/test/testconstructors.cpp" $, 2009 $, "[test.cpp:4]: (warning) Member variable 'Foo::bars' is not initialized in the constructor.\n" $, errout@var100 .@expr1801 str (@expr1802 ) $) $) { $return ; }
2010: }
2011:
2012: void uninitVar4 ( ) {
2013: $check_ $(@expr1073743633 "cppcheck-2.8/test/testconstructors.cpp" $, 2013 $, "class Foo\n{\npublic:\n    Foo() { bar.x = 0; }\nprivate:\n    struct Bar {\n        int x;\n    };\n    struct Bar bar;\n};" $)
2014:
|
2021:
2022: ;
2023: $if $(@expr1073743634 $!@expr1073743635 $assertEquals $(@expr1073743636 "cppcheck-2.8/test/testconstructors.cpp" $, 2023 $, "" $, errout@var100 .@expr1073743637 str (@expr1073743638 ) $) $) { $return ; }
2024: }
2025:
2026: void uninitVar5 ( ) {
2027: $check_ $(@expr1073743639 "cppcheck-2.8/test/testconstructors.cpp" $, 2027 $, "class Foo\n{\npublic:\n    Foo() { }\n    Foo &operator=(const Foo &)\n    { return *this; }\n    static int i;\n};" $)
2028:
|
2033:
2034: ;
2035: $if $(@expr1073743640 $!@expr1073743641 $assertEquals $(@expr1073743642 "cppcheck-2.8/test/testconstructors.cpp" $, 2035 $, "" $, errout@var100 .@expr1073743643 str (@expr1073743644 ) $) $) { $return ; }
2036: }
2037:
2038: void uninitVar6 ( ) {
2039: $check_ $(@expr1073743645 "cppcheck-2.8/test/testconstructors.cpp" $, 2039 $, "class Foo : public Bar\n{\npublic:\n    explicit Foo(int i) : Bar(mi=i) { }\nprivate:\n    int mi;\n};" $)
2040:
|
2044:
2045: ;
2046: $if $(@expr1073743646 $!@expr1073743647 $assertEquals $(@expr1073743648 "cppcheck-2.8/test/testconstructors.cpp" $, 2046 $, "" $, errout@var100 .@expr1825 str (@expr1826 ) $) $) { $return ; }
2047:
2048: $check_ $(@expr1073743651 "cppcheck-2.8/test/testconstructors.cpp" $, 2048 $, "class Foo : public Bar\n{\npublic:\n    explicit Foo(int i) : Bar{mi=i} { }\nprivate:\n    int mi;\n};" $)
2049:
|
2053:
2054: ;
2055: $if $(@expr1073743652 $!@expr1073743653 $assertEquals $(@expr1073743654 "cppcheck-2.8/test/testconstructors.cpp" $, 2055 $, "" $, errout@var100 .@expr1825 str (@expr1826 ) $) $) { $return ; }
2056: }
2057:
2058: void uninitVar7 ( ) {
2059: $check_ $(@expr1073743657 "cppcheck-2.8/test/testconstructors.cpp" $, 2059 $, "class Foo {\n    int a;\npublic:\n    Foo() : a(0) {}\n    Foo& operator=(const Foo&);\n    void Swap(Foo& rhs);\n};\n\nvoid Foo::Swap(Foo& rhs) {\n    std::swap(a,rhs.a);\n}\n\nFoo& Foo::operator=(const Foo& rhs) {\n    Foo copy(rhs);\n    copy.Swap(*this);\n    return *this;\n}" $)
2060:
|
2074:
2075: ;
2076: $if $(@expr1073743658 $!@expr1073743659 $assertEquals $(@expr1073743660 "cppcheck-2.8/test/testconstructors.cpp" $, 2076 $, "" $, errout@var100 .@expr1073743661 str (@expr1073743662 ) $) $) { $return ; }
2077: }
2078:
2079: void uninitVar8 ( ) {
2080: $check_ $(@expr1073743663 "cppcheck-2.8/test/testconstructors.cpp" $, 2080 $, "class Foo {\n    int a;\npublic:\n    Foo() : a(0) {}\n    Foo& operator=(const Foo&);\n};\n\nFoo& Foo::operator=(const Foo& rhs) {\n    if (&rhs != this)\n    {\n    }\n    return *this;\n}" $)
2081:
|
2091:
2092: ;
2093: $if $(@expr1073743664 $!@expr1073743665 $assertEquals $(@expr1073743666 "cppcheck-2.8/test/testconstructors.cpp" $, 2093 $, "[test.cpp:8]: (warning) Member variable 'Foo::a' is not assigned a value in 'Foo::operator='.\n" $, errout@var100 .@expr1073743667 str (@expr1073743668 ) $) $) { $return ; }
2094: }
2095:
2096: void uninitVar9 ( ) {
2097: $check_ $(@expr1073743669 "cppcheck-2.8/test/testconstructors.cpp" $, 2097 $, "class Prefs {\nprivate:\n    int xasd;\npublic:\n    explicit Prefs(wxSize size);\n};\nPrefs::Prefs(wxSize size)\n{\n    SetMinSize( wxSize( 48,48 ) );\n}" $)
2098:
|
2105:
2106: ;
2107: $if $(@expr1073743670 $!@expr1073743671 $assertEquals $(@expr1073743672 "cppcheck-2.8/test/testconstructors.cpp" $, 2107 $, "[test.cpp:7]: (warning) Member variable 'Prefs::xasd' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743673 str (@expr1073743674 ) $) $) { $return ; }
2108: }
2109:
2110: void uninitVar10 ( ) {
2111: $check_ $(@expr1073743675 "cppcheck-2.8/test/testconstructors.cpp" $, 2111 $, "class A {\npublic:\n        A();\nprivate:\n        int var1;\n        int var2;\n};\nA::A() : var1(0) { }" $)
2112:
|
2117:
2118: ;
2119: $if $(@expr1073743676 $!@expr1073743677 $assertEquals $(@expr1073743678 "cppcheck-2.8/test/testconstructors.cpp" $, 2119 $, "[test.cpp:8]: (warning) Member variable 'A::var2' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743679 str (@expr1073743680 ) $) $) { $return ; }
2120: }
2121:
2122: void uninitVar11 ( ) {
2123: $check_ $(@expr1073743681 "cppcheck-2.8/test/testconstructors.cpp" $, 2123 $, "class A {\npublic:\n        explicit A(int a = 0);\nprivate:\n        int var;\n};\nA::A(int a) { }" $)
2124:
|
2128:
2129: ;
2130: $if $(@expr1073743682 $!@expr1073743683 $assertEquals $(@expr1073743684 "cppcheck-2.8/test/testconstructors.cpp" $, 2130 $, "[test.cpp:7]: (warning) Member variable 'A::var' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743685 str (@expr1073743686 ) $) $) { $return ; }
2131: }
2132:
2133: void uninitVar12 ( ) {
2134: $check_ $(@expr1073743687 "cppcheck-2.8/test/testconstructors.cpp" $, 2134 $, "class Point\n{\npublic:\n    Point()\n    {\n        Point(0, 0);\n    }\n    Point(int x, int y)\n        : x(x), y(y)\n    {}\n    int x, y;\n};" $)
2135:
|
2144:
2145: ;
2146: $if $(@expr1073743688 $!@expr1073743689 $assertEquals $(@expr1073743690 "cppcheck-2.8/test/testconstructors.cpp" $, 2146 $, "[test.cpp:4]: (warning) Member variable 'Point::x' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'Point::y' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743691 str (@expr1073743692 ) $) $) { $return
2147: ; }
2148: }
2149:
2150: void uninitVar13 ( ) {
2151: $check_ $(@expr1073743693 "cppcheck-2.8/test/testconstructors.cpp" $, 2151 $, "class A {\nprivate:\n    std::vector<int> *ints;\npublic:\n    A()\n    {}\n};" $)
2152:
|
2156:
2157: ;
2158: $if $(@expr1073743694 $!@expr1073743695 $assertEquals $(@expr1073743696 "cppcheck-2.8/test/testconstructors.cpp" $, 2158 $, "[test.cpp:5]: (warning) Member variable 'A::ints' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743697 str (@expr1073743698 ) $) $) { $return ; }
2159: }
2160:
2161: void uninitVar14 ( ) {
2162:
2163: $check_ $(@expr1073743699 "cppcheck-2.8/test/testconstructors.cpp" $, 2163 $, "class Foo\n{\npublic:\n    Foo();\nprivate:\n    bool mMember;\n};\nFoo::Foo()\n{\n}" $)
2164:
|
2171:
2172: ;
2173: $if $(@expr1073743700 $!@expr1073743701 $assertEquals $(@expr1073743702 "cppcheck-2.8/test/testconstructors.cpp" $, 2173 $, "[test.cpp:8]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2174:
2175:
2176: $check_ $(@expr1073743705 "cppcheck-2.8/test/testconstructors.cpp" $, 2176 $, "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n    Foo::Foo()\n    {\n    }\n}" $)
2177:
|
2187:
2188: ;
2189: $if $(@expr1073743706 $!@expr1073743707 $assertEquals $(@expr1073743708 "cppcheck-2.8/test/testconstructors.cpp" $, 2189 $, "[test.cpp:10]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2190:
2191:
2192: $check_ $(@expr1073743711 "cppcheck-2.8/test/testconstructors.cpp" $, 2192 $, "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nFoo::Foo()\n{\n}" $)
2193:
|
2203:
2204: ;
2205: $if $(@expr1073743712 $!@expr1073743713 $assertEquals $(@expr1073743714 "cppcheck-2.8/test/testconstructors.cpp" $, 2205 $, "" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2206:
2207:
2208: $check_ $(@expr1073743717 "cppcheck-2.8/test/testconstructors.cpp" $, 2208 $, "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nOutput::Foo::Foo()\n{\n}" $)
2209:
|
2219:
2220: ;
2221: $if $(@expr1073743718 $!@expr1073743719 $assertEquals $(@expr1073743720 "cppcheck-2.8/test/testconstructors.cpp" $, 2221 $, "[test.cpp:11]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2222:
2223:
2224: $check_ $(@expr1073743723 "cppcheck-2.8/test/testconstructors.cpp" $, 2224 $, "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nusing namespace Output;Foo::Foo()\n{\n}" $)
2225:
|
2236:
2237: ;
2238: $if $(@expr1073743724 $!@expr1073743725 $assertEquals $(@expr1073743726 "cppcheck-2.8/test/testconstructors.cpp" $, 2238 $, "[test.cpp:11]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2239:
2240:
2241: $check_ $(@expr1073743729 "cppcheck-2.8/test/testconstructors.cpp" $, 2241 $, "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Output\n{\n    Foo::Foo()\n    {\n    }\n}" $)
2242:
|
2255:
2256: ;
2257: $if $(@expr1073743730 $!@expr1073743731 $assertEquals $(@expr1073743732 "cppcheck-2.8/test/testconstructors.cpp" $, 2257 $, "[test.cpp:13]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2258:
2259:
2260: $check_ $(@expr1073743735 "cppcheck-2.8/test/testconstructors.cpp" $, 2260 $, "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Input\n{\n    Foo::Foo()\n    {\n    }\n}" $)
2261:
|
2274:
2275: ;
2276: $if $(@expr1073743736 $!@expr1073743737 $assertEquals $(@expr1073743738 "cppcheck-2.8/test/testconstructors.cpp" $, 2276 $, "" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2277:
2278:
2279: $check_ $(@expr1073743741 "cppcheck-2.8/test/testconstructors.cpp" $, 2279 $, "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Input\n{\n    Output::Foo::Foo()\n    {\n    }\n}" $)
2280:
|
2293:
2294: ;
2295: $if $(@expr1073743742 $!@expr1073743743 $assertEquals $(@expr1073743744 "cppcheck-2.8/test/testconstructors.cpp" $, 2295 $, "" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2296:
2297:
2298: $check_ $(@expr1073743747 "cppcheck-2.8/test/testconstructors.cpp" $, 2298 $, "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Output\n    {\n        Foo::Foo()\n        {\n        }\n    }\n}" $)
2299:
|
2315:
2316: ;
2317: $if $(@expr1073743748 $!@expr1073743749 $assertEquals $(@expr1073743750 "cppcheck-2.8/test/testconstructors.cpp" $, 2317 $, "[test.cpp:15]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2318:
2319:
2320: $check_ $(@expr1073743753 "cppcheck-2.8/test/testconstructors.cpp" $, 2320 $, "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Input\n    {\n        Foo::Foo()\n        {\n        }\n    }\n}" $)
2321:
|
2337:
2338: ;
2339: $if $(@expr1073743754 $!@expr1073743755 $assertEquals $(@expr1073743756 "cppcheck-2.8/test/testconstructors.cpp" $, 2339 $, "" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2340:
2341:
2342: $check_ $(@expr1073743759 "cppcheck-2.8/test/testconstructors.cpp" $, 2342 $, "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Input\n    {\n        Output::Foo::Foo()\n        {\n        }\n    }\n}" $)
2343:
|
2359:
2360: ;
2361: $if $(@expr1073743760 $!@expr1073743761 $assertEquals $(@expr1073743762 "cppcheck-2.8/test/testconstructors.cpp" $, 2361 $, "" $, errout@var100 .@expr1879 str (@expr1880 ) $) $) { $return ; }
2362: }
2363:
2364: void uninitVar15 ( ) {
2365: $check_ $(@expr1073743765 "cppcheck-2.8/test/testconstructors.cpp" $, 2365 $, "class Fred\n{\n    int a;\npublic:\n    Fred();\n    ~Fred();\n};\nFred::~Fred()\n{\n}" $)
2366:
|
2373:
2374: ;
2375: $if $(@expr1073743766 $!@expr1073743767 $assertEquals $(@expr1073743768 "cppcheck-2.8/test/testconstructors.cpp" $, 2375 $, "" $, errout@var100 .@expr1073743769 str (@expr1073743770 ) $) $) { $return ; }
2376: }
2377:
2378: void uninitVar16 ( ) {
2379: $check_ $(@expr1073743771 "cppcheck-2.8/test/testconstructors.cpp" $, 2379 $, "struct Foo\n{\n    int a;\n    void set(int x) { a = x; }\n};\nclass Bar\n{\n    Foo foo;\npublic:\n    Bar()\n    {\n        foo.set(0);\n    }\n};" $)
2380:
|
2391:
2392: ;
2393: $if $(@expr1073743772 $!@expr1073743773 $assertEquals $(@expr1073743774 "cppcheck-2.8/test/testconstructors.cpp" $, 2393 $, "" $, errout@var100 .@expr1951 str (@expr1952 ) $) $) { $return ; }
2394:
2395: $check_ $(@expr1073743777 "cppcheck-2.8/test/testconstructors.cpp" $, 2395 $, "struct Foo\n{\n    int a;\n    void set(int x) { a = x; }\n};\nclass Bar\n{\n    Foo foo;\npublic:\n    Bar()\n    {\n    }\n};" $)
2396:
|
2406:
2407: ;
2408: $if $(@expr1073743778 $!@expr1073743779 $assertEquals $(@expr1073743780 "cppcheck-2.8/test/testconstructors.cpp" $, 2408 $, "[test.cpp:10]: (warning) Member variable 'Bar::foo' is not initialized in the constructor.\n" $, errout@var100 .@expr1951 str (@expr1952 ) $) $) { $return ; }
2409: }
2410:
2411: void uninitVar17 ( ) {
2412: $check_ $(@expr1073743783 "cppcheck-2.8/test/testconstructors.cpp" $, 2412 $, "struct Foo\n{\n    int a;\n};\nclass Bar\n{\n    Foo foo[10];\npublic:\n    Bar()\n    {\n        foo[0].a = 0;\n    }\n};" $)
2413:
|
2423:
2424: ;
2425: $if $(@expr1073743784 $!@expr1073743785 $assertEquals $(@expr1073743786 "cppcheck-2.8/test/testconstructors.cpp" $, 2425 $, "" $, errout@var100 .@expr1963 str (@expr1964 ) $) $) { $return ; }
2426:
2427: $check_ $(@expr1073743789 "cppcheck-2.8/test/testconstructors.cpp" $, 2427 $, "struct Foo\n{\n    int a;\n};\nclass Bar\n{\n    Foo foo[10];\npublic:\n    Bar()\n    {\n    }\n};" $)
2428:
|
2437:
2438: ;
2439: $if $(@expr1073743790 $!@expr1073743791 $assertEquals $(@expr1073743792 "cppcheck-2.8/test/testconstructors.cpp" $, 2439 $, "[test.cpp:9]: (warning) Member variable 'Bar::foo' is not initialized in the constructor.\n" $, errout@var100 .@expr1963 str (@expr1964 ) $) $) { $return ; }
2440: }
2441:
2442: void uninitVar18 ( ) {
2443: $check_ $(@expr1073743795 "cppcheck-2.8/test/testconstructors.cpp" $, 2443 $, "struct Altren\n{\n    explicit Altren(int _a = 0) : value(0) { }\n    int value;\n};\nclass A\n{\npublic:\n    A() { }\nprivate:\n    Altren value;\n};" $)
2444:
|
2453:
2454: ;
2455: $if $(@expr1073743796 $!@expr1073743797 $assertEquals $(@expr1073743798 "cppcheck-2.8/test/testconstructors.cpp" $, 2455 $, "" $, errout@var100 .@expr1073743799 str (@expr1073743800 ) $) $) { $return ; }
2456: }
2457:
2458: void uninitVar19 ( ) {
2459: $check_ $(@expr1073743801 "cppcheck-2.8/test/testconstructors.cpp" $, 2459 $, "class mystring\n{\n    char* m_str;\n    int m_len;\npublic:\n    explicit mystring(const char* str)\n    {\n        m_len = strlen(str);\n        m_str = (char*) malloc(m_len+1);\n        memcpy(m_str, str, m_len+1);\n    }\n    mystring& operator=(const mystring& copy)\n    {\n        return (*this = copy.m_str);\n    }\n    ~mystring()\n    {\n        free(m_str);\n    }\n};" $)
2460:
|
2477:
2478: ;
2479: $if $(@expr1073743802 $!@expr1073743803 $assertEquals $(@expr1073743804 "cppcheck-2.8/test/testconstructors.cpp" $, 2479 $, "" $, errout@var100 .@expr1073743805 str (@expr1073743806 ) $) $) { $return ; }
2480: }
2481:
2482: void uninitVar20 ( ) {
2483: $check_ $(@expr1073743807 "cppcheck-2.8/test/testconstructors.cpp" $, 2483 $, "Object::MemFunc() {\n    class LocalClass {\n    public:\n        LocalClass() : dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};" $)
2484:
|
2489:
2490: ;
2491: $if $(@expr1073743808 $!@expr1073743809 $assertEquals $(@expr1073743810 "cppcheck-2.8/test/testconstructors.cpp" $, 2491 $, "[test.cpp:4]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n" $, errout@var100 .@expr1987 str (@expr1988 ) $) $) { $return ; }
2492:
2493: $check_ $(@expr1073743813 "cppcheck-2.8/test/testconstructors.cpp" $, 2493 $, "struct copy_protected;\nObject::MemFunc() {\n    class LocalClass : public copy_protected {\n    public:\n        LocalClass() : copy_protected(1), dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};" $)
2494:
|
2500:
2501: ;
2502: $if $(@expr1073743814 $!@expr1073743815 $assertEquals $(@expr1073743816 "cppcheck-2.8/test/testconstructors.cpp" $, 2502 $, "[test.cpp:5]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n" $, errout@var100 .@expr1987 str (@expr1988 ) $) $) { $return
2503:
2504: ; }
2505:
2506: $check_ $(@expr1073743819 "cppcheck-2.8/test/testconstructors.cpp" $, 2506 $, "struct copy_protected;\nObject::MemFunc() {\n    class LocalClass : ::copy_protected {\n    public:\n        LocalClass() : copy_protected(1), dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};" $)
2507:
|
2513:
2514: ;
2515: $if $(@expr1073743820 $!@expr1073743821 $assertEquals $(@expr1073743822 "cppcheck-2.8/test/testconstructors.cpp" $, 2515 $, "[test.cpp:5]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n" $, errout@var100 .@expr1987 str (@expr1988 ) $) $) { $return
2516:
2517: ; }
2518: }
2519:
2520: void uninitVar21 ( ) {
2521: $check_ $(@expr1073743825 "cppcheck-2.8/test/testconstructors.cpp" $, 2521 $, "class Fred {\nprivate:\n    int a[23];\npublic:\n    Fred();\n};\nFred::Fred() {\n    a[x::y] = 0;\n}" $)
2522:
|
2528:
2529: ;
2530: $if $(@expr1073743826 $!@expr1073743827 $assertEquals $(@expr1073743828 "cppcheck-2.8/test/testconstructors.cpp" $, 2530 $, "" $, errout@var100 .@expr1073743829 str (@expr1073743830 ) $) $) { $return ; }
2531: }
2532:
2533: void uninitVar22 ( ) {
2534: $check_ $(@expr1073743831 "cppcheck-2.8/test/testconstructors.cpp" $, 2534 $, "class Fred {\n  public:\n    Fred & operator=(const Fred &);\n    virtual Fred & clone(const Fred & other);\n    int x;\n};\nFred & Fred::operator=(const Fred & other) {\n    return clone(other);\n}\nFred & Fred::clone(const Fred & other) {\n    x = 0;\n    return *this;\n}" $)
2535:
|
2545:
2546: ;
2547: $if $(@expr1073743832 $!@expr1073743833 $assertEquals $(@expr1073743834 "cppcheck-2.8/test/testconstructors.cpp" $, 2547 $, "" $, errout@var100 .@expr2011 str (@expr2012 ) $) $) { $return ; }
2548:
2549: $check_ $(@expr1073743837 "cppcheck-2.8/test/testconstructors.cpp" $, 2549 $, "class Fred {\n  public:\n    Fred & operator=(const Fred &);\n    virtual Fred & clone(const Fred & other);\n    int x;\n};\nFred & Fred::operator=(const Fred & other) {\n    return clone(other);\n}\nFred & Fred::clone(const Fred & other) {\n    return *this;\n}" $)
2550:
|
2559:
2560: ;
2561: $if $(@expr1073743838 $!@expr1073743839 $assertEquals $(@expr1073743840 "cppcheck-2.8/test/testconstructors.cpp" $, 2561 $, "[test.cpp:7]: (warning) Member variable 'Fred::x' is not assigned a value in 'Fred::operator='.\n" $, errout@var100 .@expr2011 str (@expr2012 ) $) $) { $return ; }
2562: }
2563:
2564: void uninitVar23 ( ) {
2565: $check_ $(@expr1073743843 "cppcheck-2.8/test/testconstructors.cpp" $, 2565 $, "class Fred {\n    int x;\npublic:\n    Fred(struct A a, struct B b);\n    Fred(C c, struct D d);\n    Fred(struct E e, F f);\n    Fred(struct G, struct H);\n    Fred(I, J);\n};\nFred::Fred(A a, B b) { }\nFred::Fred(struct C c, D d) { }\nFred::Fred(E e, struct F f) { }\nFred::Fred(G g, H h) { }\nFred::Fred(struct I i, struct J j) { }" $)
2566:
|
2577:
2578: ;
2579: $if $(@expr1073743844 $!@expr1073743845 $assertEquals $(@expr1073743846 "cppcheck-2.8/test/testconstructors.cpp" $, 2579 $, "[test.cpp:10]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:11]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:12]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:13]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743847 str (@expr1073743848 ) $) $) { $return
2580:
2581:
2582:
2583: ; }
2584: }
2585:
2586: void uninitVar24 ( ) {
2587: $check_ $(@expr1073743849 "cppcheck-2.8/test/testconstructors.cpp" $, 2587 $, "class Foo;\nclass Bar;\nclass Sub;\nclass Foo { class Sub; };\nclass Bar { class Sub; };\nclass Bar::Sub {\n    int b;\npublic:\n    Sub() { }\n    Sub(int);\n};\nBar::Sub::Sub(int) { };\nclass ::Foo::Sub {\n    int f;\npublic:\n    ~Sub();\n    Sub();\n};\n::Foo::Sub::~Sub() { }\n::Foo::Sub::Sub() { }\nclass Foo;\nclass Bar;\nclass Sub;\n" , true $)
2588:
|
2608:
2609: ;
2610:
2611: $if $(@expr1073743850 $!@expr1073743851 $assertEquals $(@expr1073743852 "cppcheck-2.8/test/testconstructors.cpp" $, 2611 $, "[test.cpp:9]: (warning, inconclusive) Member variable 'Sub::b' is not initialized in the constructor.\n[test.cpp:12]: (warning) Member variable 'Sub::b' is not initialized in the constructor.\n[test.cpp:20]: (warning) Member variable 'Sub::f' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743853 str (@expr1073743854 ) $) $) { $return
2612:
2613: ; }
2614: }
2615:
2616: void uninitVar25 ( ) {
2617: $check_ $(@expr1073743855 "cppcheck-2.8/test/testconstructors.cpp" $, 2617 $, "struct A {\n    int a;\n    int b;\n    int c;\n    A(int x = 0, int y = 0, int z = 0);\n};\nA::A(int x = 0, int y = 0, int z = 0) { }\nstruct B {\n    int a;\n    int b;\n    int c;\n    B(int x = 0, int y = 0, int z = 0);\n};\nB::B(int x, int y, int z) { }\nstruct C {\n    int a;\n    int b;\n    int c;\n    C(int, int, int);\n};\nC::C(int x = 0, int y = 0, int z = 0) { }\nstruct D {\n    int a;\n    int b;\n    int c;\n    D(int, int, int);\n};\nD::D(int x, int y, int z) { }\nstruct E {\n    int a;\n    int b;\n    int c;\n    E(int x, int y, int z);\n};\nE::E(int, int, int) { }\nstruct F {\n    int a;\n    int b;\n    int c;\n    F(int x = 0, int y = 0, int z = 0);\n};\nF::F(int, int, int) { }\n" , true $)
2618:
|
2657:
2658: ;
2659: $if $(@expr1073743856 $!@expr1073743857 $assertEquals $(@expr1073743858 "cppcheck-2.8/test/testconstructors.cpp" $, 2659 $, "[test.cpp:7]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:7]: (warning) Member variable 'A::b' is not initialized in the constructor.\n[test.cpp:7]: (warning) Member variable 'A::c' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::c' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::b' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::a' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::b' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::c' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::a' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::b' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::c' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::a' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::b' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::c' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743859 str (@expr1073743860 ) $) $) { $return
2660:
|
2675:
2676: ; }
2677: }
2678:
2679: void uninitVar26 ( ) {
2680: $check_ $(@expr1073743861 "cppcheck-2.8/test/testconstructors.cpp" $, 2680 $, "class A {\n    int * v;\n    int sz;\npublic:\n    A(int s) {\n        v = new int [sz = s];\n    }\n};" $)
2681:
|
2686:
2687: ;
2688: $if $(@expr1073743862 $!@expr1073743863 $assertEquals $(@expr1073743864 "cppcheck-2.8/test/testconstructors.cpp" $, 2688 $, "" $, errout@var100 .@expr1073743865 str (@expr1073743866 ) $) $) { $return ; }
2689: }
2690:
2691: void uninitVar27 ( ) {
2692: $check_ $(@expr1073743867 "cppcheck-2.8/test/testconstructors.cpp" $, 2692 $, "class A {\n    double d;\npublic:\n    A() {\n        rtl::math::setNan(&d);\n    }\n};" $)
2693:
|
2697:
2698: ;
2699: $if $(@expr1073743868 $!@expr1073743869 $assertEquals $(@expr1073743870 "cppcheck-2.8/test/testconstructors.cpp" $, 2699 $, "" $, errout@var100 .@expr2047 str (@expr2048 ) $) $) { $return ; }
2700: $check_ $(@expr1073743873 "cppcheck-2.8/test/testconstructors.cpp" $, 2700 $, "class A {\n    double d;\npublic:\n    A() {\n        ::rtl::math::setNan(&d);\n    }\n};" $)
2701:
|
2705:
2706: ;
2707: $if $(@expr1073743874 $!@expr1073743875 $assertEquals $(@expr1073743876 "cppcheck-2.8/test/testconstructors.cpp" $, 2707 $, "" $, errout@var100 .@expr2047 str (@expr2048 ) $) $) { $return ; }
2708: }
2709:
2710: void uninitVar28 ( ) {
2711: $check_ $(@expr1073743879 "cppcheck-2.8/test/testconstructors.cpp" $, 2711 $, "class Fred {\n    int i;\n    float f;\npublic:\n    Fred() {\n        foo(1);\n        foo(1.0f);\n    }\n    void foo(int a) { i = a; }\n    void foo(float a) { f = a; }\n};" $)
2712:
|
2720:
2721: ;
2722: $if $(@expr1073743880 $!@expr1073743881 $assertEquals $(@expr1073743882 "cppcheck-2.8/test/testconstructors.cpp" $, 2722 $, "" $, errout@var100 .@expr1073743883 str (@expr1073743884 ) $) $) { $return ; }
2723: }
2724:
2725: void uninitVar29 ( ) {
2726: $check_ $(@expr1073743885 "cppcheck-2.8/test/testconstructors.cpp" $, 2726 $, "class A {\n    int i;\npublic:\n    A() { foo(); }\n    void foo() const { };\n    void foo() { i = 0; }\n};\nclass B {\n    int i;\npublic:\n    B() { foo(); }\n    void foo() { i = 0; }\n    void foo() const { }\n};\nclass C {\n    int i;\npublic:\n    C() { foo(); }\n    void foo() const { i = 0; }\n    void foo() { }\n};\nclass D {\n    int i;\npublic:\n    D() { foo(); }\n	void foo() { }\n	void foo() const { i = 0; }\n};" $)
2727:
|
2752:
2753: ;
2754: $if $(@expr1073743886 $!@expr1073743887 $assertEquals $(@expr1073743888 "cppcheck-2.8/test/testconstructors.cpp" $, 2754 $, "[test.cpp:18]: (warning) Member variable 'C::i' is not initialized in the constructor.\n[test.cpp:25]: (warning) Member variable 'D::i' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743889 str (@expr1073743890 ) $) $) { $return
2755: ; }
2756: }
2757:
2758: void uninitVar30 ( ) {
2759: $check_ $(@expr1073743891 "cppcheck-2.8/test/testconstructors.cpp" $, 2759 $, "namespace NS {\n    class MyClass {\n    public:\n        MyClass();\n        ~MyClass();\n    private:\n        bool SomeVar;\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() { }\nMyClass::MyClass() : SomeVar(false) { }" $)
2760:
|
2769:
2770: ;
2771: $if $(@expr1073743892 $!@expr1073743893 $assertEquals $(@expr1073743894 "cppcheck-2.8/test/testconstructors.cpp" $, 2771 $, "" $, errout@var100 .@expr1073743895 str (@expr1073743896 ) $) $) { $return ; }
2772: }
2773:
2774: void uninitVar31 ( ) {
2775: $check_ $(@expr1073743897 "cppcheck-2.8/test/testconstructors.cpp" $, 2775 $, "void bar();\nclass MyClass {\npublic:\n    MyClass();\n    void Restart();\nprotected:\n    int m_retCode;\n};\nMyClass::MyClass() {\n    bar(),Restart();\n}\nvoid MyClass::Restart() {\n    m_retCode = 0;\n}" $)
2776:
|
2787:
2788: ;
2789: $if $(@expr1073743898 $!@expr1073743899 $assertEquals $(@expr1073743900 "cppcheck-2.8/test/testconstructors.cpp" $, 2789 $, "" $, errout@var100 .@expr1073743901 str (@expr1073743902 ) $) $) { $return ; }
2790: }
2791:
2792: void uninitVar32 ( ) {
2793: $check_ $(@expr1073743903 "cppcheck-2.8/test/testconstructors.cpp" $, 2793 $, "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      if (1) {}\n   }\n};" $)
2794:
|
2800:
2801: ;
2802: $if $(@expr1073743904 $!@expr1073743905 $assertEquals $(@expr1073743906 "cppcheck-2.8/test/testconstructors.cpp" $, 2802 $, "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n" $, errout@var100 .@expr2083 str (@expr2084 ) $) $) { $return ; }
2803: $check_ $(@expr1073743909 "cppcheck-2.8/test/testconstructors.cpp" $, 2803 $, "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      while (1) {}\n   }\n};" $)
2804:
|
2810:
2811: ;
2812: $if $(@expr1073743910 $!@expr1073743911 $assertEquals $(@expr1073743912 "cppcheck-2.8/test/testconstructors.cpp" $, 2812 $, "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n" $, errout@var100 .@expr2083 str (@expr2084 ) $) $) { $return ; }
2813: $check_ $(@expr1073743915 "cppcheck-2.8/test/testconstructors.cpp" $, 2813 $, "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      for (;;) {}\n   }\n};" $)
2814:
|
2820:
2821: ;
2822: $if $(@expr1073743916 $!@expr1073743917 $assertEquals $(@expr1073743918 "cppcheck-2.8/test/testconstructors.cpp" $, 2822 $, "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n" $, errout@var100 .@expr2083 str (@expr2084 ) $) $) { $return ; }
2823: }
2824:
2825: void uninitVar33 ( ) {
2826: $check_ $(@expr1073743921 "cppcheck-2.8/test/testconstructors.cpp" $, 2826 $, "namespace app {\n    class B {\n    public:\n        B(void);\n        int x;\n    };\n};\napp::B::B(void){}" $)
2827:
|
2832:
2833: ;
2834: $if $(@expr1073743922 $!@expr1073743923 $assertEquals $(@expr1073743924 "cppcheck-2.8/test/testconstructors.cpp" $, 2834 $, "[test.cpp:8]: (warning) Member variable 'B::x' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743925 str (@expr1073743926 ) $) $) { $return ; }
2835: }
2836:
2837: void uninitVar34 ( ) {
2838: $check_ $(@expr1073743927 "cppcheck-2.8/test/testconstructors.cpp" $, 2838 $, "struct A { void f() {} };\nstruct B {\n    B() { a->f(); }\n    A* a;\n};\n" $)
2839:
2840:
2841:
2842: ;
2843: $if $(@expr1073743928 $!@expr1073743929 $assertEquals $(@expr1073743930 "cppcheck-2.8/test/testconstructors.cpp" $, 2843 $, "[test.cpp:3]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" $, errout@var100 .@expr1073743931 str (@expr1073743932 ) $) $) { $return ; }
2844: }
2845:
2846: void uninitVarArray1 ( ) {
2847: $check_ $(@expr1073743933 "cppcheck-2.8/test/testconstructors.cpp" $, 2847 $, "class John\n{\npublic:\n    John() {}\n\nprivate:\n    char name[255];\n};" $)
2848:
|
2853:
2854: ;
2855: $if $(@expr1073743934 $!@expr1073743935 $assertEquals $(@expr1073743936 "cppcheck-2.8/test/testconstructors.cpp" $, 2855 $, "[test.cpp:4]: (warning) Member variable 'John::name' is not initialized in the constructor.\n" $, errout@var100 .@expr2113 str (@expr2114 ) $) $) { $return ; }
2856:
2857: $check_ $(@expr1073743939 "cppcheck-2.8/test/testconstructors.cpp" $, 2857 $, "class John\n{\npublic:\n    John() {John::name[0] = '\\0';}\n\nprivate:\n    char name[255];\n};" $)
2858:
|
2863:
2864: ;
2865: $if $(@expr1073743940 $!@expr1073743941 $assertEquals $(@expr1073743942 "cppcheck-2.8/test/testconstructors.cpp" $, 2865 $, "" $, errout@var100 .@expr2113 str (@expr2114 ) $) $) { $return ; }
2866:
2867: $check_ $(@expr1073743945 "cppcheck-2.8/test/testconstructors.cpp" $, 2867 $, "class John\n{\npublic:\n    John() { strcpy(name, \"\"); }\n\nprivate:\n    char name[255];\n};" $)
2868:
|
2873:
2874: ;
2875: $if $(@expr1073743946 $!@expr1073743947 $assertEquals $(@expr1073743948 "cppcheck-2.8/test/testconstructors.cpp" $, 2875 $, "" $, errout@var100 .@expr2113 str (@expr2114 ) $) $) { $return ; }
2876:
2877: $check_ $(@expr1073743951 "cppcheck-2.8/test/testconstructors.cpp" $, 2877 $, "class John\n{\npublic:\n    John() { }\n\n    double  operator[](const unsigned long i);\n};" $)
2878:
|
2882:
2883: ;
2884: $if $(@expr1073743952 $!@expr1073743953 $assertEquals $(@expr1073743954 "cppcheck-2.8/test/testconstructors.cpp" $, 2884 $, "" $, errout@var100 .@expr2113 str (@expr2114 ) $) $) { $return ; }
2885:
2886: $check_ $(@expr1073743957 "cppcheck-2.8/test/testconstructors.cpp" $, 2886 $, "class A;\nclass John\n{\npublic:\n    John() { }\n    A a[5];\n};" $)
2887:
|
2891:
2892: ;
2893: $if $(@expr1073743958 $!@expr1073743959 $assertEquals $(@expr1073743960 "cppcheck-2.8/test/testconstructors.cpp" $, 2893 $, "" $, errout@var100 .@expr2113 str (@expr2114 ) $) $) { $return ; }
2894:
2895: $check_ $(@expr1073743963 "cppcheck-2.8/test/testconstructors.cpp" $, 2895 $, "class A;\nclass John\n{\npublic:\n    John() { }\n    A (*a)[5];\n};" $)
2896:
|
2900:
2901: ;
2902: $if $(@expr1073743964 $!@expr1073743965 $assertEquals $(@expr1073743966 "cppcheck-2.8/test/testconstructors.cpp" $, 2902 $, "[test.cpp:5]: (warning) Member variable 'John::a' is not initialized in the constructor.\n" $, errout@var100 .@expr2113 str (@expr2114 ) $) $) { $return ; }
2903: }
2904:
2905: void uninitVarArray2 ( ) {
2906: $check_ $(@expr1073743969 "cppcheck-2.8/test/testconstructors.cpp" $, 2906 $, "class John\n{\npublic:\n    John() { *name = 0; }\n\nprivate:\n    char name[255];\n};" $)
2907:
|
2912:
2913: ;
2914: $if $(@expr1073743970 $!@expr1073743971 $assertEquals $(@expr1073743972 "cppcheck-2.8/test/testconstructors.cpp" $, 2914 $, "" $, errout@var100 .@expr2149 str (@expr2150 ) $) $) { $return ; }
2915:
2916:
2917: $check_ $(@expr1073743975 "cppcheck-2.8/test/testconstructors.cpp" $, 2917 $, "class John\n{\npublic:\n    John() {*this->name = '\\0';}\n\nprivate:\n    char name[255];\n};" $)
2918:
|
2923:
2924: ;
2925: $if $(@expr1073743976 $!@expr1073743977 $assertEquals $(@expr1073743978 "cppcheck-2.8/test/testconstructors.cpp" $, 2925 $, "" $, errout@var100 .@expr2149 str (@expr2150 ) $) $) { $return ; }
2926: }
2927:
2928: void uninitVarArray3 ( ) {
2929: $check_ $(@expr1073743981 "cppcheck-2.8/test/testconstructors.cpp" $, 2929 $, "class John\n{\nprivate:\n    int a[100];\n    int b[100];\n\npublic:\n    John()\n    {\n        memset(a,0,sizeof(a));\n        memset(b,0,sizeof(b));\n    }\n};" $)
2930:
|
2940:
2941: ;
2942: $if $(@expr1073743982 $!@expr1073743983 $assertEquals $(@expr1073743984 "cppcheck-2.8/test/testconstructors.cpp" $, 2942 $, "" $, errout@var100 .@expr1073743985 str (@expr1073743986 ) $) $) { $return ; }
2943: }
2944:
2945: void uninitVarArray4 ( ) {
2946: $check_ $(@expr1073743987 "cppcheck-2.8/test/testconstructors.cpp" $, 2946 $, "class John\n{\nprivate:\n    int a[100];\n    int b[100];\n\npublic:\n    John()\n    {\n        if (snprintf(a,10,\"a\")) { }\n        if (snprintf(b,10,\"b\")) { }\n    }\n};" $)
2947:
|
2957:
2958: ;
2959: $if $(@expr1073743988 $!@expr1073743989 $assertEquals $(@expr1073743990 "cppcheck-2.8/test/testconstructors.cpp" $, 2959 $, "" $, errout@var100 .@expr1073743991 str (@expr1073743992 ) $) $) { $return ; }
2960: }
2961:
2962: void uninitVarArray5 ( ) {
2963: $check_ $(@expr1073743993 "cppcheck-2.8/test/testconstructors.cpp" $, 2963 $, "class Foo\n{\nprivate:\n    Bar bars[10];\npublic:\n    Foo()\n    { }\n};" $)
2964:
|
2969:
2970: ;
2971: $if $(@expr1073743994 $!@expr1073743995 $assertEquals $(@expr1073743996 "cppcheck-2.8/test/testconstructors.cpp" $, 2971 $, "" $, errout@var100 .@expr1073743997 str (@expr1073743998 ) $) $) { $return ; }
2972: }
2973:
2974: void uninitVarArray6 ( ) {
2975: $check_ $(@expr1073743999 "cppcheck-2.8/test/testconstructors.cpp" $, 2975 $, "class Foo\n{\npublic:\n    Foo();\n    static const char STR[];\n};\nconst char Foo::STR[] = \"abc\";\nFoo::Foo() { }" $)
2976:
|
2981:
2982: ;
2983: $if $(@expr1073744000 $!@expr1073744001 $assertEquals $(@expr1073744002 "cppcheck-2.8/test/testconstructors.cpp" $, 2983 $, "" $, errout@var100 .@expr1073744003 str (@expr1073744004 ) $) $) { $return ; }
2984: }
2985:
2986: void uninitVarArray7 ( ) {
2987: $check_ $(@expr1073744005 "cppcheck-2.8/test/testconstructors.cpp" $, 2987 $, "class Foo\n{\n    int array[10];\npublic:\n    Foo() { }\n};" $)
2988:
|
2991:
2992: ;
2993: $if $(@expr1073744006 $!@expr1073744007 $assertEquals $(@expr1073744008 "cppcheck-2.8/test/testconstructors.cpp" $, 2993 $, "[test.cpp:5]: (warning) Member variable 'Foo::array' is not initialized in the constructor.\n" $, errout@var100 .@expr2185 str (@expr2186 ) $) $) { $return ; }
2994:
2995: $check_ $(@expr1073744011 "cppcheck-2.8/test/testconstructors.cpp" $, 2995 $, "class Foo\n{\n    int array[10];\npublic:\n    Foo() { memset(array, 0, sizeof(array)); }\n};" $)
2996:
|
2999:
3000: ;
3001: $if $(@expr1073744012 $!@expr1073744013 $assertEquals $(@expr1073744014 "cppcheck-2.8/test/testconstructors.cpp" $, 3001 $, "" $, errout@var100 .@expr2185 str (@expr2186 ) $) $) { $return ; }
3002:
3003: $check_ $(@expr1073744017 "cppcheck-2.8/test/testconstructors.cpp" $, 3003 $, "class Foo\n{\n    int array[10];\npublic:\n    Foo() { ::memset(array, 0, sizeof(array)); }\n};" $)
3004:
|
3007:
3008: ;
3009: $if $(@expr1073744018 $!@expr1073744019 $assertEquals $(@expr1073744020 "cppcheck-2.8/test/testconstructors.cpp" $, 3009 $, "" $, errout@var100 .@expr2185 str (@expr2186 ) $) $) { $return ; }
3010: }
3011:
3012: void uninitVarArray8 ( ) {
3013: $check_ $(@expr1073744023 "cppcheck-2.8/test/testconstructors.cpp" $, 3013 $, "class Foo {\n    char a[10];\npublic:\n    Foo() { ::ZeroMemory(a); }\n}" $)
3014:
3015:
3016:
3017: ;
3018: $if $(@expr1073744024 $!@expr1073744025 $assertEquals $(@expr1073744026 "cppcheck-2.8/test/testconstructors.cpp" $, 3018 $, "" $, errout@var100 .@expr1073744027 str (@expr1073744028 ) $) $) { $return ; }
3019: }
3020:
3021: void uninitVarArray9 ( ) {
3022: $check_ $(@expr1073744029 "cppcheck-2.8/test/testconstructors.cpp" $, 3022 $, "class BaseGDL;\nstruct IxExprListT {\nprivate:\n    BaseGDL* eArr[3];\npublic:\n    IxExprListT() {}\n};" $)
3023:
|
3027:
3028: ;
3029: $if $(@expr1073744030 $!@expr1073744031 $assertEquals $(@expr1073744032 "cppcheck-2.8/test/testconstructors.cpp" $, 3029 $, "[test.cpp:6]: (warning) Member variable 'IxExprListT::eArr' is not initialized in the constructor.\n" $, errout@var100 .@expr2209 str (@expr2210 ) $) $) { $return ; }
3030: $check_ $(@expr1073744035 "cppcheck-2.8/test/testconstructors.cpp" $, 3030 $, "struct sRAIUnitDefBL {\n  sRAIUnitDefBL();\n  ~sRAIUnitDefBL();\n};\nstruct sRAIUnitDef {\n  sRAIUnitDef() {}\n  sRAIUnitDefBL *List[35];\n};" $)
3031:
|
3036:
3037: ;
3038: $if $(@expr1073744036 $!@expr1073744037 $assertEquals $(@expr1073744038 "cppcheck-2.8/test/testconstructors.cpp" $, 3038 $, "[test.cpp:6]: (warning) Member variable 'sRAIUnitDef::List' is not initialized in the constructor.\n" $, errout@var100 .@expr2209 str (@expr2210 ) $) $) { $return ; }
3039: }
3040:
3041: void uninitVarArray2D ( ) {
3042: $check_ $(@expr1073744041 "cppcheck-2.8/test/testconstructors.cpp" $, 3042 $, "class John\n{\npublic:\n    John() { a[0][0] = 0; }\n\nprivate:\n    char a[2][2];\n};" $)
3043:
|
3048:
3049: ;
3050: $if $(@expr1073744042 $!@expr1073744043 $assertEquals $(@expr1073744044 "cppcheck-2.8/test/testconstructors.cpp" $, 3050 $, "" $, errout@var100 .@expr1073744045 str (@expr1073744046 ) $) $) { $return ; }
3051: }
3052:
3053: void uninitVarArray3D ( ) {
3054: $check_ $(@expr1073744047 "cppcheck-2.8/test/testconstructors.cpp" $, 3054 $, "class John\n{\nprivate:\n    char a[2][2][2];\npublic:\n    John() { a[0][0][0] = 0; }\n};" $)
3055:
|
3059:
3060: ;
3061: $if $(@expr1073744048 $!@expr1073744049 $assertEquals $(@expr1073744050 "cppcheck-2.8/test/testconstructors.cpp" $, 3061 $, "" $, errout@var100 .@expr1073744051 str (@expr1073744052 ) $) $) { $return ; }
3062: }
3063:
3064: void uninitVarCpp11Init1 ( ) {
3065: $check_ $(@expr1073744053 "cppcheck-2.8/test/testconstructors.cpp" $, 3065 $, "class Foo {\n    std::vector<std::string> bar;\npublic:\n    Foo()\n        : bar({\"a\", \"b\"})\n    {}\n};" $)
3066:
|
3070:
3071: ;
3072: $if $(@expr1073744054 $!@expr1073744055 $assertEquals $(@expr1073744056 "cppcheck-2.8/test/testconstructors.cpp" $, 3072 $, "" $, errout@var100 .@expr1073744057 str (@expr1073744058 ) $) $) { $return ; }
3073: }
3074:
3075: void uninitVarCpp11Init2 ( ) {
3076: $check_ $(@expr1073744059 "cppcheck-2.8/test/testconstructors.cpp" $, 3076 $, "class Fred {\n    struct Foo {\n        int a;\n        bool b;\n    };\n    Foo f;\n    float g;\npublic:\n    Fred() : f{0, true} { }\n    float get() const;\n};\nfloat Fred::get() const { return g; }" $)
3077:
|
3086:
3087: ;
3088: $if $(@expr1073744060 $!@expr1073744061 $assertEquals $(@expr1073744062 "cppcheck-2.8/test/testconstructors.cpp" $, 3088 $, "[test.cpp:9]: (warning) Member variable 'Fred::g' is not initialized in the constructor.\n" $, errout@var100 .@expr1073744063 str (@expr1073744064 ) $) $) { $return ; }
3089: }
3090:
3091: void uninitVarStruct1 ( ) {
3092: $check_ $(@expr1073744065 "cppcheck-2.8/test/testconstructors.cpp" $, 3092 $, "class A\n{\nprivate:\n    struct B {\n        std::string str1;\n        std::string str2;\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};" $)
3093:
|
3102:
3103: ;
3104: $if $(@expr1073744066 $!@expr1073744067 $assertEquals $(@expr1073744068 "cppcheck-2.8/test/testconstructors.cpp" $, 3104 $, "" $, errout@var100 .@expr2245 str (@expr2246 ) $) $) { $return ; }
3105:
3106: $check_ $(@expr1073744071 "cppcheck-2.8/test/testconstructors.cpp" $, 3106 $, "class A\n{\nprivate:\n    struct B {\n        char *str1;\n        char *str2;\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};" $)
3107:
|
3116:
3117: ;
3118: $if $(@expr1073744072 $!@expr1073744073 $assertEquals $(@expr1073744074 "cppcheck-2.8/test/testconstructors.cpp" $, 3118 $, "[test.cpp:10]: (warning) Member variable 'A::b' is not initialized in the constructor.\n" $, errout@var100 .@expr2245 str (@expr2246 ) $) $) { $return ; }
3119:
3120: $check_ $(@expr1073744077 "cppcheck-2.8/test/testconstructors.cpp" $, 3120 $, "class A\n{\nprivate:\n    struct B {\n        char *str1;\n        char *str2;\n        B() : str1(NULL), str2(NULL) { }\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};" $)
3121:
|
3131:
3132: ;
3133: $if $(@expr1073744078 $!@expr1073744079 $assertEquals $(@expr1073744080 "cppcheck-2.8/test/testconstructors.cpp" $, 3133 $, "" $, errout@var100 .@expr2245 str (@expr2246 ) $) $) { $return ; }
3134: }
3135:
3136: void uninitVarStruct2 ( ) {
3137: $check_ $(@expr1073744083 "cppcheck-2.8/test/testconstructors.cpp" $, 3137 $, "struct POINT\n{\n    int x;\n    int y;\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};" $)
3138:
|
3148:
3149: ;
3150: $if $(@expr1073744084 $!@expr1073744085 $assertEquals $(@expr1073744086 "cppcheck-2.8/test/testconstructors.cpp" $, 3150 $, "[test.cpp:11]: (warning) Member variable 'Fred::p' is not initialized in the constructor.\n" $, errout@var100 .@expr2263 str (@expr2264 ) $) $) { $return ; }
3151:
3152: $check_ $(@expr1073744089 "cppcheck-2.8/test/testconstructors.cpp" $, 3152 $, "struct POINT\n{\n    int x;\n    int y;\n    POINT();\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};" $)
3153:
|
3164:
3165: ;
3166: $if $(@expr1073744090 $!@expr1073744091 $assertEquals $(@expr1073744092 "cppcheck-2.8/test/testconstructors.cpp" $, 3166 $, "" $, errout@var100 .@expr2263 str (@expr2264 ) $) $) { $return ; }
3167:
3168: $check_ $(@expr1073744095 "cppcheck-2.8/test/testconstructors.cpp" $, 3168 $, "struct POINT\n{\n    int x;\n    int y;\n    POINT() :x(0), y(0) { }\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};" $)
3169:
|
3180:
3181: ;
3182: $if $(@expr1073744096 $!@expr1073744097 $assertEquals $(@expr1073744098 "cppcheck-2.8/test/testconstructors.cpp" $, 3182 $, "" $, errout@var100 .@expr2263 str (@expr2264 ) $) $) { $return ; }
3183:
3184:
3185: $check_ $(@expr1073744101 "cppcheck-2.8/test/testconstructors.cpp" $, 3185 $, "struct POINT\n{\n    int x=0;\n    int y=0;\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};" $)
3186:
|
3196:
3197: ;
3198: $if $(@expr1073744102 $!@expr1073744103 $assertEquals $(@expr1073744104 "cppcheck-2.8/test/testconstructors.cpp" $, 3198 $, "" $, errout@var100 .@expr2263 str (@expr2264 ) $) $) { $return ; }
3199: }
3200:
3201: void uninitVarUnion1 ( ) {
3202: $check_ $(@expr1073744107 "cppcheck-2.8/test/testconstructors.cpp" $, 3202 $, "class Fred\n{\nprivate:\n    union { int a; int b; };\npublic:\n    Fred()\n    { a = 0; }\n};" $)
3203:
|
3208:
3209: ;
3210: $if $(@expr1073744108 $!@expr1073744109 $assertEquals $(@expr1073744110 "cppcheck-2.8/test/testconstructors.cpp" $, 3210 $, "" $, errout@var100 .@expr2287 str (@expr2288 ) $) $) { $return ; }
3211:
3212: $check_ $(@expr1073744113 "cppcheck-2.8/test/testconstructors.cpp" $, 3212 $, "class Fred {\nprivate:\n    union { int a{}; int b; };\n};" $)
3213:
3214:
3215: ;
3216: $if $(@expr1073744114 $!@expr1073744115 $assertEquals $(@expr1073744116 "cppcheck-2.8/test/testconstructors.cpp" $, 3216 $, "" $, errout@var100 .@expr2287 str (@expr2288 ) $) $) { $return ; }
3217: }
3218:
3219: void uninitVarUnion2 ( ) {
3220:
3221:
3222:
3223: $check_ $(@expr1073744119 "cppcheck-2.8/test/testconstructors.cpp" $, 3223 $, "union Data { int id; int *ptr; };\n\nclass Fred {\nprivate:\n    int data_type;\n    Data data;\npublic:\n    Fred() : data_type(0)\n    { }\n};" $)
3224:
|
3231:
3232: ;
3233: $if $(@expr1073744120 $!@expr1073744121 $assertEquals $(@expr1073744122 "cppcheck-2.8/test/testconstructors.cpp" $, 3233 $, "" $, errout@var100 .@expr1073744123 str (@expr1073744124 ) $) $) { $return ; }
3234: }
3235:
3236: void uninitMissingFuncDef ( ) {
3237:
3238: $check_ $(@expr1073744125 "cppcheck-2.8/test/testconstructors.cpp" $, 3238 $, "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    void Init();    int i;\n};" $)
3239:
|
3244:
3245: ;
3246: $if $(@expr1073744126 $!@expr1073744127 $assertEquals $(@expr1073744128 "cppcheck-2.8/test/testconstructors.cpp" $, 3246 $, "" $, errout@var100 .@expr2305 str (@expr2306 ) $) $) { $return ; }
3247:
3248:
3249: $check_ $(@expr1073744131 "cppcheck-2.8/test/testconstructors.cpp" $, 3249 $, "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    friend ABC;\n    int i;\n};" $)
3250:
|
3255:
3256: ;
3257: $if $(@expr1073744132 $!@expr1073744133 $assertEquals $(@expr1073744134 "cppcheck-2.8/test/testconstructors.cpp" $, 3257 $, "" $, errout@var100 .@expr2305 str (@expr2306 ) $) $) { $return ; }
3258:
3259:
3260: $check_ $(@expr1073744137 "cppcheck-2.8/test/testconstructors.cpp" $, 3260 $, "class Fred : private ABC\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};" $)
3261:
|
3265:
3266: ;
3267: $if $(@expr1073744138 $!@expr1073744139 $assertEquals $(@expr1073744140 "cppcheck-2.8/test/testconstructors.cpp" $, 3267 $, "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" $, errout@var100 .@expr2305 str (@expr2306 ) $) $) { $return ; }
3268:
3269:
3270: $check_ $(@expr1073744143 "cppcheck-2.8/test/testconstructors.cpp" $, 3270 $, "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};" $)
3271:
|
3275:
3276: ;
3277: $if $(@expr1073744144 $!@expr1073744145 $assertEquals $(@expr1073744146 "cppcheck-2.8/test/testconstructors.cpp" $, 3277 $, "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" $, errout@var100 .@expr2305 str (@expr2306 ) $) $) { $return ; }
3278:
3279:
3280: $check_ $(@expr1073744149 "cppcheck-2.8/test/testconstructors.cpp" $, 3280 $, "class ABC { };\nclass Fred : private ABC\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};" $)
3281:
|
3286:
3287: ;
3288: $if $(@expr1073744150 $!@expr1073744151 $assertEquals $(@expr1073744152 "cppcheck-2.8/test/testconstructors.cpp" $, 3288 $, "[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" $, errout@var100 .@expr2305 str (@expr2306 ) $) $) { $return ; }
3289:
3290: }
3291:
3292: void uninitVarEnum1 ( ) {
3293: $check_ $(@expr1073744155 "cppcheck-2.8/test/testconstructors.cpp" $, 3293 $, "class Fred\n{\npublic:\n    enum abc {a,b,c};\n    Fred() {}\nprivate:\n    unsigned int i;\n};" $)
3294:
|
3299:
3300: ;
3301:
3302: $if $(@expr1073744156 $!@expr1073744157 $assertEquals $(@expr1073744158 "cppcheck-2.8/test/testconstructors.cpp" $, 3302 $, "[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" $, errout@var100 .@expr1073744159 str (@expr1073744160 ) $) $) { $return ; }
3303: }
3304:
3305: void uninitVarEnum2 ( ) {
3306: $check_ $(@expr1073744161 "cppcheck-2.8/test/testconstructors.cpp" $, 3306 $, "enum E { E1 };\nstruct X { E e = E1; };\nstruct Y {\n    Y() {}\n    X x;\n};" $)
3307:
|
3310:
3311: ;
3312:
3313: $if $(@expr1073744162 $!@expr1073744163 $assertEquals $(@expr1073744164 "cppcheck-2.8/test/testconstructors.cpp" $, 3313 $, "" $, errout@var100 .@expr1073744165 str (@expr1073744166 ) $) $) { $return ; }
3314: }
3315:
3316: void uninitVarStream ( ) {
3317: $check_ $(@expr1073744167 "cppcheck-2.8/test/testconstructors.cpp" $, 3317 $, "class Foo\n{\nprivate:\n    int foo;\npublic:\n    explicit Foo(std::istream &in)\n    {\n        if(!(in >> foo))\n            throw 0;\n    }\n};" $)
3318:
|
3326:
3327: ;
3328:
3329: $if $(@expr1073744168 $!@expr1073744169 $assertEquals $(@expr1073744170 "cppcheck-2.8/test/testconstructors.cpp" $, 3329 $, "" $, errout@var100 .@expr1073744171 str (@expr1073744172 ) $) $) { $return ; }
3330: }
3331:
3332: void uninitVarTypedef ( ) {
3333: $check_ $(@expr1073744173 "cppcheck-2.8/test/testconstructors.cpp" $, 3333 $, "class Foo\n{\npublic:\n    typedef int * pointer;\n    Foo() : a(0) {}\n    pointer a;\n};" $)
3334:
|
3338:
3339: ;
3340:
3341: $if $(@expr1073744174 $!@expr1073744175 $assertEquals $(@expr1073744176 "cppcheck-2.8/test/testconstructors.cpp" $, 3341 $, "" $, errout@var100 .@expr1073744177 str (@expr1073744178 ) $) $) { $return ; }
3342: }
3343:
3344: void uninitVarMemset ( ) {
3345: $check_ $(@expr1073744179 "cppcheck-2.8/test/testconstructors.cpp" $, 3345 $, "class Foo\n{\npublic:\n    int * pointer;\n    Foo() { memset(this, 0, sizeof(*this)); }\n};" $)
3346:
|
3349:
3350: ;
3351:
3352: $if $(@expr1073744180 $!@expr1073744181 $assertEquals $(@expr1073744182 "cppcheck-2.8/test/testconstructors.cpp" $, 3352 $, "" $, errout@var100 .@expr2359 str (@expr2360 ) $) $) { $return ; }
3353:
3354: $check_ $(@expr1073744185 "cppcheck-2.8/test/testconstructors.cpp" $, 3354 $, "class Foo\n{\npublic:\n    int * pointer;\n    Foo() { ::memset(this, 0, sizeof(*this)); }\n};" $)
3355:
|
3358:
3359: ;
3360:
3361: $if $(@expr1073744186 $!@expr1073744187 $assertEquals $(@expr1073744188 "cppcheck-2.8/test/testconstructors.cpp" $, 3361 $, "" $, errout@var100 .@expr2359 str (@expr2360 ) $) $) { $return ; }
3362:
3363:
3364: $check_ $(@expr1073744191 "cppcheck-2.8/test/testconstructors.cpp" $, 3364 $, "struct Foo {\n    int * p;\n    char c;\n    Foo() { memset(p, 0, sizeof(int)); }\n};" $)
3365:
3366:
3367:
3368: ;
3369: $if $(@expr1073744192 $!@expr1073744193 $assertEquals $(@expr1073744194 "cppcheck-2.8/test/testconstructors.cpp" $, 3369 $, "[test.cpp:4]: (warning) Member variable 'Foo::c' is not initialized in the constructor.\n" $, errout@var100 .@expr2359 str (@expr2360 ) $) $) { $return ; }
3370: $check_ $(@expr1073744197 "cppcheck-2.8/test/testconstructors.cpp" $, 3370 $, "struct Foo {\n    int i;\n    char c;\n    Foo() { memset(&i, 0, sizeof(int)); }\n};" $)
3371:
3372:
3373:
3374: ;
3375: $if $(@expr1073744198 $!@expr1073744199 $assertEquals $(@expr1073744200 "cppcheck-2.8/test/testconstructors.cpp" $, 3375 $, "[test.cpp:4]: (warning) Member variable 'Foo::c' is not initialized in the constructor.\n" $, errout@var100 .@expr2359 str (@expr2360 ) $) $) { $return ; }
3376: $check_ $(@expr1073744203 "cppcheck-2.8/test/testconstructors.cpp" $, 3376 $, "struct Foo { int f; };\nstruct Bar { int b; };\nstruct FooBar {\n  FooBar() {\n     memset(&foo, 0, sizeof(foo));\n  }\n  Foo foo;\n  Bar bar;\n};\nint main() {\n  FooBar foobar;\n  return foobar.foo.f + foobar.bar.b;\n}" $)
3377:
|
3387:
3388: ;
3389: $if $(@expr1073744204 $!@expr1073744205 $assertEquals $(@expr1073744206 "cppcheck-2.8/test/testconstructors.cpp" $, 3389 $, "[test.cpp:4]: (warning) Member variable 'FooBar::bar' is not initialized in the constructor.\n" $, errout@var100 .@expr2359 str (@expr2360 ) $) $) { $return ; }
3390: $check_ $(@expr1073744209 "cppcheck-2.8/test/testconstructors.cpp" $, 3390 $, "struct Foo { int f; };\nstruct Bar { int b; };\nstruct FooBar {\n  FooBar() {\n     memset(&this->foo, 0, sizeof(this->foo));\n  }\n  Foo foo;\n  Bar bar;\n};\nint main() {\n  FooBar foobar;\n  return foobar.foo.f + foobar.bar.b;\n}" $)
3391:
|
3401:
3402: ;
3403: $if $(@expr1073744210 $!@expr1073744211 $assertEquals $(@expr1073744212 "cppcheck-2.8/test/testconstructors.cpp" $, 3403 $, "[test.cpp:4]: (warning) Member variable 'FooBar::bar' is not initialized in the constructor.\n" $, errout@var100 .@expr2359 str (@expr2360 ) $) $) { $return ; }
3404:
3405:
3406: $check_ $(@expr1073744215 "cppcheck-2.8/test/testconstructors.cpp" $, 3406 $, "struct A {\n  A() {\n    memset(this->data, 0, 42);\n  }\n  char data[42];\n};" $)
3407:
|
3410:
3411: ;
3412: $if $(@expr1073744216 $!@expr1073744217 $assertEquals $(@expr1073744218 "cppcheck-2.8/test/testconstructors.cpp" $, 3412 $, "" $, errout@var100 .@expr2359 str (@expr2360 ) $) $) { $return ; }
3413: }
3414:
3415: void privateCtor1 ( ) {
3416: settings@var102 .@expr2399 standards@var119 .@expr2400 cpp@var120 =@expr1073744225 Standards ::@expr1073744226 CPP03@expr1073744221 ;
3417: $check_ $(@expr1073744227 "cppcheck-2.8/test/testconstructors.cpp" $, 3417 $, "class Foo {\n    int foo;\n    Foo() { }\n};" $)
3418:
3419:
3420: ;
3421: $if $(@expr1073744228 $!@expr1073744229 $assertEquals $(@expr1073744230 "cppcheck-2.8/test/testconstructors.cpp" $, 3421 $, "" $, errout@var100 .@expr2407 str (@expr2408 ) $) $) { $return ; }
3422:
3423: settings@var102 .@expr2399 standards@var119 .@expr2400 cpp@var120 =@expr1073744235 Standards ::@expr1073744236 CPP11@expr1073744222 ;
3424: $check_ $(@expr1073744237 "cppcheck-2.8/test/testconstructors.cpp" $, 3424 $, "class Foo {\n    int foo;\n    Foo() { }\n};" $)
3425:
3426:
3427: ;
3428: $if $(@expr1073744238 $!@expr1073744239 $assertEquals $(@expr1073744240 "cppcheck-2.8/test/testconstructors.cpp" $, 3428 $, "[test.cpp:3]: (warning) Member variable 'Foo::foo' is not initialized in the constructor.\n" $, errout@var100 .@expr2407 str (@expr2408 ) $) $) { $return ; }
3429: }
3430:
3431: void privateCtor2 ( ) {
3432: $check_ $(@expr1073744243 "cppcheck-2.8/test/testconstructors.cpp" $, 3432 $, "class Foo\n{\nprivate:\n    int foo;\n    Foo() { }\npublic:\n    explicit Foo(int _i) { }\n};" $)
3433:
|
3438:
3439: ;
3440:
3441: $if $(@expr1073744244 $!@expr1073744245 $assertEquals $(@expr1073744246 "cppcheck-2.8/test/testconstructors.cpp" $, 3441 $, "[test.cpp:7]: (warning) Member variable 'Foo::foo' is not initialized in the constructor.\n" $, errout@var100 .@expr1073744247 str (@expr1073744248 ) $) $) { $return ; }
3442: }
3443:
3444:
3445: void function ( ) {
3446: $check_ $(@expr1073744249 "cppcheck-2.8/test/testconstructors.cpp" $, 3446 $, "class A\n{\npublic:\n    A();\n    int* f(int*);\n};\n\nA::A()\n{\n}\n\nint* A::f(int* p)\n{\n    return p;\n}" $)
3447:
|
3459:
3460: ;
3461:
3462: $if $(@expr1073744250 $!@expr1073744251 $assertEquals $(@expr1073744252 "cppcheck-2.8/test/testconstructors.cpp" $, 3462 $, "" $, errout@var100 .@expr1073744253 str (@expr1073744254 ) $) $) { $return ; }
3463: }
3464:
3465:
3466:
3467: void uninitVarPublished ( ) {
3468: $check_ $(@expr1073744255 "cppcheck-2.8/test/testconstructors.cpp" $, 3468 $, "class Fred\n{\n__published:\n    int *i;\npublic:\n    Fred() { }\n};" $)
3469:
|
3473:
3474: ;
3475: $if $(@expr1073744256 $!@expr1073744257 $assertEquals $(@expr1073744258 "cppcheck-2.8/test/testconstructors.cpp" $, 3475 $, "" $, errout@var100 .@expr1073744259 str (@expr1073744260 ) $) $) { $return ; }
3476: }
3477:
3478: void uninitVarInheritClassInit ( ) {
3479: Settings s@var127 ;
3480: s@var127 .@expr1073744261 libraries@var128 .@expr1073744262 emplace_back (@expr1073744263 "vcl" ) ;
3481:
3482: $check_ $(@expr1073744264 "cppcheck-2.8/test/testconstructors.cpp" $, 3482 $, "class Fred: public TObject\n{\npublic:\n    Fred() { }\nprivate:\n    int x;\n};" , s@var127 $)
3483:
|
3487:
3488: ;
3489: $if $(@expr1073744265 $!@expr1073744266 $assertEquals $(@expr1073744267 "cppcheck-2.8/test/testconstructors.cpp" $, 3489 $, "" $, errout@var100 .@expr1073744268 str (@expr1073744269 ) $) $) { $return ; }
3490: }
3491:
3492: void uninitOperator ( ) {
3493: $check_ $(@expr1073744270 "cppcheck-2.8/test/testconstructors.cpp" $, 3493 $, "class Fred\n{\npublic:\n    Fred() { }\n    int *operator [] (int index) { return 0; }\n};" $)
3494:
|
3497:
3498: ;
3499: $if $(@expr1073744271 $!@expr1073744272 $assertEquals $(@expr1073744273 "cppcheck-2.8/test/testconstructors.cpp" $, 3499 $, "" $, errout@var100 .@expr1073744274 str (@expr1073744275 ) $) $) { $return ; }
3500: }
3501:
3502: void uninitFunction1 ( ) {
3503: $check_ $(@expr1073744276 "cppcheck-2.8/test/testconstructors.cpp" $, 3503 $, "class Fred\n{\npublic:\n    Fred() { init(*this); }\n\n    static void init(Fred &f)\n    { f.d = 0; }\n\n    double d;\n};" $)
3504:
|
3511:
3512: ;
3513: $if $(@expr1073744277 $!@expr1073744278 $assertEquals $(@expr1073744279 "cppcheck-2.8/test/testconstructors.cpp" $, 3513 $, "" $, errout@var100 .@expr2456 str (@expr2457 ) $) $) { $return ; }
3514:
3515: $check_ $(@expr1073744282 "cppcheck-2.8/test/testconstructors.cpp" $, 3515 $, "class Fred\n{\npublic:\n    Fred() { init(*this); }\n\n    static void init(Fred &f)\n    { }\n\n    double d;\n};" $)
3516:
|
3523:
3524: ;
3525: $todoAssertEquals $(@expr1073744283 "cppcheck-2.8/test/testconstructors.cpp" $, 3525 $, "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n" $, "" $, errout@var100 .@expr2456 str (@expr2457 ) $) ;
3526: }
3527:
3528: void uninitFunction2 ( ) {
3529: $check_ $(@expr1073744286 "cppcheck-2.8/test/testconstructors.cpp" $, 3529 $, "class Fred\n{\npublic:\n    Fred() { if (!init(*this)); }\n\n    static bool init(Fred &f)\n    { f.d = 0; return true; }\n\n    double d;\n};" $)
3530:
|
3537:
3538: ;
3539: $if $(@expr1073744287 $!@expr1073744288 $assertEquals $(@expr1073744289 "cppcheck-2.8/test/testconstructors.cpp" $, 3539 $, "" $, errout@var100 .@expr2466 str (@expr2467 ) $) $) { $return ; }
3540:
3541: $check_ $(@expr1073744292 "cppcheck-2.8/test/testconstructors.cpp" $, 3541 $, "class Fred\n{\npublic:\n    Fred() { if (!init(*this)); }\n\n    static bool init(Fred &f)\n    { return true; }\n\n    double d;\n};" $)
3542:
|
3549:
3550: ;
3551: $todoAssertEquals $(@expr1073744293 "cppcheck-2.8/test/testconstructors.cpp" $, 3551 $, "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n" $, "" $, errout@var100 .@expr2466 str (@expr2467 ) $) ;
3552: }
3553:
3554: void uninitFunction3 ( ) {
3555: $check_ $(@expr1073744296 "cppcheck-2.8/test/testconstructors.cpp" $, 3555 $, "class Fred\n{\npublic:\n    Fred() { if (!init()); }\n\n    bool init()\n    { d = 0; return true; }\n\n    double d;\n};" $)
3556:
|
3563:
3564: ;
3565: $if $(@expr1073744297 $!@expr1073744298 $assertEquals $(@expr1073744299 "cppcheck-2.8/test/testconstructors.cpp" $, 3565 $, "" $, errout@var100 .@expr2476 str (@expr2477 ) $) $) { $return ; }
3566:
3567: $check_ $(@expr1073744302 "cppcheck-2.8/test/testconstructors.cpp" $, 3567 $, "class Fred\n{\npublic:\n    Fred() { if (!init()); }\n\n    bool init()\n    { return true; }\n\n    double d;\n};" $)
3568:
|
3575:
3576: ;
3577: $if $(@expr1073744303 $!@expr1073744304 $assertEquals $(@expr1073744305 "cppcheck-2.8/test/testconstructors.cpp" $, 3577 $, "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n" $, errout@var100 .@expr2476 str (@expr2477 ) $) $) { $return ; }
3578: }
3579:
3580: void uninitFunction4 ( ) {
3581: $check_ $(@expr1073744308 "cppcheck-2.8/test/testconstructors.cpp" $, 3581 $, "class Fred\n{\npublic:\n    Fred() { init(this); }\n\n    init(Fred *f)\n    { f.d = 0; }\n\n    double d;\n};" $)
3582:
|
3589:
3590: ;
3591: $if $(@expr1073744309 $!@expr1073744310 $assertEquals $(@expr1073744311 "cppcheck-2.8/test/testconstructors.cpp" $, 3591 $, "" $, errout@var100 .@expr2488 str (@expr2489 ) $) $) { $return ; }
3592:
3593: $check_ $(@expr1073744314 "cppcheck-2.8/test/testconstructors.cpp" $, 3593 $, "class Fred\n{\npublic:\n    Fred() { init(this); }\n\n    init(Fred *f)\n    { }\n\n    double d;\n};" $)
3594:
|
3601:
3602: ;
3603: $todoAssertEquals $(@expr1073744315 "cppcheck-2.8/test/testconstructors.cpp" $, 3603 $, "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n" $, "" $, errout@var100 .@expr2488 str (@expr2489 ) $) ;
3604: }
3605:
3606: void uninitFunction5 ( ) {
3607: $check_ $(@expr1073744318 "cppcheck-2.8/test/testconstructors.cpp" $, 3607 $, "struct Structure {\n    int C;\n};\n\nclass A {\n    Structure B;\npublic:\n    A() { Init( B ); };\n    void Init( Structure& S ) { S.C = 0; };\n};" $)
3608:
|
3615:
3616: ;
3617: $if $(@expr1073744319 $!@expr1073744320 $assertEquals $(@expr1073744321 "cppcheck-2.8/test/testconstructors.cpp" $, 3617 $, "" $, errout@var100 .@expr1073744322 str (@expr1073744323 ) $) $) { $return ; }
3618: }
3619:
3620: void uninitSameClassName ( ) {
3621: $check_ $(@expr1073744324 "cppcheck-2.8/test/testconstructors.cpp" $, 3621 $, "class B\n{\npublic:\n    B();\n    int j;\n};\n\nclass A\n{\n    class B\n    {\n    public:\n        B();\n        int i;\n    };\n};\n\nA::B::B()\n{\n    i = 0;\n}" $)
3622:
|
3640:
3641: ;
3642: $if $(@expr1073744325 $!@expr1073744326 $assertEquals $(@expr1073744327 "cppcheck-2.8/test/testconstructors.cpp" $, 3642 $, "" $, errout@var100 .@expr2504 str (@expr2505 ) $) $) { $return ; }
3643:
3644: $check_ $(@expr1073744330 "cppcheck-2.8/test/testconstructors.cpp" $, 3644 $, "class B\n{\npublic:\n    B();\n    int j;\n};\n\nclass A\n{\n    class B\n    {\n    public:\n        B();\n        int i;\n    };\n};\n\nB::B()\n{\n}\n\nA::B::B()\n{\n}" $)
3645:
|
3666:
3667: ;
3668: $if $(@expr1073744331 $!@expr1073744332 $assertEquals $(@expr1073744333 "cppcheck-2.8/test/testconstructors.cpp" $, 3668 $, "[test.cpp:18]: (warning) Member variable 'B::j' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'B::i' is not initialized in the constructor.\n" $, errout@var100 .@expr2504 str (@expr2505 ) $) $) { $return
3669: ; }
3670:
3671:
3672: $check_ $(@expr1073744336 "cppcheck-2.8/test/testconstructors.cpp" $, 3672 $, "namespace n1\n{\nclass Foo {public:\n    Foo() : i(0) { }\nprivate:\n    int i;\n};\n}\n\nnamespace n2\n{\nclass Foo {public:\n    Foo() { }\n};\n}" $)
3673:
|
3687:
3688: ;
3689: $if $(@expr1073744337 $!@expr1073744338 $assertEquals $(@expr1073744339 "cppcheck-2.8/test/testconstructors.cpp" $, 3689 $, "" $, errout@var100 .@expr2504 str (@expr2505 ) $) $) { $return ; }
3690:
3691: $check_ $(@expr1073744342 "cppcheck-2.8/test/testconstructors.cpp" $, 3691 $, "namespace n1\n{\nclass Foo {\npublic:\n    Foo();\nprivate:\n    int i;\n};\n}\n\nn1::Foo::Foo()\n{ }\n\nnamespace n2\n{\nclass Foo {\npublic:\n    Foo() { }\n};\n}" $)
3692:
|
3709:
3710: ;
3711: $if $(@expr1073744343 $!@expr1073744344 $assertEquals $(@expr1073744345 "cppcheck-2.8/test/testconstructors.cpp" $, 3711 $, "[test.cpp:11]: (warning) Member variable 'Foo::i' is not initialized in the constructor.\n" $, errout@var100 .@expr2504 str (@expr2505 ) $) $) { $return ; }
3712:
3713: $check_ $(@expr1073744348 "cppcheck-2.8/test/testconstructors.cpp" $, 3713 $, "namespace n1\n{\nclass Foo {public:\n    Foo();\nprivate:\n    int i;\n};\n}\n\nn1::Foo::Foo() : i(0)\n{ }\n\nnamespace n2\n{\nclass Foo {public:\n    Foo() { }\n};\n}" $)
3714:
|
3731:
3732: ;
3733: $if $(@expr1073744349 $!@expr1073744350 $assertEquals $(@expr1073744351 "cppcheck-2.8/test/testconstructors.cpp" $, 3733 $, "" $, errout@var100 .@expr2504 str (@expr2505 ) $) $) { $return ; }
3734: }
3735:
3736: void uninitFunctionOverload ( ) {
3737:
3738: $check_ $(@expr1073744354 "cppcheck-2.8/test/testconstructors.cpp" $, 3738 $, "class A\n{\nprivate:\n    int i;\n\npublic:\n    A()\n    {\n        init();\n    }\n\n    void init() { init(0); }\n\n    void init(int value)\n    { i = value; }\n};" $)
3739:
|
3752:
3753: ;
3754: $if $(@expr1073744355 $!@expr1073744356 $assertEquals $(@expr1073744357 "cppcheck-2.8/test/testconstructors.cpp" $, 3754 $, "" $, errout@var100 .@expr2534 str (@expr2535 ) $) $) { $return ; }
3755:
3756: $check_ $(@expr1073744360 "cppcheck-2.8/test/testconstructors.cpp" $, 3756 $, "class A\n{\nprivate:\n    int i;\n\npublic:\n    A()\n    {\n        init();\n    }\n\n    void init() { init(0); }\n\n    void init(int value)\n    { }\n};" $)
3757:
|
3770:
3771: ;
3772: $if $(@expr1073744361 $!@expr1073744362 $assertEquals $(@expr1073744363 "cppcheck-2.8/test/testconstructors.cpp" $, 3772 $, "[test.cpp:7]: (warning) Member variable 'A::i' is not initialized in the constructor.\n" $, errout@var100 .@expr2534 str (@expr2535 ) $) $) { $return ; }
3773:
3774: $check_ $(@expr1073744366 "cppcheck-2.8/test/testconstructors.cpp" $, 3774 $, "class bar {\n    int length;\n    bar() { length = 0; }\n};\nclass foo {\n    int x;\n    foo() { Set(bar()); }\n    void Set(int num) { x = 1; }\n    void Set(bar num) { x = num.length; }\n};\n" $)
3775:
|
3782:
3783: ;
3784: $if $(@expr1073744367 $!@expr1073744368 $assertEquals $(@expr1073744369 "cppcheck-2.8/test/testconstructors.cpp" $, 3784 $, "" $, errout@var100 .@expr2534 str (@expr2535 ) $) $) { $return ; }
3785: }
3786:
3787: void uninitVarOperatorEqual ( ) {
3788: $check_ $(@expr1073744372 "cppcheck-2.8/test/testconstructors.cpp" $, 3788 $, "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n};" $)
3789:
3790:
3791:
3792: ;
3793: $if $(@expr1073744373 $!@expr1073744374 $assertEquals $(@expr1073744375 "cppcheck-2.8/test/testconstructors.cpp" $, 3793 $, "" $, errout@var100 .@expr2552 str (@expr2553 ) $) $) { $return ; }
3794:
3795: $check_ $(@expr1073744378 "cppcheck-2.8/test/testconstructors.cpp" $, 3795 $, "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n    A & operator = (const A & rhs) {\n        a = rhs.a;\n        return *this;\n    }\n};" $)
3796:
|
3802:
3803: ;
3804: $if $(@expr1073744379 $!@expr1073744380 $assertEquals $(@expr1073744381 "cppcheck-2.8/test/testconstructors.cpp" $, 3804 $, "" $, errout@var100 .@expr2552 str (@expr2553 ) $) $) { $return ; }
3805:
3806: $check_ $(@expr1073744384 "cppcheck-2.8/test/testconstructors.cpp" $, 3806 $, "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n    A & operator = (const A & rhs) {\n        return *this;\n    }\n};" $)
3807:
|
3812:
3813: ;
3814: $if $(@expr1073744385 $!@expr1073744386 $assertEquals $(@expr1073744387 "cppcheck-2.8/test/testconstructors.cpp" $, 3814 $, "[test.cpp:4]: (warning) Member variable 'A::a' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'A::a' is not assigned a value in 'A::operator='.\n" $, errout@var100 .@expr2552 str (@expr2553 ) $) $) { $return
3815: ; }
3816: }
3817:
3818: void uninitVarPointer ( ) {
3819: $check_ $(@expr1073744390 "cppcheck-2.8/test/testconstructors.cpp" $, 3819 $, "struct A {\n    int a;\n};\nstruct B {\n    A* a;\n    B() { }\n};" $)
3820:
|
3824:
3825: ;
3826: $if $(@expr1073744391 $!@expr1073744392 $assertEquals $(@expr1073744393 "cppcheck-2.8/test/testconstructors.cpp" $, 3826 $, "[test.cpp:6]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" $, errout@var100 .@expr2570 str (@expr2571 ) $) $) { $return ; }
3827:
3828: $check_ $(@expr1073744396 "cppcheck-2.8/test/testconstructors.cpp" $, 3828 $, "struct A;\nstruct B {\n    A* a;\n    B() { }\n};" $)
3829:
3830:
3831:
3832: ;
3833: $if $(@expr1073744397 $!@expr1073744398 $assertEquals $(@expr1073744399 "cppcheck-2.8/test/testconstructors.cpp" $, 3833 $, "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" $, errout@var100 .@expr2570 str (@expr2571 ) $) $) { $return ; }
3834:
3835: $check_ $(@expr1073744402 "cppcheck-2.8/test/testconstructors.cpp" $, 3835 $, "struct A;\nstruct B {\n    const A* a;\n    B() { }\n};" $)
3836:
3837:
3838:
3839: ;
3840: $if $(@expr1073744403 $!@expr1073744404 $assertEquals $(@expr1073744405 "cppcheck-2.8/test/testconstructors.cpp" $, 3840 $, "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" $, errout@var100 .@expr2570 str (@expr2571 ) $) $) { $return ; }
3841:
3842: $check_ $(@expr1073744408 "cppcheck-2.8/test/testconstructors.cpp" $, 3842 $, "struct A;\nstruct B {\n    A* const a;\n    B() { }\n};" $)
3843:
3844:
3845:
3846: ;
3847: $if $(@expr1073744409 $!@expr1073744410 $assertEquals $(@expr1073744411 "cppcheck-2.8/test/testconstructors.cpp" $, 3847 $, "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" $, errout@var100 .@expr2570 str (@expr2571 ) $) $) { $return ; }
3848:
3849: $check_ $(@expr1073744414 "cppcheck-2.8/test/testconstructors.cpp" $, 3849 $, "class Test {\npublic:\n    Test() {}\n    std::map<int, int>* pMap = nullptr;\n    std::string* pStr = nullptr;\n};\n" $)
3850:
|
3853:
3854: ;
3855: $if $(@expr1073744415 $!@expr1073744416 $assertEquals $(@expr1073744417 "cppcheck-2.8/test/testconstructors.cpp" $, 3855 $, "" $, errout@var100 .@expr2570 str (@expr2571 ) $) $) { $return ; }
3856:
3857: $check_ $(@expr1073744420 "cppcheck-2.8/test/testconstructors.cpp" $, 3857 $, "template <typename U>\nclass C1 {}; \ntemplate <typename U, typename V>\nclass C2 {};\nnamespace A {\n    template <typename U>\n    class D1 {};\n    template <typename U, typename V>\n    class D2 {};\n}\nclass Test {\npublic:\n    Test() {}\n    C1<int>* c1 = nullptr;\n    C2<int, int >* c2 = nullptr;\n    A::D1<int>* d1 = nullptr;\n    A::D2<int, int >* d2 = nullptr;\n    std::map<int, int>* pMap = nullptr;\n};\n" $)
3858:
|
3874:
3875: ;
3876: $if $(@expr1073744421 $!@expr1073744422 $assertEquals $(@expr1073744423 "cppcheck-2.8/test/testconstructors.cpp" $, 3876 $, "" $, errout@var100 .@expr2570 str (@expr2571 ) $) $) { $return ; }
3877: }
3878:
3879: void uninitConstVar ( ) {
3880: $check_ $(@expr1073744426 "cppcheck-2.8/test/testconstructors.cpp" $, 3880 $, "struct A;\nstruct B {\n    A* const a;\n    B() { }\n    B(B& b) { }\n};" $)
3881:
|
3884:
3885: ;
3886: $if $(@expr1073744427 $!@expr1073744428 $assertEquals $(@expr1073744429 "cppcheck-2.8/test/testconstructors.cpp" $, 3886 $, "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'B::a' is not initialized in the copy constructor.\n" $, errout@var100 .@expr2606 str (@expr2607 ) $) $) { $return
3887: ; }
3888:
3889: $check_ $(@expr1073744432 "cppcheck-2.8/test/testconstructors.cpp" $, 3889 $, "struct A;\nstruct B {\n    A* const a;\n    B& operator=(const B& r) { }\n};" $)
3890:
3891:
3892:
3893: ;
3894: $if $(@expr1073744433 $!@expr1073744434 $assertEquals $(@expr1073744435 "cppcheck-2.8/test/testconstructors.cpp" $, 3894 $, "" $, errout@var100 .@expr2606 str (@expr2607 ) $) $) { $return ; }
3895:
3896: $check_ $(@expr1073744438 "cppcheck-2.8/test/testconstructors.cpp" $, 3896 $, "struct B {\n    const int a;\n    B() { }\n    B(B& b) { }\n};" $)
3897:
3898:
3899:
3900: ;
3901: $if $(@expr1073744439 $!@expr1073744440 $assertEquals $(@expr1073744441 "cppcheck-2.8/test/testconstructors.cpp" $, 3901 $, "[test.cpp:3]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the copy constructor.\n" $, errout@var100 .@expr2606 str (@expr2607 ) $) $) { $return
3902: ; }
3903:
3904: $check_ $(@expr1073744444 "cppcheck-2.8/test/testconstructors.cpp" $, 3904 $, "struct B {\n    const int a;\n    B& operator=(const B& r) { }\n};" $)
3905:
3906:
3907: ;
3908: $if $(@expr1073744445 $!@expr1073744446 $assertEquals $(@expr1073744447 "cppcheck-2.8/test/testconstructors.cpp" $, 3908 $, "" $, errout@var100 .@expr2606 str (@expr2607 ) $) $) { $return ; }
3909: }
3910:
3911:
3912: void constructors_crash1 ( ) {
3913: $check_ $(@expr1073744450 "cppcheck-2.8/test/testconstructors.cpp" $, 3913 $, "class C {\npublic:\n  C() _STLP_NOTHROW {}\n  C(const C&) _STLP_NOTHROW {}\n};" $)
3914:
3915:
3916:
3917: ;
3918: $if $(@expr1073744451 $!@expr1073744452 $assertEquals $(@expr1073744453 "cppcheck-2.8/test/testconstructors.cpp" $, 3918 $, "" $, errout@var100 .@expr1073744454 str (@expr1073744455 ) $) $) { $return ; }
3919: }
3920:
3921: void classWithOperatorInName ( ) {
3922: $check_ $(@expr1073744456 "cppcheck-2.8/test/testconstructors.cpp" $, 3922 $, "class operatorX {\n  int mValue;\npublic:\n  operatorX() : mValue(0) {}\n};" $)
3923:
3924:
3925:
3926: ;
3927: $if $(@expr1073744457 $!@expr1073744458 $assertEquals $(@expr1073744459 "cppcheck-2.8/test/testconstructors.cpp" $, 3927 $, "" $, errout@var100 .@expr1073744460 str (@expr1073744461 ) $) $) { $return ; }
3928: }
3929:
3930: void templateConstructor ( ) {
3931: $check_ $(@expr1073744462 "cppcheck-2.8/test/testconstructors.cpp" $, 3931 $, "template <class T> struct Container {\n  Container();\n  T* mElements;\n};\ntemplate <class T> Container<T>::Container() : mElements(nullptr) {}\nContainer<int> intContainer;" $)
3932:
|
3935:
3936: ;
3937: $if $(@expr1073744463 $!@expr1073744464 $assertEquals $(@expr1073744465 "cppcheck-2.8/test/testconstructors.cpp" $, 3937 $, "" $, errout@var100 .@expr1073744466 str (@expr1073744467 ) $) $) { $return ; }
3938: }
3939:
3940: void typedefArray ( ) {
3941: $check_ $(@expr1073744468 "cppcheck-2.8/test/testconstructors.cpp" $, 3941 $, "typedef float    rvec[3];\nclass SelectionPosition {\npublic:\n    SelectionPosition() {}\n    const rvec &x() const;\n};" $)
3942:
|
3945:
3946: ;
3947: $if $(@expr1073744469 $!@expr1073744470 $assertEquals $(@expr1073744471 "cppcheck-2.8/test/testconstructors.cpp" $, 3947 $, "" $, errout@var100 .@expr1073744472 str (@expr1073744473 ) $) $) { $return ; }
3948: }
3949:
3950: void uninitAssignmentWithOperator ( ) {
3951: $check_ $(@expr1073744474 "cppcheck-2.8/test/testconstructors.cpp" $, 3951 $, "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = b && SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" , true $)
3952:
|
3960:
3961: ;
3962: $todoAssertEquals $(@expr1073744475 "cppcheck-2.8/test/testconstructors.cpp" $, 3962 $, "[test.cpp:3]: (warning, inconclusive) Member variable 'C::x' is not initialized in the constructor.\n" $, "[test.cpp:3]: (warning) Member variable 'C::x' is not initialized in the constructor.\n" $, errout@var100 .@expr2652 str (@expr2653 ) $)
3963: ;
3964:
3965: $check_ $(@expr1073744478 "cppcheck-2.8/test/testconstructors.cpp" $, 3965 $, "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = true || SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" , true $)
3966:
|
3974:
3975: ;
3976: $todoAssertEquals $(@expr1073744479 "cppcheck-2.8/test/testconstructors.cpp" $, 3976 $, "[test.cpp:3]: (warning, inconclusive) Member variable 'C::x' is not initialized in the constructor.\n" $, "[test.cpp:3]: (warning) Member variable 'C::x' is not initialized in the constructor.\n" $, errout@var100 .@expr2652 str (@expr2653 ) $)
3977: ;
3978:
3979: $check_ $(@expr1073744482 "cppcheck-2.8/test/testconstructors.cpp" $, 3979 $, "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b = b & SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" $)
3980:
|
3988:
3989: ;
3990: $if $(@expr1073744483 $!@expr1073744484 $assertEquals $(@expr1073744485 "cppcheck-2.8/test/testconstructors.cpp" $, 3990 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
3991:
3992: $check_ $(@expr1073744488 "cppcheck-2.8/test/testconstructors.cpp" $, 3992 $, "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = true | SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" $)
3993:
|
4001:
4002: ;
4003: $if $(@expr1073744489 $!@expr1073744490 $assertEquals $(@expr1073744491 "cppcheck-2.8/test/testconstructors.cpp" $, 4003 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4004:
4005: $check_ $(@expr1073744494 "cppcheck-2.8/test/testconstructors.cpp" $, 4005 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i * SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4006:
|
4011:
4012: ;
4013: $if $(@expr1073744495 $!@expr1073744496 $assertEquals $(@expr1073744497 "cppcheck-2.8/test/testconstructors.cpp" $, 4013 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4014:
4015: $check_ $(@expr1073744500 "cppcheck-2.8/test/testconstructors.cpp" $, 4015 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i / SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4016:
|
4021:
4022: ;
4023: $if $(@expr1073744501 $!@expr1073744502 $assertEquals $(@expr1073744503 "cppcheck-2.8/test/testconstructors.cpp" $, 4023 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4024:
4025: $check_ $(@expr1073744506 "cppcheck-2.8/test/testconstructors.cpp" $, 4025 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i % SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4026:
|
4031:
4032: ;
4033: $if $(@expr1073744507 $!@expr1073744508 $assertEquals $(@expr1073744509 "cppcheck-2.8/test/testconstructors.cpp" $, 4033 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4034:
4035: $check_ $(@expr1073744512 "cppcheck-2.8/test/testconstructors.cpp" $, 4035 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i + SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4036:
|
4041:
4042: ;
4043: $if $(@expr1073744513 $!@expr1073744514 $assertEquals $(@expr1073744515 "cppcheck-2.8/test/testconstructors.cpp" $, 4043 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4044:
4045: $check_ $(@expr1073744518 "cppcheck-2.8/test/testconstructors.cpp" $, 4045 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i - SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4046:
|
4051:
4052: ;
4053: $if $(@expr1073744519 $!@expr1073744520 $assertEquals $(@expr1073744521 "cppcheck-2.8/test/testconstructors.cpp" $, 4053 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4054:
4055: $check_ $(@expr1073744524 "cppcheck-2.8/test/testconstructors.cpp" $, 4055 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i << SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4056:
|
4061:
4062: ;
4063: $if $(@expr1073744525 $!@expr1073744526 $assertEquals $(@expr1073744527 "cppcheck-2.8/test/testconstructors.cpp" $, 4063 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4064:
4065: $check_ $(@expr1073744530 "cppcheck-2.8/test/testconstructors.cpp" $, 4065 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i >> SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4066:
|
4071:
4072: ;
4073: $if $(@expr1073744531 $!@expr1073744532 $assertEquals $(@expr1073744533 "cppcheck-2.8/test/testconstructors.cpp" $, 4073 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4074:
4075: $check_ $(@expr1073744536 "cppcheck-2.8/test/testconstructors.cpp" $, 4075 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i ^ SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4076:
|
4081:
4082: ;
4083: $if $(@expr1073744537 $!@expr1073744538 $assertEquals $(@expr1073744539 "cppcheck-2.8/test/testconstructors.cpp" $, 4083 $, "" $, errout@var100 .@expr2652 str (@expr2653 ) $) $) { $return ; }
4084: }
4085:
4086: void uninitCompoundAssignment ( ) {
4087: $check_ $(@expr1073744542 "cppcheck-2.8/test/testconstructors.cpp" $, 4087 $, "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b &= SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" $)
4088:
|
4096:
4097: ;
4098: $if $(@expr1073744543 $!@expr1073744544 $assertEquals $(@expr1073744545 "cppcheck-2.8/test/testconstructors.cpp" $, 4098 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4099:
4100: $check_ $(@expr1073744548 "cppcheck-2.8/test/testconstructors.cpp" $, 4100 $, "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b |= SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" $)
4101:
|
4109:
4110: ;
4111: $if $(@expr1073744549 $!@expr1073744550 $assertEquals $(@expr1073744551 "cppcheck-2.8/test/testconstructors.cpp" $, 4111 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4112:
4113: $check_ $(@expr1073744554 "cppcheck-2.8/test/testconstructors.cpp" $, 4113 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i *= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4114:
|
4119:
4120: ;
4121: $if $(@expr1073744555 $!@expr1073744556 $assertEquals $(@expr1073744557 "cppcheck-2.8/test/testconstructors.cpp" $, 4121 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4122:
4123: $check_ $(@expr1073744560 "cppcheck-2.8/test/testconstructors.cpp" $, 4123 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i /= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4124:
|
4129:
4130: ;
4131: $if $(@expr1073744561 $!@expr1073744562 $assertEquals $(@expr1073744563 "cppcheck-2.8/test/testconstructors.cpp" $, 4131 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4132:
4133: $check_ $(@expr1073744566 "cppcheck-2.8/test/testconstructors.cpp" $, 4133 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i %= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4134:
|
4139:
4140: ;
4141: $if $(@expr1073744567 $!@expr1073744568 $assertEquals $(@expr1073744569 "cppcheck-2.8/test/testconstructors.cpp" $, 4141 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4142:
4143: $check_ $(@expr1073744572 "cppcheck-2.8/test/testconstructors.cpp" $, 4143 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i += SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4144:
|
4149:
4150: ;
4151: $if $(@expr1073744573 $!@expr1073744574 $assertEquals $(@expr1073744575 "cppcheck-2.8/test/testconstructors.cpp" $, 4151 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4152:
4153: $check_ $(@expr1073744578 "cppcheck-2.8/test/testconstructors.cpp" $, 4153 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i -= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4154:
|
4159:
4160: ;
4161: $if $(@expr1073744579 $!@expr1073744580 $assertEquals $(@expr1073744581 "cppcheck-2.8/test/testconstructors.cpp" $, 4161 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4162:
4163: $check_ $(@expr1073744584 "cppcheck-2.8/test/testconstructors.cpp" $, 4163 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i <<= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4164:
|
4169:
4170: ;
4171: $if $(@expr1073744585 $!@expr1073744586 $assertEquals $(@expr1073744587 "cppcheck-2.8/test/testconstructors.cpp" $, 4171 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4172:
4173: $check_ $(@expr1073744590 "cppcheck-2.8/test/testconstructors.cpp" $, 4173 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i >>= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4174:
|
4179:
4180: ;
4181: $if $(@expr1073744591 $!@expr1073744592 $assertEquals $(@expr1073744593 "cppcheck-2.8/test/testconstructors.cpp" $, 4181 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4182:
4183: $check_ $(@expr1073744596 "cppcheck-2.8/test/testconstructors.cpp" $, 4183 $, "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i ^= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" $)
4184:
|
4189:
4190: ;
4191: $if $(@expr1073744597 $!@expr1073744598 $assertEquals $(@expr1073744599 "cppcheck-2.8/test/testconstructors.cpp" $, 4191 $, "" $, errout@var100 .@expr2722 str (@expr2723 ) $) $) { $return ; }
4192: }
4193:
4194: void uninitComparisonAssignment ( ) {
4195: $check_ $(@expr1073744602 "cppcheck-2.8/test/testconstructors.cpp" $, 4195 $, "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b = (true == SetValue());\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" $)
4196:
|
4204:
4205: ;
4206: $if $(@expr1073744603 $!@expr1073744604 $assertEquals $(@expr1073744605 "cppcheck-2.8/test/testconstructors.cpp" $, 4206 $, "" $, errout@var100 .@expr2782 str (@expr2783 ) $) $) { $return ; }
4207:
4208: $check_ $(@expr1073744608 "cppcheck-2.8/test/testconstructors.cpp" $, 4208 $, "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b |= (true != SetValue());\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" $)
4209:
|
4217:
4218: ;
4219: $if $(@expr1073744609 $!@expr1073744610 $assertEquals $(@expr1073744611 "cppcheck-2.8/test/testconstructors.cpp" $, 4219 $, "" $, errout@var100 .@expr2782 str (@expr2783 ) $) $) { $return ; }
4220:
4221: $check_ $(@expr1073744614 "cppcheck-2.8/test/testconstructors.cpp" $, 4221 $, "struct C {\n    int x;\n    C() {\n        bool b = (0 < SetValue());\n    }\n    int SetValue() { return x = 1; }\n};" $)
4222:
|
4226:
4227: ;
4228: $if $(@expr1073744615 $!@expr1073744616 $assertEquals $(@expr1073744617 "cppcheck-2.8/test/testconstructors.cpp" $, 4228 $, "" $, errout@var100 .@expr2782 str (@expr2783 ) $) $) { $return ; }
4229:
4230: $check_ $(@expr1073744620 "cppcheck-2.8/test/testconstructors.cpp" $, 4230 $, "struct C {\n    int x;\n    C() {\n        bool b = (0 <= SetValue());\n    }\n    int SetValue() { return x = 1; }\n};" $)
4231:
|
4235:
4236: ;
4237: $if $(@expr1073744621 $!@expr1073744622 $assertEquals $(@expr1073744623 "cppcheck-2.8/test/testconstructors.cpp" $, 4237 $, "" $, errout@var100 .@expr2782 str (@expr2783 ) $) $) { $return ; }
4238:
4239: $check_ $(@expr1073744626 "cppcheck-2.8/test/testconstructors.cpp" $, 4239 $, "struct C {\n    int x;\n    C() {\n        bool b = (0 > SetValue());\n    }\n    int SetValue() { return x = 1; }\n};" $)
4240:
|
4244:
4245: ;
4246: $if $(@expr1073744627 $!@expr1073744628 $assertEquals $(@expr1073744629 "cppcheck-2.8/test/testconstructors.cpp" $, 4246 $, "" $, errout@var100 .@expr2782 str (@expr2783 ) $) $) { $return ; }
4247:
4248: $check_ $(@expr1073744632 "cppcheck-2.8/test/testconstructors.cpp" $, 4248 $, "struct C {\n    int x;\n    C() {\n        bool b = (0 >= SetValue());\n    }\n    int SetValue() { return x = 1; }\n};" $)
4249:
|
4253:
4254: ;
4255: $if $(@expr1073744633 $!@expr1073744634 $assertEquals $(@expr1073744635 "cppcheck-2.8/test/testconstructors.cpp" $, 4255 $, "" $, errout@var100 .@expr2782 str (@expr2783 ) $) $) { $return ; }
4256: }
4257:
4258: void uninitTemplate1 ( ) {
4259: $check_ $(@expr1073744638 "cppcheck-2.8/test/testconstructors.cpp" $, 4259 $, "template <class A, class T> class C;\ntemplate <class A>\nclass C<A, void> {\n  public:\n    C() : b(0) { }\n    C(A* a) : b(a) { }\n  private:\n    A* b;\n};\ntemplate <class A, class T>\nclass C {\n  private:\n    A* b;\n};" $)
4260:
|
4271:
4272: ;
4273: $if $(@expr1073744639 $!@expr1073744640 $assertEquals $(@expr1073744641 "cppcheck-2.8/test/testconstructors.cpp" $, 4273 $, "" $, errout@var100 .@expr2818 str (@expr2819 ) $) $) { $return ; }
4274:
4275: $check_ $(@expr1073744644 "cppcheck-2.8/test/testconstructors.cpp" $, 4275 $, "template<class T> class A{};\ntemplate<class T1, class T2> class B{};\ntemplate<class T1, class T2>\nclass A<B<T1, T2>> {\n  public:\n    A();\n    bool m_value;\n};\ntemplate<class T1, class T2>\nA<B<T1, T2>>::A() : m_value(false) {}" $)
4276:
|
4283:
4284: ;
4285: $if $(@expr1073744645 $!@expr1073744646 $assertEquals $(@expr1073744647 "cppcheck-2.8/test/testconstructors.cpp" $, 4285 $, "" $, errout@var100 .@expr2818 str (@expr2819 ) $) $) { $return ; }
4286: }
4287:
4288: void unknownTemplateType ( ) {
4289: $check_ $(@expr1073744650 "cppcheck-2.8/test/testconstructors.cpp" $, 4289 $, "template <typename T> class A {\nprivate:\n    T m;\npublic:\n    A& operator=() { return *this; }\n};\nA<decltype(SOMETHING)> a;" $)
4290:
|
4294:
4295: ;
4296: $if $(@expr1073744651 $!@expr1073744652 $assertEquals $(@expr1073744653 "cppcheck-2.8/test/testconstructors.cpp" $, 4296 $, "" $, errout@var100 .@expr1073744654 str (@expr1073744655 ) $) $) { $return ; }
4297: }
4298:
4299: } ;
4300:
4301: $namespace ${ TestConstructors instance_TestConstructors@var129 $; $}



##Value flow
Line 37
  countTests always !<=-1
Line 38
  fails_counter always !<=-1
Line 39
  todos_counter always !<=-1
Line 40
  succeeded_todos_counter always !<=-1
Line 42
  mVerbose always {!<=-1,!>=2}
Line 50
  quiet_tests always {!<=-1,!>=2}
Line 52
  = always 0
  0 always 0
Line 54
  ( always {!<=-1,!>=2}
Line 55
  , always !<=-1
  linenr always !<=-1
Line 57
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
  , always {!<=-1,!>=2}
  condition always {!<=-1,!>=2}
Line 60
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 61
  != always {!<=-1,!>=2}
Line 63
  expected always !symbolic=(actual)
Line 65
  actual always !symbolic=(expected)
Line 67
  linenr always !<=-1
Line 69
  return always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
Line 74
  , always !<=-1
  linenr always !<=-1
Line 76
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 77
  , always !<=-1
  linenr always !<=-1
Line 78
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 79
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 80
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 81
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 82
  , always !<=-1
  linenr always !<=-1
Line 84
  , always !<=-1
  linenr always !<=-1
Line 86
  , always !<=-1
  linenr always !<=-1
Line 88
  , always !<=-1
  linenr always !<=-1
Line 90
  , always !<=-1
  linenr always !<=-1
Line 91
  , always !<=-1
  linenr always !<=-1
Line 92
  , always !<=-1
  linenr always !<=-1
Line 96
  v always {!<=-1,!>=2}
Line 97
  mVerbose always {!<=-1,!>=2}
  = {!<=-1,!>=2,0@55}
  v {!<=-1,!>=2,0@55}
Line 101
  = always "{file}:{line}:{severity}:{message}"
  "{file}:{line}:{severity}:{message}" always "{file}:{line}:{severity}:{message}"
Line 102
  = always "{file}:{line}:note:{info}"
  "{file}:{line}:note:{info}" always "{file}:{line}:note:{info}"
Line 116
  ( always !<=-1
Line 34
  "TestConstructors" always "TestConstructors"
Line 40
  , always 0
  inconclusive always {!<=-1,!>=2}
  = always 0
  false always 0
Line 42
  "" always ""
Line 44
  inconclusive {!<=-1,!>=2,1@20}
Line 47
  & {lifetime[Address]=(settings),!0}
  this always !0
Line 48
  code possible {"template <typename T> class A {\nprivate:\n    T m;\npublic:\n    A& operator=() { return *this; }\n};\nA<decltype(SOMETHING)> a;"@1,"template <class A, class T> class C;\ntemplate <class A>\nclass C<A, void> {\n  public:\n    C() : b(0) { }\n    C(A* a) : b(a) { }\n  private:\n    A* b;\n};\ntemplate <class A, class T>\nclass C {\n  private:\n    A* b;\n};"@2,"template<class T> class A{};\ntemplate<class T1, class T2> class B{};\ntemplate<class T1, class T2>\nclass A<B<T1, T2>> {\n  public:\n    A();\n    bool m_value;\n};\ntemplate<class T1, class T2>\nA<B<T1, T2>>::A() : m_value(false) {}"@3,"struct C {\n    int x;\n    C() {\n        bool b = true;\n        b = (true == SetValue());\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"@4,"struct C {\n    int x;\n    C() {\n        bool b = false;\n        b |= (true != SetValue());\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"@5,"struct C {\n    int x;\n    C() {\n        bool b = (0 < SetValue());\n    }\n    int SetValue() { return x = 1; }\n};"@6,"struct C {\n    int x;\n    C() {\n        bool b = (0 <= SetValue());\n    }\n    int SetValue() { return x = 1; }\n};"@7,"struct C {\n    int x;\n    C() {\n        bool b = (0 > SetValue());\n    }\n    int SetValue() { return x = 1; }\n};"@8,"struct C {\n    int x;\n    C() {\n        bool b = (0 >= SetValue());\n    }\n    int SetValue() { return x = 1; }\n};"@9,"struct C {\n    int x;\n    C() {\n        bool b = true;\n        b &= SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"@10}
Line 49
  ( always {!<=-1,!>=2}
  file inconclusive {"cppcheck-2.8/test/testconstructors.cpp"@1,"cppcheck-2.8/test/testconstructors.cpp"@2,"cppcheck-2.8/test/testconstructors.cpp"@3,"cppcheck-2.8/test/testconstructors.cpp"@4,"cppcheck-2.8/test/testconstructors.cpp"@5,"cppcheck-2.8/test/testconstructors.cpp"@6,"cppcheck-2.8/test/testconstructors.cpp"@7,"cppcheck-2.8/test/testconstructors.cpp"@8,"cppcheck-2.8/test/testconstructors.cpp"@9,"cppcheck-2.8/test/testconstructors.cpp"@10}
  line inconclusive {4289@1,4259@2,4275@3,4195@4,4208@5,4221@6,4230@7,4239@8,4248@9,4087@10}
  "test.cpp" always "test.cpp"
Line 52
  & {lifetime[Address]=(tokenizer),!0}
  & {lifetime[Address]=(settings),!0}
  this always !0
Line 58
  "" always ""
Line 61
  & {lifetime[Address]=(s),!0}
  this always !0
Line 62
  code possible {"class Fred: public TObject\n{\npublic:\n    Fred() { }\nprivate:\n    int x;\n};"@67,"struct S {\n    S& operator=(const S& s) { return *this; }\n    std::mutex m;\n};\n"@178,"struct S {\n    explicit S(const std::shared_ptr<S>& sp) {\n        set(*sp);\n    }\n    double get() const {\n        return d;\n    }\n    void set(const S& rhs) {\n        d = rhs.get();\n    }\n    double d;\n};"@179}
Line 63
  ( always {!<=-1,!>=2}
  file inconclusive {"cppcheck-2.8/test/testconstructors.cpp"@67,"cppcheck-2.8/test/testconstructors.cpp"@178,"cppcheck-2.8/test/testconstructors.cpp"@179}
  line inconclusive {3482@67,1922@178,1876@179}
  "test.cpp" always "test.cpp"
Line 66
  & {lifetime[Address]=(tokenizer),!0}
  & {lifetime[Address]=(s),!0}
  this always !0
Line 74
  ( always {!<=-1,!>=2}
  "simple1" always "simple1"
  false always 0
  false always 0
Line 75
  ( always {!<=-1,!>=2}
  "simple2" always "simple2"
  false always 0
  false always 0
Line 76
  ( always {!<=-1,!>=2}
  "simple3" always "simple3"
  false always 0
  false always 0
Line 77
  ( always {!<=-1,!>=2}
  "simple4" always "simple4"
  false always 0
  false always 0
Line 78
  ( always {!<=-1,!>=2}
  "simple5" always "simple5"
  false always 0
  false always 0
Line 79
  ( always {!<=-1,!>=2}
  "simple6" always "simple6"
  false always 0
  false always 0
Line 80
  ( always {!<=-1,!>=2}
  "simple7" always "simple7"
  false always 0
  false always 0
Line 81
  ( always {!<=-1,!>=2}
  "simple8" always "simple8"
  false always 0
  false always 0
Line 82
  ( always {!<=-1,!>=2}
  "simple9" always "simple9"
  false always 0
  false always 0
Line 83
  ( always {!<=-1,!>=2}
  "simple10" always "simple10"
  false always 0
  false always 0
Line 84
  ( always {!<=-1,!>=2}
  "simple11" always "simple11"
  false always 0
  false always 0
Line 85
  ( always {!<=-1,!>=2}
  "simple12" always "simple12"
  false always 0
  false always 0
Line 86
  ( always {!<=-1,!>=2}
  "simple13" always "simple13"
  false always 0
  false always 0
Line 87
  ( always {!<=-1,!>=2}
  "simple14" always "simple14"
  false always 0
  false always 0
Line 88
  ( always {!<=-1,!>=2}
  "simple15" always "simple15"
  false always 0
  false always 0
Line 89
  ( always {!<=-1,!>=2}
  "simple16" always "simple16"
  false always 0
  false always 0
Line 90
  ( always {!<=-1,!>=2}
  "simple17" always "simple17"
  false always 0
  false always 0
Line 92
  ( always {!<=-1,!>=2}
  "noConstructor1" always "noConstructor1"
  false always 0
  false always 0
Line 93
  ( always {!<=-1,!>=2}
  "noConstructor2" always "noConstructor2"
  false always 0
  false always 0
Line 94
  ( always {!<=-1,!>=2}
  "noConstructor3" always "noConstructor3"
  false always 0
  false always 0
Line 95
  ( always {!<=-1,!>=2}
  "noConstructor4" always "noConstructor4"
  false always 0
  false always 0
Line 96
  ( always {!<=-1,!>=2}
  "noConstructor5" always "noConstructor5"
  false always 0
  false always 0
Line 97
  ( always {!<=-1,!>=2}
  "noConstructor6" always "noConstructor6"
  false always 0
  false always 0
Line 98
  ( always {!<=-1,!>=2}
  "noConstructor7" always "noConstructor7"
  false always 0
  false always 0
Line 99
  ( always {!<=-1,!>=2}
  "noConstructor8" always "noConstructor8"
  false always 0
  false always 0
Line 100
  ( always {!<=-1,!>=2}
  "noConstructor9" always "noConstructor9"
  false always 0
  false always 0
Line 101
  ( always {!<=-1,!>=2}
  "noConstructor10" always "noConstructor10"
  false always 0
  false always 0
Line 102
  ( always {!<=-1,!>=2}
  "noConstructor11" always "noConstructor11"
  false always 0
  false always 0
Line 103
  ( always {!<=-1,!>=2}
  "noConstructor12" always "noConstructor12"
  false always 0
  false always 0
Line 104
  ( always {!<=-1,!>=2}
  "noConstructor13" always "noConstructor13"
  false always 0
  false always 0
Line 105
  ( always {!<=-1,!>=2}
  "noConstructor14" always "noConstructor14"
  false always 0
  false always 0
Line 106
  ( always {!<=-1,!>=2}
  "noConstructor15" always "noConstructor15"
  false always 0
  false always 0
Line 108
  ( always {!<=-1,!>=2}
  "forwardDeclaration" always "forwardDeclaration"
  false always 0
  false always 0
Line 110
  ( always {!<=-1,!>=2}
  "initvar_with_this" always "initvar_with_this"
  false always 0
  false always 0
Line 111
  ( always {!<=-1,!>=2}
  "initvar_if" always "initvar_if"
  false always 0
  false always 0
Line 112
  ( always {!<=-1,!>=2}
  "initvar_operator_eq1" always "initvar_operator_eq1"
  false always 0
  false always 0
Line 113
  ( always {!<=-1,!>=2}
  "initvar_operator_eq2" always "initvar_operator_eq2"
  false always 0
  false always 0
Line 114
  ( always {!<=-1,!>=2}
  "initvar_operator_eq3" always "initvar_operator_eq3"
  false always 0
  false always 0
Line 115
  ( always {!<=-1,!>=2}
  "initvar_operator_eq4" always "initvar_operator_eq4"
  false always 0
  false always 0
Line 116
  ( always {!<=-1,!>=2}
  "initvar_operator_eq5" always "initvar_operator_eq5"
  false always 0
  false always 0
Line 117
  ( always {!<=-1,!>=2}
  "initvar_operator_eq6" always "initvar_operator_eq6"
  false always 0
  false always 0
Line 118
  ( always {!<=-1,!>=2}
  "initvar_operator_eq7" always "initvar_operator_eq7"
  false always 0
  false always 0
Line 119
  ( always {!<=-1,!>=2}
  "initvar_same_classname" always "initvar_same_classname"
  false always 0
  false always 0
Line 120
  ( always {!<=-1,!>=2}
  "initvar_chained_assign" always "initvar_chained_assign"
  false always 0
  false always 0
Line 121
  ( always {!<=-1,!>=2}
  "initvar_2constructors" always "initvar_2constructors"
  false always 0
  false always 0
Line 122
  ( always {!<=-1,!>=2}
  "initvar_constvar" always "initvar_constvar"
  false always 0
  false always 0
Line 123
  ( always {!<=-1,!>=2}
  "initvar_staticvar" always "initvar_staticvar"
  false always 0
  false always 0
Line 124
  ( always {!<=-1,!>=2}
  "initvar_brace_init" always "initvar_brace_init"
  false always 0
  false always 0
Line 125
  ( always {!<=-1,!>=2}
  "initvar_union" always "initvar_union"
  false always 0
  false always 0
Line 126
  ( always {!<=-1,!>=2}
  "initvar_delegate" always "initvar_delegate"
  false always 0
  false always 0
Line 127
  ( always {!<=-1,!>=2}
  "initvar_delegate2" always "initvar_delegate2"
  false always 0
  false always 0
Line 128
  ( always {!<=-1,!>=2}
  "initvar_derived_class" always "initvar_derived_class"
  false always 0
  false always 0
Line 130
  ( always {!<=-1,!>=2}
  "initvar_private_constructor" always "initvar_private_constructor"
  false always 0
  false always 0
Line 131
  ( always {!<=-1,!>=2}
  "initvar_copy_constructor" always "initvar_copy_constructor"
  false always 0
  false always 0
Line 132
  ( always {!<=-1,!>=2}
  "initvar_nested_constructor" always "initvar_nested_constructor"
  false always 0
  false always 0
Line 133
  ( always {!<=-1,!>=2}
  "initvar_nocopy1" always "initvar_nocopy1"
  false always 0
  false always 0
Line 134
  ( always {!<=-1,!>=2}
  "initvar_nocopy2" always "initvar_nocopy2"
  false always 0
  false always 0
Line 135
  ( always {!<=-1,!>=2}
  "initvar_nocopy3" always "initvar_nocopy3"
  false always 0
  false always 0
Line 136
  ( always {!<=-1,!>=2}
  "initvar_nocopy4" always "initvar_nocopy4"
  false always 0
  false always 0
Line 137
  ( always {!<=-1,!>=2}
  "initvar_with_member_function_this" always "initvar_with_member_function_this"
  false always 0
  false always 0
Line 139
  ( always {!<=-1,!>=2}
  "initvar_destructor" always "initvar_destructor"
  false always 0
  false always 0
Line 140
  ( always {!<=-1,!>=2}
  "initvar_func_ret_func_ptr" always "initvar_func_ret_func_ptr"
  false always 0
  false always 0
Line 142
  ( always {!<=-1,!>=2}
  "initvar_alias" always "initvar_alias"
  false always 0
  false always 0
Line 144
  ( always {!<=-1,!>=2}
  "initvar_templateMember" always "initvar_templateMember"
  false always 0
  false always 0
Line 145
  ( always {!<=-1,!>=2}
  "initvar_smartptr" always "initvar_smartptr"
  false always 0
  false always 0
Line 147
  ( always {!<=-1,!>=2}
  "operatorEqSTL" always "operatorEqSTL"
  false always 0
  false always 0
Line 149
  ( always {!<=-1,!>=2}
  "uninitVar1" always "uninitVar1"
  false always 0
  false always 0
Line 150
  ( always {!<=-1,!>=2}
  "uninitVar2" always "uninitVar2"
  false always 0
  false always 0
Line 151
  ( always {!<=-1,!>=2}
  "uninitVar3" always "uninitVar3"
  false always 0
  false always 0
Line 152
  ( always {!<=-1,!>=2}
  "uninitVar4" always "uninitVar4"
  false always 0
  false always 0
Line 153
  ( always {!<=-1,!>=2}
  "uninitVar5" always "uninitVar5"
  false always 0
  false always 0
Line 154
  ( always {!<=-1,!>=2}
  "uninitVar6" always "uninitVar6"
  false always 0
  false always 0
Line 155
  ( always {!<=-1,!>=2}
  "uninitVar7" always "uninitVar7"
  false always 0
  false always 0
Line 156
  ( always {!<=-1,!>=2}
  "uninitVar8" always "uninitVar8"
  false always 0
  false always 0
Line 157
  ( always {!<=-1,!>=2}
  "uninitVar9" always "uninitVar9"
  false always 0
  false always 0
Line 158
  ( always {!<=-1,!>=2}
  "uninitVar10" always "uninitVar10"
  false always 0
  false always 0
Line 159
  ( always {!<=-1,!>=2}
  "uninitVar11" always "uninitVar11"
  false always 0
  false always 0
Line 160
  ( always {!<=-1,!>=2}
  "uninitVar12" always "uninitVar12"
  false always 0
  false always 0
Line 161
  ( always {!<=-1,!>=2}
  "uninitVar13" always "uninitVar13"
  false always 0
  false always 0
Line 162
  ( always {!<=-1,!>=2}
  "uninitVar14" always "uninitVar14"
  false always 0
  false always 0
Line 163
  ( always {!<=-1,!>=2}
  "uninitVar15" always "uninitVar15"
  false always 0
  false always 0
Line 164
  ( always {!<=-1,!>=2}
  "uninitVar16" always "uninitVar16"
  false always 0
  false always 0
Line 165
  ( always {!<=-1,!>=2}
  "uninitVar17" always "uninitVar17"
  false always 0
  false always 0
Line 166
  ( always {!<=-1,!>=2}
  "uninitVar18" always "uninitVar18"
  false always 0
  false always 0
Line 167
  ( always {!<=-1,!>=2}
  "uninitVar19" always "uninitVar19"
  false always 0
  false always 0
Line 168
  ( always {!<=-1,!>=2}
  "uninitVar20" always "uninitVar20"
  false always 0
  false always 0
Line 169
  ( always {!<=-1,!>=2}
  "uninitVar21" always "uninitVar21"
  false always 0
  false always 0
Line 170
  ( always {!<=-1,!>=2}
  "uninitVar22" always "uninitVar22"
  false always 0
  false always 0
Line 171
  ( always {!<=-1,!>=2}
  "uninitVar23" always "uninitVar23"
  false always 0
  false always 0
Line 172
  ( always {!<=-1,!>=2}
  "uninitVar24" always "uninitVar24"
  false always 0
  false always 0
Line 173
  ( always {!<=-1,!>=2}
  "uninitVar25" always "uninitVar25"
  false always 0
  false always 0
Line 174
  ( always {!<=-1,!>=2}
  "uninitVar26" always "uninitVar26"
  false always 0
  false always 0
Line 175
  ( always {!<=-1,!>=2}
  "uninitVar27" always "uninitVar27"
  false always 0
  false always 0
Line 176
  ( always {!<=-1,!>=2}
  "uninitVar28" always "uninitVar28"
  false always 0
  false always 0
Line 177
  ( always {!<=-1,!>=2}
  "uninitVar29" always "uninitVar29"
  false always 0
  false always 0
Line 178
  ( always {!<=-1,!>=2}
  "uninitVar30" always "uninitVar30"
  false always 0
  false always 0
Line 179
  ( always {!<=-1,!>=2}
  "uninitVar31" always "uninitVar31"
  false always 0
  false always 0
Line 180
  ( always {!<=-1,!>=2}
  "uninitVar32" always "uninitVar32"
  false always 0
  false always 0
Line 181
  ( always {!<=-1,!>=2}
  "uninitVar33" always "uninitVar33"
  false always 0
  false always 0
Line 182
  ( always {!<=-1,!>=2}
  "uninitVar34" always "uninitVar34"
  false always 0
  false always 0
Line 183
  ( always {!<=-1,!>=2}
  "uninitVarEnum1" always "uninitVarEnum1"
  false always 0
  false always 0
Line 184
  ( always {!<=-1,!>=2}
  "uninitVarEnum2" always "uninitVarEnum2"
  false always 0
  false always 0
Line 185
  ( always {!<=-1,!>=2}
  "uninitVarStream" always "uninitVarStream"
  false always 0
  false always 0
Line 186
  ( always {!<=-1,!>=2}
  "uninitVarTypedef" always "uninitVarTypedef"
  false always 0
  false always 0
Line 187
  ( always {!<=-1,!>=2}
  "uninitVarMemset" always "uninitVarMemset"
  false always 0
  false always 0
Line 188
  ( always {!<=-1,!>=2}
  "uninitVarArray1" always "uninitVarArray1"
  false always 0
  false always 0
Line 189
  ( always {!<=-1,!>=2}
  "uninitVarArray2" always "uninitVarArray2"
  false always 0
  false always 0
Line 190
  ( always {!<=-1,!>=2}
  "uninitVarArray3" always "uninitVarArray3"
  false always 0
  false always 0
Line 191
  ( always {!<=-1,!>=2}
  "uninitVarArray4" always "uninitVarArray4"
  false always 0
  false always 0
Line 192
  ( always {!<=-1,!>=2}
  "uninitVarArray5" always "uninitVarArray5"
  false always 0
  false always 0
Line 193
  ( always {!<=-1,!>=2}
  "uninitVarArray6" always "uninitVarArray6"
  false always 0
  false always 0
Line 194
  ( always {!<=-1,!>=2}
  "uninitVarArray7" always "uninitVarArray7"
  false always 0
  false always 0
Line 195
  ( always {!<=-1,!>=2}
  "uninitVarArray8" always "uninitVarArray8"
  false always 0
  false always 0
Line 196
  ( always {!<=-1,!>=2}
  "uninitVarArray9" always "uninitVarArray9"
  false always 0
  false always 0
Line 197
  ( always {!<=-1,!>=2}
  "uninitVarArray2D" always "uninitVarArray2D"
  false always 0
  false always 0
Line 198
  ( always {!<=-1,!>=2}
  "uninitVarArray3D" always "uninitVarArray3D"
  false always 0
  false always 0
Line 199
  ( always {!<=-1,!>=2}
  "uninitVarCpp11Init1" always "uninitVarCpp11Init1"
  false always 0
  false always 0
Line 200
  ( always {!<=-1,!>=2}
  "uninitVarCpp11Init2" always "uninitVarCpp11Init2"
  false always 0
  false always 0
Line 201
  ( always {!<=-1,!>=2}
  "uninitVarStruct1" always "uninitVarStruct1"
  false always 0
  false always 0
Line 202
  ( always {!<=-1,!>=2}
  "uninitVarStruct2" always "uninitVarStruct2"
  false always 0
  false always 0
Line 203
  ( always {!<=-1,!>=2}
  "uninitVarUnion1" always "uninitVarUnion1"
  false always 0
  false always 0
Line 204
  ( always {!<=-1,!>=2}
  "uninitVarUnion2" always "uninitVarUnion2"
  false always 0
  false always 0
Line 205
  ( always {!<=-1,!>=2}
  "uninitMissingFuncDef" always "uninitMissingFuncDef"
  false always 0
  false always 0
Line 206
  ( always {!<=-1,!>=2}
  "privateCtor1" always "privateCtor1"
  false always 0
  false always 0
Line 207
  ( always {!<=-1,!>=2}
  "privateCtor2" always "privateCtor2"
  false always 0
  false always 0
Line 208
  ( always {!<=-1,!>=2}
  "function" always "function"
  false always 0
  false always 0
Line 209
  ( always {!<=-1,!>=2}
  "uninitVarPublished" always "uninitVarPublished"
  false always 0
  false always 0
Line 210
  ( always {!<=-1,!>=2}
  "uninitVarInheritClassInit" always "uninitVarInheritClassInit"
  false always 0
  false always 0
Line 211
  ( always {!<=-1,!>=2}
  "uninitOperator" always "uninitOperator"
  false always 0
  false always 0
Line 212
  ( always {!<=-1,!>=2}
  "uninitFunction1" always "uninitFunction1"
  false always 0
  false always 0
Line 213
  ( always {!<=-1,!>=2}
  "uninitFunction2" always "uninitFunction2"
  false always 0
  false always 0
Line 214
  ( always {!<=-1,!>=2}
  "uninitFunction3" always "uninitFunction3"
  false always 0
  false always 0
Line 215
  ( always {!<=-1,!>=2}
  "uninitFunction4" always "uninitFunction4"
  false always 0
  false always 0
Line 216
  ( always {!<=-1,!>=2}
  "uninitFunction5" always "uninitFunction5"
  false always 0
  false always 0
Line 217
  ( always {!<=-1,!>=2}
  "uninitSameClassName" always "uninitSameClassName"
  false always 0
  false always 0
Line 218
  ( always {!<=-1,!>=2}
  "uninitFunctionOverload" always "uninitFunctionOverload"
  false always 0
  false always 0
Line 219
  ( always {!<=-1,!>=2}
  "uninitVarOperatorEqual" always "uninitVarOperatorEqual"
  false always 0
  false always 0
Line 220
  ( always {!<=-1,!>=2}
  "uninitVarPointer" always "uninitVarPointer"
  false always 0
  false always 0
Line 221
  ( always {!<=-1,!>=2}
  "uninitConstVar" always "uninitConstVar"
  false always 0
  false always 0
Line 222
  ( always {!<=-1,!>=2}
  "constructors_crash1" always "constructors_crash1"
  false always 0
  false always 0
Line 223
  ( always {!<=-1,!>=2}
  "classWithOperatorInName" always "classWithOperatorInName"
  false always 0
  false always 0
Line 224
  ( always {!<=-1,!>=2}
  "templateConstructor" always "templateConstructor"
  false always 0
  false always 0
Line 225
  ( always {!<=-1,!>=2}
  "typedefArray" always "typedefArray"
  false always 0
  false always 0
Line 227
  ( always {!<=-1,!>=2}
  "uninitAssignmentWithOperator" always "uninitAssignmentWithOperator"
  false always 0
  false always 0
Line 228
  ( always {!<=-1,!>=2}
  "uninitCompoundAssignment" always "uninitCompoundAssignment"
  false always 0
  false always 0
Line 229
  ( always {!<=-1,!>=2}
  "uninitComparisonAssignment" always "uninitComparisonAssignment"
  false always 0
  false always 0
Line 231
  ( always {!<=-1,!>=2}
  "uninitTemplate1" always "uninitTemplate1"
  false always 0
  false always 0
Line 233
  ( always {!<=-1,!>=2}
  "unknownTemplateType" always "unknownTemplateType"
  false always 0
  false always 0
Line 238
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  238 always 238
  "class Fred\n{\npublic:\n    int i;\n};" always "class Fred\n{\npublic:\n    int i;\n};"
Line 243
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  243 always 243
  "" always ""
Line 245
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  245 always 245
  "class Fred\n{\nprivate:\n    int i;\n};" always "class Fred\n{\nprivate:\n    int i;\n};"
Line 250
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  250 always 250
  "[test.cpp:1]: (style) The class 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n" always "[test.cpp:1]: (style) The class 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n"
Line 252
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  252 always 252
  "struct Fred\n{\nprivate:\n    int i;\n};" always "struct Fred\n{\nprivate:\n    int i;\n};"
Line 257
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  257 always 257
  "[test.cpp:1]: (style) The struct 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n" always "[test.cpp:1]: (style) The struct 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n"
Line 262
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  262 always 262
  "class Fred\n{\npublic:\n    Fred() : i(0) { }\n    Fred(Fred const & other) : i(other.i) {}\n    Fred(Fred && other) : i(other.i) {}\n    int i;\n};" always "class Fred\n{\npublic:\n    Fred() : i(0) { }\n    Fred(Fred const & other) : i(other.i) {}\n    Fred(Fred && other) : i(other.i) {}\n    int i;\n};"
Line 270
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  270 always 270
  "" always ""
Line 272
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  272 always 272
  "class Fred\n{\npublic:\n    Fred() { i = 0; }\n    Fred(Fred const & other) {i=other.i}\n    Fred(Fred && other) {i=other.i}\n    int i;\n};" always "class Fred\n{\npublic:\n    Fred() { i = 0; }\n    Fred(Fred const & other) {i=other.i}\n    Fred(Fred && other) {i=other.i}\n    int i;\n};"
Line 280
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  280 always 280
  "" always ""
Line 282
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  282 always 282
  "class Fred\n{\npublic:\n    Fred() { }\n    Fred(Fred const & other) {}\n    Fred(Fred && other) {}\n    int i;\n};" always "class Fred\n{\npublic:\n    Fred() { }\n    Fred(Fred const & other) {}\n    Fred(Fred && other) {}\n    int i;\n};"
Line 290
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  290 always 290
  "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the copy constructor.\n[test.cpp:6]: (warning) Member variable 'Fred::i' is not initialized in the move constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the copy constructor.\n[test.cpp:6]: (warning) Member variable 'Fred::i' is not initialized in the move constructor.\n"
Line 294
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  294 always 294
  "struct Fred\n{\n    Fred() { }\n    Fred(Fred const & other) {}\n    Fred(Fred && other) {}\n    int i;\n};" always "struct Fred\n{\n    Fred() { }\n    Fred(Fred const & other) {}\n    Fred(Fred && other) {}\n    int i;\n};"
Line 301
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  301 always 301
  "[test.cpp:3]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the move constructor.\n" always "[test.cpp:3]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the move constructor.\n"
Line 308
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  308 always 308
  "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred() :i(0)\n{ }" always "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred() :i(0)\n{ }"
Line 315
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  315 always 315
  "" always ""
Line 317
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  317 always 317
  "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred()\n{ i = 0; }" always "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred()\n{ i = 0; }"
Line 324
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  324 always 324
  "" always ""
Line 326
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  326 always 326
  "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred()\n{ }" always "struct Fred\n{\n    Fred();\n    int i;\n};\nFred::Fred()\n{ }"
Line 333
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  333 always 333
  "[test.cpp:6]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" always "[test.cpp:6]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n"
Line 338
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  338 always 338
  "struct Fred\n{\n    Fred();\n    explicit Fred(int _i);\n    Fred(Fred const & other);\n    int i;\n};\nFred::Fred()\n{ }\nFred::Fred(int _i)\n{\n    i = _i;\n}\n" always "struct Fred\n{\n    Fred();\n    explicit Fred(int _i);\n    Fred(Fred const & other);\n    int i;\n};\nFred::Fred()\n{ }\nFred::Fred(int _i)\n{\n    i = _i;\n}\n"
  true always 1
Line 351
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  351 always 351
  "[test.cpp:8]: (warning, inconclusive) Member variable 'Fred::i' is not initialized in the constructor.\n" always "[test.cpp:8]: (warning, inconclusive) Member variable 'Fred::i' is not initialized in the constructor.\n"
Line 355
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  355 always 355
  "namespace Nsp\n{\n    class B { };\n}\nclass Altren : public Nsp::B\n{\npublic:\n    Altren () : Nsp::B(), mValue(0)\n    {\n    }\nprivate:\n    int mValue;\n};" always "namespace Nsp\n{\n    class B { };\n}\nclass Altren : public Nsp::B\n{\npublic:\n    Altren () : Nsp::B(), mValue(0)\n    {\n    }\nprivate:\n    int mValue;\n};"
Line 368
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  368 always 368
  "" always ""
Line 372
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  372 always 372
  "template <class T> struct A {\n    A<T>() { x = 0; }\n    A<T>(const T & t) { x = t.x; }\nprivate:\n    int x;\n};" always "template <class T> struct A {\n    A<T>() { x = 0; }\n    A<T>(const T & t) { x = t.x; }\nprivate:\n    int x;\n};"
Line 378
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  378 always 378
  "" always ""
Line 380
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  380 always 380
  "template <class T> struct A {\n    A<T>() : x(0) { }\n    A<T>(const T & t) : x(t.x) { }\nprivate:\n    int x;\n};" always "template <class T> struct A {\n    A<T>() : x(0) { }\n    A<T>(const T & t) : x(t.x) { }\nprivate:\n    int x;\n};"
Line 386
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  386 always 386
  "" always ""
Line 388
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  388 always 388
  "template <class T> struct A {\n    A<T>() : x(0) { }\n    A<T>(const T & t) : x(t.x) { }\nprivate:\n    int x;\n    int y;\n};" always "template <class T> struct A {\n    A<T>() : x(0) { }\n    A<T>(const T & t) : x(t.x) { }\nprivate:\n    int x;\n    int y;\n};"
Line 395
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  395 always 395
  "[test.cpp:2]: (warning) Member variable 'A::y' is not initialized in the constructor.\n[test.cpp:3]: (warning) Member variable 'A::y' is not initialized in the constructor.\n" always "[test.cpp:2]: (warning) Member variable 'A::y' is not initialized in the constructor.\n[test.cpp:3]: (warning) Member variable 'A::y' is not initialized in the constructor.\n"
Line 400
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  400 always 400
  "class Fred;\nstruct Fred {\n    int x;\n};" always "class Fred;\nstruct Fred {\n    int x;\n};"
Line 404
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  404 always 404
  "" always ""
Line 408
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  408 always 408
  "struct Fred { int x; };\nclass Barney { Fred fred; };\nclass Wilma { struct Betty { int x; } betty; };" always "struct Fred { int x; };\nclass Barney { Fred fred; };\nclass Wilma { struct Betty { int x; } betty; };"
Line 411
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  411 always 411
  "[test.cpp:2]: (style) The class 'Barney' does not declare a constructor although it has private member variables which likely require initialization.\n[test.cpp:3]: (style) The class 'Wilma' does not declare a constructor although it has private member variables which likely require initialization.\n" always "[test.cpp:2]: (style) The class 'Barney' does not declare a constructor although it has private member variables which likely require initialization.\n[test.cpp:3]: (style) The class 'Wilma' does not declare a constructor although it has private member variables which likely require initialization.\n"
Line 416
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  416 always 416
  "class Unknown::Fred {\npublic:\n    Fred() : x(0) { }\nprivate:\n    int x;\n};" always "class Unknown::Fred {\npublic:\n    Fred() : x(0) { }\nprivate:\n    int x;\n};"
Line 422
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  422 always 422
  "" always ""
Line 426
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  426 always 426
  "class Fred {\npublic:\n    Fred() = default;\nprivate:\n    int x;\n};" always "class Fred {\npublic:\n    Fred() = default;\nprivate:\n    int x;\n};"
Line 432
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  432 always 432
  "[test.cpp:3]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n"
Line 434
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  434 always 434
  "struct S {\n    S() = default;\n    ~S() = default;\n    S(const S&) = default;\n    S(S&&) = default;\n    S& operator=(const S&) = default;\n    S& operator=(S&&) = default;\n    int i;\n};\n" always "struct S {\n    S() = default;\n    ~S() = default;\n    S(const S&) = default;\n    S(S&&) = default;\n    S& operator=(const S&) = default;\n    S& operator=(S&&) = default;\n    int i;\n};\n"
Line 443
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  443 always 443
  "[test.cpp:2]: (warning) Member variable 'S::i' is not initialized in the constructor.\n" always "[test.cpp:2]: (warning) Member variable 'S::i' is not initialized in the constructor.\n"
Line 447
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  447 always 447
  "class Fred {\npublic:\n    Fred() {}\nprivate:\n    int x = 0;\n    int y = f();\n    int z{0};\n    int (*pf[2])(){nullptr, nullptr};\n    int a[2][3] = {{1,2,3},{4,5,6}};\n    int b{1}, c{2};\n    int d, e{3};\n    int f{4}, g;\n};" always "class Fred {\npublic:\n    Fred() {}\nprivate:\n    int x = 0;\n    int y = f();\n    int z{0};\n    int (*pf[2])(){nullptr, nullptr};\n    int a[2][3] = {{1,2,3},{4,5,6}};\n    int b{1}, c{2};\n    int d, e{3};\n    int f{4}, g;\n};"
Line 460
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  460 always 460
  "[test.cpp:3]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n[test.cpp:3]: (warning) Member variable 'Fred::g' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n[test.cpp:3]: (warning) Member variable 'Fred::g' is not initialized in the constructor.\n"
Line 465
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  465 always 465
  "class Fred {\n    int x;\npublic:\n    Fred() { Init(); }\n    void Init(int i = 0);\n};\nvoid Fred::Init(int i) { x = i; }" always "class Fred {\n    int x;\npublic:\n    Fred() { Init(); }\n    void Init(int i = 0);\n};\nvoid Fred::Init(int i) { x = i; }"
Line 472
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  472 always 472
  "" always ""
Line 474
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  474 always 474
  "class Fred {\n    int x;\n    int y;\npublic:\n    Fred() { Init(0); }\n    void Init(int i, int j = 0);\n};\nvoid Fred::Init(int i, int j) { x = i; y = j; }" always "class Fred {\n    int x;\n    int y;\npublic:\n    Fred() { Init(0); }\n    void Init(int i, int j = 0);\n};\nvoid Fred::Init(int i, int j) { x = i; y = j; }"
Line 482
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  482 always 482
  "" always ""
Line 486
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  486 always 486
  "class Fred {\n    int x=1;\n    int *y=0;\n};" always "class Fred {\n    int x=1;\n    int *y=0;\n};"
Line 490
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  490 always 490
  "" always ""
Line 494
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  494 always 494
  "class Fred : public Base<A, B> {public:    Fred()\n    :Base<A, B>(1),\n     x(1)\n    {}\nprivate:\n    int x;\n};" always "class Fred : public Base<A, B> {public:    Fred()\n    :Base<A, B>(1),\n     x(1)\n    {}\nprivate:\n    int x;\n};"
Line 503
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  503 always 503
  "" always ""
Line 505
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  505 always 505
  "class Fred : public Base<A, B> {public:    Fred()\n    :Base<A, B>{1},\n     x{1}\n    {}\nprivate:\n    int x;\n};" always "class Fred : public Base<A, B> {public:    Fred()\n    :Base<A, B>{1},\n     x{1}\n    {}\nprivate:\n    int x;\n};"
Line 514
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  514 always 514
  "" always ""
Line 518
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  518 always 518
  "struct S {\n    int i{};\n    S() = default;\n    S(const S& s) {}\n    S& operator=(const S& s) { return *this; }\n};\n" always "struct S {\n    int i{};\n    S() = default;\n    S(const S& s) {}\n    S& operator=(const S& s) { return *this; }\n};\n"
  true always 1
Line 524
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  524 always 524
  "[test.cpp:4]: (warning, inconclusive) Member variable 'S::i' is not assigned in the copy constructor. Should it be copied?\n[test.cpp:5]: (warning) Member variable 'S::i' is not assigned a value in 'S::operator='.\n" always "[test.cpp:4]: (warning, inconclusive) Member variable 'S::i' is not assigned in the copy constructor. Should it be copied?\n[test.cpp:5]: (warning) Member variable 'S::i' is not assigned a value in 'S::operator='.\n"
Line 528
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  528 always 528
  "struct S {\n    int i;\n    S() : i(0) {}\n    S(const S& s) {}\n    S& operator=(const S& s) { return *this; }\n};\n" always "struct S {\n    int i;\n    S() : i(0) {}\n    S(const S& s) {}\n    S& operator=(const S& s) { return *this; }\n};\n"
Line 534
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  534 always 534
  "[test.cpp:4]: (warning) Member variable 'S::i' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'S::i' is not assigned a value in 'S::operator='.\n" always "[test.cpp:4]: (warning) Member variable 'S::i' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'S::i' is not assigned a value in 'S::operator='.\n"
Line 540
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  540 always 540
  "class Base {\npublic:\n    virtual void Copy(const Base& Src) = 0;\n};\nclass Derived : public Base {\npublic:\n    Derived() : i(0) {}\n    Derived(const Derived& Src);\n    void Copy(const Base& Src) override;\n    int i;\n};\nDerived::Derived(const Derived& Src) {\n    Copy(Src);\n}\nvoid Derived::Copy(const Base& Src) {\n    auto d = dynamic_cast<const Derived&>(Src);\n    i = d.i;\n}\n" always "class Base {\npublic:\n    virtual void Copy(const Base& Src) = 0;\n};\nclass Derived : public Base {\npublic:\n    Derived() : i(0) {}\n    Derived(const Derived& Src);\n    void Copy(const Base& Src) override;\n    int i;\n};\nDerived::Derived(const Derived& Src) {\n    Copy(Src);\n}\nvoid Derived::Copy(const Base& Src) {\n    auto d = dynamic_cast<const Derived&>(Src);\n    i = d.i;\n}\n"
Line 558
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  558 always 558
  "" always ""
Line 562
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  562 always 562
  "class A\n{\npublic:\n  int member;\n};\nclass B\n{\npublic:\n  B(const decltype(A::member)& x, const decltype(A::member)& y) : x(x), y(y) {}\nprivate:\n  const decltype(A::member)& x;\n  const decltype(A::member)& y;\n};\n" always "class A\n{\npublic:\n  int member;\n};\nclass B\n{\npublic:\n  B(const decltype(A::member)& x, const decltype(A::member)& y) : x(x), y(y) {}\nprivate:\n  const decltype(A::member)& x;\n  const decltype(A::member)& y;\n};\n"
Line 575
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  575 always 575
  "" always ""
Line 580
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  580 always 580
  "class Fred\n{\n    int i;\n};" always "class Fred\n{\n    int i;\n};"
Line 584
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  584 always 584
  "[test.cpp:1]: (style) The class 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n" always "[test.cpp:1]: (style) The class 'Fred' does not declare a constructor although it has private member variables which likely require initialization.\n"
Line 588
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  588 always 588
  "class Fred\n{\npublic:\n    static void foobar();\n};\n\nvoid Fred::foobar()\n{ }" always "class Fred\n{\npublic:\n    static void foobar();\n};\n\nvoid Fred::foobar()\n{ }"
Line 596
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  596 always 596
  "" always ""
Line 600
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  600 always 600
  "class Fred\n{\nprivate:\n    static int foobar;\n};" always "class Fred\n{\nprivate:\n    static int foobar;\n};"
Line 605
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  605 always 605
  "" always ""
Line 609
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  609 always 609
  "class Fred\n{\npublic:\n    int foobar;\n};" always "class Fred\n{\npublic:\n    int foobar;\n};"
Line 614
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  614 always 614
  "" always ""
Line 618
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  618 always 618
  "namespace Foo\n{\n    int i;\n}" always "namespace Foo\n{\n    int i;\n}"
Line 622
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  622 always 622
  "" always ""
Line 627
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  627 always 627
  "class Ccpucycles {\n    friend class foo::bar;\n    Ccpucycles() :\n    m_v(0), m_b(true)\n    {}\nprivate:\n    cpucyclesT m_v;\n    bool m_b;\n};" always "class Ccpucycles {\n    friend class foo::bar;\n    Ccpucycles() :\n    m_v(0), m_b(true)\n    {}\nprivate:\n    cpucyclesT m_v;\n    bool m_b;\n};"
Line 636
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  636 always 636
  "" always ""
Line 641
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  641 always 641
  "short bar;\nclass foo;" always "short bar;\nclass foo;"
Line 643
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  643 always 643
  "" always ""
Line 648
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  648 always 648
  "class LineSegment;\nclass PointArray  { };\nvoid* tech_ = NULL;" always "class LineSegment;\nclass PointArray  { };\nvoid* tech_ = NULL;"
Line 651
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  651 always 651
  "" always ""
Line 656
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  656 always 656
  "class CGreeting : public CGreetingBase<char> {\npublic:\n CGreeting() : CGreetingBase<char>(), MessageSet(false) {}\nprivate:\n bool MessageSet;\n};" always "class CGreeting : public CGreetingBase<char> {\npublic:\n CGreeting() : CGreetingBase<char>(), MessageSet(false) {}\nprivate:\n bool MessageSet;\n};"
Line 662
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  662 always 662
  "" always ""
Line 667
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  667 always 667
  "class A : public wxDialog\n{\nprivate:\n    DECLARE_EVENT_TABLE()\npublic:\n    A(wxWindow *parent,\n      wxWindowID id = 1,\n      const wxString &title = wxT(),\n      const wxPoint& pos = wxDefaultPosition,\n      const wxSize& size = wxDefaultSize,\n      long style = wxDIALOG_NO_PARENT | wxMINIMIZE_BOX | wxMAXIMIZE_BOX | wxCLOSE_BOX);\n    virtual ~A();\nprivate:\n    wxTimer *WxTimer1;\n};" always "class A : public wxDialog\n{\nprivate:\n    DECLARE_EVENT_TABLE()\npublic:\n    A(wxWindow *parent,\n      wxWindowID id = 1,\n      const wxString &title = wxT(),\n      const wxPoint& pos = wxDefaultPosition,\n      const wxSize& size = wxDefaultSize,\n      long style = wxDIALOG_NO_PARENT | wxMINIMIZE_BOX | wxMAXIMIZE_BOX | wxCLOSE_BOX);\n    virtual ~A();\nprivate:\n    wxTimer *WxTimer1;\n};"
Line 682
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  682 always 682
  "" always ""
Line 687
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  687 always 687
  "class Fred { int x; };\nunion U { int y; Fred fred; };" always "class Fred { int x; };\nunion U { int y; Fred fred; };"
Line 689
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  689 always 689
  "" always ""
Line 693
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  693 always 693
  "class Fred { int x{0}; };" always "class Fred { int x{0}; };"
Line 694
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  694 always 694
  "" always ""
Line 696
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  696 always 696
  "class Fred { int x=0; };" always "class Fred { int x=0; };"
Line 697
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  697 always 697
  "" always ""
Line 699
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  699 always 699
  "class Fred { int x[1]={0}; };" always "class Fred { int x[1]={0}; };"
Line 700
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  700 always 700
  "" always ""
Line 702
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  702 always 702
  "class Fred { int x[1]{0}; };" always "class Fred { int x[1]{0}; };"
Line 703
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  703 always 703
  "" always ""
Line 707
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  707 always 707
  "struct C { int v; };\nstruct B { C c[5] = {}; };\nstruct A {\n    A() {}\n    B b;\n};\n" always "struct C { int v; };\nstruct B { C c[5] = {}; };\nstruct A {\n    A() {}\n    B b;\n};\n"
Line 713
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  713 always 713
  "" always ""
Line 717
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  717 always 717
  "typedef void (*Func)();\nclass C {\npublic:\n    void f();\nprivate:\n    Func fp = nullptr;\n};\n" always "typedef void (*Func)();\nclass C {\npublic:\n    void f();\nprivate:\n    Func fp = nullptr;\n};\n"
Line 724
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  724 always 724
  "" always ""
Line 728
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  728 always 728
  "class C {\nprivate:\n    int i1 = 0;\n    int i2;\n};\n" always "class C {\nprivate:\n    int i1 = 0;\n    int i2;\n};\n"
Line 733
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  733 always 733
  "[test.cpp:4]: (warning) Member variable 'C::i2' is not initialized.\n" always "[test.cpp:4]: (warning) Member variable 'C::i2' is not initialized.\n"
Line 735
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  735 always 735
  "class C {\nprivate:\n    int i1;\n    int i2;\n};\n" always "class C {\nprivate:\n    int i1;\n    int i2;\n};\n"
Line 740
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  740 always 740
  "[test.cpp:1]: (style) The class 'C' does not declare a constructor although it has private member variables which likely require initialization.\n" always "[test.cpp:1]: (style) The class 'C' does not declare a constructor although it has private member variables which likely require initialization.\n"
Line 742
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  742 always 742
  "class C {\npublic:\n    C(int i) : i1(i) {}\nprivate:\n    int i1;\n    int i2;\n};\n" always "class C {\npublic:\n    C(int i) : i1(i) {}\nprivate:\n    int i1;\n    int i2;\n};\n"
Line 749
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  749 always 749
  "[test.cpp:3]: (warning) Member variable 'C::i2' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'C::i2' is not initialized in the constructor.\n"
Line 755
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  755 always 755
  "class foo;\nint bar;" always "class foo;\nint bar;"
Line 757
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  757 always 757
  "" always ""
Line 759
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  759 always 759
  "class foo;\nclass foo;" always "class foo;\nclass foo;"
Line 761
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  761 always 761
  "" always ""
Line 763
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  763 always 763
  "class foo{};\nclass foo;" always "class foo{};\nclass foo;"
Line 765
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  765 always 765
  "" always ""
Line 769
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  769 always 769
  "struct Fred\n{\n    Fred()\n    { this->i = 0; }\n    int i;\n};" always "struct Fred\n{\n    Fred()\n    { this->i = 0; }\n    int i;\n};"
Line 775
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  775 always 775
  "" always ""
Line 779
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  779 always 779
  "struct Fred\n{\n    Fred()\n    {\n        if (true)\n            i = 0;\n        else\n            i = 1;\n    }\n    int i;\n};" always "struct Fred\n{\n    Fred()\n    {\n        if (true)\n            i = 0;\n        else\n            i = 1;\n    }\n    int i;\n};"
Line 790
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  790 always 790
  "" always ""
Line 796
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  796 always 796
  "struct Fred\n{\n    int i;\n\n    Fred()\n    { i = 0; }\n\n    Fred(const Fred &fred)\n    { *this = fred; }\n\n    const Fred & operator=(const Fred &fred)\n    { i = fred.i; return *this; }\n};" always "struct Fred\n{\n    int i;\n\n    Fred()\n    { i = 0; }\n\n    Fred(const Fred &fred)\n    { *this = fred; }\n\n    const Fred & operator=(const Fred &fred)\n    { i = fred.i; return *this; }\n};"
Line 809
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  809 always 809
  "" always ""
Line 811
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  811 always 811
  "struct Fred {\n    int i;\n\n    Fred(const Fred &fred)\n    { (*this) = fred; }\n\n    const Fred & operator=(const Fred &fred)\n    { i = fred.i; return *this; }\n};" always "struct Fred {\n    int i;\n\n    Fred(const Fred &fred)\n    { (*this) = fred; }\n\n    const Fred & operator=(const Fred &fred)\n    { i = fred.i; return *this; }\n};"
Line 820
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  820 always 820
  "" always ""
Line 822
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  822 always 822
  "struct A\n{\n  A() : i(0), j(0) {}\n\n  A &operator=(const int &value)\n  {\n    i = value;\n    return (*this);\n  }\n\n  int i;\n  int j;\n};" always "struct A\n{\n  A() : i(0), j(0) {}\n\n  A &operator=(const int &value)\n  {\n    i = value;\n    return (*this);\n  }\n\n  int i;\n  int j;\n};"
Line 835
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  835 always 835
  "" always ""
Line 840
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  840 always 840
  "struct Fred\n{\n    Fred() { i = 0; }\n    void operator=(const Fred &fred) { }\n    int i;\n};" always "struct Fred\n{\n    Fred() { i = 0; }\n    void operator=(const Fred &fred) { }\n    int i;\n};"
Line 846
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  846 always 846
  "[test.cpp:4]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:4]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n"
Line 850
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  850 always 850
  "struct Fred\n{\n    Fred() { Init(); }\n    void operator=(const Fred &fred) { Init(); }\nprivate:\n    void Init() { i = 0; }\n    int i;\n};" always "struct Fred\n{\n    Fred() { Init(); }\n    void operator=(const Fred &fred) { Init(); }\nprivate:\n    void Init() { i = 0; }\n    int i;\n};"
Line 858
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  858 always 858
  "" always ""
Line 862
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  862 always 862
  "class Fred\n{\n    int i;\npublic:\n    Fred() : i(5) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};" always "class Fred\n{\n    int i;\npublic:\n    Fred() : i(5) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};"
Line 875
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  875 always 875
  "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n"
Line 877
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  877 always 877
  "class Fred\n{\n    int * i;\npublic:\n    Fred() : i(NULL) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};" always "class Fred\n{\n    int * i;\npublic:\n    Fred() : i(NULL) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};"
Line 890
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  890 always 890
  "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n"
Line 892
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  892 always 892
  "class Fred\n{\n    const int * i;\npublic:\n    Fred() : i(NULL) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};" always "class Fred\n{\n    const int * i;\npublic:\n    Fred() : i(NULL) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};"
Line 905
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  905 always 905
  "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:6]: (warning) Member variable 'Fred::i' is not assigned a value in 'Fred::operator='.\n"
Line 907
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  907 always 907
  "class Fred\n{\n    const int i;\npublic:\n    Fred() : i(5) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};" always "class Fred\n{\n    const int i;\npublic:\n    Fred() : i(5) { }\n    Fred & operator=(const Fred &fred)\n    {\n        if (&fred != this)\n        {\n        }\n        return *this\n    }\n};"
Line 920
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  920 always 920
  "" always ""
Line 924
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  924 always 924
  "class Fred {\n    int i;\npublic:\n    Fred() : i(5) { }\n    ~Fred() { }\n    Fred(const Fred &fred) : i(fred.i) { }\n    Fred & operator=(const Fred &rhs) {\n        Fred(rhs).swap(*this);\n        return *this;\n    }\n};" always "class Fred {\n    int i;\npublic:\n    Fred() : i(5) { }\n    ~Fred() { }\n    Fred(const Fred &fred) : i(fred.i) { }\n    Fred & operator=(const Fred &rhs) {\n        Fred(rhs).swap(*this);\n        return *this;\n    }\n};"
Line 935
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  935 always 935
  "" always ""
Line 939
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  939 always 939
  "struct Fred {\n    uint8_t data;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};" always "struct Fred {\n    uint8_t data;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};"
  true always 1
Line 945
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  945 always 945
  "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::data' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::data' is not assigned a value in 'Fred::operator='.\n"
Line 947
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  947 always 947
  "struct Fred {\n    std::vector<int> ints;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};" always "struct Fred {\n    std::vector<int> ints;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};"
  true always 1
Line 953
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  953 always 953
  "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::ints' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::ints' is not assigned a value in 'Fred::operator='.\n"
Line 955
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  955 always 955
  "struct Fred {\n    Data data;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};" always "struct Fred {\n    Data data;\n    Fred & operator=(const Fred &rhs) {\n        return *this;\n    }\n};"
  true always 1
Line 961
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  961 always 961
  "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::data' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:3]: (warning, inconclusive) Member variable 'Fred::data' is not assigned a value in 'Fred::operator='.\n"
Line 965
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  965 always 965
  "struct B {\n    virtual void CopyImpl(const B& Src) = 0;\n    void Copy(const B& Src);\n};\nstruct D : B {};\nstruct DD : D {\n    void CopyImpl(const B& Src) override;\n    DD& operator=(const DD& Src);\n    int i{};\n};\nDD& DD::operator=(const DD& Src) {\n    if (this != &Src)\n        Copy(Src);\n    return *this;\n}\n" always "struct B {\n    virtual void CopyImpl(const B& Src) = 0;\n    void Copy(const B& Src);\n};\nstruct D : B {};\nstruct DD : D {\n    void CopyImpl(const B& Src) override;\n    DD& operator=(const DD& Src);\n    int i{};\n};\nDD& DD::operator=(const DD& Src) {\n    if (this != &Src)\n        Copy(Src);\n    return *this;\n}\n"
  true always 1
Line 980
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  980 always 980
  "" always ""
Line 986
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  986 always 986
  "void func1()\n{\n    class Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    class Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}" always "void func1()\n{\n    class Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    class Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}"
Line 1004
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1004 always 1004
  "" always ""
Line 1006
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1006 always 1006
  "void func1()\n{\n    struct Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    class Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}" always "void func1()\n{\n    struct Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    class Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}"
Line 1024
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1024 always 1024
  "" always ""
Line 1026
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1026 always 1026
  "void func1()\n{\n    struct Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    struct Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}" always "void func1()\n{\n    struct Fred\n    {\n        int a;\n        Fred() { a = 0; }\n    };\n}\n\nvoid func2()\n{\n    struct Fred\n    {\n        int b;\n        Fred() { b = 0; }\n    };\n}"
Line 1044
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1044 always 1044
  "" always ""
Line 1046
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1046 always 1046
  "class Foo {\n    void func1()\n    {\n        struct Fred\n        {\n            int a;\n            Fred() { a = 0; }\n        };\n    }\n\n    void func2()\n    {\n        struct Fred\n        {\n            int b;\n            Fred() { b = 0; }\n        };\n    }\n};" always "class Foo {\n    void func1()\n    {\n        struct Fred\n        {\n            int a;\n            Fred() { a = 0; }\n        };\n    }\n\n    void func2()\n    {\n        struct Fred\n        {\n            int b;\n            Fred() { b = 0; }\n        };\n    }\n};"
Line 1066
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1066 always 1066
  "" always ""
Line 1068
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1068 always 1068
  "class Foo {\n    void func1()\n    {\n        struct Fred\n        {\n            int a;\n            Fred() { }\n        };\n    }\n\n    void func2()\n    {\n        struct Fred\n        {\n            int b;\n            Fred() { }\n        };\n    }\n};" always "class Foo {\n    void func1()\n    {\n        struct Fred\n        {\n            int a;\n            Fred() { }\n        };\n    }\n\n    void func2()\n    {\n        struct Fred\n        {\n            int b;\n            Fred() { }\n        };\n    }\n};"
Line 1088
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1088 always 1088
  "[test.cpp:7]: (warning) Member variable 'Fred::a' is not initialized in the constructor.\n[test.cpp:16]: (warning) Member variable 'Fred::b' is not initialized in the constructor.\n" always "[test.cpp:7]: (warning) Member variable 'Fred::a' is not initialized in the constructor.\n[test.cpp:16]: (warning) Member variable 'Fred::b' is not initialized in the constructor.\n"
Line 1095
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1095 always 1095
  "struct c\n{\n    c();\n\n    int m_iMyInt1;\n    int m_iMyInt2;\n}\n\nc::c()\n{\n    m_iMyInt1 = m_iMyInt2 = 0;\n}" always "struct c\n{\n    c();\n\n    int m_iMyInt1;\n    int m_iMyInt2;\n}\n\nc::c()\n{\n    m_iMyInt1 = m_iMyInt2 = 0;\n}"
Line 1108
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1108 always 1108
  "" always ""
Line 1113
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1113 always 1113
  "struct c\n{\n    c();\n    explicit c(bool b);\n    void InitInt();\n\n    int m_iMyInt;\n    int m_bMyBool;\n}\n\nc::c()\n{\n    m_bMyBool = false;\n    InitInt();}\n\nc::c(bool b)\n{\n    m_bMyBool = b;\n    InitInt();\n}\n\nvoid c::InitInt()\n{\n    m_iMyInt = 0;\n}" always "struct c\n{\n    c();\n    explicit c(bool b);\n    void InitInt();\n\n    int m_iMyInt;\n    int m_bMyBool;\n}\n\nc::c()\n{\n    m_bMyBool = false;\n    InitInt();}\n\nc::c(bool b)\n{\n    m_bMyBool = b;\n    InitInt();\n}\n\nvoid c::InitInt()\n{\n    m_iMyInt = 0;\n}"
Line 1141
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1141 always 1141
  "" always ""
Line 1146
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1146 always 1146
  "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred() : s(NULL)\n{ }" always "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred() : s(NULL)\n{ }"
Line 1153
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1153 always 1153
  "" always ""
Line 1155
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1155 always 1155
  "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred()\n{ s = NULL; }" always "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred()\n{ s = NULL; }"
Line 1162
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1162 always 1162
  "" always ""
Line 1164
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1164 always 1164
  "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred()\n{ }" always "struct Fred\n{\n    const char *s;\n    Fred();\n};\nFred::Fred()\n{ }"
Line 1171
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1171 always 1171
  "[test.cpp:6]: (warning) Member variable 'Fred::s' is not initialized in the constructor.\n" always "[test.cpp:6]: (warning) Member variable 'Fred::s' is not initialized in the constructor.\n"
Line 1176
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1176 always 1176
  "class Fred\n{\npublic:\n    Fred() { }\n    static void *p;\n};" always "class Fred\n{\npublic:\n    Fred() { }\n    static void *p;\n};"
Line 1182
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1182 always 1182
  "" always ""
Line 1187
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1187 always 1187
  "class C\n{\npublic:\n  C() {}\n\nprivate:\n  std::map<int, double> * values_{};\n};" always "class C\n{\npublic:\n  C() {}\n\nprivate:\n  std::map<int, double> * values_{};\n};"
Line 1195
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1195 always 1195
  "" always ""
Line 1200
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1200 always 1200
  "class Fred\n{\n    union\n    {\n        int a;\n        char b[4];\n    } U;\npublic:\n    Fred()\n    {\n        U.a = 0;\n    }\n};" always "class Fred\n{\n    union\n    {\n        int a;\n        char b[4];\n    } U;\npublic:\n    Fred()\n    {\n        U.a = 0;\n    }\n};"
Line 1213
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1213 always 1213
  "" always ""
Line 1215
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1215 always 1215
  "class Fred\n{\n    union\n    {\n        int a;\n        char b[4];\n    } U;\npublic:\n    Fred()\n    {\n    }\n};" always "class Fred\n{\n    union\n    {\n        int a;\n        char b[4];\n    } U;\npublic:\n    Fred()\n    {\n    }\n};"
Line 1227
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1227 always 1227
  "[test.cpp:9]: (warning) Member variable 'Fred::U' is not initialized in the constructor.\n" always "[test.cpp:9]: (warning) Member variable 'Fred::U' is not initialized in the constructor.\n"
  "" always ""
Line 1232
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1232 always 1232
  "class A {\n    int number;\npublic:\n    A(int n) { }\n    A() : A(42) {}\n};" always "class A {\n    int number;\npublic:\n    A(int n) { }\n    A() : A(42) {}\n};"
Line 1238
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1238 always 1238
  "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'A::number' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'A::number' is not initialized in the constructor.\n"
Line 1241
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1241 always 1241
  "class A {\n    int number;\npublic:\n    A(int n) { number = n; }\n    A() : A(42) {}\n};" always "class A {\n    int number;\npublic:\n    A(int n) { number = n; }\n    A() : A(42) {}\n};"
Line 1247
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1247 always 1247
  "" always ""
Line 1249
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1249 always 1249
  "class A {\n    int number;\npublic:\n    A(int n) : A() { }\n    A() {}\n};" always "class A {\n    int number;\npublic:\n    A(int n) : A() { }\n    A() {}\n};"
  true always 1
Line 1255
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1255 always 1255
  "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning, inconclusive) Member variable 'A::number' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning, inconclusive) Member variable 'A::number' is not initialized in the constructor.\n"
Line 1258
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1258 always 1258
  "class A {\n    int number;\npublic:\n    A(int n) : A() { }\n    A() { number = 42; }\n};" always "class A {\n    int number;\npublic:\n    A(int n) : A() { }\n    A() { number = 42; }\n};"
Line 1264
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1264 always 1264
  "" always ""
Line 1266
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1266 always 1266
  "class A {\n    int number;\npublic:\n    A(int n) { }\n    A() : A{42} {}\n};" always "class A {\n    int number;\npublic:\n    A(int n) { }\n    A() : A{42} {}\n};"
Line 1272
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1272 always 1272
  "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'A::number' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'A::number' is not initialized in the constructor.\n"
Line 1275
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1275 always 1275
  "class A {\n    int number;\npublic:\n    A(int n) { number = n; }\n    A() : A{42} {}\n};" always "class A {\n    int number;\npublic:\n    A(int n) { number = n; }\n    A() : A{42} {}\n};"
Line 1281
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1281 always 1281
  "" always ""
Line 1283
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1283 always 1283
  "class A {\n    int number;\npublic:\n    A(int n) : A{} { }\n    A() {}\n};" always "class A {\n    int number;\npublic:\n    A(int n) : A{} { }\n    A() {}\n};"
  true always 1
Line 1289
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1289 always 1289
  "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning, inconclusive) Member variable 'A::number' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'A::number' is not initialized in the constructor.\n[test.cpp:5]: (warning, inconclusive) Member variable 'A::number' is not initialized in the constructor.\n"
Line 1292
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1292 always 1292
  "class A {\n    int number;\npublic:\n    A(int n) : A{} { }\n    A() { number = 42; }\n};" always "class A {\n    int number;\npublic:\n    A(int n) : A{} { }\n    A() { number = 42; }\n};"
Line 1298
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1298 always 1298
  "" always ""
Line 1301
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1301 always 1301
  "struct Foo {\n  Foo();\n  Foo(int foo);\n  int foo_;\n};\nFoo::Foo() : Foo(0) {}\nFoo::Foo(int foo) : foo_(foo) {}" always "struct Foo {\n  Foo();\n  Foo(int foo);\n  int foo_;\n};\nFoo::Foo() : Foo(0) {}\nFoo::Foo(int foo) : foo_(foo) {}"
Line 1308
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1308 always 1308
  "" always ""
Line 1311
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1311 always 1311
  "class A {\nprivate:\n    int _a;\npublic:\n    A(const int a) noexcept : _a{a} {}\n    A() noexcept;\n};\n\nA::A() noexcept: A(0) {}" always "class A {\nprivate:\n    int _a;\npublic:\n    A(const int a) noexcept : _a{a} {}\n    A() noexcept;\n};\n\nA::A() noexcept: A(0) {}"
Line 1320
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1320 always 1320
  "" always ""
Line 1323
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1323 always 1323
  "class A {\nprivate:\n    int _a;\npublic:\n    A(int a) : _a(a) {}\n    A(float a) : A(int(a)) {}\n};" always "class A {\nprivate:\n    int _a;\npublic:\n    A(int a) : _a(a) {}\n    A(float a) : A(int(a)) {}\n};"
Line 1330
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1330 always 1330
  "" always ""
Line 1333
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1333 always 1333
  "struct F{};\nstruct Foo {\n    Foo(int a, F&& f, int b = 21) : _a(a), _b(b), _f(f) {}\n    Foo(int x, const char* value) : Foo(x, F(), 42) {}\n    Foo(int x, int* value) : Foo(x, F()) {}\n    int _a;\n    int _b;\n    F _f;\n};" always "struct F{};\nstruct Foo {\n    Foo(int a, F&& f, int b = 21) : _a(a), _b(b), _f(f) {}\n    Foo(int x, const char* value) : Foo(x, F(), 42) {}\n    Foo(int x, int* value) : Foo(x, F()) {}\n    int _a;\n    int _b;\n    F _f;\n};"
Line 1342
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1342 always 1342
  "" always ""
Line 1346
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1346 always 1346
  "class Foo {\npublic:\n    explicit Foo(const Bar bar);\n    Foo(const std::string& id);\n    virtual ~RtpSession() { }\nprotected:\n    bool a;\n    uint16_t b;\n};\n\nFoo::Foo(const Bar var)\n    : Foo(bar->getId())\n{\n}\n\nFoo::Foo(const std::string& id)\n    : a(true)\n    , b(0)\n{\n}" always "class Foo {\npublic:\n    explicit Foo(const Bar bar);\n    Foo(const std::string& id);\n    virtual ~RtpSession() { }\nprotected:\n    bool a;\n    uint16_t b;\n};\n\nFoo::Foo(const Bar var)\n    : Foo(bar->getId())\n{\n}\n\nFoo::Foo(const std::string& id)\n    : a(true)\n    , b(0)\n{\n}"
Line 1366
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1366 always 1366
  "" always ""
Line 1370
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1370 always 1370
  "class Base {\npublic:\n  virtual void foo() = 0;\n  int x;\n};\n\nclass Derived: public Base {\npublic:\n  Derived() {}\n  void foo() override;\n};" always "class Base {\npublic:\n  virtual void foo() = 0;\n  int x;\n};\n\nclass Derived: public Base {\npublic:\n  Derived() {}\n  void foo() override;\n};"
Line 1381
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1381 always 1381
  "[test.cpp:9]: (warning) Member variable 'Base::x' is not initialized in the constructor. Maybe it should be initialized directly in the class Base?\n" always "[test.cpp:9]: (warning) Member variable 'Base::x' is not initialized in the constructor. Maybe it should be initialized directly in the class Base?\n"
Line 1383
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1383 always 1383
  "struct A {\n    char ca;\n    A& operator=(const A& a) {\n        ca = a.ca;\n        return *this;\n    }\n};\nstruct B : public A {\n    char cb;\n    B& operator=(const B& b) {\n        A::operator=(b);\n        return *this;\n    }\n};\n" always "struct A {\n    char ca;\n    A& operator=(const A& a) {\n        ca = a.ca;\n        return *this;\n    }\n};\nstruct B : public A {\n    char cb;\n    B& operator=(const B& b) {\n        A::operator=(b);\n        return *this;\n    }\n};\n"
Line 1397
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1397 always 1397
  "[test.cpp:10]: (warning) Member variable 'B::cb' is not assigned a value in 'B::operator='.\n" always "[test.cpp:10]: (warning) Member variable 'B::cb' is not assigned a value in 'B::operator='.\n"
Line 1399
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1399 always 1399
  "struct A {\n    char ca;\n    A& operator=(const A& a) {\n        return *this;\n    }\n};\nstruct B : public A {\n    char cb;\n    B& operator=(const B& b) {\n        A::operator=(b);\n        return *this;\n    }\n};\n" always "struct A {\n    char ca;\n    A& operator=(const A& a) {\n        return *this;\n    }\n};\nstruct B : public A {\n    char cb;\n    B& operator=(const B& b) {\n        A::operator=(b);\n        return *this;\n    }\n};\n"
Line 1412
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1412 always 1412
  "[test.cpp:3]: (warning) Member variable 'A::ca' is not assigned a value in 'A::operator='.\n[test.cpp:9]: (warning) Member variable 'B::cb' is not assigned a value in 'B::operator='.\n[test.cpp:9]: (warning) Member variable 'B::ca' is not assigned a value in 'B::operator='.\n" always "[test.cpp:3]: (warning) Member variable 'A::ca' is not assigned a value in 'A::operator='.\n[test.cpp:9]: (warning) Member variable 'B::cb' is not assigned a value in 'B::operator='.\n[test.cpp:9]: (warning) Member variable 'B::ca' is not assigned a value in 'B::operator='.\n"
Line 1421
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1421 always 1421
  "class Fred\n{\nprivate:\n    int var;\n    Fred();\n};\nFred::Fred()\n{ }" always "class Fred\n{\nprivate:\n    int var;\n    Fred();\n};\nFred::Fred()\n{ }"
Line 1429
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1429 always 1429
  "[test.cpp:7]: (warning) Member variable 'Fred::var' is not initialized in the constructor.\n" always "[test.cpp:7]: (warning) Member variable 'Fred::var' is not initialized in the constructor.\n"
Line 1432
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1432 always 1432
  "class Fred\n{\nprivate:\n    int var;\n    Fred();\n};\nFred::Fred()\n{ }" always "class Fred\n{\nprivate:\n    int var;\n    Fred();\n};\nFred::Fred()\n{ }"
Line 1440
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1440 always 1440
  "" always ""
Line 1444
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1444 always 1444
  "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred() { };\n    Fred(const Fred &) { };\n};" always "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred() { };\n    Fred(const Fred &) { };\n};"
Line 1452
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1452 always 1452
  "" always ""
Line 1454
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1454 always 1454
  "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred() { };\n    Fred(const Fred &) { };\n};" always "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred() { };\n    Fred(const Fred &) { };\n};"
  true always 1
Line 1462
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1462 always 1462
  "[test.cpp:7]: (warning, inconclusive) Member variable 'Fred::var' is not assigned in the copy constructor. Should it be copied?\n" always "[test.cpp:7]: (warning, inconclusive) Member variable 'Fred::var' is not assigned in the copy constructor. Should it be copied?\n"
Line 1464
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1464 always 1464
  "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred();\n    Fred(const Fred &);\n};\nFred::Fred() { };\nFred::Fred(const Fred &) { };\n" always "class Fred\n{\nprivate:\n    std::string var;\npublic:\n    Fred();\n    Fred(const Fred &);\n};\nFred::Fred() { };\nFred::Fred(const Fred &) { };\n"
  true always 1
Line 1474
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1474 always 1474
  "[test.cpp:10]: (warning, inconclusive) Member variable 'Fred::var' is not assigned in the copy constructor. Should it be copied?\n" always "[test.cpp:10]: (warning, inconclusive) Member variable 'Fred::var' is not assigned in the copy constructor. Should it be copied?\n"
Line 1476
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1476 always 1476
  "class Baz {};\nclass Bar {\npublic:\n    explicit Bar(Baz* pBaz = NULL) : i(0) {}\n    Bar(const Bar& bar) {}\n    int i;\n};\n" always "class Baz {};\nclass Bar {\npublic:\n    explicit Bar(Baz* pBaz = NULL) : i(0) {}\n    Bar(const Bar& bar) {}\n    int i;\n};\n"
  true always 1
Line 1483
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1483 always 1483
  "[test.cpp:5]: (warning) Member variable 'Bar::i' is not initialized in the copy constructor.\n" always "[test.cpp:5]: (warning) Member variable 'Bar::i' is not initialized in the copy constructor.\n"
Line 1487
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1487 always 1487
  "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                int d;\n                explicit D(int z);\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(int z){}" always "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                int d;\n                explicit D(int z);\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(int z){}"
Line 1512
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1512 always 1512
  "[test.cpp:20]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'D::d' is not initialized in the constructor.\n" always "[test.cpp:20]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'D::d' is not initialized in the constructor.\n"
Line 1517
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1517 always 1517
  "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                D(const D &);\n                int d;\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(const A::B::C::D & d){}" always "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                D(const D &);\n                int d;\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(const A::B::C::D & d){}"
Line 1542
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1542 always 1542
  "[test.cpp:20]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'D::d' is not initialized in the copy constructor.\n" always "[test.cpp:20]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'D::d' is not initialized in the copy constructor.\n"
Line 1547
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1547 always 1547
  "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                struct E { int e; };\n                struct E d;\n                explicit D(const E &);\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(const A::B::C::D::E & e){}" always "class A {\npublic:\n    A();\n    struct B {\n        explicit B(int x);\n        struct C {\n            explicit C(int y);\n            struct D {\n                struct E { int e; };\n                struct E d;\n                explicit D(const E &);\n            };\n            int c;\n        };\n        int b;\n    };\nprivate:\n    int a;\n    B b;\n};\nA::A(){}\nA::B::B(int x){}\nA::B::C::C(int y){}\nA::B::C::D::D(const A::B::C::D::E & e){}"
Line 1573
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1573 always 1573
  "[test.cpp:21]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:24]: (warning) Member variable 'D::d' is not initialized in the constructor.\n" always "[test.cpp:21]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:23]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:24]: (warning) Member variable 'D::d' is not initialized in the constructor.\n"
Line 1580
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1580 always 1580
  "class B\n{\n    B (const B & Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" always "class B\n{\n    B (const B & Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};"
Line 1593
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1593 always 1593
  "" always ""
Line 1595
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1595 always 1595
  "class B\n{\n    B (B && Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" always "class B\n{\n    B (B && Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};"
Line 1608
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1608 always 1608
  "" always ""
Line 1610
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1610 always 1610
  "class B\n{\n    B & operator= (const B & Var);\npublic:\n    B ();\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" always "class B\n{\n    B & operator= (const B & Var);\npublic:\n    B ();\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};"
Line 1625
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1625 always 1625
  "" always ""
Line 1627
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1627 always 1627
  "class B\n{\npublic:\n    B (const B & Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" always "class B\n{\npublic:\n    B (const B & Var);\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};"
Line 1641
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1641 always 1641
  "" always ""
Line 1643
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1643 always 1643
  "class A : public std::vector<int>\n{\npublic:\n    A(const A &a);\n};\nclass B\n{\n    A a;\npublic:\n    B(){}\n    B(const B&){}\n    B(B &&){}\n    const B& operator=(const B&){return *this;}\n};" always "class A : public std::vector<int>\n{\npublic:\n    A(const A &a);\n};\nclass B\n{\n    A a;\npublic:\n    B(){}\n    B(const B&){}\n    B(B &&){}\n    const B& operator=(const B&){return *this;}\n};"
  true always 1
Line 1657
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1657 always 1657
  "[test.cpp:11]: (warning, inconclusive) Member variable 'B::a' is not assigned in the copy constructor. Should it be copied?\n[test.cpp:12]: (warning, inconclusive) Member variable 'B::a' is not assigned in the move constructor. Should it be moved?\n[test.cpp:13]: (warning, inconclusive) Member variable 'B::a' is not assigned a value in 'B::operator='.\n" always "[test.cpp:11]: (warning, inconclusive) Member variable 'B::a' is not assigned in the copy constructor. Should it be copied?\n[test.cpp:12]: (warning, inconclusive) Member variable 'B::a' is not assigned in the move constructor. Should it be moved?\n[test.cpp:13]: (warning, inconclusive) Member variable 'B::a' is not assigned a value in 'B::operator='.\n"
Line 1662
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1662 always 1662
  "class B\n{\npublic:\n    B (B && Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" always "class B\n{\npublic:\n    B (B && Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};"
Line 1677
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1677 always 1677
  "[test.cpp:13]: (warning) Member variable 'A::m_SemVar' is not initialized in the move constructor.\n" always "[test.cpp:13]: (warning) Member variable 'A::m_SemVar' is not initialized in the move constructor.\n"
Line 1679
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1679 always 1679
  "class B\n{\npublic:\n    B ();\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};" always "class B\n{\npublic:\n    B ();\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    A(A &&){}\n    const A& operator=(const A&){return *this;}\n};"
Line 1695
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1695 always 1695
  "" always ""
Line 1697
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1697 always 1697
  "class A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};" always "class A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};"
Line 1705
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1705 always 1705
  "" always ""
Line 1709
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1709 always 1709
  "class B\n{\n    B (B & Var);\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};" always "class B\n{\n    B (B & Var);\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};"
  true always 1
Line 1723
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1723 always 1723
  "" always ""
Line 1725
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1725 always 1725
  "class B\n{\npublic:\n    B (B & Var);\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};" always "class B\n{\npublic:\n    B (B & Var);\n    B & operator= (const B & Var);\n    int data;\n};\nclass A\n{\n    B m_SemVar;\npublic:\n    A(){}\n    A(const A&){}\n    const A& operator=(const A&){return *this;}\n};"
  true always 1
Line 1740
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1740 always 1740
  "[test.cpp:12]: (warning) Member variable 'A::m_SemVar' is not initialized in the constructor.\n[test.cpp:13]: (warning) Member variable 'A::m_SemVar' is not initialized in the copy constructor.\n[test.cpp:14]: (warning) Member variable 'A::m_SemVar' is not assigned a value in 'A::operator='.\n" always "[test.cpp:12]: (warning) Member variable 'A::m_SemVar' is not initialized in the constructor.\n[test.cpp:13]: (warning) Member variable 'A::m_SemVar' is not initialized in the copy constructor.\n[test.cpp:14]: (warning) Member variable 'A::m_SemVar' is not assigned a value in 'A::operator='.\n"
Line 1746
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1746 always 1746
  "struct A {\n    B b;\n    A() {}\n    A(const A& rhs) {}\n};" always "struct A {\n    B b;\n    A() {}\n    A(const A& rhs) {}\n};"
Line 1751
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1751 always 1751
  "" always ""
Line 1753
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1753 always 1753
  "struct A {\n    B b;\n    A() {}\n    A(const A& rhs) {}\n};" always "struct A {\n    B b;\n    A() {}\n    A(const A& rhs) {}\n};"
  true always 1
Line 1758
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1758 always 1758
  "[test.cpp:4]: (warning, inconclusive) Member variable 'A::b' is not assigned in the copy constructor. Should it be copied?\n" always "[test.cpp:4]: (warning, inconclusive) Member variable 'A::b' is not assigned in the copy constructor. Should it be copied?\n"
Line 1762
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1762 always 1762
  "struct S {\n    S(const S & s);\n    void S::Set(const T& val);\n    void S::Set(const U& val);\n    T t;\n};\nS::S(const S& s) {\n    Set(s.t);\n}\nvoid S::Set(const T& val) {\n    t = val;\n}" always "struct S {\n    S(const S & s);\n    void S::Set(const T& val);\n    void S::Set(const U& val);\n    T t;\n};\nS::S(const S& s) {\n    Set(s.t);\n}\nvoid S::Set(const T& val) {\n    t = val;\n}"
  true always 1
Line 1774
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1774 always 1774
  "" always ""
Line 1778
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1778 always 1778
  "struct Foo {\n  Foo(int m) { this->setMember(m); }\n  void setMember(int m) { member = m; }\n  int member;\n};" always "struct Foo {\n  Foo(int m) { this->setMember(m); }\n  void setMember(int m) { member = m; }\n  int member;\n};"
Line 1783
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1783 always 1783
  "" always ""
Line 1787
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1787 always 1787
  "class Fred\n{\nprivate:\n    int var;\npublic:\n    Fred() : var(0) {}\n    ~Fred() {}\n};" always "class Fred\n{\nprivate:\n    int var;\npublic:\n    Fred() : var(0) {}\n    ~Fred() {}\n};"
Line 1795
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1795 always 1795
  "" always ""
Line 1799
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1799 always 1799
  "class something {\n    int * ( something :: * process()) () { return 0; }\n    something() { process(); }\n};" always "class something {\n    int * ( something :: * process()) () { return 0; }\n    something() { process(); }\n};"
Line 1803
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1803 always 1803
  "" always ""
Line 1807
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1807 always 1807
  "struct S {\n    int a;\n    S() {\n        int& pa = a;\n        pa = 4;\n    }\n};" always "struct S {\n    int a;\n    S() {\n        int& pa = a;\n        pa = 4;\n    }\n};"
Line 1814
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1814 always 1814
  "" always ""
Line 1816
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1816 always 1816
  "struct S {\n    int a;\n    S() {\n        int* pa = &a;\n        *pa = 4;\n    }\n};" always "struct S {\n    int a;\n    S() {\n        int* pa = &a;\n        *pa = 4;\n    }\n};"
Line 1823
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1823 always 1823
  "" always ""
Line 1825
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1825 always 1825
  "struct S {\n    int a[2];\n    S() {\n        int* pa = a;\n        for (int i = 0; i < 2; i++)\n            *pa++ = i;\n    }\n};" always "struct S {\n    int a[2];\n    S() {\n        int* pa = a;\n        for (int i = 0; i < 2; i++)\n            *pa++ = i;\n    }\n};"
Line 1833
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1833 always 1833
  "" always ""
Line 1835
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1835 always 1835
  "struct S {\n    int* a[2];\n    S() {\n        int* pa = a[1];\n        *pa = 0;\n    }\n};" always "struct S {\n    int* a[2];\n    S() {\n        int* pa = a[1];\n        *pa = 0;\n    }\n};"
Line 1842
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1842 always 1842
  "[test.cpp:3]: (warning) Member variable 'S::a' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'S::a' is not initialized in the constructor.\n"
Line 1844
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1844 always 1844
  "struct S {\n    int a;\n    S() {\n        int pa = a;\n        pa = 4;\n    }\n};" always "struct S {\n    int a;\n    S() {\n        int pa = a;\n        pa = 4;\n    }\n};"
Line 1851
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1851 always 1851
  "[test.cpp:3]: (warning) Member variable 'S::a' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'S::a' is not initialized in the constructor.\n"
Line 1855
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1855 always 1855
  "template<int n_>\nstruct Wrapper {\n    static void foo(int * x) {\n        for (int i(0); i <= n_; ++i)\n            x[i] = 5;\n    }\n};\nclass A {\npublic:\n    static constexpr int dim = 5;\n    int x[dim + 1];\n    A() {\n        Wrapper<dim>::foo(x);\n    }\n};" always "template<int n_>\nstruct Wrapper {\n    static void foo(int * x) {\n        for (int i(0); i <= n_; ++i)\n            x[i] = 5;\n    }\n};\nclass A {\npublic:\n    static constexpr int dim = 5;\n    int x[dim + 1];\n    A() {\n        Wrapper<dim>::foo(x);\n    }\n};"
Line 1870
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1870 always 1870
  "" always ""
Line 1875
  "std" always "std"
Line 1876
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1876 always 1876
  "struct S {\n    explicit S(const std::shared_ptr<S>& sp) {\n        set(*sp);\n    }\n    double get() const {\n        return d;\n    }\n    void set(const S& rhs) {\n        d = rhs.get();\n    }\n    double d;\n};" always "struct S {\n    explicit S(const std::shared_ptr<S>& sp) {\n        set(*sp);\n    }\n    double get() const {\n        return d;\n    }\n    void set(const S& rhs) {\n        d = rhs.get();\n    }\n    double d;\n};"
Line 1888
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1888 always 1888
  "" always ""
Line 1890
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1890 always 1890
  "struct S {\n    explicit S(const T& rhs) { set(*rhs); }\n    void set(const S& v) {\n        d = v.d;\n    }\n    double d; \n};\n" always "struct S {\n    explicit S(const T& rhs) { set(*rhs); }\n    void set(const S& v) {\n        d = v.d;\n    }\n    double d; \n};\n"
Line 1897
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1897 always 1897
  "" always ""
Line 1901
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1901 always 1901
  "class Fred\n{\nprivate:\n    std::vector<int> ints;\npublic:\n    Fred();\n    void operator=(const Fred &f);\n};\n\nFred::Fred()\n{ }\n\nvoid Fred::operator=(const Fred &f)\n{ }" always "class Fred\n{\nprivate:\n    std::vector<int> ints;\npublic:\n    Fred();\n    void operator=(const Fred &f);\n};\n\nFred::Fred()\n{ }\n\nvoid Fred::operator=(const Fred &f)\n{ }"
  true always 1
Line 1915
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1915 always 1915
  "[test.cpp:13]: (warning, inconclusive) Member variable 'Fred::ints' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:13]: (warning, inconclusive) Member variable 'Fred::ints' is not assigned a value in 'Fred::operator='.\n"
Line 1918
  true always 1
Line 1921
  ( {lifetime[Object]=(exename),!0}
  "std.cfg" always "std.cfg"
  != always {!<=-1,!>=2}
  "std.cfg" always "std.cfg"
  false always 0
Line 1922
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1922 always 1922
  "struct S {\n    S& operator=(const S& s) { return *this; }\n    std::mutex m;\n};\n" always "struct S {\n    S& operator=(const S& s) { return *this; }\n    std::mutex m;\n};\n"
Line 1926
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1926 always 1926
  "" always ""
Line 1930
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1930 always 1930
  "enum ECODES\n{\n    CODE_1 = 0,\n    CODE_2 = 1\n};\n\nclass Fred\n{\npublic:\n    Fred() {}\n\nprivate:\n    ECODES _code;\n};" always "enum ECODES\n{\n    CODE_1 = 0,\n    CODE_2 = 1\n};\n\nclass Fred\n{\npublic:\n    Fred() {}\n\nprivate:\n    ECODES _code;\n};"
Line 1945
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1945 always 1945
  "[test.cpp:10]: (warning) Member variable 'Fred::_code' is not initialized in the constructor.\n" always "[test.cpp:10]: (warning) Member variable 'Fred::_code' is not initialized in the constructor.\n"
Line 1948
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1948 always 1948
  "class A{};\n\nclass B : public A\n{\npublic:\n  B() {}\nprivate:\n  float f;\n};" always "class A{};\n\nclass B : public A\n{\npublic:\n  B() {}\nprivate:\n  float f;\n};"
Line 1957
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1957 always 1957
  "[test.cpp:6]: (warning) Member variable 'B::f' is not initialized in the constructor.\n" always "[test.cpp:6]: (warning) Member variable 'B::f' is not initialized in the constructor.\n"
Line 1959
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1959 always 1959
  "class C\n{\n    FILE *fp;\n\npublic:\n    explicit C(FILE *fp);\n};\n\nC::C(FILE *fp) {\n    C::fp = fp;\n}" always "class C\n{\n    FILE *fp;\n\npublic:\n    explicit C(FILE *fp);\n};\n\nC::C(FILE *fp) {\n    C::fp = fp;\n}"
Line 1970
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1970 always 1970
  "" always ""
Line 1974
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1974 always 1974
  "class John\n{\npublic:\n    John() { (*this).i = 0; }\nprivate:\n    int i;\n};" always "class John\n{\npublic:\n    John() { (*this).i = 0; }\nprivate:\n    int i;\n};"
Line 1981
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1981 always 1981
  "" always ""
Line 1986
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1986 always 1986
  "class Foo\n{\npublic:\n    Foo() { }\nprivate:\n    struct Bar {\n        Bar();\n    };\n    Bar bars[2];\n};" always "class Foo\n{\npublic:\n    Foo() { }\nprivate:\n    struct Bar {\n        Bar();\n    };\n    Bar bars[2];\n};"
Line 1996
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1996 always 1996
  "" always ""
Line 1999
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  1999 always 1999
  "class Foo\n{\npublic:\n    Foo() { }\nprivate:\n    struct Bar {\n        int x;\n    };\n    Bar bars[2];\n};" always "class Foo\n{\npublic:\n    Foo() { }\nprivate:\n    struct Bar {\n        int x;\n    };\n    Bar bars[2];\n};"
Line 2009
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2009 always 2009
  "[test.cpp:4]: (warning) Member variable 'Foo::bars' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Foo::bars' is not initialized in the constructor.\n"
Line 2013
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2013 always 2013
  "class Foo\n{\npublic:\n    Foo() { bar.x = 0; }\nprivate:\n    struct Bar {\n        int x;\n    };\n    struct Bar bar;\n};" always "class Foo\n{\npublic:\n    Foo() { bar.x = 0; }\nprivate:\n    struct Bar {\n        int x;\n    };\n    struct Bar bar;\n};"
Line 2023
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2023 always 2023
  "" always ""
Line 2027
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2027 always 2027
  "class Foo\n{\npublic:\n    Foo() { }\n    Foo &operator=(const Foo &)\n    { return *this; }\n    static int i;\n};" always "class Foo\n{\npublic:\n    Foo() { }\n    Foo &operator=(const Foo &)\n    { return *this; }\n    static int i;\n};"
Line 2035
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2035 always 2035
  "" always ""
Line 2039
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2039 always 2039
  "class Foo : public Bar\n{\npublic:\n    explicit Foo(int i) : Bar(mi=i) { }\nprivate:\n    int mi;\n};" always "class Foo : public Bar\n{\npublic:\n    explicit Foo(int i) : Bar(mi=i) { }\nprivate:\n    int mi;\n};"
Line 2046
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2046 always 2046
  "" always ""
Line 2048
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2048 always 2048
  "class Foo : public Bar\n{\npublic:\n    explicit Foo(int i) : Bar{mi=i} { }\nprivate:\n    int mi;\n};" always "class Foo : public Bar\n{\npublic:\n    explicit Foo(int i) : Bar{mi=i} { }\nprivate:\n    int mi;\n};"
Line 2055
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2055 always 2055
  "" always ""
Line 2059
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2059 always 2059
  "class Foo {\n    int a;\npublic:\n    Foo() : a(0) {}\n    Foo& operator=(const Foo&);\n    void Swap(Foo& rhs);\n};\n\nvoid Foo::Swap(Foo& rhs) {\n    std::swap(a,rhs.a);\n}\n\nFoo& Foo::operator=(const Foo& rhs) {\n    Foo copy(rhs);\n    copy.Swap(*this);\n    return *this;\n}" always "class Foo {\n    int a;\npublic:\n    Foo() : a(0) {}\n    Foo& operator=(const Foo&);\n    void Swap(Foo& rhs);\n};\n\nvoid Foo::Swap(Foo& rhs) {\n    std::swap(a,rhs.a);\n}\n\nFoo& Foo::operator=(const Foo& rhs) {\n    Foo copy(rhs);\n    copy.Swap(*this);\n    return *this;\n}"
Line 2076
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2076 always 2076
  "" always ""
Line 2080
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2080 always 2080
  "class Foo {\n    int a;\npublic:\n    Foo() : a(0) {}\n    Foo& operator=(const Foo&);\n};\n\nFoo& Foo::operator=(const Foo& rhs) {\n    if (&rhs != this)\n    {\n    }\n    return *this;\n}" always "class Foo {\n    int a;\npublic:\n    Foo() : a(0) {}\n    Foo& operator=(const Foo&);\n};\n\nFoo& Foo::operator=(const Foo& rhs) {\n    if (&rhs != this)\n    {\n    }\n    return *this;\n}"
Line 2093
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2093 always 2093
  "[test.cpp:8]: (warning) Member variable 'Foo::a' is not assigned a value in 'Foo::operator='.\n" always "[test.cpp:8]: (warning) Member variable 'Foo::a' is not assigned a value in 'Foo::operator='.\n"
Line 2097
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2097 always 2097
  "class Prefs {\nprivate:\n    int xasd;\npublic:\n    explicit Prefs(wxSize size);\n};\nPrefs::Prefs(wxSize size)\n{\n    SetMinSize( wxSize( 48,48 ) );\n}" always "class Prefs {\nprivate:\n    int xasd;\npublic:\n    explicit Prefs(wxSize size);\n};\nPrefs::Prefs(wxSize size)\n{\n    SetMinSize( wxSize( 48,48 ) );\n}"
Line 2107
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2107 always 2107
  "[test.cpp:7]: (warning) Member variable 'Prefs::xasd' is not initialized in the constructor.\n" always "[test.cpp:7]: (warning) Member variable 'Prefs::xasd' is not initialized in the constructor.\n"
Line 2111
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2111 always 2111
  "class A {\npublic:\n        A();\nprivate:\n        int var1;\n        int var2;\n};\nA::A() : var1(0) { }" always "class A {\npublic:\n        A();\nprivate:\n        int var1;\n        int var2;\n};\nA::A() : var1(0) { }"
Line 2119
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2119 always 2119
  "[test.cpp:8]: (warning) Member variable 'A::var2' is not initialized in the constructor.\n" always "[test.cpp:8]: (warning) Member variable 'A::var2' is not initialized in the constructor.\n"
Line 2123
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2123 always 2123
  "class A {\npublic:\n        explicit A(int a = 0);\nprivate:\n        int var;\n};\nA::A(int a) { }" always "class A {\npublic:\n        explicit A(int a = 0);\nprivate:\n        int var;\n};\nA::A(int a) { }"
Line 2130
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2130 always 2130
  "[test.cpp:7]: (warning) Member variable 'A::var' is not initialized in the constructor.\n" always "[test.cpp:7]: (warning) Member variable 'A::var' is not initialized in the constructor.\n"
Line 2134
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2134 always 2134
  "class Point\n{\npublic:\n    Point()\n    {\n        Point(0, 0);\n    }\n    Point(int x, int y)\n        : x(x), y(y)\n    {}\n    int x, y;\n};" always "class Point\n{\npublic:\n    Point()\n    {\n        Point(0, 0);\n    }\n    Point(int x, int y)\n        : x(x), y(y)\n    {}\n    int x, y;\n};"
Line 2146
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2146 always 2146
  "[test.cpp:4]: (warning) Member variable 'Point::x' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'Point::y' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Point::x' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'Point::y' is not initialized in the constructor.\n"
Line 2151
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2151 always 2151
  "class A {\nprivate:\n    std::vector<int> *ints;\npublic:\n    A()\n    {}\n};" always "class A {\nprivate:\n    std::vector<int> *ints;\npublic:\n    A()\n    {}\n};"
Line 2158
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2158 always 2158
  "[test.cpp:5]: (warning) Member variable 'A::ints' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'A::ints' is not initialized in the constructor.\n"
Line 2163
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2163 always 2163
  "class Foo\n{\npublic:\n    Foo();\nprivate:\n    bool mMember;\n};\nFoo::Foo()\n{\n}" always "class Foo\n{\npublic:\n    Foo();\nprivate:\n    bool mMember;\n};\nFoo::Foo()\n{\n}"
Line 2173
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2173 always 2173
  "[test.cpp:8]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" always "[test.cpp:8]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n"
Line 2176
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2176 always 2176
  "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n    Foo::Foo()\n    {\n    }\n}" always "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n    Foo::Foo()\n    {\n    }\n}"
Line 2189
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2189 always 2189
  "[test.cpp:10]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" always "[test.cpp:10]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n"
Line 2192
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2192 always 2192
  "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nFoo::Foo()\n{\n}" always "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nFoo::Foo()\n{\n}"
Line 2205
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2205 always 2205
  "" always ""
Line 2208
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2208 always 2208
  "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nOutput::Foo::Foo()\n{\n}" always "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nOutput::Foo::Foo()\n{\n}"
Line 2221
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2221 always 2221
  "[test.cpp:11]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" always "[test.cpp:11]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n"
Line 2224
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2224 always 2224
  "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nusing namespace Output;Foo::Foo()\n{\n}" always "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nusing namespace Output;Foo::Foo()\n{\n}"
Line 2238
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2238 always 2238
  "[test.cpp:11]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" always "[test.cpp:11]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n"
Line 2241
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2241 always 2241
  "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Output\n{\n    Foo::Foo()\n    {\n    }\n}" always "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Output\n{\n    Foo::Foo()\n    {\n    }\n}"
Line 2257
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2257 always 2257
  "[test.cpp:13]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" always "[test.cpp:13]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n"
Line 2260
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2260 always 2260
  "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Input\n{\n    Foo::Foo()\n    {\n    }\n}" always "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Input\n{\n    Foo::Foo()\n    {\n    }\n}"
Line 2276
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2276 always 2276
  "" always ""
Line 2279
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2279 always 2279
  "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Input\n{\n    Output::Foo::Foo()\n    {\n    }\n}" always "namespace Output\n{\n    class Foo\n    {\n    public:\n        Foo();\n    private:\n        bool mMember;\n    };\n}\nnamespace Input\n{\n    Output::Foo::Foo()\n    {\n    }\n}"
Line 2295
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2295 always 2295
  "" always ""
Line 2298
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2298 always 2298
  "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Output\n    {\n        Foo::Foo()\n        {\n        }\n    }\n}" always "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Output\n    {\n        Foo::Foo()\n        {\n        }\n    }\n}"
Line 2317
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2317 always 2317
  "[test.cpp:15]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n" always "[test.cpp:15]: (warning) Member variable 'Foo::mMember' is not initialized in the constructor.\n"
Line 2320
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2320 always 2320
  "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Input\n    {\n        Foo::Foo()\n        {\n        }\n    }\n}" always "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Input\n    {\n        Foo::Foo()\n        {\n        }\n    }\n}"
Line 2339
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2339 always 2339
  "" always ""
Line 2342
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2342 always 2342
  "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Input\n    {\n        Output::Foo::Foo()\n        {\n        }\n    }\n}" always "namespace A\n{\n    namespace Output\n    {\n        class Foo\n        {\n        public:\n            Foo();\n        private:\n            bool mMember;\n        };\n    }\n    namespace Input\n    {\n        Output::Foo::Foo()\n        {\n        }\n    }\n}"
Line 2361
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2361 always 2361
  "" always ""
Line 2365
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2365 always 2365
  "class Fred\n{\n    int a;\npublic:\n    Fred();\n    ~Fred();\n};\nFred::~Fred()\n{\n}" always "class Fred\n{\n    int a;\npublic:\n    Fred();\n    ~Fred();\n};\nFred::~Fred()\n{\n}"
Line 2375
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2375 always 2375
  "" always ""
Line 2379
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2379 always 2379
  "struct Foo\n{\n    int a;\n    void set(int x) { a = x; }\n};\nclass Bar\n{\n    Foo foo;\npublic:\n    Bar()\n    {\n        foo.set(0);\n    }\n};" always "struct Foo\n{\n    int a;\n    void set(int x) { a = x; }\n};\nclass Bar\n{\n    Foo foo;\npublic:\n    Bar()\n    {\n        foo.set(0);\n    }\n};"
Line 2393
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2393 always 2393
  "" always ""
Line 2395
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2395 always 2395
  "struct Foo\n{\n    int a;\n    void set(int x) { a = x; }\n};\nclass Bar\n{\n    Foo foo;\npublic:\n    Bar()\n    {\n    }\n};" always "struct Foo\n{\n    int a;\n    void set(int x) { a = x; }\n};\nclass Bar\n{\n    Foo foo;\npublic:\n    Bar()\n    {\n    }\n};"
Line 2408
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2408 always 2408
  "[test.cpp:10]: (warning) Member variable 'Bar::foo' is not initialized in the constructor.\n" always "[test.cpp:10]: (warning) Member variable 'Bar::foo' is not initialized in the constructor.\n"
Line 2412
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2412 always 2412
  "struct Foo\n{\n    int a;\n};\nclass Bar\n{\n    Foo foo[10];\npublic:\n    Bar()\n    {\n        foo[0].a = 0;\n    }\n};" always "struct Foo\n{\n    int a;\n};\nclass Bar\n{\n    Foo foo[10];\npublic:\n    Bar()\n    {\n        foo[0].a = 0;\n    }\n};"
Line 2425
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2425 always 2425
  "" always ""
Line 2427
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2427 always 2427
  "struct Foo\n{\n    int a;\n};\nclass Bar\n{\n    Foo foo[10];\npublic:\n    Bar()\n    {\n    }\n};" always "struct Foo\n{\n    int a;\n};\nclass Bar\n{\n    Foo foo[10];\npublic:\n    Bar()\n    {\n    }\n};"
Line 2439
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2439 always 2439
  "[test.cpp:9]: (warning) Member variable 'Bar::foo' is not initialized in the constructor.\n" always "[test.cpp:9]: (warning) Member variable 'Bar::foo' is not initialized in the constructor.\n"
Line 2443
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2443 always 2443
  "struct Altren\n{\n    explicit Altren(int _a = 0) : value(0) { }\n    int value;\n};\nclass A\n{\npublic:\n    A() { }\nprivate:\n    Altren value;\n};" always "struct Altren\n{\n    explicit Altren(int _a = 0) : value(0) { }\n    int value;\n};\nclass A\n{\npublic:\n    A() { }\nprivate:\n    Altren value;\n};"
Line 2455
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2455 always 2455
  "" always ""
Line 2459
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2459 always 2459
  "class mystring\n{\n    char* m_str;\n    int m_len;\npublic:\n    explicit mystring(const char* str)\n    {\n        m_len = strlen(str);\n        m_str = (char*) malloc(m_len+1);\n        memcpy(m_str, str, m_len+1);\n    }\n    mystring& operator=(const mystring& copy)\n    {\n        return (*this = copy.m_str);\n    }\n    ~mystring()\n    {\n        free(m_str);\n    }\n};" always "class mystring\n{\n    char* m_str;\n    int m_len;\npublic:\n    explicit mystring(const char* str)\n    {\n        m_len = strlen(str);\n        m_str = (char*) malloc(m_len+1);\n        memcpy(m_str, str, m_len+1);\n    }\n    mystring& operator=(const mystring& copy)\n    {\n        return (*this = copy.m_str);\n    }\n    ~mystring()\n    {\n        free(m_str);\n    }\n};"
Line 2479
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2479 always 2479
  "" always ""
Line 2483
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2483 always 2483
  "Object::MemFunc() {\n    class LocalClass {\n    public:\n        LocalClass() : dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};" always "Object::MemFunc() {\n    class LocalClass {\n    public:\n        LocalClass() : dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};"
Line 2491
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2491 always 2491
  "[test.cpp:4]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n"
Line 2493
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2493 always 2493
  "struct copy_protected;\nObject::MemFunc() {\n    class LocalClass : public copy_protected {\n    public:\n        LocalClass() : copy_protected(1), dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};" always "struct copy_protected;\nObject::MemFunc() {\n    class LocalClass : public copy_protected {\n    public:\n        LocalClass() : copy_protected(1), dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};"
Line 2502
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2502 always 2502
  "[test.cpp:5]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n"
Line 2506
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2506 always 2506
  "struct copy_protected;\nObject::MemFunc() {\n    class LocalClass : ::copy_protected {\n    public:\n        LocalClass() : copy_protected(1), dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};" always "struct copy_protected;\nObject::MemFunc() {\n    class LocalClass : ::copy_protected {\n    public:\n        LocalClass() : copy_protected(1), dataLength_(0) {}\n        std::streamsize dataLength_;\n        double bitsInData_;\n    } obj;\n};"
Line 2515
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2515 always 2515
  "[test.cpp:5]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'LocalClass::bitsInData_' is not initialized in the constructor.\n"
Line 2521
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2521 always 2521
  "class Fred {\nprivate:\n    int a[23];\npublic:\n    Fred();\n};\nFred::Fred() {\n    a[x::y] = 0;\n}" always "class Fred {\nprivate:\n    int a[23];\npublic:\n    Fred();\n};\nFred::Fred() {\n    a[x::y] = 0;\n}"
Line 2530
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2530 always 2530
  "" always ""
Line 2534
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2534 always 2534
  "class Fred {\n  public:\n    Fred & operator=(const Fred &);\n    virtual Fred & clone(const Fred & other);\n    int x;\n};\nFred & Fred::operator=(const Fred & other) {\n    return clone(other);\n}\nFred & Fred::clone(const Fred & other) {\n    x = 0;\n    return *this;\n}" always "class Fred {\n  public:\n    Fred & operator=(const Fred &);\n    virtual Fred & clone(const Fred & other);\n    int x;\n};\nFred & Fred::operator=(const Fred & other) {\n    return clone(other);\n}\nFred & Fred::clone(const Fred & other) {\n    x = 0;\n    return *this;\n}"
Line 2547
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2547 always 2547
  "" always ""
Line 2549
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2549 always 2549
  "class Fred {\n  public:\n    Fred & operator=(const Fred &);\n    virtual Fred & clone(const Fred & other);\n    int x;\n};\nFred & Fred::operator=(const Fred & other) {\n    return clone(other);\n}\nFred & Fred::clone(const Fred & other) {\n    return *this;\n}" always "class Fred {\n  public:\n    Fred & operator=(const Fred &);\n    virtual Fred & clone(const Fred & other);\n    int x;\n};\nFred & Fred::operator=(const Fred & other) {\n    return clone(other);\n}\nFred & Fred::clone(const Fred & other) {\n    return *this;\n}"
Line 2561
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2561 always 2561
  "[test.cpp:7]: (warning) Member variable 'Fred::x' is not assigned a value in 'Fred::operator='.\n" always "[test.cpp:7]: (warning) Member variable 'Fred::x' is not assigned a value in 'Fred::operator='.\n"
Line 2565
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2565 always 2565
  "class Fred {\n    int x;\npublic:\n    Fred(struct A a, struct B b);\n    Fred(C c, struct D d);\n    Fred(struct E e, F f);\n    Fred(struct G, struct H);\n    Fred(I, J);\n};\nFred::Fred(A a, B b) { }\nFred::Fred(struct C c, D d) { }\nFred::Fred(E e, struct F f) { }\nFred::Fred(G g, H h) { }\nFred::Fred(struct I i, struct J j) { }" always "class Fred {\n    int x;\npublic:\n    Fred(struct A a, struct B b);\n    Fred(C c, struct D d);\n    Fred(struct E e, F f);\n    Fred(struct G, struct H);\n    Fred(I, J);\n};\nFred::Fred(A a, B b) { }\nFred::Fred(struct C c, D d) { }\nFred::Fred(E e, struct F f) { }\nFred::Fred(G g, H h) { }\nFred::Fred(struct I i, struct J j) { }"
Line 2579
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2579 always 2579
  "[test.cpp:10]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:11]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:12]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:13]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n" always "[test.cpp:10]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:11]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:12]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:13]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'Fred::x' is not initialized in the constructor.\n"
Line 2587
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2587 always 2587
  "class Foo;\nclass Bar;\nclass Sub;\nclass Foo { class Sub; };\nclass Bar { class Sub; };\nclass Bar::Sub {\n    int b;\npublic:\n    Sub() { }\n    Sub(int);\n};\nBar::Sub::Sub(int) { };\nclass ::Foo::Sub {\n    int f;\npublic:\n    ~Sub();\n    Sub();\n};\n::Foo::Sub::~Sub() { }\n::Foo::Sub::Sub() { }\nclass Foo;\nclass Bar;\nclass Sub;\n" always "class Foo;\nclass Bar;\nclass Sub;\nclass Foo { class Sub; };\nclass Bar { class Sub; };\nclass Bar::Sub {\n    int b;\npublic:\n    Sub() { }\n    Sub(int);\n};\nBar::Sub::Sub(int) { };\nclass ::Foo::Sub {\n    int f;\npublic:\n    ~Sub();\n    Sub();\n};\n::Foo::Sub::~Sub() { }\n::Foo::Sub::Sub() { }\nclass Foo;\nclass Bar;\nclass Sub;\n"
  true always 1
Line 2611
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2611 always 2611
  "[test.cpp:9]: (warning, inconclusive) Member variable 'Sub::b' is not initialized in the constructor.\n[test.cpp:12]: (warning) Member variable 'Sub::b' is not initialized in the constructor.\n[test.cpp:20]: (warning) Member variable 'Sub::f' is not initialized in the constructor.\n" always "[test.cpp:9]: (warning, inconclusive) Member variable 'Sub::b' is not initialized in the constructor.\n[test.cpp:12]: (warning) Member variable 'Sub::b' is not initialized in the constructor.\n[test.cpp:20]: (warning) Member variable 'Sub::f' is not initialized in the constructor.\n"
Line 2617
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2617 always 2617
  "struct A {\n    int a;\n    int b;\n    int c;\n    A(int x = 0, int y = 0, int z = 0);\n};\nA::A(int x = 0, int y = 0, int z = 0) { }\nstruct B {\n    int a;\n    int b;\n    int c;\n    B(int x = 0, int y = 0, int z = 0);\n};\nB::B(int x, int y, int z) { }\nstruct C {\n    int a;\n    int b;\n    int c;\n    C(int, int, int);\n};\nC::C(int x = 0, int y = 0, int z = 0) { }\nstruct D {\n    int a;\n    int b;\n    int c;\n    D(int, int, int);\n};\nD::D(int x, int y, int z) { }\nstruct E {\n    int a;\n    int b;\n    int c;\n    E(int x, int y, int z);\n};\nE::E(int, int, int) { }\nstruct F {\n    int a;\n    int b;\n    int c;\n    F(int x = 0, int y = 0, int z = 0);\n};\nF::F(int, int, int) { }\n" always "struct A {\n    int a;\n    int b;\n    int c;\n    A(int x = 0, int y = 0, int z = 0);\n};\nA::A(int x = 0, int y = 0, int z = 0) { }\nstruct B {\n    int a;\n    int b;\n    int c;\n    B(int x = 0, int y = 0, int z = 0);\n};\nB::B(int x, int y, int z) { }\nstruct C {\n    int a;\n    int b;\n    int c;\n    C(int, int, int);\n};\nC::C(int x = 0, int y = 0, int z = 0) { }\nstruct D {\n    int a;\n    int b;\n    int c;\n    D(int, int, int);\n};\nD::D(int x, int y, int z) { }\nstruct E {\n    int a;\n    int b;\n    int c;\n    E(int x, int y, int z);\n};\nE::E(int, int, int) { }\nstruct F {\n    int a;\n    int b;\n    int c;\n    F(int x = 0, int y = 0, int z = 0);\n};\nF::F(int, int, int) { }\n"
  true always 1
Line 2659
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2659 always 2659
  "[test.cpp:7]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:7]: (warning) Member variable 'A::b' is not initialized in the constructor.\n[test.cpp:7]: (warning) Member variable 'A::c' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::c' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::b' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::a' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::b' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::c' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::a' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::b' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::c' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::a' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::b' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::c' is not initialized in the constructor.\n" always "[test.cpp:7]: (warning) Member variable 'A::a' is not initialized in the constructor.\n[test.cpp:7]: (warning) Member variable 'A::b' is not initialized in the constructor.\n[test.cpp:7]: (warning) Member variable 'A::c' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::b' is not initialized in the constructor.\n[test.cpp:14]: (warning) Member variable 'B::c' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::a' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::b' is not initialized in the constructor.\n[test.cpp:21]: (warning) Member variable 'C::c' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::a' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::b' is not initialized in the constructor.\n[test.cpp:28]: (warning) Member variable 'D::c' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::a' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::b' is not initialized in the constructor.\n[test.cpp:35]: (warning) Member variable 'E::c' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::a' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::b' is not initialized in the constructor.\n[test.cpp:42]: (warning) Member variable 'F::c' is not initialized in the constructor.\n"
Line 2680
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2680 always 2680
  "class A {\n    int * v;\n    int sz;\npublic:\n    A(int s) {\n        v = new int [sz = s];\n    }\n};" always "class A {\n    int * v;\n    int sz;\npublic:\n    A(int s) {\n        v = new int [sz = s];\n    }\n};"
Line 2688
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2688 always 2688
  "" always ""
Line 2692
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2692 always 2692
  "class A {\n    double d;\npublic:\n    A() {\n        rtl::math::setNan(&d);\n    }\n};" always "class A {\n    double d;\npublic:\n    A() {\n        rtl::math::setNan(&d);\n    }\n};"
Line 2699
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2699 always 2699
  "" always ""
Line 2700
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2700 always 2700
  "class A {\n    double d;\npublic:\n    A() {\n        ::rtl::math::setNan(&d);\n    }\n};" always "class A {\n    double d;\npublic:\n    A() {\n        ::rtl::math::setNan(&d);\n    }\n};"
Line 2707
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2707 always 2707
  "" always ""
Line 2711
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2711 always 2711
  "class Fred {\n    int i;\n    float f;\npublic:\n    Fred() {\n        foo(1);\n        foo(1.0f);\n    }\n    void foo(int a) { i = a; }\n    void foo(float a) { f = a; }\n};" always "class Fred {\n    int i;\n    float f;\npublic:\n    Fred() {\n        foo(1);\n        foo(1.0f);\n    }\n    void foo(int a) { i = a; }\n    void foo(float a) { f = a; }\n};"
Line 2722
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2722 always 2722
  "" always ""
Line 2726
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2726 always 2726
  "class A {\n    int i;\npublic:\n    A() { foo(); }\n    void foo() const { };\n    void foo() { i = 0; }\n};\nclass B {\n    int i;\npublic:\n    B() { foo(); }\n    void foo() { i = 0; }\n    void foo() const { }\n};\nclass C {\n    int i;\npublic:\n    C() { foo(); }\n    void foo() const { i = 0; }\n    void foo() { }\n};\nclass D {\n    int i;\npublic:\n    D() { foo(); }\n	void foo() { }\n	void foo() const { i = 0; }\n};" always "class A {\n    int i;\npublic:\n    A() { foo(); }\n    void foo() const { };\n    void foo() { i = 0; }\n};\nclass B {\n    int i;\npublic:\n    B() { foo(); }\n    void foo() { i = 0; }\n    void foo() const { }\n};\nclass C {\n    int i;\npublic:\n    C() { foo(); }\n    void foo() const { i = 0; }\n    void foo() { }\n};\nclass D {\n    int i;\npublic:\n    D() { foo(); }\n	void foo() { }\n	void foo() const { i = 0; }\n};"
Line 2754
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2754 always 2754
  "[test.cpp:18]: (warning) Member variable 'C::i' is not initialized in the constructor.\n[test.cpp:25]: (warning) Member variable 'D::i' is not initialized in the constructor.\n" always "[test.cpp:18]: (warning) Member variable 'C::i' is not initialized in the constructor.\n[test.cpp:25]: (warning) Member variable 'D::i' is not initialized in the constructor.\n"
Line 2759
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2759 always 2759
  "namespace NS {\n    class MyClass {\n    public:\n        MyClass();\n        ~MyClass();\n    private:\n        bool SomeVar;\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() { }\nMyClass::MyClass() : SomeVar(false) { }" always "namespace NS {\n    class MyClass {\n    public:\n        MyClass();\n        ~MyClass();\n    private:\n        bool SomeVar;\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() { }\nMyClass::MyClass() : SomeVar(false) { }"
Line 2771
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2771 always 2771
  "" always ""
Line 2775
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2775 always 2775
  "void bar();\nclass MyClass {\npublic:\n    MyClass();\n    void Restart();\nprotected:\n    int m_retCode;\n};\nMyClass::MyClass() {\n    bar(),Restart();\n}\nvoid MyClass::Restart() {\n    m_retCode = 0;\n}" always "void bar();\nclass MyClass {\npublic:\n    MyClass();\n    void Restart();\nprotected:\n    int m_retCode;\n};\nMyClass::MyClass() {\n    bar(),Restart();\n}\nvoid MyClass::Restart() {\n    m_retCode = 0;\n}"
Line 2789
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2789 always 2789
  "" always ""
Line 2793
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2793 always 2793
  "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      if (1) {}\n   }\n};" always "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      if (1) {}\n   }\n};"
Line 2802
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2802 always 2802
  "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n"
Line 2803
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2803 always 2803
  "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      while (1) {}\n   }\n};" always "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      while (1) {}\n   }\n};"
Line 2812
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2812 always 2812
  "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n"
Line 2813
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2813 always 2813
  "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      for (;;) {}\n   }\n};" always "class Foo {\n   friend class Bar;\n   int member;\npublic:\n   Foo()\n   {\n      for (;;) {}\n   }\n};"
Line 2822
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2822 always 2822
  "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'Foo::member' is not initialized in the constructor.\n"
Line 2826
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2826 always 2826
  "namespace app {\n    class B {\n    public:\n        B(void);\n        int x;\n    };\n};\napp::B::B(void){}" always "namespace app {\n    class B {\n    public:\n        B(void);\n        int x;\n    };\n};\napp::B::B(void){}"
Line 2834
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2834 always 2834
  "[test.cpp:8]: (warning) Member variable 'B::x' is not initialized in the constructor.\n" always "[test.cpp:8]: (warning) Member variable 'B::x' is not initialized in the constructor.\n"
Line 2838
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2838 always 2838
  "struct A { void f() {} };\nstruct B {\n    B() { a->f(); }\n    A* a;\n};\n" always "struct A { void f() {} };\nstruct B {\n    B() { a->f(); }\n    A* a;\n};\n"
Line 2843
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2843 always 2843
  "[test.cpp:3]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'B::a' is not initialized in the constructor.\n"
Line 2847
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2847 always 2847
  "class John\n{\npublic:\n    John() {}\n\nprivate:\n    char name[255];\n};" always "class John\n{\npublic:\n    John() {}\n\nprivate:\n    char name[255];\n};"
Line 2855
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2855 always 2855
  "[test.cpp:4]: (warning) Member variable 'John::name' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'John::name' is not initialized in the constructor.\n"
Line 2857
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2857 always 2857
  "class John\n{\npublic:\n    John() {John::name[0] = '\\0';}\n\nprivate:\n    char name[255];\n};" always "class John\n{\npublic:\n    John() {John::name[0] = '\\0';}\n\nprivate:\n    char name[255];\n};"
Line 2865
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2865 always 2865
  "" always ""
Line 2867
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2867 always 2867
  "class John\n{\npublic:\n    John() { strcpy(name, \"\"); }\n\nprivate:\n    char name[255];\n};" always "class John\n{\npublic:\n    John() { strcpy(name, \"\"); }\n\nprivate:\n    char name[255];\n};"
Line 2875
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2875 always 2875
  "" always ""
Line 2877
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2877 always 2877
  "class John\n{\npublic:\n    John() { }\n\n    double  operator[](const unsigned long i);\n};" always "class John\n{\npublic:\n    John() { }\n\n    double  operator[](const unsigned long i);\n};"
Line 2884
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2884 always 2884
  "" always ""
Line 2886
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2886 always 2886
  "class A;\nclass John\n{\npublic:\n    John() { }\n    A a[5];\n};" always "class A;\nclass John\n{\npublic:\n    John() { }\n    A a[5];\n};"
Line 2893
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2893 always 2893
  "" always ""
Line 2895
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2895 always 2895
  "class A;\nclass John\n{\npublic:\n    John() { }\n    A (*a)[5];\n};" always "class A;\nclass John\n{\npublic:\n    John() { }\n    A (*a)[5];\n};"
Line 2902
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2902 always 2902
  "[test.cpp:5]: (warning) Member variable 'John::a' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'John::a' is not initialized in the constructor.\n"
Line 2906
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2906 always 2906
  "class John\n{\npublic:\n    John() { *name = 0; }\n\nprivate:\n    char name[255];\n};" always "class John\n{\npublic:\n    John() { *name = 0; }\n\nprivate:\n    char name[255];\n};"
Line 2914
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2914 always 2914
  "" always ""
Line 2917
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2917 always 2917
  "class John\n{\npublic:\n    John() {*this->name = '\\0';}\n\nprivate:\n    char name[255];\n};" always "class John\n{\npublic:\n    John() {*this->name = '\\0';}\n\nprivate:\n    char name[255];\n};"
Line 2925
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2925 always 2925
  "" always ""
Line 2929
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2929 always 2929
  "class John\n{\nprivate:\n    int a[100];\n    int b[100];\n\npublic:\n    John()\n    {\n        memset(a,0,sizeof(a));\n        memset(b,0,sizeof(b));\n    }\n};" always "class John\n{\nprivate:\n    int a[100];\n    int b[100];\n\npublic:\n    John()\n    {\n        memset(a,0,sizeof(a));\n        memset(b,0,sizeof(b));\n    }\n};"
Line 2942
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2942 always 2942
  "" always ""
Line 2946
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2946 always 2946
  "class John\n{\nprivate:\n    int a[100];\n    int b[100];\n\npublic:\n    John()\n    {\n        if (snprintf(a,10,\"a\")) { }\n        if (snprintf(b,10,\"b\")) { }\n    }\n};" always "class John\n{\nprivate:\n    int a[100];\n    int b[100];\n\npublic:\n    John()\n    {\n        if (snprintf(a,10,\"a\")) { }\n        if (snprintf(b,10,\"b\")) { }\n    }\n};"
Line 2959
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2959 always 2959
  "" always ""
Line 2963
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2963 always 2963
  "class Foo\n{\nprivate:\n    Bar bars[10];\npublic:\n    Foo()\n    { }\n};" always "class Foo\n{\nprivate:\n    Bar bars[10];\npublic:\n    Foo()\n    { }\n};"
Line 2971
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2971 always 2971
  "" always ""
Line 2975
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2975 always 2975
  "class Foo\n{\npublic:\n    Foo();\n    static const char STR[];\n};\nconst char Foo::STR[] = \"abc\";\nFoo::Foo() { }" always "class Foo\n{\npublic:\n    Foo();\n    static const char STR[];\n};\nconst char Foo::STR[] = \"abc\";\nFoo::Foo() { }"
Line 2983
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2983 always 2983
  "" always ""
Line 2987
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2987 always 2987
  "class Foo\n{\n    int array[10];\npublic:\n    Foo() { }\n};" always "class Foo\n{\n    int array[10];\npublic:\n    Foo() { }\n};"
Line 2993
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2993 always 2993
  "[test.cpp:5]: (warning) Member variable 'Foo::array' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'Foo::array' is not initialized in the constructor.\n"
Line 2995
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  2995 always 2995
  "class Foo\n{\n    int array[10];\npublic:\n    Foo() { memset(array, 0, sizeof(array)); }\n};" always "class Foo\n{\n    int array[10];\npublic:\n    Foo() { memset(array, 0, sizeof(array)); }\n};"
Line 3001
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3001 always 3001
  "" always ""
Line 3003
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3003 always 3003
  "class Foo\n{\n    int array[10];\npublic:\n    Foo() { ::memset(array, 0, sizeof(array)); }\n};" always "class Foo\n{\n    int array[10];\npublic:\n    Foo() { ::memset(array, 0, sizeof(array)); }\n};"
Line 3009
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3009 always 3009
  "" always ""
Line 3013
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3013 always 3013
  "class Foo {\n    char a[10];\npublic:\n    Foo() { ::ZeroMemory(a); }\n}" always "class Foo {\n    char a[10];\npublic:\n    Foo() { ::ZeroMemory(a); }\n}"
Line 3018
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3018 always 3018
  "" always ""
Line 3022
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3022 always 3022
  "class BaseGDL;\nstruct IxExprListT {\nprivate:\n    BaseGDL* eArr[3];\npublic:\n    IxExprListT() {}\n};" always "class BaseGDL;\nstruct IxExprListT {\nprivate:\n    BaseGDL* eArr[3];\npublic:\n    IxExprListT() {}\n};"
Line 3029
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3029 always 3029
  "[test.cpp:6]: (warning) Member variable 'IxExprListT::eArr' is not initialized in the constructor.\n" always "[test.cpp:6]: (warning) Member variable 'IxExprListT::eArr' is not initialized in the constructor.\n"
Line 3030
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3030 always 3030
  "struct sRAIUnitDefBL {\n  sRAIUnitDefBL();\n  ~sRAIUnitDefBL();\n};\nstruct sRAIUnitDef {\n  sRAIUnitDef() {}\n  sRAIUnitDefBL *List[35];\n};" always "struct sRAIUnitDefBL {\n  sRAIUnitDefBL();\n  ~sRAIUnitDefBL();\n};\nstruct sRAIUnitDef {\n  sRAIUnitDef() {}\n  sRAIUnitDefBL *List[35];\n};"
Line 3038
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3038 always 3038
  "[test.cpp:6]: (warning) Member variable 'sRAIUnitDef::List' is not initialized in the constructor.\n" always "[test.cpp:6]: (warning) Member variable 'sRAIUnitDef::List' is not initialized in the constructor.\n"
Line 3042
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3042 always 3042
  "class John\n{\npublic:\n    John() { a[0][0] = 0; }\n\nprivate:\n    char a[2][2];\n};" always "class John\n{\npublic:\n    John() { a[0][0] = 0; }\n\nprivate:\n    char a[2][2];\n};"
Line 3050
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3050 always 3050
  "" always ""
Line 3054
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3054 always 3054
  "class John\n{\nprivate:\n    char a[2][2][2];\npublic:\n    John() { a[0][0][0] = 0; }\n};" always "class John\n{\nprivate:\n    char a[2][2][2];\npublic:\n    John() { a[0][0][0] = 0; }\n};"
Line 3061
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3061 always 3061
  "" always ""
Line 3065
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3065 always 3065
  "class Foo {\n    std::vector<std::string> bar;\npublic:\n    Foo()\n        : bar({\"a\", \"b\"})\n    {}\n};" always "class Foo {\n    std::vector<std::string> bar;\npublic:\n    Foo()\n        : bar({\"a\", \"b\"})\n    {}\n};"
Line 3072
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3072 always 3072
  "" always ""
Line 3076
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3076 always 3076
  "class Fred {\n    struct Foo {\n        int a;\n        bool b;\n    };\n    Foo f;\n    float g;\npublic:\n    Fred() : f{0, true} { }\n    float get() const;\n};\nfloat Fred::get() const { return g; }" always "class Fred {\n    struct Foo {\n        int a;\n        bool b;\n    };\n    Foo f;\n    float g;\npublic:\n    Fred() : f{0, true} { }\n    float get() const;\n};\nfloat Fred::get() const { return g; }"
Line 3088
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3088 always 3088
  "[test.cpp:9]: (warning) Member variable 'Fred::g' is not initialized in the constructor.\n" always "[test.cpp:9]: (warning) Member variable 'Fred::g' is not initialized in the constructor.\n"
Line 3092
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3092 always 3092
  "class A\n{\nprivate:\n    struct B {\n        std::string str1;\n        std::string str2;\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};" always "class A\n{\nprivate:\n    struct B {\n        std::string str1;\n        std::string str2;\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};"
Line 3104
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3104 always 3104
  "" always ""
Line 3106
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3106 always 3106
  "class A\n{\nprivate:\n    struct B {\n        char *str1;\n        char *str2;\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};" always "class A\n{\nprivate:\n    struct B {\n        char *str1;\n        char *str2;\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};"
Line 3118
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3118 always 3118
  "[test.cpp:10]: (warning) Member variable 'A::b' is not initialized in the constructor.\n" always "[test.cpp:10]: (warning) Member variable 'A::b' is not initialized in the constructor.\n"
Line 3120
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3120 always 3120
  "class A\n{\nprivate:\n    struct B {\n        char *str1;\n        char *str2;\n        B() : str1(NULL), str2(NULL) { }\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};" always "class A\n{\nprivate:\n    struct B {\n        char *str1;\n        char *str2;\n        B() : str1(NULL), str2(NULL) { }\n    }\n    struct B b;\npublic:\n    A() {\n    }\n};"
Line 3133
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3133 always 3133
  "" always ""
Line 3137
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3137 always 3137
  "struct POINT\n{\n    int x;\n    int y;\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};" always "struct POINT\n{\n    int x;\n    int y;\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};"
Line 3150
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3150 always 3150
  "[test.cpp:11]: (warning) Member variable 'Fred::p' is not initialized in the constructor.\n" always "[test.cpp:11]: (warning) Member variable 'Fred::p' is not initialized in the constructor.\n"
Line 3152
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3152 always 3152
  "struct POINT\n{\n    int x;\n    int y;\n    POINT();\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};" always "struct POINT\n{\n    int x;\n    int y;\n    POINT();\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};"
Line 3166
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3166 always 3166
  "" always ""
Line 3168
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3168 always 3168
  "struct POINT\n{\n    int x;\n    int y;\n    POINT() :x(0), y(0) { }\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};" always "struct POINT\n{\n    int x;\n    int y;\n    POINT() :x(0), y(0) { }\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};"
Line 3182
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3182 always 3182
  "" always ""
Line 3185
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3185 always 3185
  "struct POINT\n{\n    int x=0;\n    int y=0;\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};" always "struct POINT\n{\n    int x=0;\n    int y=0;\n};\nclass Fred\n{\nprivate:\n    POINT p;\npublic:\n    Fred()\n    { }\n};"
Line 3198
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3198 always 3198
  "" always ""
Line 3202
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3202 always 3202
  "class Fred\n{\nprivate:\n    union { int a; int b; };\npublic:\n    Fred()\n    { a = 0; }\n};" always "class Fred\n{\nprivate:\n    union { int a; int b; };\npublic:\n    Fred()\n    { a = 0; }\n};"
Line 3210
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3210 always 3210
  "" always ""
Line 3212
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3212 always 3212
  "class Fred {\nprivate:\n    union { int a{}; int b; };\n};" always "class Fred {\nprivate:\n    union { int a{}; int b; };\n};"
Line 3216
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3216 always 3216
  "" always ""
Line 3223
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3223 always 3223
  "union Data { int id; int *ptr; };\n\nclass Fred {\nprivate:\n    int data_type;\n    Data data;\npublic:\n    Fred() : data_type(0)\n    { }\n};" always "union Data { int id; int *ptr; };\n\nclass Fred {\nprivate:\n    int data_type;\n    Data data;\npublic:\n    Fred() : data_type(0)\n    { }\n};"
Line 3233
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3233 always 3233
  "" always ""
Line 3238
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3238 always 3238
  "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    void Init();    int i;\n};" always "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    void Init();    int i;\n};"
Line 3246
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3246 always 3246
  "" always ""
Line 3249
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3249 always 3249
  "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    friend ABC;\n    int i;\n};" always "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    friend ABC;\n    int i;\n};"
Line 3257
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3257 always 3257
  "" always ""
Line 3260
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3260 always 3260
  "class Fred : private ABC\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};" always "class Fred : private ABC\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};"
Line 3267
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3267 always 3267
  "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n"
Line 3270
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3270 always 3270
  "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};" always "class Fred\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};"
Line 3277
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3277 always 3277
  "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n"
Line 3280
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3280 always 3280
  "class ABC { };\nclass Fred : private ABC\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};" always "class ABC { };\nclass Fred : private ABC\n{\npublic:\n    Fred() { Init(); }\nprivate:\n    int i;\n};"
Line 3288
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3288 always 3288
  "[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n"
Line 3293
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3293 always 3293
  "class Fred\n{\npublic:\n    enum abc {a,b,c};\n    Fred() {}\nprivate:\n    unsigned int i;\n};" always "class Fred\n{\npublic:\n    enum abc {a,b,c};\n    Fred() {}\nprivate:\n    unsigned int i;\n};"
Line 3302
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3302 always 3302
  "[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n" always "[test.cpp:5]: (warning) Member variable 'Fred::i' is not initialized in the constructor.\n"
Line 3306
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3306 always 3306
  "enum E { E1 };\nstruct X { E e = E1; };\nstruct Y {\n    Y() {}\n    X x;\n};" always "enum E { E1 };\nstruct X { E e = E1; };\nstruct Y {\n    Y() {}\n    X x;\n};"
Line 3313
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3313 always 3313
  "" always ""
Line 3317
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3317 always 3317
  "class Foo\n{\nprivate:\n    int foo;\npublic:\n    explicit Foo(std::istream &in)\n    {\n        if(!(in >> foo))\n            throw 0;\n    }\n};" always "class Foo\n{\nprivate:\n    int foo;\npublic:\n    explicit Foo(std::istream &in)\n    {\n        if(!(in >> foo))\n            throw 0;\n    }\n};"
Line 3329
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3329 always 3329
  "" always ""
Line 3333
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3333 always 3333
  "class Foo\n{\npublic:\n    typedef int * pointer;\n    Foo() : a(0) {}\n    pointer a;\n};" always "class Foo\n{\npublic:\n    typedef int * pointer;\n    Foo() : a(0) {}\n    pointer a;\n};"
Line 3341
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3341 always 3341
  "" always ""
Line 3345
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3345 always 3345
  "class Foo\n{\npublic:\n    int * pointer;\n    Foo() { memset(this, 0, sizeof(*this)); }\n};" always "class Foo\n{\npublic:\n    int * pointer;\n    Foo() { memset(this, 0, sizeof(*this)); }\n};"
Line 3352
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3352 always 3352
  "" always ""
Line 3354
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3354 always 3354
  "class Foo\n{\npublic:\n    int * pointer;\n    Foo() { ::memset(this, 0, sizeof(*this)); }\n};" always "class Foo\n{\npublic:\n    int * pointer;\n    Foo() { ::memset(this, 0, sizeof(*this)); }\n};"
Line 3361
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3361 always 3361
  "" always ""
Line 3364
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3364 always 3364
  "struct Foo {\n    int * p;\n    char c;\n    Foo() { memset(p, 0, sizeof(int)); }\n};" always "struct Foo {\n    int * p;\n    char c;\n    Foo() { memset(p, 0, sizeof(int)); }\n};"
Line 3369
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3369 always 3369
  "[test.cpp:4]: (warning) Member variable 'Foo::c' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Foo::c' is not initialized in the constructor.\n"
Line 3370
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3370 always 3370
  "struct Foo {\n    int i;\n    char c;\n    Foo() { memset(&i, 0, sizeof(int)); }\n};" always "struct Foo {\n    int i;\n    char c;\n    Foo() { memset(&i, 0, sizeof(int)); }\n};"
Line 3375
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3375 always 3375
  "[test.cpp:4]: (warning) Member variable 'Foo::c' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Foo::c' is not initialized in the constructor.\n"
Line 3376
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3376 always 3376
  "struct Foo { int f; };\nstruct Bar { int b; };\nstruct FooBar {\n  FooBar() {\n     memset(&foo, 0, sizeof(foo));\n  }\n  Foo foo;\n  Bar bar;\n};\nint main() {\n  FooBar foobar;\n  return foobar.foo.f + foobar.bar.b;\n}" always "struct Foo { int f; };\nstruct Bar { int b; };\nstruct FooBar {\n  FooBar() {\n     memset(&foo, 0, sizeof(foo));\n  }\n  Foo foo;\n  Bar bar;\n};\nint main() {\n  FooBar foobar;\n  return foobar.foo.f + foobar.bar.b;\n}"
Line 3389
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3389 always 3389
  "[test.cpp:4]: (warning) Member variable 'FooBar::bar' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'FooBar::bar' is not initialized in the constructor.\n"
Line 3390
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3390 always 3390
  "struct Foo { int f; };\nstruct Bar { int b; };\nstruct FooBar {\n  FooBar() {\n     memset(&this->foo, 0, sizeof(this->foo));\n  }\n  Foo foo;\n  Bar bar;\n};\nint main() {\n  FooBar foobar;\n  return foobar.foo.f + foobar.bar.b;\n}" always "struct Foo { int f; };\nstruct Bar { int b; };\nstruct FooBar {\n  FooBar() {\n     memset(&this->foo, 0, sizeof(this->foo));\n  }\n  Foo foo;\n  Bar bar;\n};\nint main() {\n  FooBar foobar;\n  return foobar.foo.f + foobar.bar.b;\n}"
Line 3403
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3403 always 3403
  "[test.cpp:4]: (warning) Member variable 'FooBar::bar' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'FooBar::bar' is not initialized in the constructor.\n"
Line 3406
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3406 always 3406
  "struct A {\n  A() {\n    memset(this->data, 0, 42);\n  }\n  char data[42];\n};" always "struct A {\n  A() {\n    memset(this->data, 0, 42);\n  }\n  char data[42];\n};"
Line 3412
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3412 always 3412
  "" always ""
Line 3417
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3417 always 3417
  "class Foo {\n    int foo;\n    Foo() { }\n};" always "class Foo {\n    int foo;\n    Foo() { }\n};"
Line 3421
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3421 always 3421
  "" always ""
Line 3424
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3424 always 3424
  "class Foo {\n    int foo;\n    Foo() { }\n};" always "class Foo {\n    int foo;\n    Foo() { }\n};"
Line 3428
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3428 always 3428
  "[test.cpp:3]: (warning) Member variable 'Foo::foo' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'Foo::foo' is not initialized in the constructor.\n"
Line 3432
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3432 always 3432
  "class Foo\n{\nprivate:\n    int foo;\n    Foo() { }\npublic:\n    explicit Foo(int _i) { }\n};" always "class Foo\n{\nprivate:\n    int foo;\n    Foo() { }\npublic:\n    explicit Foo(int _i) { }\n};"
Line 3441
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3441 always 3441
  "[test.cpp:7]: (warning) Member variable 'Foo::foo' is not initialized in the constructor.\n" always "[test.cpp:7]: (warning) Member variable 'Foo::foo' is not initialized in the constructor.\n"
Line 3446
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3446 always 3446
  "class A\n{\npublic:\n    A();\n    int* f(int*);\n};\n\nA::A()\n{\n}\n\nint* A::f(int* p)\n{\n    return p;\n}" always "class A\n{\npublic:\n    A();\n    int* f(int*);\n};\n\nA::A()\n{\n}\n\nint* A::f(int* p)\n{\n    return p;\n}"
Line 3462
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3462 always 3462
  "" always ""
Line 3468
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3468 always 3468
  "class Fred\n{\n__published:\n    int *i;\npublic:\n    Fred() { }\n};" always "class Fred\n{\n__published:\n    int *i;\npublic:\n    Fred() { }\n};"
Line 3475
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3475 always 3475
  "" always ""
Line 3480
  "vcl" always "vcl"
Line 3482
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3482 always 3482
  "class Fred: public TObject\n{\npublic:\n    Fred() { }\nprivate:\n    int x;\n};" always "class Fred: public TObject\n{\npublic:\n    Fred() { }\nprivate:\n    int x;\n};"
Line 3489
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3489 always 3489
  "" always ""
Line 3493
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3493 always 3493
  "class Fred\n{\npublic:\n    Fred() { }\n    int *operator [] (int index) { return 0; }\n};" always "class Fred\n{\npublic:\n    Fred() { }\n    int *operator [] (int index) { return 0; }\n};"
Line 3499
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3499 always 3499
  "" always ""
Line 3503
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3503 always 3503
  "class Fred\n{\npublic:\n    Fred() { init(*this); }\n\n    static void init(Fred &f)\n    { f.d = 0; }\n\n    double d;\n};" always "class Fred\n{\npublic:\n    Fred() { init(*this); }\n\n    static void init(Fred &f)\n    { f.d = 0; }\n\n    double d;\n};"
Line 3513
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3513 always 3513
  "" always ""
Line 3515
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3515 always 3515
  "class Fred\n{\npublic:\n    Fred() { init(*this); }\n\n    static void init(Fred &f)\n    { }\n\n    double d;\n};" always "class Fred\n{\npublic:\n    Fred() { init(*this); }\n\n    static void init(Fred &f)\n    { }\n\n    double d;\n};"
Line 3525
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3525 always 3525
  "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n"
  "" always ""
Line 3529
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3529 always 3529
  "class Fred\n{\npublic:\n    Fred() { if (!init(*this)); }\n\n    static bool init(Fred &f)\n    { f.d = 0; return true; }\n\n    double d;\n};" always "class Fred\n{\npublic:\n    Fred() { if (!init(*this)); }\n\n    static bool init(Fred &f)\n    { f.d = 0; return true; }\n\n    double d;\n};"
Line 3539
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3539 always 3539
  "" always ""
Line 3541
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3541 always 3541
  "class Fred\n{\npublic:\n    Fred() { if (!init(*this)); }\n\n    static bool init(Fred &f)\n    { return true; }\n\n    double d;\n};" always "class Fred\n{\npublic:\n    Fred() { if (!init(*this)); }\n\n    static bool init(Fred &f)\n    { return true; }\n\n    double d;\n};"
Line 3551
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3551 always 3551
  "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n"
  "" always ""
Line 3555
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3555 always 3555
  "class Fred\n{\npublic:\n    Fred() { if (!init()); }\n\n    bool init()\n    { d = 0; return true; }\n\n    double d;\n};" always "class Fred\n{\npublic:\n    Fred() { if (!init()); }\n\n    bool init()\n    { d = 0; return true; }\n\n    double d;\n};"
Line 3565
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3565 always 3565
  "" always ""
Line 3567
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3567 always 3567
  "class Fred\n{\npublic:\n    Fred() { if (!init()); }\n\n    bool init()\n    { return true; }\n\n    double d;\n};" always "class Fred\n{\npublic:\n    Fred() { if (!init()); }\n\n    bool init()\n    { return true; }\n\n    double d;\n};"
Line 3577
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3577 always 3577
  "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n"
Line 3581
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3581 always 3581
  "class Fred\n{\npublic:\n    Fred() { init(this); }\n\n    init(Fred *f)\n    { f.d = 0; }\n\n    double d;\n};" always "class Fred\n{\npublic:\n    Fred() { init(this); }\n\n    init(Fred *f)\n    { f.d = 0; }\n\n    double d;\n};"
Line 3591
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3591 always 3591
  "" always ""
Line 3593
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3593 always 3593
  "class Fred\n{\npublic:\n    Fred() { init(this); }\n\n    init(Fred *f)\n    { }\n\n    double d;\n};" always "class Fred\n{\npublic:\n    Fred() { init(this); }\n\n    init(Fred *f)\n    { }\n\n    double d;\n};"
Line 3603
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3603 always 3603
  "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'Fred::d' is not initialized in the constructor.\n"
  "" always ""
Line 3607
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3607 always 3607
  "struct Structure {\n    int C;\n};\n\nclass A {\n    Structure B;\npublic:\n    A() { Init( B ); };\n    void Init( Structure& S ) { S.C = 0; };\n};" always "struct Structure {\n    int C;\n};\n\nclass A {\n    Structure B;\npublic:\n    A() { Init( B ); };\n    void Init( Structure& S ) { S.C = 0; };\n};"
Line 3617
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3617 always 3617
  "" always ""
Line 3621
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3621 always 3621
  "class B\n{\npublic:\n    B();\n    int j;\n};\n\nclass A\n{\n    class B\n    {\n    public:\n        B();\n        int i;\n    };\n};\n\nA::B::B()\n{\n    i = 0;\n}" always "class B\n{\npublic:\n    B();\n    int j;\n};\n\nclass A\n{\n    class B\n    {\n    public:\n        B();\n        int i;\n    };\n};\n\nA::B::B()\n{\n    i = 0;\n}"
Line 3642
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3642 always 3642
  "" always ""
Line 3644
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3644 always 3644
  "class B\n{\npublic:\n    B();\n    int j;\n};\n\nclass A\n{\n    class B\n    {\n    public:\n        B();\n        int i;\n    };\n};\n\nB::B()\n{\n}\n\nA::B::B()\n{\n}" always "class B\n{\npublic:\n    B();\n    int j;\n};\n\nclass A\n{\n    class B\n    {\n    public:\n        B();\n        int i;\n    };\n};\n\nB::B()\n{\n}\n\nA::B::B()\n{\n}"
Line 3668
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3668 always 3668
  "[test.cpp:18]: (warning) Member variable 'B::j' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'B::i' is not initialized in the constructor.\n" always "[test.cpp:18]: (warning) Member variable 'B::j' is not initialized in the constructor.\n[test.cpp:22]: (warning) Member variable 'B::i' is not initialized in the constructor.\n"
Line 3672
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3672 always 3672
  "namespace n1\n{\nclass Foo {public:\n    Foo() : i(0) { }\nprivate:\n    int i;\n};\n}\n\nnamespace n2\n{\nclass Foo {public:\n    Foo() { }\n};\n}" always "namespace n1\n{\nclass Foo {public:\n    Foo() : i(0) { }\nprivate:\n    int i;\n};\n}\n\nnamespace n2\n{\nclass Foo {public:\n    Foo() { }\n};\n}"
Line 3689
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3689 always 3689
  "" always ""
Line 3691
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3691 always 3691
  "namespace n1\n{\nclass Foo {\npublic:\n    Foo();\nprivate:\n    int i;\n};\n}\n\nn1::Foo::Foo()\n{ }\n\nnamespace n2\n{\nclass Foo {\npublic:\n    Foo() { }\n};\n}" always "namespace n1\n{\nclass Foo {\npublic:\n    Foo();\nprivate:\n    int i;\n};\n}\n\nn1::Foo::Foo()\n{ }\n\nnamespace n2\n{\nclass Foo {\npublic:\n    Foo() { }\n};\n}"
Line 3711
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3711 always 3711
  "[test.cpp:11]: (warning) Member variable 'Foo::i' is not initialized in the constructor.\n" always "[test.cpp:11]: (warning) Member variable 'Foo::i' is not initialized in the constructor.\n"
Line 3713
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3713 always 3713
  "namespace n1\n{\nclass Foo {public:\n    Foo();\nprivate:\n    int i;\n};\n}\n\nn1::Foo::Foo() : i(0)\n{ }\n\nnamespace n2\n{\nclass Foo {public:\n    Foo() { }\n};\n}" always "namespace n1\n{\nclass Foo {public:\n    Foo();\nprivate:\n    int i;\n};\n}\n\nn1::Foo::Foo() : i(0)\n{ }\n\nnamespace n2\n{\nclass Foo {public:\n    Foo() { }\n};\n}"
Line 3733
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3733 always 3733
  "" always ""
Line 3738
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3738 always 3738
  "class A\n{\nprivate:\n    int i;\n\npublic:\n    A()\n    {\n        init();\n    }\n\n    void init() { init(0); }\n\n    void init(int value)\n    { i = value; }\n};" always "class A\n{\nprivate:\n    int i;\n\npublic:\n    A()\n    {\n        init();\n    }\n\n    void init() { init(0); }\n\n    void init(int value)\n    { i = value; }\n};"
Line 3754
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3754 always 3754
  "" always ""
Line 3756
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3756 always 3756
  "class A\n{\nprivate:\n    int i;\n\npublic:\n    A()\n    {\n        init();\n    }\n\n    void init() { init(0); }\n\n    void init(int value)\n    { }\n};" always "class A\n{\nprivate:\n    int i;\n\npublic:\n    A()\n    {\n        init();\n    }\n\n    void init() { init(0); }\n\n    void init(int value)\n    { }\n};"
Line 3772
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3772 always 3772
  "[test.cpp:7]: (warning) Member variable 'A::i' is not initialized in the constructor.\n" always "[test.cpp:7]: (warning) Member variable 'A::i' is not initialized in the constructor.\n"
Line 3774
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3774 always 3774
  "class bar {\n    int length;\n    bar() { length = 0; }\n};\nclass foo {\n    int x;\n    foo() { Set(bar()); }\n    void Set(int num) { x = 1; }\n    void Set(bar num) { x = num.length; }\n};\n" always "class bar {\n    int length;\n    bar() { length = 0; }\n};\nclass foo {\n    int x;\n    foo() { Set(bar()); }\n    void Set(int num) { x = 1; }\n    void Set(bar num) { x = num.length; }\n};\n"
Line 3784
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3784 always 3784
  "" always ""
Line 3788
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3788 always 3788
  "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n};" always "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n};"
Line 3793
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3793 always 3793
  "" always ""
Line 3795
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3795 always 3795
  "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n    A & operator = (const A & rhs) {\n        a = rhs.a;\n        return *this;\n    }\n};" always "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n    A & operator = (const A & rhs) {\n        a = rhs.a;\n        return *this;\n    }\n};"
Line 3804
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3804 always 3804
  "" always ""
Line 3806
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3806 always 3806
  "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n    A & operator = (const A & rhs) {\n        return *this;\n    }\n};" always "struct A {\n    int a;\n    A() { a=0; }\n    A(A const &a) { operator=(a); }\n    A & operator = (const A & rhs) {\n        return *this;\n    }\n};"
Line 3814
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3814 always 3814
  "[test.cpp:4]: (warning) Member variable 'A::a' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'A::a' is not assigned a value in 'A::operator='.\n" always "[test.cpp:4]: (warning) Member variable 'A::a' is not initialized in the copy constructor.\n[test.cpp:5]: (warning) Member variable 'A::a' is not assigned a value in 'A::operator='.\n"
Line 3819
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3819 always 3819
  "struct A {\n    int a;\n};\nstruct B {\n    A* a;\n    B() { }\n};" always "struct A {\n    int a;\n};\nstruct B {\n    A* a;\n    B() { }\n};"
Line 3826
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3826 always 3826
  "[test.cpp:6]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" always "[test.cpp:6]: (warning) Member variable 'B::a' is not initialized in the constructor.\n"
Line 3828
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3828 always 3828
  "struct A;\nstruct B {\n    A* a;\n    B() { }\n};" always "struct A;\nstruct B {\n    A* a;\n    B() { }\n};"
Line 3833
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3833 always 3833
  "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n"
Line 3835
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3835 always 3835
  "struct A;\nstruct B {\n    const A* a;\n    B() { }\n};" always "struct A;\nstruct B {\n    const A* a;\n    B() { }\n};"
Line 3840
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3840 always 3840
  "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n"
Line 3842
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3842 always 3842
  "struct A;\nstruct B {\n    A* const a;\n    B() { }\n};" always "struct A;\nstruct B {\n    A* const a;\n    B() { }\n};"
Line 3847
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3847 always 3847
  "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n" always "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n"
Line 3849
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3849 always 3849
  "class Test {\npublic:\n    Test() {}\n    std::map<int, int>* pMap = nullptr;\n    std::string* pStr = nullptr;\n};\n" always "class Test {\npublic:\n    Test() {}\n    std::map<int, int>* pMap = nullptr;\n    std::string* pStr = nullptr;\n};\n"
Line 3855
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3855 always 3855
  "" always ""
Line 3857
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3857 always 3857
  "template <typename U>\nclass C1 {}; \ntemplate <typename U, typename V>\nclass C2 {};\nnamespace A {\n    template <typename U>\n    class D1 {};\n    template <typename U, typename V>\n    class D2 {};\n}\nclass Test {\npublic:\n    Test() {}\n    C1<int>* c1 = nullptr;\n    C2<int, int >* c2 = nullptr;\n    A::D1<int>* d1 = nullptr;\n    A::D2<int, int >* d2 = nullptr;\n    std::map<int, int>* pMap = nullptr;\n};\n" always "template <typename U>\nclass C1 {}; \ntemplate <typename U, typename V>\nclass C2 {};\nnamespace A {\n    template <typename U>\n    class D1 {};\n    template <typename U, typename V>\n    class D2 {};\n}\nclass Test {\npublic:\n    Test() {}\n    C1<int>* c1 = nullptr;\n    C2<int, int >* c2 = nullptr;\n    A::D1<int>* d1 = nullptr;\n    A::D2<int, int >* d2 = nullptr;\n    std::map<int, int>* pMap = nullptr;\n};\n"
Line 3876
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3876 always 3876
  "" always ""
Line 3880
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3880 always 3880
  "struct A;\nstruct B {\n    A* const a;\n    B() { }\n    B(B& b) { }\n};" always "struct A;\nstruct B {\n    A* const a;\n    B() { }\n    B(B& b) { }\n};"
Line 3886
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3886 always 3886
  "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'B::a' is not initialized in the copy constructor.\n" always "[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:5]: (warning) Member variable 'B::a' is not initialized in the copy constructor.\n"
Line 3889
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3889 always 3889
  "struct A;\nstruct B {\n    A* const a;\n    B& operator=(const B& r) { }\n};" always "struct A;\nstruct B {\n    A* const a;\n    B& operator=(const B& r) { }\n};"
Line 3894
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3894 always 3894
  "" always ""
Line 3896
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3896 always 3896
  "struct B {\n    const int a;\n    B() { }\n    B(B& b) { }\n};" always "struct B {\n    const int a;\n    B() { }\n    B(B& b) { }\n};"
Line 3901
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3901 always 3901
  "[test.cpp:3]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the copy constructor.\n" always "[test.cpp:3]: (warning) Member variable 'B::a' is not initialized in the constructor.\n[test.cpp:4]: (warning) Member variable 'B::a' is not initialized in the copy constructor.\n"
Line 3904
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3904 always 3904
  "struct B {\n    const int a;\n    B& operator=(const B& r) { }\n};" always "struct B {\n    const int a;\n    B& operator=(const B& r) { }\n};"
Line 3908
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3908 always 3908
  "" always ""
Line 3913
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3913 always 3913
  "class C {\npublic:\n  C() _STLP_NOTHROW {}\n  C(const C&) _STLP_NOTHROW {}\n};" always "class C {\npublic:\n  C() _STLP_NOTHROW {}\n  C(const C&) _STLP_NOTHROW {}\n};"
Line 3918
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3918 always 3918
  "" always ""
Line 3922
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3922 always 3922
  "class operatorX {\n  int mValue;\npublic:\n  operatorX() : mValue(0) {}\n};" always "class operatorX {\n  int mValue;\npublic:\n  operatorX() : mValue(0) {}\n};"
Line 3927
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3927 always 3927
  "" always ""
Line 3931
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3931 always 3931
  "template <class T> struct Container {\n  Container();\n  T* mElements;\n};\ntemplate <class T> Container<T>::Container() : mElements(nullptr) {}\nContainer<int> intContainer;" always "template <class T> struct Container {\n  Container();\n  T* mElements;\n};\ntemplate <class T> Container<T>::Container() : mElements(nullptr) {}\nContainer<int> intContainer;"
Line 3937
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3937 always 3937
  "" always ""
Line 3941
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3941 always 3941
  "typedef float    rvec[3];\nclass SelectionPosition {\npublic:\n    SelectionPosition() {}\n    const rvec &x() const;\n};" always "typedef float    rvec[3];\nclass SelectionPosition {\npublic:\n    SelectionPosition() {}\n    const rvec &x() const;\n};"
Line 3947
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3947 always 3947
  "" always ""
Line 3951
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3951 always 3951
  "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = b && SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = b && SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"
  true always 1
Line 3962
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3962 always 3962
  "[test.cpp:3]: (warning, inconclusive) Member variable 'C::x' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning, inconclusive) Member variable 'C::x' is not initialized in the constructor.\n"
  "[test.cpp:3]: (warning) Member variable 'C::x' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'C::x' is not initialized in the constructor.\n"
Line 3965
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3965 always 3965
  "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = true || SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = true || SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"
  true always 1
Line 3976
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3976 always 3976
  "[test.cpp:3]: (warning, inconclusive) Member variable 'C::x' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning, inconclusive) Member variable 'C::x' is not initialized in the constructor.\n"
  "[test.cpp:3]: (warning) Member variable 'C::x' is not initialized in the constructor.\n" always "[test.cpp:3]: (warning) Member variable 'C::x' is not initialized in the constructor.\n"
Line 3979
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3979 always 3979
  "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b = b & SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b = b & SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"
Line 3990
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3990 always 3990
  "" always ""
Line 3992
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  3992 always 3992
  "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = true | SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b = true | SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"
Line 4003
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4003 always 4003
  "" always ""
Line 4005
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4005 always 4005
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i * SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i * SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4013
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4013 always 4013
  "" always ""
Line 4015
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4015 always 4015
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i / SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i / SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4023
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4023 always 4023
  "" always ""
Line 4025
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4025 always 4025
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i % SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i % SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4033
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4033 always 4033
  "" always ""
Line 4035
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4035 always 4035
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i + SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i + SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4043
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4043 always 4043
  "" always ""
Line 4045
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4045 always 4045
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i - SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i - SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4053
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4053 always 4053
  "" always ""
Line 4055
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4055 always 4055
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i << SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i << SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4063
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4063 always 4063
  "" always ""
Line 4065
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4065 always 4065
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i >> SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i >> SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4073
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4073 always 4073
  "" always ""
Line 4075
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4075 always 4075
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i ^ SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i = i ^ SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4083
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4083 always 4083
  "" always ""
Line 4087
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4087 always 4087
  "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b &= SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b &= SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"
Line 4098
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4098 always 4098
  "" always ""
Line 4100
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4100 always 4100
  "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b |= SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b |= SetValue();\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"
Line 4111
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4111 always 4111
  "" always ""
Line 4113
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4113 always 4113
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i *= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i *= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4121
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4121 always 4121
  "" always ""
Line 4123
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4123 always 4123
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i /= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i /= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4131
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4131 always 4131
  "" always ""
Line 4133
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4133 always 4133
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i %= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i %= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4141
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4141 always 4141
  "" always ""
Line 4143
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4143 always 4143
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i += SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i += SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4151
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4151 always 4151
  "" always ""
Line 4153
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4153 always 4153
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i -= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i -= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4161
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4161 always 4161
  "" always ""
Line 4163
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4163 always 4163
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i <<= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i <<= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4171
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4171 always 4171
  "" always ""
Line 4173
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4173 always 4173
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i >>= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i >>= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4181
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4181 always 4181
  "" always ""
Line 4183
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4183 always 4183
  "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i ^= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        int i = 0;\n        i ^= SetValue();\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4191
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4191 always 4191
  "" always ""
Line 4195
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4195 always 4195
  "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b = (true == SetValue());\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = true;\n        b = (true == SetValue());\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"
Line 4206
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4206 always 4206
  "" always ""
Line 4208
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4208 always 4208
  "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b |= (true != SetValue());\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = false;\n        b |= (true != SetValue());\n    }\n    bool SetValue() {\n        x = 1;\n        return true;\n    }\n};"
Line 4219
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4219 always 4219
  "" always ""
Line 4221
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4221 always 4221
  "struct C {\n    int x;\n    C() {\n        bool b = (0 < SetValue());\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = (0 < SetValue());\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4228
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4228 always 4228
  "" always ""
Line 4230
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4230 always 4230
  "struct C {\n    int x;\n    C() {\n        bool b = (0 <= SetValue());\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = (0 <= SetValue());\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4237
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4237 always 4237
  "" always ""
Line 4239
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4239 always 4239
  "struct C {\n    int x;\n    C() {\n        bool b = (0 > SetValue());\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = (0 > SetValue());\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4246
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4246 always 4246
  "" always ""
Line 4248
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4248 always 4248
  "struct C {\n    int x;\n    C() {\n        bool b = (0 >= SetValue());\n    }\n    int SetValue() { return x = 1; }\n};" always "struct C {\n    int x;\n    C() {\n        bool b = (0 >= SetValue());\n    }\n    int SetValue() { return x = 1; }\n};"
Line 4255
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4255 always 4255
  "" always ""
Line 4259
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4259 always 4259
  "template <class A, class T> class C;\ntemplate <class A>\nclass C<A, void> {\n  public:\n    C() : b(0) { }\n    C(A* a) : b(a) { }\n  private:\n    A* b;\n};\ntemplate <class A, class T>\nclass C {\n  private:\n    A* b;\n};" always "template <class A, class T> class C;\ntemplate <class A>\nclass C<A, void> {\n  public:\n    C() : b(0) { }\n    C(A* a) : b(a) { }\n  private:\n    A* b;\n};\ntemplate <class A, class T>\nclass C {\n  private:\n    A* b;\n};"
Line 4273
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4273 always 4273
  "" always ""
Line 4275
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4275 always 4275
  "template<class T> class A{};\ntemplate<class T1, class T2> class B{};\ntemplate<class T1, class T2>\nclass A<B<T1, T2>> {\n  public:\n    A();\n    bool m_value;\n};\ntemplate<class T1, class T2>\nA<B<T1, T2>>::A() : m_value(false) {}" always "template<class T> class A{};\ntemplate<class T1, class T2> class B{};\ntemplate<class T1, class T2>\nclass A<B<T1, T2>> {\n  public:\n    A();\n    bool m_value;\n};\ntemplate<class T1, class T2>\nA<B<T1, T2>>::A() : m_value(false) {}"
Line 4285
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4285 always 4285
  "" always ""
Line 4289
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4289 always 4289
  "template <typename T> class A {\nprivate:\n    T m;\npublic:\n    A& operator=() { return *this; }\n};\nA<decltype(SOMETHING)> a;" always "template <typename T> class A {\nprivate:\n    T m;\npublic:\n    A& operator=() { return *this; }\n};\nA<decltype(SOMETHING)> a;"
Line 4296
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testconstructors.cpp" always "cppcheck-2.8/test/testconstructors.cpp"
  4296 always 4296
  "" always ""
