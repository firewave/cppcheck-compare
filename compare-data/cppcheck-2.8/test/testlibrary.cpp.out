

##file cppcheck-2.8/test/testsuite.h

1:
|
31:
32: class options ;
33:
34: class TestFixture : public ErrorLogger {
35: private:
36: static std :: ostringstream errmsg@var1 ;
37: static unsigned int countTests@var2 ;
38: static unsigned long fails_counter@var3 ;
39: static unsigned long todos_counter@var4 ;
40: static unsigned long succeeded_todos_counter@var5 ;
41: static std :: set < std :: string > missingLibs@var6 ;
42: bool mVerbose@var7 ;
43: std :: string mTemplateFormat@var8 ;
44: std :: string mTemplateLocation@var9 ;
45: std :: string mTestname@var10 ;
46:
47: protected:
48: std :: string exename@var11 ;
49: std :: string testToRun@var12 ;
50: bool quiet_tests@var13 ;
51:
52: virtual void run ( ) = 0 ;
53:
54: bool prepareTest ( const char testname@var14 [ ] ) ;
55: std :: string getLocationStr ( const char * const filename@var15 , const unsigned int linenr@var16 ) const ;
56:
57: bool assert_ ( const char * const filename@var17 , const unsigned int linenr@var18 , const bool condition@var19 ) const ;
58:
59: template < typename T , typename U >
60: bool assertEquals ( const char * const filename@var20 , const unsigned int linenr@var21 , const T & expected@var22 , const U & actual@var23 , const std :: string & msg@var24 = emptyString ) const {
61: if (@expr1073742114 expected@var22 !=@expr1073742115 actual@var23 ) {
62: std ::@expr1073742116 ostringstream expectedStr@var25 ;
63: expectedStr@var25 <<@expr1073742117 expected@var22 ;
64: std ::@expr1073742118 ostringstream actualStr@var26 ;
65: actualStr@var26 <<@expr1073742119 actual@var23 ;
66:
67: assertEqualsFailed (@expr1073742120 filename@var20 , linenr@var21 , expectedStr@var25 .@expr1073742121 str (@expr1073742122 ) , actualStr@var26 .@expr1073742123 str (@expr1073742124 ) , msg@var24 ) ;
68: }
69: return expected@var22 ==@expr1073742125 actual@var23 ;
70: }
71:
72:
73:
74: void assertEqualsFailed ( const char * const filename@var27 , const unsigned int linenr@var28 , const std :: string & expected@var29 , const std :: string & actual@var30 , const std :: string & msg@var31 ) const ;
75:
76: bool assertEquals ( const char * const filename@var32 , const unsigned int linenr@var33 , const std :: string & expected@var34 , const std :: string & actual@var35 , const std :: string & msg@var36 = emptyString ) const ;
77: void assertEqualsWithoutLineNumbers ( const char * const filename@var37 , const unsigned int linenr@var38 , const std :: string & expected@var39 , const std :: string & actual@var40 , const std :: string & msg@var41 = emptyString ) const ;
78: bool assertEquals ( const char * const filename@var42 , const unsigned int linenr@var43 , const char expected@var44 [ ] , const std :: string & actual@var45 , const std :: string & msg@var46 = emptyString ) const ;
79: bool assertEquals ( const char * const filename@var47 , const unsigned int linenr@var48 , const char expected@var49 [ ] , const char actual@var50 [ ] , const std :: string & msg@var51 = emptyString ) const ;
80: bool assertEquals ( const char * const filename@var52 , const unsigned int linenr@var53 , const std :: string & expected@var54 , const char actual@var55 [ ] , const std :: string & msg@var56 = emptyString ) const ;
81: bool assertEquals ( const char * const filename@var57 , const unsigned int linenr@var58 , const long long expected@var59 , const long long actual@var60 , const std :: string & msg@var61 = emptyString ) const ;
82: void assertEqualsDouble ( const char * const filename@var62 , const unsigned int linenr@var63 , const double expected@var64 , const double actual@var65 , const double tolerance@var66 , const std :: string & msg@var67 = emptyString ) const ;
83:
84: void todoAssertEquals ( const char * const filename@var68 , const unsigned int linenr@var69 , const std :: string & wanted@var70 ,
85: const std :: string & current@var71 , const std :: string & actual@var72 ) const ;
86: void todoAssertEquals ( const char * const filename@var73 , const unsigned int linenr@var74 , const char wanted@var75 [ ] ,
87: const char current@var76 [ ] , const std :: string & actual@var77 ) const ;
88: void todoAssertEquals ( const char * const filename@var78 , const unsigned int linenr@var79 , const long long wanted@var80 ,
89: const long long current@var81 , const long long actual@var82 ) const ;
90: void assertThrow ( const char * const filename@var83 , const unsigned int linenr@var84 ) const ;
91: void assertThrowFail ( const char * const filename@var85 , const unsigned int linenr@var86 ) const ;
92: void assertNoThrowFail ( const char * const filename@var87 , const unsigned int linenr@var88 ) const ;
93: static void complainMissingLib ( const char * const libname@var89 ) ;
94: static std :: string deleteLineNumber ( const std :: string & message@var90 ) ;
95:
96: void setVerbose ( bool v@var91 ) {
97: mVerbose@var7 =@expr1073742126 v@var91 ;
98: }
99:
100: void setMultiline ( ) {
101: mTemplateFormat@var8 =@expr1073742127 "{file}:{line}:{severity}:{message}" ;
102: mTemplateLocation@var9 =@expr1073742128 "{file}:{line}:note:{info}" ;
103: }
104:
105: void processOptions ( const options & args@var92 ) ;
106: public:
107: void reportOut ( const std :: string & outmsg@var93 , Color c@var94 = Color :: Reset ) override ;
108: void reportErr ( const ErrorMessage & msg@var95 ) override ;
109: void run ( const std :: string & str@var96 ) ;
110: static void printHelp ( ) ;
111: const std :: string classname@var97 ;
112:
113: explicit TestFixture ( const char * const _name@var98 ) ;
114: ~ TestFixture ( ) override { }
115:
116: static unsigned long runTests ( const options & args@var99 ) ;
117: } ;
118:
119: extern std :: ostringstream errout@var100 ;
120: extern std :: ostringstream output@var101 ;

##file cppcheck-2.8/test/testlibrary.cpp

1:
|
37:
38: class TestLibrary : public TestFixture {
39: public:
40: TestLibrary ( ) : TestFixture ( "TestLibrary" ) { }
41:
42: private:
43: Settings settings@var102 ;
44:
45: void run ( ) override {
46: $do ${ $if $(@expr1073742129 $prepareTest $(@expr1073742130 "isCompliantValidationExpression" $) $) ${ $setVerbose $(@expr1073742131 $false $) $; isCompliantValidationExpression $(@expr1073742132 $) $; $} $} $while $(@expr1073742133 $false $) ;
47: $do ${ $if $(@expr1073742134 $prepareTest $(@expr1073742135 "empty" $) $) ${ $setVerbose $(@expr1073742136 $false $) $; empty $(@expr1073742137 $) $; $} $} $while $(@expr1073742138 $false $) ;
48: $do ${ $if $(@expr1073742139 $prepareTest $(@expr1073742140 "function" $) $) ${ $setVerbose $(@expr1073742141 $false $) $; function $(@expr1073742142 $) $; $} $} $while $(@expr1073742143 $false $) ;
49: $do ${ $if $(@expr1073742144 $prepareTest $(@expr1073742145 "function_match_scope" $) $) ${ $setVerbose $(@expr1073742146 $false $) $; function_match_scope $(@expr1073742147 $) $; $} $} $while $(@expr1073742148 $false $) ;
50: $do ${ $if $(@expr1073742149 $prepareTest $(@expr1073742150 "function_match_args" $) $) ${ $setVerbose $(@expr1073742151 $false $) $; function_match_args $(@expr1073742152 $) $; $} $} $while $(@expr1073742153 $false $) ;
51: $do ${ $if $(@expr1073742154 $prepareTest $(@expr1073742155 "function_match_args_default" $) $) ${ $setVerbose $(@expr1073742156 $false $) $; function_match_args_default $(@expr1073742157 $) $; $} $} $while $(@expr1073742158 $false $) ;
52: $do ${ $if $(@expr1073742159 $prepareTest $(@expr1073742160 "function_match_var" $) $) ${ $setVerbose $(@expr1073742161 $false $) $; function_match_var $(@expr1073742162 $) $; $} $} $while $(@expr1073742163 $false $) ;
53: $do ${ $if $(@expr1073742164 $prepareTest $(@expr1073742165 "function_arg" $) $) ${ $setVerbose $(@expr1073742166 $false $) $; function_arg $(@expr1073742167 $) $; $} $} $while $(@expr1073742168 $false $) ;
54: $do ${ $if $(@expr1073742169 $prepareTest $(@expr1073742170 "function_arg_any" $) $) ${ $setVerbose $(@expr1073742171 $false $) $; function_arg_any $(@expr1073742172 $) $; $} $} $while $(@expr1073742173 $false $) ;
55: $do ${ $if $(@expr1073742174 $prepareTest $(@expr1073742175 "function_arg_variadic" $) $) ${ $setVerbose $(@expr1073742176 $false $) $; function_arg_variadic $(@expr1073742177 $) $; $} $} $while $(@expr1073742178 $false $) ;
56: $do ${ $if $(@expr1073742179 $prepareTest $(@expr1073742180 "function_arg_direction" $) $) ${ $setVerbose $(@expr1073742181 $false $) $; function_arg_direction $(@expr1073742182 $) $; $} $} $while $(@expr1073742183 $false $) ;
57: $do ${ $if $(@expr1073742184 $prepareTest $(@expr1073742185 "function_arg_valid" $) $) ${ $setVerbose $(@expr1073742186 $false $) $; function_arg_valid $(@expr1073742187 $) $; $} $} $while $(@expr1073742188 $false $) ;
58: $do ${ $if $(@expr1073742189 $prepareTest $(@expr1073742190 "function_arg_minsize" $) $) ${ $setVerbose $(@expr1073742191 $false $) $; function_arg_minsize $(@expr1073742192 $) $; $} $} $while $(@expr1073742193 $false $) ;
59: $do ${ $if $(@expr1073742194 $prepareTest $(@expr1073742195 "function_namespace" $) $) ${ $setVerbose $(@expr1073742196 $false $) $; function_namespace $(@expr1073742197 $) $; $} $} $while $(@expr1073742198 $false $) ;
60: $do ${ $if $(@expr1073742199 $prepareTest $(@expr1073742200 "function_method" $) $) ${ $setVerbose $(@expr1073742201 $false $) $; function_method $(@expr1073742202 $) $; $} $} $while $(@expr1073742203 $false $) ;
61: $do ${ $if $(@expr1073742204 $prepareTest $(@expr1073742205 "function_baseClassMethod" $) $) ${ $setVerbose $(@expr1073742206 $false $) $; function_baseClassMethod $(@expr1073742207 $) $; $} $} $while $(@expr1073742208 $false $) ;
62: $do ${ $if $(@expr1073742209 $prepareTest $(@expr1073742210 "function_warn" $) $) ${ $setVerbose $(@expr1073742211 $false $) $; function_warn $(@expr1073742212 $) $; $} $} $while $(@expr1073742213 $false $) ;
63: $do ${ $if $(@expr1073742214 $prepareTest $(@expr1073742215 "memory" $) $) ${ $setVerbose $(@expr1073742216 $false $) $; memory $(@expr1073742217 $) $; $} $} $while $(@expr1073742218 $false $) ;
64: $do ${ $if $(@expr1073742219 $prepareTest $(@expr1073742220 "memory2" $) $) ${ $setVerbose $(@expr1073742221 $false $) $; memory2 $(@expr1073742222 $) $; $} $} $while $(@expr1073742223 $false $) ;
65: $do ${ $if $(@expr1073742224 $prepareTest $(@expr1073742225 "memory3" $) $) ${ $setVerbose $(@expr1073742226 $false $) $; memory3 $(@expr1073742227 $) $; $} $} $while $(@expr1073742228 $false $) ;
66: $do ${ $if $(@expr1073742229 $prepareTest $(@expr1073742230 "resource" $) $) ${ $setVerbose $(@expr1073742231 $false $) $; resource $(@expr1073742232 $) $; $} $} $while $(@expr1073742233 $false $) ;
67: $do ${ $if $(@expr1073742234 $prepareTest $(@expr1073742235 "podtype" $) $) ${ $setVerbose $(@expr1073742236 $false $) $; podtype $(@expr1073742237 $) $; $} $} $while $(@expr1073742238 $false $) ;
68: $do ${ $if $(@expr1073742239 $prepareTest $(@expr1073742240 "container" $) $) ${ $setVerbose $(@expr1073742241 $false $) $; container $(@expr1073742242 $) $; $} $} $while $(@expr1073742243 $false $) ;
69: $do ${ $if $(@expr1073742244 $prepareTest $(@expr1073742245 "version" $) $) ${ $setVerbose $(@expr1073742246 $false $) $; version $(@expr1073742247 $) $; $} $} $while $(@expr1073742248 $false $) ;
70: $do ${ $if $(@expr1073742249 $prepareTest $(@expr1073742250 "loadLibErrors" $) $) ${ $setVerbose $(@expr1073742251 $false $) $; loadLibErrors $(@expr1073742252 $) $; $} $} $while $(@expr1073742253 $false $) ;
71: }
72:
73: static Library :: Error readLibrary ( Library & library@var103 , const char * xmldata@var104 ) {
74: tinyxml2 ::@expr1073742254 XMLDocument doc@var105 ;
75: doc@var105 .@expr1073742255 Parse (@expr1073742256 xmldata@var104 ) ;
76: return library@var103 .@expr1073742257 load (@expr1073742258 doc@var105 ) ;
77: }
78:
79: void isCompliantValidationExpression ( ) const {
80: $if $(@expr1073742259 $!@expr1073742260 $assertEquals $(@expr1073742261 "cppcheck-2.8/test/testlibrary.cpp" $, 80 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742263 "-1" ) $) $) { $return ; }
81: $if $(@expr1073742264 $!@expr1073742265 $assertEquals $(@expr1073742266 "cppcheck-2.8/test/testlibrary.cpp" $, 81 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742268 "1" ) $) $) { $return ; }
82: $if $(@expr1073742269 $!@expr1073742270 $assertEquals $(@expr1073742271 "cppcheck-2.8/test/testlibrary.cpp" $, 82 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742273 "1:" ) $) $) { $return ; }
83: $if $(@expr1073742274 $!@expr1073742275 $assertEquals $(@expr1073742276 "cppcheck-2.8/test/testlibrary.cpp" $, 83 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742278 ":1" ) $) $) { $return ; }
84: $if $(@expr1073742279 $!@expr1073742280 $assertEquals $(@expr1073742281 "cppcheck-2.8/test/testlibrary.cpp" $, 84 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742283 "-1,42" ) $) $) { $return ; }
85: $if $(@expr1073742284 $!@expr1073742285 $assertEquals $(@expr1073742286 "cppcheck-2.8/test/testlibrary.cpp" $, 85 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742288 "-1,-42" ) $) $) { $return ; }
86: $if $(@expr1073742289 $!@expr1073742290 $assertEquals $(@expr1073742291 "cppcheck-2.8/test/testlibrary.cpp" $, 86 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742293 "-1.0:42.0" ) $) $) { $return ; }
87: $if $(@expr1073742294 $!@expr1073742295 $assertEquals $(@expr1073742296 "cppcheck-2.8/test/testlibrary.cpp" $, 87 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742298 "1.175494e-38:3.402823e+38" ) $) $) { $return ; }
88: $if $(@expr1073742299 $!@expr1073742300 $assertEquals $(@expr1073742301 "cppcheck-2.8/test/testlibrary.cpp" $, 88 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742303 "1.175494e-38,3.402823e+38" ) $) $) { $return ; }
89: $if $(@expr1073742304 $!@expr1073742305 $assertEquals $(@expr1073742306 "cppcheck-2.8/test/testlibrary.cpp" $, 89 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742308 "1.175494e-38:" ) $) $) { $return ; }
90: $if $(@expr1073742309 $!@expr1073742310 $assertEquals $(@expr1073742311 "cppcheck-2.8/test/testlibrary.cpp" $, 90 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742313 ":1.175494e-38" ) $) $) { $return ; }
91: $if $(@expr1073742314 $!@expr1073742315 $assertEquals $(@expr1073742316 "cppcheck-2.8/test/testlibrary.cpp" $, 91 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742318 ":42.0" ) $) $) { $return ; }
92: $if $(@expr1073742319 $!@expr1073742320 $assertEquals $(@expr1073742321 "cppcheck-2.8/test/testlibrary.cpp" $, 92 $, true $, Library ::@expr438 isCompliantValidationExpression (@expr1073742323 "!42.0" ) $) $) { $return ; }
93:
94:
95: $if $(@expr1073742324 $!@expr1073742325 $assertEquals $(@expr1073742326 "cppcheck-2.8/test/testlibrary.cpp" $, 95 $, false $, Library ::@expr438 isCompliantValidationExpression (@expr1073742328 nullptr ) $) $) { $return ; }
96: $if $(@expr1073742329 $!@expr1073742330 $assertEquals $(@expr1073742331 "cppcheck-2.8/test/testlibrary.cpp" $, 96 $, false $, Library ::@expr438 isCompliantValidationExpression (@expr1073742333 "x" ) $) $) { $return ; }
97: $if $(@expr1073742334 $!@expr1073742335 $assertEquals $(@expr1073742336 "cppcheck-2.8/test/testlibrary.cpp" $, 97 $, false $, Library ::@expr438 isCompliantValidationExpression (@expr1073742338 "!" ) $) $) { $return ; }
98: $if $(@expr1073742339 $!@expr1073742340 $assertEquals $(@expr1073742341 "cppcheck-2.8/test/testlibrary.cpp" $, 98 $, false $, Library ::@expr438 isCompliantValidationExpression (@expr1073742343 "" ) $) $) { $return ; }
99: }
100:
101: void empty ( ) const {
102:
103: const char xmldata@var106 [@expr1073742346 29 ] =@expr1073742347 "<?xml version=\"1.0\"?>\n<def/>" ;
104: Library library@var107 ;
105: $if $(@expr1073742348 $!@expr1073742349 $assertEquals $(@expr1073742350 "cppcheck-2.8/test/testlibrary.cpp" $, 105 $, true $, $(@expr1073742351 Library ::@expr1073742352 ErrorCode ::@expr1073742353 OK@expr1073742344 ==@expr1073742354 (@expr1073742355 readLibrary (@expr1073742356 library@var107 , xmldata@var106 ) ) .@expr1073742357 errorcode@expr1073742345 $) $) $) { $return ; }
106: $if $(@expr1073742358 $!@expr1073742359 $assert_ $(@expr1073742360 "cppcheck-2.8/test/testlibrary.cpp" $, 106 $, library@var107 .@expr1073742361 functions@var108 .@expr1073742362 empty (@expr1073742363 ) $) $) { $return ; }
107: }
108:
109: void function ( ) const {
110: const char xmldata@var109 [@expr1073742366 104 ] =@expr1073742367 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
111:
|
114:
115: ;
116:
117: TokenList tokenList@var110 (@expr1073742368 nullptr ) ;
118: std ::@expr1073742369 istringstream istr@var111 (@expr1073742370 "foo();" ) ;
119: tokenList@var110 .@expr1073742371 createTokens (@expr1073742372 istr@var111 ) ;
120: tokenList@var110 .@expr549 front (@expr550 ) .@expr1073742375 next (@expr1073742376 ) .@expr1073742377 astOperand1 (@expr1073742378 tokenList@var110 .@expr549 front (@expr550 ) ) ;
121:
122: Library library@var112 ;
123: $if $(@expr1073742381 $!@expr1073742382 $assertEquals $(@expr1073742383 "cppcheck-2.8/test/testlibrary.cpp" $, 123 $, true $, $(@expr1073742384 Library ::@expr1073742385 ErrorCode ::@expr1073742386 OK@expr1073742364 ==@expr1073742387 (@expr1073742388 readLibrary (@expr1073742389 library@var112 , xmldata@var109 ) ) .@expr1073742390 errorcode@expr1073742365 $) $) $) { $return ; }
124: $if $(@expr1073742391 $!@expr1073742392 $assertEquals $(@expr1073742393 "cppcheck-2.8/test/testlibrary.cpp" $, 124 $, library@var112 .@expr570 functions@var113 .@expr1073742395 size (@expr1073742396 ) $, 1U $) $) { $return ; }
125: $if $(@expr1073742397 $!@expr1073742398 $assert_ $(@expr1073742399 "cppcheck-2.8/test/testlibrary.cpp" $, 125 $, library@var112 .@expr570 functions@var113 .@expr1073742401 at (@expr1073742402 "foo" ) .@expr1073742403 argumentChecks .@expr1073742404 empty (@expr1073742405 ) $) $) { $return ; }
126: $if $(@expr1073742406 $!@expr1073742407 $assert_ $(@expr1073742408 "cppcheck-2.8/test/testlibrary.cpp" $, 126 $, library@var112 .@expr1073742409 isnotnoreturn (@expr1073742410 tokenList@var110 .@expr549 front (@expr550 ) ) $) $) { $return ; }
127: }
128:
129: void function_match_scope ( ) const {
130: const char xmldata@var114 [@expr1073742415 90 ] =@expr1073742416 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
131:
|
134:
135: ;
136:
137: Library library@var115 ;
138: $if $(@expr1073742417 $!@expr1073742418 $assertEquals $(@expr1073742419 "cppcheck-2.8/test/testlibrary.cpp" $, 138 $, true $, $(@expr1073742420 Library ::@expr1073742421 ErrorCode ::@expr1073742422 OK@expr1073742413 ==@expr1073742423 (@expr1073742424 readLibrary (@expr1073742425 library@var115 , xmldata@var114 ) ) .@expr1073742426 errorcode@expr1073742414 $) $) $) { $return ; }
139: {
140: TokenList tokenList@var116 (@expr1073742427 nullptr ) ;
141: std ::@expr1073742428 istringstream istr@var117 (@expr1073742429 "fred.foo(123);" ) ;
142: tokenList@var116 .@expr1073742430 createTokens (@expr1073742431 istr@var117 ) ;
143:
144: $if $(@expr1073742432 $!@expr1073742433 $assert_ $(@expr1073742434 "cppcheck-2.8/test/testlibrary.cpp" $, 144 $, library@var115 .@expr611 isNotLibraryFunction (@expr1073742436 tokenList@var116 .@expr1073742437 front (@expr1073742438 ) .@expr1073742439 tokAt (@expr1073742440 2 ) ) $) $) { $return ; }
145: }
146: {
147: TokenList tokenList@var118 (@expr1073742441 nullptr ) ;
148: std ::@expr1073742442 istringstream istr@var119 (@expr1073742443 "Fred::foo(123);" ) ;
149: tokenList@var118 .@expr1073742444 createTokens (@expr1073742445 istr@var119 ) ;
150:
151: $if $(@expr1073742446 $!@expr1073742447 $assert_ $(@expr1073742448 "cppcheck-2.8/test/testlibrary.cpp" $, 151 $, library@var115 .@expr611 isNotLibraryFunction (@expr1073742450 tokenList@var118 .@expr1073742451 front (@expr1073742452 ) .@expr1073742453 tokAt (@expr1073742454 2 ) ) $) $) { $return ; }
152: }
153: }
154:
155: void function_match_args ( ) const {
156: const char xmldata@var120 [@expr1073742457 90 ] =@expr1073742458 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
157:
|
160:
161: ;
162:
163: TokenList tokenList@var121 (@expr1073742459 nullptr ) ;
164: std ::@expr1073742460 istringstream istr@var122 (@expr1073742461 "foo();" ) ;
165: tokenList@var121 .@expr1073742462 createTokens (@expr1073742463 istr@var122 ) ;
166: Token ::@expr1073742464 createMutualLinks (@expr1073742465 tokenList@var121 .@expr642 front (@expr643 ) .@expr1073742468 next (@expr1073742469 ) , tokenList@var121 .@expr1073742470 back (@expr1073742471 ) .@expr1073742472 previous (@expr1073742473 ) ) ;
167: tokenList@var121 .@expr1073742474 createAst (@expr1073742475 ) ;
168:
169: Library library@var123 ;
170: $if $(@expr1073742476 $!@expr1073742477 $assertEquals $(@expr1073742478 "cppcheck-2.8/test/testlibrary.cpp" $, 170 $, true $, $(@expr1073742479 Library ::@expr1073742480 ErrorCode ::@expr1073742481 OK@expr1073742455 ==@expr1073742482 (@expr1073742483 readLibrary (@expr1073742484 library@var123 , xmldata@var120 ) ) .@expr1073742485 errorcode@expr1073742456 $) $) $) { $return ; }
171: $if $(@expr1073742486 $!@expr1073742487 $assert_ $(@expr1073742488 "cppcheck-2.8/test/testlibrary.cpp" $, 171 $, library@var123 .@expr1073742489 isNotLibraryFunction (@expr1073742490 tokenList@var121 .@expr642 front (@expr643 ) ) $) $) { $return ; }
172: }
173:
174: void function_match_args_default ( ) const {
175: const char xmldata@var124 [@expr1073742495 119 ] =@expr1073742496 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>    <arg nr=\"2\" default=\"0\"/>  </function>\n</def>"
176:
|
180:
181: ;
182:
183: Library library@var125 ;
184: $if $(@expr1073742497 $!@expr1073742498 $assertEquals $(@expr1073742499 "cppcheck-2.8/test/testlibrary.cpp" $, 184 $, true $, $(@expr1073742500 Library ::@expr1073742501 ErrorCode ::@expr1073742502 OK@expr1073742493 ==@expr1073742503 (@expr1073742504 readLibrary (@expr1073742505 library@var125 , xmldata@var124 ) ) .@expr1073742506 errorcode@expr1073742494 $) $) $) { $return ; }
185:
186: {
187: TokenList tokenList@var126 (@expr1073742507 nullptr ) ;
188: std ::@expr1073742508 istringstream istr@var127 (@expr1073742509 "foo();" ) ;
189: tokenList@var126 .@expr1073742510 createTokens (@expr1073742511 istr@var127 ) ;
190: Token ::@expr688 createMutualLinks (@expr1073742513 tokenList@var126 .@expr690 front (@expr691 ) .@expr1073742516 next (@expr1073742517 ) , tokenList@var126 .@expr1073742518 back (@expr1073742519 ) .@expr1073742520 previous (@expr1073742521 ) ) ;
191: tokenList@var126 .@expr1073742522 createAst (@expr1073742523 ) ;
192:
193: $if $(@expr1073742524 $!@expr1073742525 $assert_ $(@expr1073742526 "cppcheck-2.8/test/testlibrary.cpp" $, 193 $, library@var125 .@expr703 isNotLibraryFunction (@expr1073742528 tokenList@var126 .@expr690 front (@expr691 ) ) $) $) { $return ; }
194: }
195: {
196: TokenList tokenList@var128 (@expr1073742531 nullptr ) ;
197: std ::@expr1073742532 istringstream istr@var129 (@expr1073742533 "foo(a);" ) ;
198: tokenList@var128 .@expr1073742534 createTokens (@expr1073742535 istr@var129 ) ;
199: Token ::@expr688 createMutualLinks (@expr1073742537 tokenList@var128 .@expr714 front (@expr715 ) .@expr1073742540 next (@expr1073742541 ) , tokenList@var128 .@expr1073742542 back (@expr1073742543 ) .@expr1073742544 previous (@expr1073742545 ) ) ;
200: tokenList@var128 .@expr1073742546 createAst (@expr1073742547 ) ;
201:
202: $if $(@expr1073742548 $!@expr1073742549 $assert_ $(@expr1073742550 "cppcheck-2.8/test/testlibrary.cpp" $, 202 $, !@expr1073742551 library@var125 .@expr703 isNotLibraryFunction (@expr1073742553 tokenList@var128 .@expr714 front (@expr715 ) ) $) $) { $return ; }
203: }
204: {
205: TokenList tokenList@var130 (@expr1073742556 nullptr ) ;
206: std ::@expr1073742557 istringstream istr@var131 (@expr1073742558 "foo(a, b);" ) ;
207: tokenList@var130 .@expr1073742559 createTokens (@expr1073742560 istr@var131 ) ;
208: Token ::@expr688 createMutualLinks (@expr1073742562 tokenList@var130 .@expr739 front (@expr740 ) .@expr1073742565 next (@expr1073742566 ) , tokenList@var130 .@expr1073742567 back (@expr1073742568 ) .@expr1073742569 previous (@expr1073742570 ) ) ;
209: tokenList@var130 .@expr1073742571 createAst (@expr1073742572 ) ;
210:
211: $if $(@expr1073742573 $!@expr1073742574 $assert_ $(@expr1073742575 "cppcheck-2.8/test/testlibrary.cpp" $, 211 $, !@expr1073742576 library@var125 .@expr703 isNotLibraryFunction (@expr1073742578 tokenList@var130 .@expr739 front (@expr740 ) ) $) $) { $return ; }
212: }
213: {
214: TokenList tokenList@var132 (@expr1073742581 nullptr ) ;
215: std ::@expr1073742582 istringstream istr@var133 (@expr1073742583 "foo(a, b, c);" ) ;
216: tokenList@var132 .@expr1073742584 createTokens (@expr1073742585 istr@var133 ) ;
217: Token ::@expr688 createMutualLinks (@expr1073742587 tokenList@var132 .@expr764 front (@expr765 ) .@expr1073742590 next (@expr1073742591 ) , tokenList@var132 .@expr1073742592 back (@expr1073742593 ) .@expr1073742594 previous (@expr1073742595 ) ) ;
218: tokenList@var132 .@expr1073742596 createAst (@expr1073742597 ) ;
219:
220: $if $(@expr1073742598 $!@expr1073742599 $assert_ $(@expr1073742600 "cppcheck-2.8/test/testlibrary.cpp" $, 220 $, library@var125 .@expr703 isNotLibraryFunction (@expr1073742602 tokenList@var132 .@expr764 front (@expr765 ) ) $) $) { $return ; }
221: }
222: }
223:
224: void function_match_var ( ) const {
225: const char xmldata@var134 [@expr1073742607 90 ] =@expr1073742608 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
226:
|
229:
230: ;
231:
232: TokenList tokenList@var135 (@expr1073742609 nullptr ) ;
233: std ::@expr1073742610 istringstream istr@var136 (@expr1073742611 "Fred foo(123);" ) ;
234: tokenList@var135 .@expr1073742612 createTokens (@expr1073742613 istr@var136 ) ;
235: tokenList@var135 .@expr790 front (@expr791 ) .@expr792 next (@expr793 ) .@expr1073742618 astOperand1 (@expr1073742619 tokenList@var135 .@expr790 front (@expr791 ) ) ;
236: tokenList@var135 .@expr790 front (@expr791 ) .@expr792 next (@expr793 ) .@expr1073742626 varId (@expr1073742627 1 ) ;
237:
238: Library library@var137 ;
239: $if $(@expr1073742628 $!@expr1073742629 $assertEquals $(@expr1073742630 "cppcheck-2.8/test/testlibrary.cpp" $, 239 $, true $, $(@expr1073742631 Library ::@expr1073742632 ErrorCode ::@expr1073742633 OK@expr1073742605 ==@expr1073742634 (@expr1073742635 readLibrary (@expr1073742636 library@var137 , xmldata@var134 ) ) .@expr1073742637 errorcode@expr1073742606 $) $) $) { $return ; }
240: $if $(@expr1073742638 $!@expr1073742639 $assert_ $(@expr1073742640 "cppcheck-2.8/test/testlibrary.cpp" $, 240 $, library@var137 .@expr1073742641 isNotLibraryFunction (@expr1073742642 tokenList@var135 .@expr790 front (@expr791 ) .@expr792 next (@expr793 ) ) $) $) { $return ; }
241: }
242:
243: void function_arg ( ) const {
244: const char xmldata@var138 [@expr1073742657 254 ] =@expr1073742658 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><not-uninit/></arg>\n    <arg nr=\"2\"><not-null/></arg>\n    <arg nr=\"3\"><formatstr/></arg>\n    <arg nr=\"4\"><strz/></arg>\n    <arg nr=\"5\" default=\"0\"><not-bool/></arg>\n  </function>\n</def>"
245:
|
252:
253: ;
254:
255: Library library@var139 ;
256: $if $(@expr1073742659 $!@expr1073742660 $assertEquals $(@expr1073742661 "cppcheck-2.8/test/testlibrary.cpp" $, 256 $, true $, $(@expr1073742662 Library ::@expr1073742663 ErrorCode ::@expr1073742664 OK@expr1073742647 ==@expr1073742665 (@expr1073742666 readLibrary (@expr1073742667 library@var139 , xmldata@var138 ) ) .@expr1073742668 errorcode@expr1073742648 $) $) $) { $return ; }
257: $if $(@expr1073742669 $!@expr1073742670 $assertEquals $(@expr1073742671 "cppcheck-2.8/test/testlibrary.cpp" $, 257 $, 0 $, library@var139 .@expr848 functions@var140 [@expr849 "foo" ] .@expr850 argumentChecks@expr825 [@expr1073742675 1 ] .@expr1073742676 notuninit@expr1073742650 $) $) { $return ; }
258: $if $(@expr1073742677 $!@expr1073742678 $assertEquals $(@expr1073742679 "cppcheck-2.8/test/testlibrary.cpp" $, 258 $, true $, library@var139 .@expr848 functions@var140 [@expr849 "foo" ] .@expr850 argumentChecks@expr825 [@expr1073742683 2 ] .@expr1073742684 notnull@expr1073742651 $) $) { $return ; }
259: $if $(@expr1073742685 $!@expr1073742686 $assertEquals $(@expr1073742687 "cppcheck-2.8/test/testlibrary.cpp" $, 259 $, true $, library@var139 .@expr848 functions@var140 [@expr849 "foo" ] .@expr850 argumentChecks@expr825 [@expr1073742691 3 ] .@expr1073742692 formatstr@expr1073742652 $) $) { $return ; }
260: $if $(@expr1073742693 $!@expr1073742694 $assertEquals $(@expr1073742695 "cppcheck-2.8/test/testlibrary.cpp" $, 260 $, true $, library@var139 .@expr848 functions@var140 [@expr849 "foo" ] .@expr850 argumentChecks@expr825 [@expr875 4 ] .@expr1073742700 strz@expr1073742653 $) $) { $return ; }
261: $if $(@expr1073742701 $!@expr1073742702 $assertEquals $(@expr1073742703 "cppcheck-2.8/test/testlibrary.cpp" $, 261 $, false $, library@var139 .@expr848 functions@var140 [@expr849 "foo" ] .@expr850 argumentChecks@expr825 [@expr875 4 ] .@expr1073742708 optional@expr1073742654 $) $) { $return ; }
262: $if $(@expr1073742709 $!@expr1073742710 $assertEquals $(@expr1073742711 "cppcheck-2.8/test/testlibrary.cpp" $, 262 $, true $, library@var139 .@expr848 functions@var140 [@expr849 "foo" ] .@expr850 argumentChecks@expr825 [@expr891 5 ] .@expr1073742716 notbool@expr1073742655 $) $) { $return ; }
263: $if $(@expr1073742717 $!@expr1073742718 $assertEquals $(@expr1073742719 "cppcheck-2.8/test/testlibrary.cpp" $, 263 $, true $, library@var139 .@expr848 functions@var140 [@expr849 "foo" ] .@expr850 argumentChecks@expr825 [@expr891 5 ] .@expr1073742724 optional@expr1073742656 $) $) { $return ; }
264: }
265:
266: void function_arg_any ( ) const {
267: const char xmldata@var141 [@expr1073742729 106 ] =@expr1073742730 "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"any\"><not-uninit/></arg>\n</function>\n</def>"
268:
|
271:
272: ;
273:
274: Library library@var142 ;
275: $if $(@expr1073742731 $!@expr1073742732 $assertEquals $(@expr1073742733 "cppcheck-2.8/test/testlibrary.cpp" $, 275 $, true $, $(@expr1073742734 Library ::@expr1073742735 ErrorCode ::@expr1073742736 OK@expr1073742725 ==@expr1073742737 (@expr1073742738 readLibrary (@expr1073742739 library@var142 , xmldata@var141 ) ) .@expr1073742740 errorcode@expr1073742726 $) $) $) { $return ; }
276: $if $(@expr1073742741 $!@expr1073742742 $assertEquals $(@expr1073742743 "cppcheck-2.8/test/testlibrary.cpp" $, 276 $, 0 $, library@var142 .@expr1073742744 functions@var143 [@expr1073742745 "foo" ] .@expr1073742746 argumentChecks@expr1073742727 [@expr1073742747 -1 ] .@expr1073742748 notuninit@expr1073742728 $) $) { $return ; }
277: }
278:
279: void function_arg_variadic ( ) const {
280: const char xmldata@var144 [@expr1073742753 133 ] =@expr1073742754 "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\"></arg>\n   <arg nr=\"variadic\"><not-uninit/></arg>\n</function>\n</def>"
281:
|
285:
286: ;
287:
288: Library library@var145 ;
289: $if $(@expr1073742755 $!@expr1073742756 $assertEquals $(@expr1073742757 "cppcheck-2.8/test/testlibrary.cpp" $, 289 $, true $, $(@expr1073742758 Library ::@expr1073742759 ErrorCode ::@expr1073742760 OK@expr1073742749 ==@expr1073742761 (@expr1073742762 readLibrary (@expr1073742763 library@var145 , xmldata@var144 ) ) .@expr1073742764 errorcode@expr1073742750 $) $) $) { $return ; }
290: $if $(@expr1073742765 $!@expr1073742766 $assertEquals $(@expr1073742767 "cppcheck-2.8/test/testlibrary.cpp" $, 290 $, 0 $, library@var145 .@expr1073742768 functions@var146 [@expr1073742769 "foo" ] .@expr1073742770 argumentChecks@expr1073742751 [@expr1073742771 -1 ] .@expr1073742772 notuninit@expr1073742752 $) $) { $return ; }
291:
292: TokenList tokenList@var147 (@expr1073742773 nullptr ) ;
293: std ::@expr1073742774 istringstream istr@var148 (@expr1073742775 "foo(a,b,c,d,e);" ) ;
294: tokenList@var147 .@expr1073742776 createTokens (@expr1073742777 istr@var148 ) ;
295: tokenList@var147 .@expr954 front (@expr955 ) .@expr1073742780 next (@expr1073742781 ) .@expr1073742782 astOperand1 (@expr1073742783 tokenList@var147 .@expr954 front (@expr955 ) ) ;
296:
297: $if $(@expr1073742786 $!@expr1073742787 $assertEquals $(@expr1073742788 "cppcheck-2.8/test/testlibrary.cpp" $, 297 $, false $, $(@expr1073742789 library@var145 .@expr966 isuninitargbad (@expr1073742791 tokenList@var147 .@expr954 front (@expr955 ) , 1 ) $) $) $) { $return ; }
298: $if $(@expr1073742794 $!@expr1073742795 $assertEquals $(@expr1073742796 "cppcheck-2.8/test/testlibrary.cpp" $, 298 $, true $, $(@expr1073742797 library@var145 .@expr966 isuninitargbad (@expr1073742799 tokenList@var147 .@expr954 front (@expr955 ) , 2 ) $) $) $) { $return ; }
299: $if $(@expr1073742802 $!@expr1073742803 $assertEquals $(@expr1073742804 "cppcheck-2.8/test/testlibrary.cpp" $, 299 $, true $, $(@expr1073742805 library@var145 .@expr966 isuninitargbad (@expr1073742807 tokenList@var147 .@expr954 front (@expr955 ) , 3 ) $) $) $) { $return ; }
300: $if $(@expr1073742810 $!@expr1073742811 $assertEquals $(@expr1073742812 "cppcheck-2.8/test/testlibrary.cpp" $, 300 $, true $, $(@expr1073742813 library@var145 .@expr966 isuninitargbad (@expr1073742815 tokenList@var147 .@expr954 front (@expr955 ) , 4 ) $) $) $) { $return ; }
301: }
302:
303: void function_arg_direction ( ) const {
304: const char xmldata@var149 [@expr1073742824 206 ] =@expr1073742825 "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\" direction=\"in\"></arg>\n   <arg nr=\"2\" direction=\"out\"></arg>\n   <arg nr=\"3\" direction=\"inout\"></arg>\n   <arg nr=\"4\"></arg>\n</function>\n</def>"
305:
|
311:
312: ;
313:
314: Library library@var150 ;
315: $if $(@expr1073742826 $!@expr1073742827 $assertEquals $(@expr1073742828 "cppcheck-2.8/test/testlibrary.cpp" $, 315 $, true $, $(@expr1073742829 Library ::@expr1073742830 ErrorCode ::@expr1073742831 OK@expr1073742818 ==@expr1073742832 (@expr1073742833 readLibrary (@expr1073742834 library@var150 , xmldata@var149 ) ) .@expr1073742835 errorcode@expr1073742819 $) $) $) { $return ; }
316:
317: TokenList tokenList@var151 (@expr1073742836 nullptr ) ;
318: std ::@expr1073742837 istringstream istr@var152 (@expr1073742838 "foo(a,b,c,d);" ) ;
319: tokenList@var151 .@expr1073742839 createTokens (@expr1073742840 istr@var152 ) ;
320: tokenList@var151 .@expr1017 front (@expr1018 ) .@expr1073742843 next (@expr1073742844 ) .@expr1073742845 astOperand1 (@expr1073742846 tokenList@var151 .@expr1017 front (@expr1018 ) ) ;
321:
322: $if $(@expr1073742849 $!@expr1073742850 $assert_ $(@expr1073742851 "cppcheck-2.8/test/testlibrary.cpp" $, 322 $, $(@expr1073742852 Library ::@expr1029 ArgumentChecks ::@expr1030 Direction ::@expr1073742855 DIR_IN@expr1073742820 ==@expr1073742856 library@var150 .@expr1033 getArgDirection (@expr1073742858 tokenList@var151 .@expr1017 front (@expr1018 ) , 1 ) $) $) $) { $return ; }
323: $if $(@expr1073742861 $!@expr1073742862 $assert_ $(@expr1073742863 "cppcheck-2.8/test/testlibrary.cpp" $, 323 $, $(@expr1073742864 Library ::@expr1029 ArgumentChecks ::@expr1030 Direction ::@expr1073742867 DIR_OUT@expr1073742821 ==@expr1073742868 library@var150 .@expr1033 getArgDirection (@expr1073742870 tokenList@var151 .@expr1017 front (@expr1018 ) , 2 ) $) $) $) { $return ; }
324: $if $(@expr1073742873 $!@expr1073742874 $assert_ $(@expr1073742875 "cppcheck-2.8/test/testlibrary.cpp" $, 324 $, $(@expr1073742876 Library ::@expr1029 ArgumentChecks ::@expr1030 Direction ::@expr1073742879 DIR_INOUT@expr1073742822 ==@expr1073742880 library@var150 .@expr1033 getArgDirection (@expr1073742882 tokenList@var151 .@expr1017 front (@expr1018 ) , 3 ) $) $) $) { $return ; }
325: $if $(@expr1073742885 $!@expr1073742886 $assert_ $(@expr1073742887 "cppcheck-2.8/test/testlibrary.cpp" $, 325 $, $(@expr1073742888 Library ::@expr1029 ArgumentChecks ::@expr1030 Direction ::@expr1073742891 DIR_UNKNOWN@expr1073742823 ==@expr1073742892 library@var150 .@expr1033 getArgDirection (@expr1073742894 tokenList@var151 .@expr1017 front (@expr1018 ) , 4 ) $) $) $) { $return ; }
326: }
327:
328: void function_arg_valid ( ) const {
329: const char xmldata@var153 [@expr1073742899 550 ] =@expr1073742900 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><valid>1:</valid></arg>\n    <arg nr=\"2\"><valid>-7:0</valid></arg>\n    <arg nr=\"3\"><valid>1:5,8</valid></arg>\n    <arg nr=\"4\"><valid>-1,5</valid></arg>\n    <arg nr=\"5\"><valid>:1,5</valid></arg>\n    <arg nr=\"6\"><valid>1.5:</valid></arg>\n    <arg nr=\"7\"><valid>-6.7:-5.5,-3.3:-2.7</valid></arg>\n    <arg nr=\"8\"><valid>0.0:</valid></arg>\n    <arg nr=\"9\"><valid>:2.0</valid></arg>\n    <arg nr=\"10\"><valid>0.0</valid></arg>\n    <arg nr=\"11\"><valid>!0.0</valid></arg>\n  </function>\n</def>"
330:
|
343:
344: ;
345:
346: Library library@var154 ;
347: $if $(@expr1073742901 $!@expr1073742902 $assertEquals $(@expr1073742903 "cppcheck-2.8/test/testlibrary.cpp" $, 347 $, true $, $(@expr1073742904 Library ::@expr1073742905 ErrorCode ::@expr1073742906 OK@expr1073742897 ==@expr1073742907 (@expr1073742908 readLibrary (@expr1073742909 library@var154 , xmldata@var153 ) ) .@expr1073742910 errorcode@expr1073742898 $) $) $) { $return ; }
348:
349: TokenList tokenList@var155 (@expr1073742911 nullptr ) ;
350: std ::@expr1073742912 istringstream istr@var156 (@expr1073742913 "foo(a,b,c,d,e,f,g,h,i,j,k);" ) ;
351: tokenList@var155 .@expr1073742914 createTokens (@expr1073742915 istr@var156 ) ;
352: tokenList@var155 .@expr1092 front (@expr1093 ) .@expr1073742918 next (@expr1073742919 ) .@expr1073742920 astOperand1 (@expr1073742921 tokenList@var155 .@expr1092 front (@expr1093 ) ) ;
353:
354:
355: $if $(@expr1073742924 $!@expr1073742925 $assertEquals $(@expr1073742926 "cppcheck-2.8/test/testlibrary.cpp" $, 355 $, false $, $(@expr1073742927 library@var154 .@expr1104 isIntArgValid (@expr1073742929 tokenList@var155 .@expr1092 front (@expr1093 ) , 1 , -10 ) $) $) $) { $return ; }
356: $if $(@expr1073742932 $!@expr1073742933 $assertEquals $(@expr1073742934 "cppcheck-2.8/test/testlibrary.cpp" $, 356 $, false $, $(@expr1073742935 library@var154 .@expr1112 isFloatArgValid (@expr1073742937 tokenList@var155 .@expr1092 front (@expr1093 ) , 1 , -10.0 ) $) $) $) { $return ; }
357: $if $(@expr1073742940 $!@expr1073742941 $assertEquals $(@expr1073742942 "cppcheck-2.8/test/testlibrary.cpp" $, 357 $, false $, $(@expr1073742943 library@var154 .@expr1104 isIntArgValid (@expr1073742945 tokenList@var155 .@expr1092 front (@expr1093 ) , 1 , 0 ) $) $) $) { $return ; }
358: $if $(@expr1073742948 $!@expr1073742949 $assertEquals $(@expr1073742950 "cppcheck-2.8/test/testlibrary.cpp" $, 358 $, false $, $(@expr1073742951 library@var154 .@expr1112 isFloatArgValid (@expr1073742953 tokenList@var155 .@expr1092 front (@expr1093 ) , 1 , 0.0 ) $) $) $) { $return ; }
359: $if $(@expr1073742956 $!@expr1073742957 $assertEquals $(@expr1073742958 "cppcheck-2.8/test/testlibrary.cpp" $, 359 $, true $, $(@expr1073742959 library@var154 .@expr1104 isIntArgValid (@expr1073742961 tokenList@var155 .@expr1092 front (@expr1093 ) , 1 , 1 ) $) $) $) { $return ; }
360: $if $(@expr1073742964 $!@expr1073742965 $assertEquals $(@expr1073742966 "cppcheck-2.8/test/testlibrary.cpp" $, 360 $, true $, $(@expr1073742967 library@var154 .@expr1112 isFloatArgValid (@expr1073742969 tokenList@var155 .@expr1092 front (@expr1093 ) , 1 , 1.0 ) $) $) $) { $return ; }
361: $if $(@expr1073742972 $!@expr1073742973 $assertEquals $(@expr1073742974 "cppcheck-2.8/test/testlibrary.cpp" $, 361 $, true $, $(@expr1073742975 library@var154 .@expr1104 isIntArgValid (@expr1073742977 tokenList@var155 .@expr1092 front (@expr1093 ) , 1 , 10 ) $) $) $) { $return ; }
362: $if $(@expr1073742980 $!@expr1073742981 $assertEquals $(@expr1073742982 "cppcheck-2.8/test/testlibrary.cpp" $, 362 $, true $, $(@expr1073742983 library@var154 .@expr1112 isFloatArgValid (@expr1073742985 tokenList@var155 .@expr1092 front (@expr1093 ) , 1 , 10.0 ) $) $) $) { $return ; }
363:
364:
365: $if $(@expr1073742988 $!@expr1073742989 $assertEquals $(@expr1073742990 "cppcheck-2.8/test/testlibrary.cpp" $, 365 $, false $, $(@expr1073742991 library@var154 .@expr1104 isIntArgValid (@expr1073742993 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -10 ) $) $) $) { $return ; }
366: $if $(@expr1073742996 $!@expr1073742997 $assertEquals $(@expr1073742998 "cppcheck-2.8/test/testlibrary.cpp" $, 366 $, false $, $(@expr1073742999 library@var154 .@expr1112 isFloatArgValid (@expr1073743001 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -10.0 ) $) $) $) { $return ; }
367: $if $(@expr1073743004 $!@expr1073743005 $assertEquals $(@expr1073743006 "cppcheck-2.8/test/testlibrary.cpp" $, 367 $, false $, $(@expr1073743007 library@var154 .@expr1112 isFloatArgValid (@expr1073743009 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -7.5 ) $) $) $) { $return ; }
368: $if $(@expr1073743012 $!@expr1073743013 $assertEquals $(@expr1073743014 "cppcheck-2.8/test/testlibrary.cpp" $, 368 $, false $, $(@expr1073743015 library@var154 .@expr1112 isFloatArgValid (@expr1073743017 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -7.1 ) $) $) $) { $return ; }
369: $if $(@expr1073743020 $!@expr1073743021 $assertEquals $(@expr1073743022 "cppcheck-2.8/test/testlibrary.cpp" $, 369 $, true $, $(@expr1073743023 library@var154 .@expr1104 isIntArgValid (@expr1073743025 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -7 ) $) $) $) { $return ; }
370: $if $(@expr1073743028 $!@expr1073743029 $assertEquals $(@expr1073743030 "cppcheck-2.8/test/testlibrary.cpp" $, 370 $, true $, $(@expr1073743031 library@var154 .@expr1112 isFloatArgValid (@expr1073743033 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -7.0 ) $) $) $) { $return ; }
371: $if $(@expr1073743036 $!@expr1073743037 $assertEquals $(@expr1073743038 "cppcheck-2.8/test/testlibrary.cpp" $, 371 $, true $, $(@expr1073743039 library@var154 .@expr1104 isIntArgValid (@expr1073743041 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -3 ) $) $) $) { $return ; }
372: $if $(@expr1073743044 $!@expr1073743045 $assertEquals $(@expr1073743046 "cppcheck-2.8/test/testlibrary.cpp" $, 372 $, true $, $(@expr1073743047 library@var154 .@expr1112 isFloatArgValid (@expr1073743049 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -3.0 ) $) $) $) { $return ; }
373: $if $(@expr1073743052 $!@expr1073743053 $assertEquals $(@expr1073743054 "cppcheck-2.8/test/testlibrary.cpp" $, 373 $, true $, $(@expr1073743055 library@var154 .@expr1112 isFloatArgValid (@expr1073743057 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , -3.5 ) $) $) $) { $return ; }
374: $if $(@expr1073743060 $!@expr1073743061 $assertEquals $(@expr1073743062 "cppcheck-2.8/test/testlibrary.cpp" $, 374 $, true $, $(@expr1073743063 library@var154 .@expr1104 isIntArgValid (@expr1073743065 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , 0 ) $) $) $) { $return ; }
375: $if $(@expr1073743068 $!@expr1073743069 $assertEquals $(@expr1073743070 "cppcheck-2.8/test/testlibrary.cpp" $, 375 $, true $, $(@expr1073743071 library@var154 .@expr1112 isFloatArgValid (@expr1073743073 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , 0.0 ) $) $) $) { $return ; }
376: $if $(@expr1073743076 $!@expr1073743077 $assertEquals $(@expr1073743078 "cppcheck-2.8/test/testlibrary.cpp" $, 376 $, false $, $(@expr1073743079 library@var154 .@expr1112 isFloatArgValid (@expr1073743081 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , 0.5 ) $) $) $) { $return ; }
377: $if $(@expr1073743084 $!@expr1073743085 $assertEquals $(@expr1073743086 "cppcheck-2.8/test/testlibrary.cpp" $, 377 $, false $, $(@expr1073743087 library@var154 .@expr1104 isIntArgValid (@expr1073743089 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , 1 ) $) $) $) { $return ; }
378: $if $(@expr1073743092 $!@expr1073743093 $assertEquals $(@expr1073743094 "cppcheck-2.8/test/testlibrary.cpp" $, 378 $, false $, $(@expr1073743095 library@var154 .@expr1112 isFloatArgValid (@expr1073743097 tokenList@var155 .@expr1092 front (@expr1093 ) , 2 , 1.0 ) $) $) $) { $return ; }
379:
380:
381: $if $(@expr1073743100 $!@expr1073743101 $assertEquals $(@expr1073743102 "cppcheck-2.8/test/testlibrary.cpp" $, 381 $, false $, $(@expr1073743103 library@var154 .@expr1104 isIntArgValid (@expr1073743105 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 0 ) $) $) $) { $return ; }
382: $if $(@expr1073743108 $!@expr1073743109 $assertEquals $(@expr1073743110 "cppcheck-2.8/test/testlibrary.cpp" $, 382 $, false $, $(@expr1073743111 library@var154 .@expr1112 isFloatArgValid (@expr1073743113 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 0.0 ) $) $) $) { $return ; }
383: $if $(@expr1073743116 $!@expr1073743117 $assertEquals $(@expr1073743118 "cppcheck-2.8/test/testlibrary.cpp" $, 383 $, true $, $(@expr1073743119 library@var154 .@expr1104 isIntArgValid (@expr1073743121 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 1 ) $) $) $) { $return ; }
384: $if $(@expr1073743124 $!@expr1073743125 $assertEquals $(@expr1073743126 "cppcheck-2.8/test/testlibrary.cpp" $, 384 $, true $, $(@expr1073743127 library@var154 .@expr1112 isFloatArgValid (@expr1073743129 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 1.0 ) $) $) $) { $return ; }
385: $if $(@expr1073743132 $!@expr1073743133 $assertEquals $(@expr1073743134 "cppcheck-2.8/test/testlibrary.cpp" $, 385 $, true $, $(@expr1073743135 library@var154 .@expr1104 isIntArgValid (@expr1073743137 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 3 ) $) $) $) { $return ; }
386: $if $(@expr1073743140 $!@expr1073743141 $assertEquals $(@expr1073743142 "cppcheck-2.8/test/testlibrary.cpp" $, 386 $, true $, $(@expr1073743143 library@var154 .@expr1112 isFloatArgValid (@expr1073743145 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 3.0 ) $) $) $) { $return ; }
387: $if $(@expr1073743148 $!@expr1073743149 $assertEquals $(@expr1073743150 "cppcheck-2.8/test/testlibrary.cpp" $, 387 $, true $, $(@expr1073743151 library@var154 .@expr1104 isIntArgValid (@expr1073743153 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 5 ) $) $) $) { $return ; }
388: $if $(@expr1073743156 $!@expr1073743157 $assertEquals $(@expr1073743158 "cppcheck-2.8/test/testlibrary.cpp" $, 388 $, true $, $(@expr1073743159 library@var154 .@expr1112 isFloatArgValid (@expr1073743161 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 5.0 ) $) $) $) { $return ; }
389: $if $(@expr1073743164 $!@expr1073743165 $assertEquals $(@expr1073743166 "cppcheck-2.8/test/testlibrary.cpp" $, 389 $, false $, $(@expr1073743167 library@var154 .@expr1104 isIntArgValid (@expr1073743169 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 6 ) $) $) $) { $return ; }
390: $if $(@expr1073743172 $!@expr1073743173 $assertEquals $(@expr1073743174 "cppcheck-2.8/test/testlibrary.cpp" $, 390 $, false $, $(@expr1073743175 library@var154 .@expr1112 isFloatArgValid (@expr1073743177 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 6.0 ) $) $) $) { $return ; }
391: $if $(@expr1073743180 $!@expr1073743181 $assertEquals $(@expr1073743182 "cppcheck-2.8/test/testlibrary.cpp" $, 391 $, false $, $(@expr1073743183 library@var154 .@expr1104 isIntArgValid (@expr1073743185 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 7 ) $) $) $) { $return ; }
392: $if $(@expr1073743188 $!@expr1073743189 $assertEquals $(@expr1073743190 "cppcheck-2.8/test/testlibrary.cpp" $, 392 $, false $, $(@expr1073743191 library@var154 .@expr1112 isFloatArgValid (@expr1073743193 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 7.0 ) $) $) $) { $return ; }
393: $if $(@expr1073743196 $!@expr1073743197 $assertEquals $(@expr1073743198 "cppcheck-2.8/test/testlibrary.cpp" $, 393 $, true $, $(@expr1073743199 library@var154 .@expr1104 isIntArgValid (@expr1073743201 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 8 ) $) $) $) { $return ; }
394: $if $(@expr1073743204 $!@expr1073743205 $assertEquals $(@expr1073743206 "cppcheck-2.8/test/testlibrary.cpp" $, 394 $, false $, $(@expr1073743207 library@var154 .@expr1112 isFloatArgValid (@expr1073743209 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 8.0 ) $) $) $) { $return ; }
395: $if $(@expr1073743212 $!@expr1073743213 $assertEquals $(@expr1073743214 "cppcheck-2.8/test/testlibrary.cpp" $, 395 $, false $, $(@expr1073743215 library@var154 .@expr1104 isIntArgValid (@expr1073743217 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 9 ) $) $) $) { $return ; }
396: $if $(@expr1073743220 $!@expr1073743221 $assertEquals $(@expr1073743222 "cppcheck-2.8/test/testlibrary.cpp" $, 396 $, false $, $(@expr1073743223 library@var154 .@expr1112 isFloatArgValid (@expr1073743225 tokenList@var155 .@expr1092 front (@expr1093 ) , 3 , 9.0 ) $) $) $) { $return ; }
397:
398:
399: $if $(@expr1073743228 $!@expr1073743229 $assertEquals $(@expr1073743230 "cppcheck-2.8/test/testlibrary.cpp" $, 399 $, false $, $(@expr1073743231 library@var154 .@expr1104 isIntArgValid (@expr1073743233 tokenList@var155 .@expr1092 front (@expr1093 ) , 4 , -10 ) $) $) $) { $return ; }
400: $if $(@expr1073743236 $!@expr1073743237 $assertEquals $(@expr1073743238 "cppcheck-2.8/test/testlibrary.cpp" $, 400 $, false $, $(@expr1073743239 library@var154 .@expr1112 isFloatArgValid (@expr1073743241 tokenList@var155 .@expr1092 front (@expr1093 ) , 4 , -10.0 ) $) $) $) { $return ; }
401: $if $(@expr1073743244 $!@expr1073743245 $assertEquals $(@expr1073743246 "cppcheck-2.8/test/testlibrary.cpp" $, 401 $, true $, $(@expr1073743247 library@var154 .@expr1104 isIntArgValid (@expr1073743249 tokenList@var155 .@expr1092 front (@expr1093 ) , 4 , -1 ) $) $) $) { $return ; }
402: $if $(@expr1073743252 $!@expr1073743253 $assertEquals $(@expr1073743254 "cppcheck-2.8/test/testlibrary.cpp" $, 402 $, false $, $(@expr1073743255 library@var154 .@expr1112 isFloatArgValid (@expr1073743257 tokenList@var155 .@expr1092 front (@expr1093 ) , 4 , -1.0 ) $) $) $) { $return ; }
403: $if $(@expr1073743260 $!@expr1073743261 $assertEquals $(@expr1073743262 "cppcheck-2.8/test/testlibrary.cpp" $, 403 $, false $, $(@expr1073743263 library@var154 .@expr1112 isFloatArgValid (@expr1073743265 tokenList@var155 .@expr1092 front (@expr1093 ) , 4 , 5.000001 ) $) $) $) { $return ; }
404: $if $(@expr1073743268 $!@expr1073743269 $assertEquals $(@expr1073743270 "cppcheck-2.8/test/testlibrary.cpp" $, 404 $, false $, $(@expr1073743271 library@var154 .@expr1112 isFloatArgValid (@expr1073743273 tokenList@var155 .@expr1092 front (@expr1093 ) , 4 , 5.5 ) $) $) $) { $return ; }
405:
406:
407: $if $(@expr1073743276 $!@expr1073743277 $assertEquals $(@expr1073743278 "cppcheck-2.8/test/testlibrary.cpp" $, 407 $, true $, $(@expr1073743279 library@var154 .@expr1104 isIntArgValid (@expr1073743281 tokenList@var155 .@expr1092 front (@expr1093 ) , 5 , -10 ) $) $) $) { $return ; }
408: $if $(@expr1073743284 $!@expr1073743285 $assertEquals $(@expr1073743286 "cppcheck-2.8/test/testlibrary.cpp" $, 408 $, true $, $(@expr1073743287 library@var154 .@expr1112 isFloatArgValid (@expr1073743289 tokenList@var155 .@expr1092 front (@expr1093 ) , 5 , -10.0 ) $) $) $) { $return ; }
409: $if $(@expr1073743292 $!@expr1073743293 $assertEquals $(@expr1073743294 "cppcheck-2.8/test/testlibrary.cpp" $, 409 $, true $, $(@expr1073743295 library@var154 .@expr1104 isIntArgValid (@expr1073743297 tokenList@var155 .@expr1092 front (@expr1093 ) , 5 , 1 ) $) $) $) { $return ; }
410: $if $(@expr1073743300 $!@expr1073743301 $assertEquals $(@expr1073743302 "cppcheck-2.8/test/testlibrary.cpp" $, 410 $, true $, $(@expr1073743303 library@var154 .@expr1112 isFloatArgValid (@expr1073743305 tokenList@var155 .@expr1092 front (@expr1093 ) , 5 , 1.0 ) $) $) $) { $return ; }
411: $if $(@expr1073743308 $!@expr1073743309 $assertEquals $(@expr1073743310 "cppcheck-2.8/test/testlibrary.cpp" $, 411 $, false $, $(@expr1073743311 library@var154 .@expr1104 isIntArgValid (@expr1073743313 tokenList@var155 .@expr1092 front (@expr1093 ) , 5 , 2 ) $) $) $) { $return ; }
412: $if $(@expr1073743316 $!@expr1073743317 $assertEquals $(@expr1073743318 "cppcheck-2.8/test/testlibrary.cpp" $, 412 $, false $, $(@expr1073743319 library@var154 .@expr1112 isFloatArgValid (@expr1073743321 tokenList@var155 .@expr1092 front (@expr1093 ) , 5 , 2.0 ) $) $) $) { $return ; }
413:
414:
415: $if $(@expr1073743324 $!@expr1073743325 $assertEquals $(@expr1073743326 "cppcheck-2.8/test/testlibrary.cpp" $, 415 $, false $, $(@expr1073743327 library@var154 .@expr1104 isIntArgValid (@expr1073743329 tokenList@var155 .@expr1092 front (@expr1093 ) , 6 , 0 ) $) $) $) { $return ; }
416: $if $(@expr1073743332 $!@expr1073743333 $assertEquals $(@expr1073743334 "cppcheck-2.8/test/testlibrary.cpp" $, 416 $, false $, $(@expr1073743335 library@var154 .@expr1112 isFloatArgValid (@expr1073743337 tokenList@var155 .@expr1092 front (@expr1093 ) , 6 , 0.0 ) $) $) $) { $return ; }
417: $if $(@expr1073743340 $!@expr1073743341 $assertEquals $(@expr1073743342 "cppcheck-2.8/test/testlibrary.cpp" $, 417 $, false $, $(@expr1073743343 library@var154 .@expr1104 isIntArgValid (@expr1073743345 tokenList@var155 .@expr1092 front (@expr1093 ) , 6 , 1 ) $) $) $) { $return ; }
418: $if $(@expr1073743348 $!@expr1073743349 $assertEquals $(@expr1073743350 "cppcheck-2.8/test/testlibrary.cpp" $, 418 $, false $, $(@expr1073743351 library@var154 .@expr1112 isFloatArgValid (@expr1073743353 tokenList@var155 .@expr1092 front (@expr1093 ) , 6 , 1.499999 ) $) $) $) { $return ; }
419: $if $(@expr1073743356 $!@expr1073743357 $assertEquals $(@expr1073743358 "cppcheck-2.8/test/testlibrary.cpp" $, 419 $, true $, $(@expr1073743359 library@var154 .@expr1112 isFloatArgValid (@expr1073743361 tokenList@var155 .@expr1092 front (@expr1093 ) , 6 , 1.5 ) $) $) $) { $return ; }
420: $if $(@expr1073743364 $!@expr1073743365 $assertEquals $(@expr1073743366 "cppcheck-2.8/test/testlibrary.cpp" $, 420 $, true $, $(@expr1073743367 library@var154 .@expr1104 isIntArgValid (@expr1073743369 tokenList@var155 .@expr1092 front (@expr1093 ) , 6 , 2 ) $) $) $) { $return ; }
421: $if $(@expr1073743372 $!@expr1073743373 $assertEquals $(@expr1073743374 "cppcheck-2.8/test/testlibrary.cpp" $, 421 $, true $, $(@expr1073743375 library@var154 .@expr1104 isIntArgValid (@expr1073743377 tokenList@var155 .@expr1092 front (@expr1093 ) , 6 , 10 ) $) $) $) { $return ; }
422:
423:
424: $if $(@expr1073743380 $!@expr1073743381 $assertEquals $(@expr1073743382 "cppcheck-2.8/test/testlibrary.cpp" $, 424 $, false $, $(@expr1073743383 library@var154 .@expr1104 isIntArgValid (@expr1073743385 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -7 ) $) $) $) { $return ; }
425: $if $(@expr1073743388 $!@expr1073743389 $assertEquals $(@expr1073743390 "cppcheck-2.8/test/testlibrary.cpp" $, 425 $, false $, $(@expr1073743391 library@var154 .@expr1112 isFloatArgValid (@expr1073743393 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -7.0 ) $) $) $) { $return ; }
426: $if $(@expr1073743396 $!@expr1073743397 $assertEquals $(@expr1073743398 "cppcheck-2.8/test/testlibrary.cpp" $, 426 $, false $, $(@expr1073743399 library@var154 .@expr1112 isFloatArgValid (@expr1073743401 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -6.7000001 ) $) $) $) { $return ; }
427: $if $(@expr1073743404 $!@expr1073743405 $assertEquals $(@expr1073743406 "cppcheck-2.8/test/testlibrary.cpp" $, 427 $, true $, $(@expr1073743407 library@var154 .@expr1112 isFloatArgValid (@expr1073743409 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -6.7 ) $) $) $) { $return ; }
428: $if $(@expr1073743412 $!@expr1073743413 $assertEquals $(@expr1073743414 "cppcheck-2.8/test/testlibrary.cpp" $, 428 $, true $, $(@expr1073743415 library@var154 .@expr1104 isIntArgValid (@expr1073743417 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -6 ) $) $) $) { $return ; }
429: $if $(@expr1073743420 $!@expr1073743421 $assertEquals $(@expr1073743422 "cppcheck-2.8/test/testlibrary.cpp" $, 429 $, true $, $(@expr1073743423 library@var154 .@expr1112 isFloatArgValid (@expr1073743425 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -6.0 ) $) $) $) { $return ; }
430: $if $(@expr1073743428 $!@expr1073743429 $assertEquals $(@expr1073743430 "cppcheck-2.8/test/testlibrary.cpp" $, 430 $, true $, $(@expr1073743431 library@var154 .@expr1112 isFloatArgValid (@expr1073743433 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -5.5 ) $) $) $) { $return ; }
431: $if $(@expr1073743436 $!@expr1073743437 $assertEquals $(@expr1073743438 "cppcheck-2.8/test/testlibrary.cpp" $, 431 $, false $, $(@expr1073743439 library@var154 .@expr1112 isFloatArgValid (@expr1073743441 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -5.4999999 ) $) $) $) { $return ; }
432: $if $(@expr1073743444 $!@expr1073743445 $assertEquals $(@expr1073743446 "cppcheck-2.8/test/testlibrary.cpp" $, 432 $, false $, $(@expr1073743447 library@var154 .@expr1112 isFloatArgValid (@expr1073743449 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -3.3000001 ) $) $) $) { $return ; }
433: $if $(@expr1073743452 $!@expr1073743453 $assertEquals $(@expr1073743454 "cppcheck-2.8/test/testlibrary.cpp" $, 433 $, true $, $(@expr1073743455 library@var154 .@expr1112 isFloatArgValid (@expr1073743457 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -3.3 ) $) $) $) { $return ; }
434: $if $(@expr1073743460 $!@expr1073743461 $assertEquals $(@expr1073743462 "cppcheck-2.8/test/testlibrary.cpp" $, 434 $, true $, $(@expr1073743463 library@var154 .@expr1104 isIntArgValid (@expr1073743465 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -3 ) $) $) $) { $return ; }
435: $if $(@expr1073743468 $!@expr1073743469 $assertEquals $(@expr1073743470 "cppcheck-2.8/test/testlibrary.cpp" $, 435 $, true $, $(@expr1073743471 library@var154 .@expr1112 isFloatArgValid (@expr1073743473 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -3.0 ) $) $) $) { $return ; }
436: $if $(@expr1073743476 $!@expr1073743477 $assertEquals $(@expr1073743478 "cppcheck-2.8/test/testlibrary.cpp" $, 436 $, true $, $(@expr1073743479 library@var154 .@expr1112 isFloatArgValid (@expr1073743481 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -2.7 ) $) $) $) { $return ; }
437: $if $(@expr1073743484 $!@expr1073743485 $assertEquals $(@expr1073743486 "cppcheck-2.8/test/testlibrary.cpp" $, 437 $, false $, $(@expr1073743487 library@var154 .@expr1112 isFloatArgValid (@expr1073743489 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -2.6999999 ) $) $) $) { $return ; }
438: $if $(@expr1073743492 $!@expr1073743493 $assertEquals $(@expr1073743494 "cppcheck-2.8/test/testlibrary.cpp" $, 438 $, false $, $(@expr1073743495 library@var154 .@expr1104 isIntArgValid (@expr1073743497 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -2 ) $) $) $) { $return ; }
439: $if $(@expr1073743500 $!@expr1073743501 $assertEquals $(@expr1073743502 "cppcheck-2.8/test/testlibrary.cpp" $, 439 $, false $, $(@expr1073743503 library@var154 .@expr1112 isFloatArgValid (@expr1073743505 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , -2.0 ) $) $) $) { $return ; }
440: $if $(@expr1073743508 $!@expr1073743509 $assertEquals $(@expr1073743510 "cppcheck-2.8/test/testlibrary.cpp" $, 440 $, false $, $(@expr1073743511 library@var154 .@expr1104 isIntArgValid (@expr1073743513 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , 0 ) $) $) $) { $return ; }
441: $if $(@expr1073743516 $!@expr1073743517 $assertEquals $(@expr1073743518 "cppcheck-2.8/test/testlibrary.cpp" $, 441 $, false $, $(@expr1073743519 library@var154 .@expr1112 isFloatArgValid (@expr1073743521 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , 0.0 ) $) $) $) { $return ; }
442: $if $(@expr1073743524 $!@expr1073743525 $assertEquals $(@expr1073743526 "cppcheck-2.8/test/testlibrary.cpp" $, 442 $, false $, $(@expr1073743527 library@var154 .@expr1104 isIntArgValid (@expr1073743529 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , 3 ) $) $) $) { $return ; }
443: $if $(@expr1073743532 $!@expr1073743533 $assertEquals $(@expr1073743534 "cppcheck-2.8/test/testlibrary.cpp" $, 443 $, false $, $(@expr1073743535 library@var154 .@expr1112 isFloatArgValid (@expr1073743537 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , 3.0 ) $) $) $) { $return ; }
444: $if $(@expr1073743540 $!@expr1073743541 $assertEquals $(@expr1073743542 "cppcheck-2.8/test/testlibrary.cpp" $, 444 $, false $, $(@expr1073743543 library@var154 .@expr1104 isIntArgValid (@expr1073743545 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , 6 ) $) $) $) { $return ; }
445: $if $(@expr1073743548 $!@expr1073743549 $assertEquals $(@expr1073743550 "cppcheck-2.8/test/testlibrary.cpp" $, 445 $, false $, $(@expr1073743551 library@var154 .@expr1112 isFloatArgValid (@expr1073743553 tokenList@var155 .@expr1092 front (@expr1093 ) , 7 , 6.0 ) $) $) $) { $return ; }
446:
447:
448: $if $(@expr1073743556 $!@expr1073743557 $assertEquals $(@expr1073743558 "cppcheck-2.8/test/testlibrary.cpp" $, 448 $, false $, $(@expr1073743559 library@var154 .@expr1104 isIntArgValid (@expr1073743561 tokenList@var155 .@expr1092 front (@expr1093 ) , 8 , -1 ) $) $) $) { $return ; }
449: $if $(@expr1073743564 $!@expr1073743565 $assertEquals $(@expr1073743566 "cppcheck-2.8/test/testlibrary.cpp" $, 449 $, false $, $(@expr1073743567 library@var154 .@expr1112 isFloatArgValid (@expr1073743569 tokenList@var155 .@expr1092 front (@expr1093 ) , 8 , -1.0 ) $) $) $) { $return ; }
450: $if $(@expr1073743572 $!@expr1073743573 $assertEquals $(@expr1073743574 "cppcheck-2.8/test/testlibrary.cpp" $, 450 $, false $, $(@expr1073743575 library@var154 .@expr1112 isFloatArgValid (@expr1073743577 tokenList@var155 .@expr1092 front (@expr1093 ) , 8 , -0.00000001 ) $) $) $) { $return ; }
451: $if $(@expr1073743580 $!@expr1073743581 $assertEquals $(@expr1073743582 "cppcheck-2.8/test/testlibrary.cpp" $, 451 $, true $, $(@expr1073743583 library@var154 .@expr1104 isIntArgValid (@expr1073743585 tokenList@var155 .@expr1092 front (@expr1093 ) , 8 , 0 ) $) $) $) { $return ; }
452: $if $(@expr1073743588 $!@expr1073743589 $assertEquals $(@expr1073743590 "cppcheck-2.8/test/testlibrary.cpp" $, 452 $, true $, $(@expr1073743591 library@var154 .@expr1112 isFloatArgValid (@expr1073743593 tokenList@var155 .@expr1092 front (@expr1093 ) , 8 , 0.0 ) $) $) $) { $return ; }
453: $if $(@expr1073743596 $!@expr1073743597 $assertEquals $(@expr1073743598 "cppcheck-2.8/test/testlibrary.cpp" $, 453 $, true $, $(@expr1073743599 library@var154 .@expr1112 isFloatArgValid (@expr1073743601 tokenList@var155 .@expr1092 front (@expr1093 ) , 8 , 0.000000001 ) $) $) $) { $return ; }
454: $if $(@expr1073743604 $!@expr1073743605 $assertEquals $(@expr1073743606 "cppcheck-2.8/test/testlibrary.cpp" $, 454 $, true $, $(@expr1073743607 library@var154 .@expr1104 isIntArgValid (@expr1073743609 tokenList@var155 .@expr1092 front (@expr1093 ) , 8 , 1 ) $) $) $) { $return ; }
455: $if $(@expr1073743612 $!@expr1073743613 $assertEquals $(@expr1073743614 "cppcheck-2.8/test/testlibrary.cpp" $, 455 $, true $, $(@expr1073743615 library@var154 .@expr1112 isFloatArgValid (@expr1073743617 tokenList@var155 .@expr1092 front (@expr1093 ) , 8 , 1.0 ) $) $) $) { $return ; }
456:
457:
458: $if $(@expr1073743620 $!@expr1073743621 $assertEquals $(@expr1073743622 "cppcheck-2.8/test/testlibrary.cpp" $, 458 $, true $, $(@expr1073743623 library@var154 .@expr1104 isIntArgValid (@expr1073743625 tokenList@var155 .@expr1092 front (@expr1093 ) , 9 , -1 ) $) $) $) { $return ; }
459: $if $(@expr1073743628 $!@expr1073743629 $assertEquals $(@expr1073743630 "cppcheck-2.8/test/testlibrary.cpp" $, 459 $, true $, $(@expr1073743631 library@var154 .@expr1112 isFloatArgValid (@expr1073743633 tokenList@var155 .@expr1092 front (@expr1093 ) , 9 , -1.0 ) $) $) $) { $return ; }
460: $if $(@expr1073743636 $!@expr1073743637 $assertEquals $(@expr1073743638 "cppcheck-2.8/test/testlibrary.cpp" $, 460 $, true $, $(@expr1073743639 library@var154 .@expr1104 isIntArgValid (@expr1073743641 tokenList@var155 .@expr1092 front (@expr1093 ) , 9 , 2 ) $) $) $) { $return ; }
461: $if $(@expr1073743644 $!@expr1073743645 $assertEquals $(@expr1073743646 "cppcheck-2.8/test/testlibrary.cpp" $, 461 $, true $, $(@expr1073743647 library@var154 .@expr1112 isFloatArgValid (@expr1073743649 tokenList@var155 .@expr1092 front (@expr1093 ) , 9 , 2.0 ) $) $) $) { $return ; }
462: $if $(@expr1073743652 $!@expr1073743653 $assertEquals $(@expr1073743654 "cppcheck-2.8/test/testlibrary.cpp" $, 462 $, false $, $(@expr1073743655 library@var154 .@expr1112 isFloatArgValid (@expr1073743657 tokenList@var155 .@expr1092 front (@expr1093 ) , 9 , 2.00000001 ) $) $) $) { $return ; }
463: $if $(@expr1073743660 $!@expr1073743661 $assertEquals $(@expr1073743662 "cppcheck-2.8/test/testlibrary.cpp" $, 463 $, false $, $(@expr1073743663 library@var154 .@expr1104 isIntArgValid (@expr1073743665 tokenList@var155 .@expr1092 front (@expr1093 ) , 9 , 200 ) $) $) $) { $return ; }
464: $if $(@expr1073743668 $!@expr1073743669 $assertEquals $(@expr1073743670 "cppcheck-2.8/test/testlibrary.cpp" $, 464 $, false $, $(@expr1073743671 library@var154 .@expr1112 isFloatArgValid (@expr1073743673 tokenList@var155 .@expr1092 front (@expr1093 ) , 9 , 200.0 ) $) $) $) { $return ; }
465:
466:
467: $if $(@expr1073743676 $!@expr1073743677 $assertEquals $(@expr1073743678 "cppcheck-2.8/test/testlibrary.cpp" $, 467 $, true $, $(@expr1073743679 library@var154 .@expr1104 isIntArgValid (@expr1073743681 tokenList@var155 .@expr1092 front (@expr1093 ) , 10 , 0 ) $) $) $) { $return ; }
468: $if $(@expr1073743684 $!@expr1073743685 $assertEquals $(@expr1073743686 "cppcheck-2.8/test/testlibrary.cpp" $, 468 $, true $, $(@expr1073743687 library@var154 .@expr1112 isFloatArgValid (@expr1073743689 tokenList@var155 .@expr1092 front (@expr1093 ) , 10 , 0.0 ) $) $) $) { $return ; }
469:
470:
471: $if $(@expr1073743692 $!@expr1073743693 $assertEquals $(@expr1073743694 "cppcheck-2.8/test/testlibrary.cpp" $, 471 $, true $, $(@expr1073743695 library@var154 .@expr1112 isFloatArgValid (@expr1073743697 tokenList@var155 .@expr1092 front (@expr1093 ) , 11 , -0.42 ) $) $) $) { $return ; }
472: $if $(@expr1073743700 $!@expr1073743701 $assertEquals $(@expr1073743702 "cppcheck-2.8/test/testlibrary.cpp" $, 472 $, false $, $(@expr1073743703 library@var154 .@expr1112 isFloatArgValid (@expr1073743705 tokenList@var155 .@expr1092 front (@expr1093 ) , 11 , 0.0 ) $) $) $) { $return ; }
473: $if $(@expr1073743708 $!@expr1073743709 $assertEquals $(@expr1073743710 "cppcheck-2.8/test/testlibrary.cpp" $, 473 $, true $, $(@expr1073743711 library@var154 .@expr1112 isFloatArgValid (@expr1073743713 tokenList@var155 .@expr1092 front (@expr1093 ) , 11 , 0.42 ) $) $) $) { $return ; }
474: }
475:
476: void function_arg_minsize ( ) const {
477: const char xmldata@var157 [@expr1073743721 261 ] =@expr1073743722 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><minsize type=\"strlen\" arg=\"2\"/></arg>\n    <arg nr=\"2\"><minsize type=\"argvalue\" arg=\"3\"/></arg>\n    <arg nr=\"3\"/>\n    <arg nr=\"4\"><minsize type=\"value\" value=\"500\"/></arg>\n  </function>\n</def>"
478:
|
484:
485: ;
486:
487: Library library@var158 ;
488: $if $(@expr1073743723 $!@expr1073743724 $assertEquals $(@expr1073743725 "cppcheck-2.8/test/testlibrary.cpp" $, 488 $, true $, $(@expr1073743726 Library ::@expr1073743727 ErrorCode ::@expr1073743728 OK@expr1073743716 ==@expr1073743729 (@expr1073743730 readLibrary (@expr1073743731 library@var158 , xmldata@var157 ) ) .@expr1073743732 errorcode@expr1073743717 $) $) $) { $return ; }
489:
490: TokenList tokenList@var159 (@expr1073743733 nullptr ) ;
491: std ::@expr1073743734 istringstream istr@var160 (@expr1073743735 "foo(a,b,c,d);" ) ;
492: tokenList@var159 .@expr1073743736 createTokens (@expr1073743737 istr@var160 ) ;
493: tokenList@var159 .@expr1914 front (@expr1915 ) .@expr1073743740 next (@expr1073743741 ) .@expr1073743742 astOperand1 (@expr1073743743 tokenList@var159 .@expr1914 front (@expr1915 ) ) ;
494:
495:
496: const std ::@expr1073743746 vector < Library ::@expr1923 ArgumentChecks ::@expr1923 MinSize > * minsizes@var161 ; minsizes@var161 =@expr1073743749 library@var158 .@expr1926 argminsizes (@expr1073743751 tokenList@var159 .@expr1914 front (@expr1915 ) , 1 ) ;
497: $if $(@expr1073743754 $!@expr1073743755 $assertEquals $(@expr1073743756 "cppcheck-2.8/test/testlibrary.cpp" $, 497 $, true $, minsizes@var161 !=@expr1933 nullptr $) $) { $return ; }
498: $if $(@expr1073743758 $!@expr1073743759 $assertEquals $(@expr1073743760 "cppcheck-2.8/test/testlibrary.cpp" $, 498 $, 1U $, minsizes@var161 ?@expr1937 minsizes@var161 .@expr1938 size (@expr1939 ) :@expr1940 1U $) $) { $return ; }
499: if (@expr1941 minsizes@var161 &&@expr1942 minsizes@var161 .@expr1938 size (@expr1939 ) ==@expr1945 1U ) {
500: const Library ::@expr1923 ArgumentChecks ::@expr1923 MinSize &@expr1948 m@var162 =@expr1073743773 minsizes@var161 .@expr1950 front (@expr1951 ) ;
501: $if $(@expr1073743776 $!@expr1073743777 $assertEquals $(@expr1073743778 "cppcheck-2.8/test/testlibrary.cpp" $, 501 $, true $, Library ::@expr1955 ArgumentChecks ::@expr1956 MinSize ::@expr1957 Type ::@expr1073743782 STRLEN@expr1073743718 ==@expr1073743783 m@var162 .@expr1073743784 type@var163 $) $) { $return ; }
502: $if $(@expr1073743785 $!@expr1073743786 $assertEquals $(@expr1073743787 "cppcheck-2.8/test/testlibrary.cpp" $, 502 $, 2 $, m@var162 .@expr1073743788 arg@var164 $) $) { $return ; }
503: }
504:
505:
506: minsizes@var161 =@expr1073743789 library@var158 .@expr1926 argminsizes (@expr1073743791 tokenList@var159 .@expr1914 front (@expr1915 ) , 2 ) ;
507: $if $(@expr1073743794 $!@expr1073743795 $assertEquals $(@expr1073743796 "cppcheck-2.8/test/testlibrary.cpp" $, 507 $, true $, minsizes@var161 !=@expr1933 nullptr $) $) { $return ; }
508: $if $(@expr1073743798 $!@expr1073743799 $assertEquals $(@expr1073743800 "cppcheck-2.8/test/testlibrary.cpp" $, 508 $, 1U $, minsizes@var161 ?@expr1937 minsizes@var161 .@expr1938 size (@expr1939 ) :@expr1940 1U $) $) { $return ; }
509: if (@expr1941 minsizes@var161 &&@expr1942 minsizes@var161 .@expr1938 size (@expr1939 ) ==@expr1945 1U ) {
510: const Library ::@expr1923 ArgumentChecks ::@expr1923 MinSize &@expr1948 m@var165 =@expr1073743813 minsizes@var161 .@expr1950 front (@expr1951 ) ;
511: $if $(@expr1073743816 $!@expr1073743817 $assertEquals $(@expr1073743818 "cppcheck-2.8/test/testlibrary.cpp" $, 511 $, true $, Library ::@expr1955 ArgumentChecks ::@expr1956 MinSize ::@expr1957 Type ::@expr1073743822 ARGVALUE@expr1073743719 ==@expr1073743823 m@var165 .@expr1073743824 type@var166 $) $) { $return ; }
512: $if $(@expr1073743825 $!@expr1073743826 $assertEquals $(@expr1073743827 "cppcheck-2.8/test/testlibrary.cpp" $, 512 $, 3 $, m@var165 .@expr1073743828 arg@var167 $) $) { $return ; }
513: }
514:
515:
516: minsizes@var161 =@expr1073743829 library@var158 .@expr1926 argminsizes (@expr1073743831 tokenList@var159 .@expr1914 front (@expr1915 ) , 4 ) ;
517: $if $(@expr1073743834 $!@expr1073743835 $assertEquals $(@expr1073743836 "cppcheck-2.8/test/testlibrary.cpp" $, 517 $, true $, minsizes@var161 !=@expr1933 nullptr $) $) { $return ; }
518: $if $(@expr1073743838 $!@expr1073743839 $assertEquals $(@expr1073743840 "cppcheck-2.8/test/testlibrary.cpp" $, 518 $, 1U $, minsizes@var161 ?@expr1937 minsizes@var161 .@expr1938 size (@expr1939 ) :@expr1940 1U $) $) { $return ; }
519: if (@expr1941 minsizes@var161 &&@expr1942 minsizes@var161 .@expr1938 size (@expr1939 ) ==@expr1945 1U ) {
520: const Library ::@expr1923 ArgumentChecks ::@expr1923 MinSize &@expr1948 m@var168 =@expr1073743853 minsizes@var161 .@expr1950 front (@expr1951 ) ;
521: $if $(@expr1073743856 $!@expr1073743857 $assert_ $(@expr1073743858 "cppcheck-2.8/test/testlibrary.cpp" $, 521 $, Library ::@expr1955 ArgumentChecks ::@expr1956 MinSize ::@expr1957 Type ::@expr1073743862 VALUE@expr1073743720 ==@expr1073743863 m@var168 .@expr1073743864 type@var169 $) $) { $return ; }
522: $if $(@expr1073743865 $!@expr1073743866 $assertEquals $(@expr1073743867 "cppcheck-2.8/test/testlibrary.cpp" $, 522 $, 500 $, m@var168 .@expr1073743868 value@var170 $) $) { $return ; }
523: }
524: }
525:
526: void function_namespace ( ) const {
527: const char xmldata@var171 [@expr1073743871 113 ] =@expr1073743872 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Foo::foo,bar\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
528:
|
531:
532: ;
533:
534: Library library@var172 ;
535: $if $(@expr1073743873 $!@expr1073743874 $assertEquals $(@expr1073743875 "cppcheck-2.8/test/testlibrary.cpp" $, 535 $, true $, $(@expr1073743876 Library ::@expr1073743877 ErrorCode ::@expr1073743878 OK@expr1073743869 ==@expr1073743879 (@expr1073743880 readLibrary (@expr1073743881 library@var172 , xmldata@var171 ) ) .@expr1073743882 errorcode@expr1073743870 $) $) $) { $return ; }
536: $if $(@expr1073743883 $!@expr1073743884 $assertEquals $(@expr1073743885 "cppcheck-2.8/test/testlibrary.cpp" $, 536 $, library@var172 .@expr2062 functions@var173 .@expr1073743887 size (@expr1073743888 ) $, 2U $) $) { $return ; }
537: $if $(@expr1073743889 $!@expr1073743890 $assert_ $(@expr1073743891 "cppcheck-2.8/test/testlibrary.cpp" $, 537 $, library@var172 .@expr2062 functions@var173 .@expr2069 at (@expr1073743894 "Foo::foo" ) .@expr1073743895 argumentChecks .@expr1073743896 empty (@expr1073743897 ) $) $) { $return ; }
538: $if $(@expr1073743898 $!@expr1073743899 $assert_ $(@expr1073743900 "cppcheck-2.8/test/testlibrary.cpp" $, 538 $, library@var172 .@expr2062 functions@var173 .@expr2069 at (@expr1073743903 "bar" ) .@expr1073743904 argumentChecks .@expr1073743905 empty (@expr1073743906 ) $) $) { $return ; }
539:
540: {
541: TokenList tokenList@var174 (@expr1073743907 nullptr ) ;
542: std ::@expr1073743908 istringstream istr@var175 (@expr1073743909 "Foo::foo();" ) ;
543: tokenList@var174 .@expr1073743910 createTokens (@expr1073743911 istr@var175 ) ;
544: $if $(@expr1073743912 $!@expr1073743913 $assert_ $(@expr1073743914 "cppcheck-2.8/test/testlibrary.cpp" $, 544 $, library@var172 .@expr2091 isnotnoreturn (@expr1073743916 tokenList@var174 .@expr1073743917 front (@expr1073743918 ) .@expr1073743919 tokAt (@expr1073743920 2 ) ) $) $) { $return ; }
545: }
546:
547: {
548: TokenList tokenList@var176 (@expr1073743921 nullptr ) ;
549: std ::@expr1073743922 istringstream istr@var177 (@expr1073743923 "bar();" ) ;
550: tokenList@var176 .@expr1073743924 createTokens (@expr1073743925 istr@var177 ) ;
551: $if $(@expr1073743926 $!@expr1073743927 $assert_ $(@expr1073743928 "cppcheck-2.8/test/testlibrary.cpp" $, 551 $, library@var172 .@expr2091 isnotnoreturn (@expr1073743930 tokenList@var176 .@expr1073743931 front (@expr1073743932 ) ) $) $) { $return ; }
552: }
553: }
554:
555: void function_method ( ) const {
556: const char xmldata@var178 [@expr1073743935 116 ] =@expr1073743936 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"CString::Format\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
557:
|
560:
561: ;
562:
563: Library library@var179 ;
564: $if $(@expr1073743937 $!@expr1073743938 $assertEquals $(@expr1073743939 "cppcheck-2.8/test/testlibrary.cpp" $, 564 $, true $, $(@expr1073743940 Library ::@expr1073743941 ErrorCode ::@expr1073743942 OK@expr1073743933 ==@expr1073743943 (@expr1073743944 readLibrary (@expr1073743945 library@var179 , xmldata@var178 ) ) .@expr1073743946 errorcode@expr1073743934 $) $) $) { $return ; }
565: $if $(@expr1073743947 $!@expr1073743948 $assertEquals $(@expr1073743949 "cppcheck-2.8/test/testlibrary.cpp" $, 565 $, library@var179 .@expr1073743950 functions@var180 .@expr1073743951 size (@expr1073743952 ) $, 1U $) $) { $return ; }
566:
567: {
568: Tokenizer tokenizer@var181 (@expr1073743953 &@expr2130 settings@var102 , nullptr ) ;
569: std ::@expr1073743955 istringstream istr@var182 (@expr1073743956 "CString str; str.Format();" ) ;
570: $if $(@expr1073743957 $!@expr1073743958 $assert_ $(@expr1073743959 "cppcheck-2.8/test/testlibrary.cpp" $, 570 $, $(@expr1073743960 tokenizer@var181 .@expr1073743961 tokenize (@expr1073743962 istr@var182 , "test.cpp" ) $) $) $) { $return ; }
571: $if $(@expr1073743963 $!@expr1073743964 $assert_ $(@expr1073743965 "cppcheck-2.8/test/testlibrary.cpp" $, 571 $, $(@expr1073743966 library@var179 .@expr2143 isnotnoreturn (@expr1073743968 Token ::@expr2145 findsimplematch (@expr1073743970 tokenizer@var181 .@expr1073743971 tokens (@expr1073743972 ) , "Format" ) ) $) $) $) { $return ; }
572: }
573:
574: {
575: Tokenizer tokenizer@var183 (@expr1073743973 &@expr2130 settings@var102 , nullptr ) ;
576: std ::@expr1073743975 istringstream istr@var184 (@expr1073743976 "HardDrive hd; hd.Format();" ) ;
577: $if $(@expr1073743977 $!@expr1073743978 $assert_ $(@expr1073743979 "cppcheck-2.8/test/testlibrary.cpp" $, 577 $, $(@expr1073743980 tokenizer@var183 .@expr1073743981 tokenize (@expr1073743982 istr@var184 , "test.cpp" ) $) $) $) { $return ; }
578: $if $(@expr1073743983 $!@expr1073743984 $assert_ $(@expr1073743985 "cppcheck-2.8/test/testlibrary.cpp" $, 578 $, $(@expr1073743986 !@expr1073743987 library@var179 .@expr2143 isnotnoreturn (@expr1073743989 Token ::@expr2145 findsimplematch (@expr1073743991 tokenizer@var183 .@expr1073743992 tokens (@expr1073743993 ) , "Format" ) ) $) $) $) { $return ; }
579: }
580: }
581:
582: void function_baseClassMethod ( ) const {
583: const char xmldata@var185 [@expr1073743996 111 ] =@expr1073743997 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Base::f\">\n    <arg nr=\"1\"><not-null/></arg>\n  </function>\n</def>"
584:
|
587:
588: ;
589:
590: Library library@var186 ;
591: $if $(@expr1073743998 $!@expr1073743999 $assertEquals $(@expr1073744000 "cppcheck-2.8/test/testlibrary.cpp" $, 591 $, true $, $(@expr1073744001 Library ::@expr1073744002 ErrorCode ::@expr1073744003 OK@expr1073743994 ==@expr1073744004 (@expr1073744005 readLibrary (@expr1073744006 library@var186 , xmldata@var185 ) ) .@expr1073744007 errorcode@expr1073743995 $) $) $) { $return ; }
592:
593: {
594: Tokenizer tokenizer@var187 (@expr1073744008 &@expr2185 settings@var102 , nullptr ) ;
595: std ::@expr1073744010 istringstream istr@var188 (@expr1073744011 "struct X : public Base { void dostuff() { f(0); } };" ) ;
596: $if $(@expr1073744012 $!@expr1073744013 $assert_ $(@expr1073744014 "cppcheck-2.8/test/testlibrary.cpp" $, 596 $, $(@expr1073744015 tokenizer@var187 .@expr1073744016 tokenize (@expr1073744017 istr@var188 , "test.cpp" ) $) $) $) { $return ; }
597: $if $(@expr1073744018 $!@expr1073744019 $assert_ $(@expr1073744020 "cppcheck-2.8/test/testlibrary.cpp" $, 597 $, $(@expr1073744021 library@var186 .@expr2198 isnullargbad (@expr1073744023 Token ::@expr2200 findsimplematch (@expr1073744025 tokenizer@var187 .@expr1073744026 tokens (@expr1073744027 ) , "f" ) , 1 ) $) $) $) { $return ; }
598: }
599:
600: {
601: Tokenizer tokenizer@var189 (@expr1073744028 &@expr2185 settings@var102 , nullptr ) ;
602: std ::@expr1073744030 istringstream istr@var190 (@expr1073744031 "struct X : public Base { void dostuff() { f(1,2); } };" ) ;
603: $if $(@expr1073744032 $!@expr1073744033 $assert_ $(@expr1073744034 "cppcheck-2.8/test/testlibrary.cpp" $, 603 $, $(@expr1073744035 tokenizer@var189 .@expr1073744036 tokenize (@expr1073744037 istr@var190 , "test.cpp" ) $) $) $) { $return ; }
604: $if $(@expr1073744038 $!@expr1073744039 $assert_ $(@expr1073744040 "cppcheck-2.8/test/testlibrary.cpp" $, 604 $, $(@expr1073744041 !@expr1073744042 library@var186 .@expr2198 isnullargbad (@expr1073744044 Token ::@expr2200 findsimplematch (@expr1073744046 tokenizer@var189 .@expr1073744047 tokens (@expr1073744048 ) , "f" ) , 1 ) $) $) $) { $return ; }
605: }
606: }
607:
608: void function_warn ( ) const {
609: const char xmldata@var191 [@expr1073744057 252 ] =@expr1073744058 "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"a\">\n    <warn severity=\"style\" cstd=\"c99\">Message</warn>\n  </function>\n  <function name=\"b\">\n    <warn severity=\"performance\" cppstd=\"c++11\" reason=\"Obsolescent\" alternatives=\"c,d,e\"/>\n  </function>\n</def>"
610:
|
616:
617: ;
618:
619: Library library@var192 ;
620: $if $(@expr1073744059 $!@expr1073744060 $assertEquals $(@expr1073744061 "cppcheck-2.8/test/testlibrary.cpp" $, 620 $, true $, $(@expr1073744062 Library ::@expr1073744063 ErrorCode ::@expr1073744064 OK@expr1073744049 ==@expr1073744065 (@expr1073744066 readLibrary (@expr1073744067 library@var192 , xmldata@var191 ) ) .@expr1073744068 errorcode@expr1073744050 $) $) $) { $return ; }
621:
622: TokenList tokenList@var193 (@expr1073744069 nullptr ) ;
623: std ::@expr1073744070 istringstream istr@var194 (@expr1073744071 "a(); b();" ) ;
624: tokenList@var193 .@expr1073744072 createTokens (@expr1073744073 istr@var194 ) ;
625:
626: const Library ::@expr2250 WarnInfo * a@var195 ; a@var195 =@expr1073744075 library@var192 .@expr2252 getWarnInfo (@expr1073744077 tokenList@var193 .@expr2254 front (@expr2255 ) ) ;
627: const Library ::@expr2250 WarnInfo * b@var196 ; b@var196 =@expr1073744081 library@var192 .@expr2252 getWarnInfo (@expr1073744083 tokenList@var193 .@expr2254 front (@expr2255 ) .@expr1073744086 tokAt (@expr1073744087 4 ) ) ;
628:
629: $if $(@expr1073744088 $!@expr1073744089 $assertEquals $(@expr1073744090 "cppcheck-2.8/test/testlibrary.cpp" $, 629 $, 2 $, library@var192 .@expr1073744091 functionwarn@var197 .@expr1073744092 size (@expr1073744093 ) $) $) { $return ; }
630: $if $(@expr1073744094 $!@expr1073744095 $assert_ $(@expr1073744096 "cppcheck-2.8/test/testlibrary.cpp" $, 630 $, a@var195 &&@expr2273 b@var196 $) $) { $return ; }
631: if (@expr1073744098 a@var195 &&@expr2273 b@var196 ) {
632: $if $(@expr1073744100 $!@expr1073744101 $assertEquals $(@expr1073744102 "cppcheck-2.8/test/testlibrary.cpp" $, 632 $, "Message" $, a@var195 .@expr1073744103 message@var198 $) $) { $return ; }
633: $if $(@expr1073744104 $!@expr1073744105 $assertEquals $(@expr1073744106 "cppcheck-2.8/test/testlibrary.cpp" $, 633 $, Severity ::@expr1073744107 style@expr1073744051 $, a@var195 .@expr1073744108 severity@var199 $) $) { $return ; }
634: $if $(@expr1073744109 $!@expr1073744110 $assertEquals $(@expr1073744111 "cppcheck-2.8/test/testlibrary.cpp" $, 634 $, Standards ::@expr1073744112 C99@expr1073744052 $, a@var195 .@expr2289 standards@var200 .@expr1073744114 c@var201 $) $) { $return ; }
635: $if $(@expr1073744115 $!@expr1073744116 $assertEquals $(@expr1073744117 "cppcheck-2.8/test/testlibrary.cpp" $, 635 $, Standards ::@expr1073744118 CPP03@expr1073744053 $, a@var195 .@expr2289 standards@var200 .@expr1073744120 cpp@var202 $) $) { $return ; }
636:
637: $if $(@expr1073744121 $!@expr1073744122 $assertEquals $(@expr1073744123 "cppcheck-2.8/test/testlibrary.cpp" $, 637 $, "Obsolescent function 'b' called. It is recommended to use 'c', 'd' or 'e' instead." $, b@var196 .@expr1073744124 message@var203 $) $) { $return ; }
638: $if $(@expr1073744125 $!@expr1073744126 $assertEquals $(@expr1073744127 "cppcheck-2.8/test/testlibrary.cpp" $, 638 $, Severity ::@expr1073744128 performance@expr1073744054 $, b@var196 .@expr1073744129 severity@var204 $) $) { $return ; }
639: $if $(@expr1073744130 $!@expr1073744131 $assertEquals $(@expr1073744132 "cppcheck-2.8/test/testlibrary.cpp" $, 639 $, Standards ::@expr1073744133 C89@expr1073744055 $, b@var196 .@expr2310 standards@var205 .@expr1073744135 c@var206 $) $) { $return ; }
640: $if $(@expr1073744136 $!@expr1073744137 $assertEquals $(@expr1073744138 "cppcheck-2.8/test/testlibrary.cpp" $, 640 $, Standards ::@expr1073744139 CPP11@expr1073744056 $, b@var196 .@expr2310 standards@var205 .@expr1073744141 cpp@var207 $) $) { $return ; }
641: }
642: }
643:
644: void memory ( ) const {
645: const char xmldata@var208 [@expr1073744144 116 ] =@expr1073744145 "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </memory>\n</def>"
646:
|
650:
651: ;
652:
653: Library library@var209 ;
654: $if $(@expr1073744146 $!@expr1073744147 $assertEquals $(@expr1073744148 "cppcheck-2.8/test/testlibrary.cpp" $, 654 $, true $, $(@expr1073744149 Library ::@expr1073744150 ErrorCode ::@expr1073744151 OK@expr1073744142 ==@expr1073744152 (@expr1073744153 readLibrary (@expr1073744154 library@var209 , xmldata@var208 ) ) .@expr1073744155 errorcode@expr1073744143 $) $) $) { $return ; }
655: $if $(@expr1073744156 $!@expr1073744157 $assert_ $(@expr1073744158 "cppcheck-2.8/test/testlibrary.cpp" $, 655 $, library@var209 .@expr1073744159 functions@var210 .@expr1073744160 empty (@expr1073744161 ) $) $) { $return ; }
656:
657: $if $(@expr1073744162 $!@expr1073744163 $assert_ $(@expr1073744164 "cppcheck-2.8/test/testlibrary.cpp" $, 657 $, Library ::@expr1073744165 ismemory (@expr1073744166 library@var209 .@expr2343 getAllocFuncInfo (@expr2344 "CreateX" ) ) $) $) { $return ; }
658: $if $(@expr1073744169 $!@expr1073744170 $assertEquals $(@expr1073744171 "cppcheck-2.8/test/testlibrary.cpp" $, 658 $, library@var209 .@expr1073744172 allocId (@expr1073744173 "CreateX" ) $, library@var209 .@expr1073744174 deallocId (@expr1073744175 "DeleteX" ) $) $) { $return ; }
659: const Library ::@expr2352 AllocFunc * af@var211 ; af@var211 =@expr1073744177 library@var209 .@expr2343 getAllocFuncInfo (@expr2344 "CreateX" ) ;
660: $if $(@expr1073744180 $!@expr1073744181 $assert_ $(@expr1073744182 "cppcheck-2.8/test/testlibrary.cpp" $, 660 $, af@var211 &&@expr1073744183 af@var211 .@expr1073744184 arg@var212 ==@expr1073744185 -1 $) $) { $return ; }
661: const Library ::@expr2352 AllocFunc * df@var213 ; df@var213 =@expr1073744187 library@var209 .@expr1073744188 getDeallocFuncInfo (@expr1073744189 "DeleteX" ) ;
662: $if $(@expr1073744190 $!@expr1073744191 $assert_ $(@expr1073744192 "cppcheck-2.8/test/testlibrary.cpp" $, 662 $, df@var213 &&@expr1073744193 df@var213 .@expr1073744194 arg@var214 ==@expr1073744195 1 $) $) { $return ; }
663: }
664: void memory2 ( ) const {
665: const char xmldata1@var215 [@expr1073744196 112 ] =@expr1073744197 "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>malloc</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
666:
|
670:
671: ;
672: const char xmldata2@var216 [@expr1073744198 109 ] =@expr1073744199 "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>foo</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
673:
|
677:
678: ;
679:
680: Library library@var217 ;
681: $if $(@expr1073744200 $!@expr1073744201 $assertEquals $(@expr1073744202 "cppcheck-2.8/test/testlibrary.cpp" $, 681 $, true $, $(@expr1073744203 library@var217 .@expr2380 loadxmldata (@expr1073744205 xmldata1@var215 , sizeof (@expr1073744206 xmldata1@var215 ) ) $) $) $) { $return ; }
682: $if $(@expr1073744207 $!@expr1073744208 $assertEquals $(@expr1073744209 "cppcheck-2.8/test/testlibrary.cpp" $, 682 $, true $, $(@expr1073744210 library@var217 .@expr2380 loadxmldata (@expr1073744212 xmldata2@var216 , sizeof (@expr1073744213 xmldata2@var216 ) ) $) $) $) { $return ; }
683:
684: $if $(@expr1073744214 $!@expr1073744215 $assertEquals $(@expr1073744216 "cppcheck-2.8/test/testlibrary.cpp" $, 684 $, library@var217 .@expr2393 deallocId (@expr2394 "free" ) $, library@var217 .@expr2395 allocId (@expr1073744220 "malloc" ) $) $) { $return ; }
685: $if $(@expr1073744221 $!@expr1073744222 $assertEquals $(@expr1073744223 "cppcheck-2.8/test/testlibrary.cpp" $, 685 $, library@var217 .@expr2393 deallocId (@expr2394 "free" ) $, library@var217 .@expr2395 allocId (@expr1073744227 "foo" ) $) $) { $return ; }
686: }
687: void memory3 ( ) const {
688: const char xmldata@var218 [@expr1073744230 145 ] =@expr1073744231 "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc arg=\"5\" init=\"false\">CreateX</alloc>\n    <dealloc arg=\"2\">DeleteX</dealloc>\n  </memory>\n</def>"
689:
|
693:
694: ;
695:
696: Library library@var219 ;
697: $if $(@expr1073744232 $!@expr1073744233 $assertEquals $(@expr1073744234 "cppcheck-2.8/test/testlibrary.cpp" $, 697 $, true $, $(@expr1073744235 Library ::@expr1073744236 ErrorCode ::@expr1073744237 OK@expr1073744228 ==@expr1073744238 (@expr1073744239 readLibrary (@expr1073744240 library@var219 , xmldata@var218 ) ) .@expr1073744241 errorcode@expr1073744229 $) $) $) { $return ; }
698: $if $(@expr1073744242 $!@expr1073744243 $assert_ $(@expr1073744244 "cppcheck-2.8/test/testlibrary.cpp" $, 698 $, library@var219 .@expr1073744245 functions@var220 .@expr1073744246 empty (@expr1073744247 ) $) $) { $return ; }
699:
700: const Library ::@expr2424 AllocFunc * af@var221 ; af@var221 =@expr1073744249 library@var219 .@expr1073744250 getAllocFuncInfo (@expr1073744251 "CreateX" ) ;
701: $if $(@expr1073744252 $!@expr1073744253 $assert_ $(@expr1073744254 "cppcheck-2.8/test/testlibrary.cpp" $, 701 $, af@var221 &&@expr1073744255 af@var221 .@expr1073744256 arg@var222 ==@expr1073744257 5 &&@expr1073744258 !@expr1073744259 af@var221 .@expr1073744260 initData@var223 $) $) { $return ; }
702: const Library ::@expr2424 AllocFunc * df@var224 ; df@var224 =@expr1073744262 library@var219 .@expr1073744263 getDeallocFuncInfo (@expr1073744264 "DeleteX" ) ;
703: $if $(@expr1073744265 $!@expr1073744266 $assert_ $(@expr1073744267 "cppcheck-2.8/test/testlibrary.cpp" $, 703 $, df@var224 &&@expr1073744268 df@var224 .@expr1073744269 arg@var225 ==@expr1073744270 2 $) $) { $return ; }
704: }
705:
706: void resource ( ) const {
707: const char xmldata@var226 [@expr1073744273 120 ] =@expr1073744274 "<?xml version=\"1.0\"?>\n<def>\n  <resource>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </resource>\n</def>"
708:
|
712:
713: ;
714:
715: Library library@var227 ;
716: $if $(@expr1073744275 $!@expr1073744276 $assertEquals $(@expr1073744277 "cppcheck-2.8/test/testlibrary.cpp" $, 716 $, true $, $(@expr1073744278 Library ::@expr1073744279 ErrorCode ::@expr1073744280 OK@expr1073744271 ==@expr1073744281 (@expr1073744282 readLibrary (@expr1073744283 library@var227 , xmldata@var226 ) ) .@expr1073744284 errorcode@expr1073744272 $) $) $) { $return ; }
717: $if $(@expr1073744285 $!@expr1073744286 $assert_ $(@expr1073744287 "cppcheck-2.8/test/testlibrary.cpp" $, 717 $, library@var227 .@expr1073744288 functions@var228 .@expr1073744289 empty (@expr1073744290 ) $) $) { $return ; }
718:
719: $if $(@expr1073744291 $!@expr1073744292 $assert_ $(@expr1073744293 "cppcheck-2.8/test/testlibrary.cpp" $, 719 $, Library ::@expr1073744294 isresource (@expr1073744295 library@var227 .@expr2472 allocId (@expr2473 "CreateX" ) ) $) $) { $return ; }
720: $if $(@expr1073744298 $!@expr1073744299 $assertEquals $(@expr1073744300 "cppcheck-2.8/test/testlibrary.cpp" $, 720 $, library@var227 .@expr2472 allocId (@expr2473 "CreateX" ) $, library@var227 .@expr1073744303 deallocId (@expr1073744304 "DeleteX" ) $) $) { $return ; }
721: }
722:
723: void podtype ( ) const {
724:
725: const char xmldata@var229 [@expr1073744308 201 ] =@expr1073744309 "<?xml version=\"1.0\"?>\n<def>\n  <podtype name=\"s8\" sign=\"s\" size=\"1\"/>\n  <podtype name=\"u8\" sign=\"u\" size=\"1\"/>\n  <podtype name=\"u16\" sign=\"u\" size=\"2\"/>\n  <podtype name=\"s16\" sign=\"s\" size=\"2\"/>\n</def>"
726:
|
730:
731: ;
732: Library library@var230 ;
733: $if $(@expr1073744310 $!@expr1073744311 $assertEquals $(@expr1073744312 "cppcheck-2.8/test/testlibrary.cpp" $, 733 $, true $, $(@expr1073744313 Library ::@expr1073744314 ErrorCode ::@expr1073744315 OK@expr1073744305 ==@expr1073744316 (@expr1073744317 readLibrary (@expr1073744318 library@var230 , xmldata@var229 ) ) .@expr1073744319 errorcode@expr1073744306 $) $) $) { $return ; }
734:
735: {
736: const struct Library ::@expr2496 PodType@expr2483 * const type@var231 ; type@var231 =@expr1073744321 library@var230 .@expr2498 podtype (@expr1073744323 "s8" ) ;
737: $if $(@expr1073744324 $!@expr1073744325 $assertEquals $(@expr1073744326 "cppcheck-2.8/test/testlibrary.cpp" $, 737 $, true $, type@var231 !=@expr1073744327 nullptr $) $) { $return ; }
738: if (@expr1073744328 type@var231 ) {
739: $if $(@expr1073744329 $!@expr1073744330 $assertEquals $(@expr1073744331 "cppcheck-2.8/test/testlibrary.cpp" $, 739 $, 1U $, type@var231 .@expr1073744332 size@var232 $) $) { $return ; }
740: $if $(@expr1073744333 $!@expr1073744334 $assertEquals $(@expr1073744335 "cppcheck-2.8/test/testlibrary.cpp" $, 740 $, 's' $, type@var231 .@expr1073744336 sign@var233 $) $) { $return ; }
741: }
742: }
743:
744: {
745: const struct Library ::@expr2496 PodType@expr2483 * const type@var234 ; type@var234 =@expr1073744338 library@var230 .@expr2498 podtype (@expr1073744340 "u8" ) ;
746: $if $(@expr1073744341 $!@expr1073744342 $assertEquals $(@expr1073744343 "cppcheck-2.8/test/testlibrary.cpp" $, 746 $, true $, type@var234 !=@expr1073744344 nullptr $) $) { $return ; }
747: if (@expr1073744345 type@var234 ) {
748: $if $(@expr1073744346 $!@expr1073744347 $assertEquals $(@expr1073744348 "cppcheck-2.8/test/testlibrary.cpp" $, 748 $, 1U $, type@var234 .@expr1073744349 size@var235 $) $) { $return ; }
749: $if $(@expr1073744350 $!@expr1073744351 $assertEquals $(@expr1073744352 "cppcheck-2.8/test/testlibrary.cpp" $, 749 $, 'u' $, type@var234 .@expr1073744353 sign@var236 $) $) { $return ; }
750: }
751: }
752:
753: {
754: const struct Library ::@expr2496 PodType@expr2483 * const type@var237 ; type@var237 =@expr1073744355 library@var230 .@expr2498 podtype (@expr1073744357 "u16" ) ;
755: $if $(@expr1073744358 $!@expr1073744359 $assertEquals $(@expr1073744360 "cppcheck-2.8/test/testlibrary.cpp" $, 755 $, true $, type@var237 !=@expr1073744361 nullptr $) $) { $return ; }
756: if (@expr1073744362 type@var237 ) {
757: $if $(@expr1073744363 $!@expr1073744364 $assertEquals $(@expr1073744365 "cppcheck-2.8/test/testlibrary.cpp" $, 757 $, 2U $, type@var237 .@expr1073744366 size@var238 $) $) { $return ; }
758: $if $(@expr1073744367 $!@expr1073744368 $assertEquals $(@expr1073744369 "cppcheck-2.8/test/testlibrary.cpp" $, 758 $, 'u' $, type@var237 .@expr1073744370 sign@var239 $) $) { $return ; }
759: }
760: }
761:
762: {
763: const struct Library ::@expr2496 PodType@expr2483 * const type@var240 ; type@var240 =@expr1073744372 library@var230 .@expr2498 podtype (@expr1073744374 "s16" ) ;
764: $if $(@expr1073744375 $!@expr1073744376 $assertEquals $(@expr1073744377 "cppcheck-2.8/test/testlibrary.cpp" $, 764 $, true $, type@var240 !=@expr1073744378 nullptr $) $) { $return ; }
765: if (@expr1073744379 type@var240 ) {
766: $if $(@expr1073744380 $!@expr1073744381 $assertEquals $(@expr1073744382 "cppcheck-2.8/test/testlibrary.cpp" $, 766 $, 2U $, type@var240 .@expr1073744383 size@var241 $) $) { $return ; }
767: $if $(@expr1073744384 $!@expr1073744385 $assertEquals $(@expr1073744386 "cppcheck-2.8/test/testlibrary.cpp" $, 767 $, 's' $, type@var240 .@expr1073744387 sign@var242 $) $) { $return ; }
768: }
769: }
770:
771: {
772: const struct Library ::@expr2496 PodType@expr2483 * const type@var243 ; type@var243 =@expr1073744389 library@var230 .@expr2498 podtype (@expr1073744391 "nonExistingPodType" ) ;
773: $if $(@expr1073744392 $!@expr1073744393 $assertEquals $(@expr1073744394 "cppcheck-2.8/test/testlibrary.cpp" $, 773 $, true $, type@var243 ==@expr1073744395 nullptr $) $) { $return ; }
774: }
775:
776: }
777:
778: void container ( ) const {
779: const char xmldata@var244 [@expr1073744413 1119 ] =@expr1073744414 "<?xml version=\"1.0\"?>\n<def>\n  <container id=\"A\" startPattern=\"std :: A &lt;\" endPattern=\"&gt; !!::\" itEndPattern=\"&gt; :: iterator\">\n    <type templateParameter=\"1\"/>\n    <size templateParameter=\"4\">\n      <function name=\"resize\" action=\"resize\"/>\n      <function name=\"clear\" action=\"clear\"/>\n      <function name=\"size\" yields=\"size\"/>\n      <function name=\"empty\" yields=\"empty\"/>\n      <function name=\"push_back\" action=\"push\"/>\n      <function name=\"pop_back\" action=\"pop\"/>\n    </size>\n    <access>\n      <function name=\"at\" yields=\"at_index\"/>\n      <function name=\"begin\" yields=\"start-iterator\"/>\n      <function name=\"end\" yields=\"end-iterator\"/>\n      <function name=\"data\" yields=\"buffer\"/>\n      <function name=\"c_str\" yields=\"buffer-nt\"/>\n      <function name=\"front\" yields=\"item\"/>\n      <function name=\"find\" action=\"find\"/>\n    </access>\n  </container>\n  <container id=\"B\" startPattern=\"std :: B &lt;\" inherits=\"A\" opLessAllowed=\"false\">\n    <size templateParameter=\"3\"/>\n  </container>\n  <container id=\"C\">\n    <type string=\"std-like\"/>\n    <access indexOperator=\"array-like\"/>\n  </container>\n</def>"
780:
|
807:
808: ;
809:
810: Library library@var245 ;
811: $if $(@expr1073744415 $!@expr1073744416 $assertEquals $(@expr1073744417 "cppcheck-2.8/test/testlibrary.cpp" $, 811 $, true $, $(@expr1073744418 Library ::@expr1073744419 ErrorCode ::@expr1073744420 OK@expr1073744396 ==@expr1073744421 (@expr1073744422 readLibrary (@expr1073744423 library@var245 , xmldata@var244 ) ) .@expr1073744424 errorcode@expr1073744397 $) $) $) { $return ; }
812:
813: Library ::@expr2601 Container &@expr2602 A@var246 =@expr1073744427 library@var245 .@expr2604 containers@var247 [@expr1073744429 "A" ] ;
814: Library ::@expr2601 Container &@expr2602 B@var248 =@expr1073744432 library@var245 .@expr2604 containers@var247 [@expr1073744434 "B" ] ;
815: Library ::@expr2601 Container &@expr2602 C@var249 =@expr1073744437 library@var245 .@expr2604 containers@var247 [@expr1073744439 "C" ] ;
816:
817: $if $(@expr1073744440 $!@expr1073744441 $assertEquals $(@expr1073744442 "cppcheck-2.8/test/testlibrary.cpp" $, 817 $, A@var246 .@expr1073744443 type_templateArgNo@var250 $, 1 $) $) { $return ; }
818: $if $(@expr1073744444 $!@expr1073744445 $assertEquals $(@expr1073744446 "cppcheck-2.8/test/testlibrary.cpp" $, 818 $, A@var246 .@expr1073744447 size_templateArgNo@var251 $, 4 $) $) { $return ; }
819: $if $(@expr1073744448 $!@expr1073744449 $assertEquals $(@expr1073744450 "cppcheck-2.8/test/testlibrary.cpp" $, 819 $, A@var246 .@expr1073744451 startPattern@var252 $, "std :: A <" $) $) { $return ; }
820: $if $(@expr1073744452 $!@expr1073744453 $assertEquals $(@expr1073744454 "cppcheck-2.8/test/testlibrary.cpp" $, 820 $, A@var246 .@expr1073744455 endPattern@var253 $, "> !!::" $) $) { $return ; }
821: $if $(@expr1073744456 $!@expr1073744457 $assertEquals $(@expr1073744458 "cppcheck-2.8/test/testlibrary.cpp" $, 821 $, A@var246 .@expr1073744459 itEndPattern@var254 $, "> :: iterator" $) $) { $return ; }
822: $if $(@expr1073744460 $!@expr1073744461 $assertEquals $(@expr1073744462 "cppcheck-2.8/test/testlibrary.cpp" $, 822 $, A@var246 .@expr1073744463 stdStringLike@var255 $, false $) $) { $return ; }
823: $if $(@expr1073744464 $!@expr1073744465 $assertEquals $(@expr1073744466 "cppcheck-2.8/test/testlibrary.cpp" $, 823 $, A@var246 .@expr1073744467 arrayLike_indexOp@var256 $, false $) $) { $return ; }
824: $if $(@expr1073744468 $!@expr1073744469 $assertEquals $(@expr1073744470 "cppcheck-2.8/test/testlibrary.cpp" $, 824 $, A@var246 .@expr1073744471 opLessAllowed@var257 $, true $) $) { $return ; }
825: $if $(@expr1073744472 $!@expr1073744473 $assert_ $(@expr1073744474 "cppcheck-2.8/test/testlibrary.cpp" $, 825 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744477 SIZE@expr1073744398 $==@expr1073744478 A@var246 .@expr2655 getYield (@expr1073744480 "size" ) $) $) { $return ; }
826: $if $(@expr1073744481 $!@expr1073744482 $assert_ $(@expr1073744483 "cppcheck-2.8/test/testlibrary.cpp" $, 826 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744486 EMPTY@expr1073744399 $==@expr1073744487 A@var246 .@expr2655 getYield (@expr1073744489 "empty" ) $) $) { $return ; }
827: $if $(@expr1073744490 $!@expr1073744491 $assert_ $(@expr1073744492 "cppcheck-2.8/test/testlibrary.cpp" $, 827 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744495 AT_INDEX@expr1073744400 $==@expr1073744496 A@var246 .@expr2655 getYield (@expr1073744498 "at" ) $) $) { $return ; }
828: $if $(@expr1073744499 $!@expr1073744500 $assert_ $(@expr1073744501 "cppcheck-2.8/test/testlibrary.cpp" $, 828 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744504 START_ITERATOR@expr1073744401 $==@expr1073744505 A@var246 .@expr2655 getYield (@expr1073744507 "begin" ) $) $) { $return ; }
829: $if $(@expr1073744508 $!@expr1073744509 $assert_ $(@expr1073744510 "cppcheck-2.8/test/testlibrary.cpp" $, 829 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744513 END_ITERATOR@expr1073744402 $==@expr1073744514 A@var246 .@expr2655 getYield (@expr1073744516 "end" ) $) $) { $return ; }
830: $if $(@expr1073744517 $!@expr1073744518 $assert_ $(@expr1073744519 "cppcheck-2.8/test/testlibrary.cpp" $, 830 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744522 BUFFER@expr1073744403 $==@expr1073744523 A@var246 .@expr2655 getYield (@expr1073744525 "data" ) $) $) { $return ; }
831: $if $(@expr1073744526 $!@expr1073744527 $assert_ $(@expr1073744528 "cppcheck-2.8/test/testlibrary.cpp" $, 831 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744531 BUFFER_NT@expr1073744404 $==@expr1073744532 A@var246 .@expr2655 getYield (@expr1073744534 "c_str" ) $) $) { $return ; }
832: $if $(@expr1073744535 $!@expr1073744536 $assert_ $(@expr1073744537 "cppcheck-2.8/test/testlibrary.cpp" $, 832 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744540 ITEM@expr1073744405 $==@expr1073744541 A@var246 .@expr2655 getYield (@expr1073744543 "front" ) $) $) { $return ; }
833: $if $(@expr1073744544 $!@expr1073744545 $assert_ $(@expr1073744546 "cppcheck-2.8/test/testlibrary.cpp" $, 833 $, Library ::@expr2651 Container ::@expr2652 Yield ::@expr1073744549 NO_YIELD@expr1073744406 $==@expr1073744550 A@var246 .@expr2655 getYield (@expr1073744552 "foo" ) $) $) { $return ; }
834: $if $(@expr1073744553 $!@expr1073744554 $assert_ $(@expr1073744555 "cppcheck-2.8/test/testlibrary.cpp" $, 834 $, Library ::@expr2651 Container ::@expr2733 Action ::@expr1073744558 RESIZE@expr1073744407 $==@expr1073744559 A@var246 .@expr2736 getAction (@expr1073744561 "resize" ) $) $) { $return ; }
835: $if $(@expr1073744562 $!@expr1073744563 $assert_ $(@expr1073744564 "cppcheck-2.8/test/testlibrary.cpp" $, 835 $, Library ::@expr2651 Container ::@expr2733 Action ::@expr1073744567 CLEAR@expr1073744408 $==@expr1073744568 A@var246 .@expr2736 getAction (@expr1073744570 "clear" ) $) $) { $return ; }
836: $if $(@expr1073744571 $!@expr1073744572 $assert_ $(@expr1073744573 "cppcheck-2.8/test/testlibrary.cpp" $, 836 $, Library ::@expr2651 Container ::@expr2733 Action ::@expr1073744576 PUSH@expr1073744409 $==@expr1073744577 A@var246 .@expr2736 getAction (@expr1073744579 "push_back" ) $) $) { $return ; }
837: $if $(@expr1073744580 $!@expr1073744581 $assert_ $(@expr1073744582 "cppcheck-2.8/test/testlibrary.cpp" $, 837 $, Library ::@expr2651 Container ::@expr2733 Action ::@expr1073744585 POP@expr1073744410 $==@expr1073744586 A@var246 .@expr2736 getAction (@expr1073744588 "pop_back" ) $) $) { $return ; }
838: $if $(@expr1073744589 $!@expr1073744590 $assert_ $(@expr1073744591 "cppcheck-2.8/test/testlibrary.cpp" $, 838 $, Library ::@expr2651 Container ::@expr2733 Action ::@expr1073744594 FIND@expr1073744411 $==@expr1073744595 A@var246 .@expr2736 getAction (@expr1073744597 "find" ) $) $) { $return ; }
839: $if $(@expr1073744598 $!@expr1073744599 $assert_ $(@expr1073744600 "cppcheck-2.8/test/testlibrary.cpp" $, 839 $, Library ::@expr2651 Container ::@expr2733 Action ::@expr1073744603 NO_ACTION@expr1073744412 $==@expr1073744604 A@var246 .@expr2736 getAction (@expr1073744606 "foo" ) $) $) { $return ; }
840:
841: $if $(@expr1073744607 $!@expr1073744608 $assertEquals $(@expr1073744609 "cppcheck-2.8/test/testlibrary.cpp" $, 841 $, B@var248 .@expr1073744610 type_templateArgNo@var258 $, 1 $) $) { $return ; }
842: $if $(@expr1073744611 $!@expr1073744612 $assertEquals $(@expr1073744613 "cppcheck-2.8/test/testlibrary.cpp" $, 842 $, B@var248 .@expr1073744614 size_templateArgNo@var259 $, 3 $) $) { $return ; }
843: $if $(@expr1073744615 $!@expr1073744616 $assertEquals $(@expr1073744617 "cppcheck-2.8/test/testlibrary.cpp" $, 843 $, B@var248 .@expr1073744618 startPattern@var260 $, "std :: B <" $) $) { $return ; }
844: $if $(@expr1073744619 $!@expr1073744620 $assertEquals $(@expr1073744621 "cppcheck-2.8/test/testlibrary.cpp" $, 844 $, B@var248 .@expr1073744622 endPattern@var261 $, "> !!::" $) $) { $return ; }
845: $if $(@expr1073744623 $!@expr1073744624 $assertEquals $(@expr1073744625 "cppcheck-2.8/test/testlibrary.cpp" $, 845 $, B@var248 .@expr1073744626 itEndPattern@var262 $, "> :: iterator" $) $) { $return ; }
846: $if $(@expr1073744627 $!@expr1073744628 $assertEquals $(@expr1073744629 "cppcheck-2.8/test/testlibrary.cpp" $, 846 $, B@var248 .@expr1073744630 functions@var263 .@expr1073744631 size (@expr1073744632 ) $, A@var246 .@expr1073744633 functions@var264 .@expr1073744634 size (@expr1073744635 ) $) $) { $return ; }
847: $if $(@expr1073744636 $!@expr1073744637 $assertEquals $(@expr1073744638 "cppcheck-2.8/test/testlibrary.cpp" $, 847 $, B@var248 .@expr1073744639 opLessAllowed@var265 $, false $) $) { $return ; }
848:
849: $if $(@expr1073744640 $!@expr1073744641 $assert_ $(@expr1073744642 "cppcheck-2.8/test/testlibrary.cpp" $, 849 $, C@var249 .@expr1073744643 functions@var266 .@expr1073744644 empty (@expr1073744645 ) $) $) { $return ; }
850: $if $(@expr1073744646 $!@expr1073744647 $assertEquals $(@expr1073744648 "cppcheck-2.8/test/testlibrary.cpp" $, 850 $, C@var249 .@expr1073744649 type_templateArgNo@var267 $, -1 $) $) { $return ; }
851: $if $(@expr1073744650 $!@expr1073744651 $assertEquals $(@expr1073744652 "cppcheck-2.8/test/testlibrary.cpp" $, 851 $, C@var249 .@expr1073744653 size_templateArgNo@var268 $, -1 $) $) { $return ; }
852: $if $(@expr1073744654 $!@expr1073744655 $assertEquals $(@expr1073744656 "cppcheck-2.8/test/testlibrary.cpp" $, 852 $, C@var249 .@expr1073744657 stdStringLike@var269 $, true $) $) { $return ; }
853: $if $(@expr1073744658 $!@expr1073744659 $assertEquals $(@expr1073744660 "cppcheck-2.8/test/testlibrary.cpp" $, 853 $, C@var249 .@expr1073744661 arrayLike_indexOp@var270 $, true $) $) { $return ; }
854: }
855:
856: void version ( ) const {
857: {
858: const char xmldata@var271 [@expr1073744664 35 ] =@expr1073744665 "<?xml version=\"1.0\"?>\n<def>\n</def>"
859:
860: ;
861: Library library@var272 ;
862: const Library ::@expr2842 Error err@var273 =@expr1073744667 readLibrary (@expr1073744668 library@var272 , xmldata@var271 ) ;
863: $if $(@expr1073744669 $!@expr1073744670 $assertEquals $(@expr1073744671 "cppcheck-2.8/test/testlibrary.cpp" $, 863 $, true $, err@var273 .@expr1073744672 errorcode@var274 ==@expr1073744673 Library ::@expr2850 ErrorCode ::@expr2851 OK@expr2838 $) $) { $return ; }
864: }
865: {
866: const char xmldata@var275 [@expr1073744676 46 ] =@expr1073744677 "<?xml version=\"1.0\"?>\n<def format=\"1\">\n</def>"
867:
868: ;
869: Library library@var276 ;
870: const Library ::@expr2842 Error err@var277 =@expr1073744679 readLibrary (@expr1073744680 library@var276 , xmldata@var275 ) ;
871: $if $(@expr1073744681 $!@expr1073744682 $assertEquals $(@expr1073744683 "cppcheck-2.8/test/testlibrary.cpp" $, 871 $, true $, err@var277 .@expr1073744684 errorcode@var278 ==@expr1073744685 Library ::@expr2850 ErrorCode ::@expr2851 OK@expr2838 $) $) { $return ; }
872: }
873: {
874: const char xmldata@var279 [@expr1073744688 47 ] =@expr1073744689 "<?xml version=\"1.0\"?>\n<def format=\"42\">\n</def>"
875:
876: ;
877: Library library@var280 ;
878: const Library ::@expr2842 Error err@var281 =@expr1073744691 readLibrary (@expr1073744692 library@var280 , xmldata@var279 ) ;
879: $if $(@expr1073744693 $!@expr1073744694 $assertEquals $(@expr1073744695 "cppcheck-2.8/test/testlibrary.cpp" $, 879 $, true $, err@var281 .@expr1073744696 errorcode@var282 ==@expr1073744697 Library ::@expr2850 ErrorCode ::@expr1073744699 UNSUPPORTED_FORMAT@expr1073744663 $) $) { $return ; }
880: }
881: }
882:
883: void loadLibError ( const char xmldata@var283 [ ] , Library :: ErrorCode errorcode@var284 , const char * file@var285 , unsigned int line@var286 ) const {
884: Library library@var287 ;
885: assertEquals (@expr1073744700 file@var285 , line@var286 , true , errorcode@var284 ==@expr1073744701 readLibrary (@expr1073744702 library@var287 , xmldata@var283 ) .@expr1073744703 errorcode@var288 ) ;
886: }
887:
|
898:
899: void loadLibErrors ( ) const {
900:
901: $loadLibError $(@expr1073744707 "<?xml version=\"1.0\"?>\n<def>\n   <X name=\"uint8_t,std::uint8_t\" size=\"1\"/>\n</def>" $, Library ::@expr2884 ErrorCode ::@expr1073744709 UNKNOWN_ELEMENT@expr1073744704 $, "cppcheck-2.8/test/testlibrary.cpp" $, 901 $)
902:
903:
904:
905: ;
906:
907:
908: $loadLibError $(@expr1073744710 "<?xml version=\"1.0\"?>\n<def>\n  <define />\n</def>" $, Library ::@expr2884 ErrorCode ::@expr2888 MISSING_ATTRIBUTE@expr2881 $, "cppcheck-2.8/test/testlibrary.cpp" $, 908 $)
909:
910:
911:
912: ;
913:
914:
915: $loadLibError $(@expr1073744713 "<?xml version=\"1.0\"?>\n<def>\n  <define name=\"foo\" />\n</def>" $, Library ::@expr2884 ErrorCode ::@expr2888 MISSING_ATTRIBUTE@expr2881 $, "cppcheck-2.8/test/testlibrary.cpp" $, 915 $)
916:
917:
918:
919: ;
920:
921: $loadLibError $(@expr1073744716 "<?xml version=\"1.0\"?>\n<def>\n  <define value=\"1\" />\n</def>" $, Library ::@expr2884 ErrorCode ::@expr2888 MISSING_ATTRIBUTE@expr2881 $, "cppcheck-2.8/test/testlibrary.cpp" $, 921 $)
922:
923:
924:
925: ;
926:
927: $loadLibError $(@expr1073744719 "<?xml version=\"1.0\"?>\n<X>\n</X>" $, Library ::@expr2884 ErrorCode ::@expr1073744721 UNSUPPORTED_FORMAT@expr1073744706 $, "cppcheck-2.8/test/testlibrary.cpp" $, 927 $)
928:
929:
930: ;
931:
932:
933: $loadLibError $(@expr1073744722 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid></valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744723 $ErrorCode $::@expr1073744724 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 933 $) ;
934:
935:
936: $loadLibError $(@expr1073744725 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>a</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744726 $ErrorCode $::@expr1073744727 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 936 $) ;
937:
938:
939: $loadLibError $(@expr1073744728 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1a</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744729 $ErrorCode $::@expr1073744730 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 939 $) ;
940:
941:
942: $loadLibError $(@expr1073744731 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>0:2-1</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744732 $ErrorCode $::@expr1073744733 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 942 $) ;
943:
944:
945: $loadLibError $(@expr1073744734 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744735 $ErrorCode $::@expr1073744736 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 945 $) ;
946:
947:
948: $loadLibError $(@expr1073744737 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:2:3</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744738 $ErrorCode $::@expr1073744739 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 948 $) ;
949:
950:
951: $loadLibError $(@expr1073744740 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.0.0:10</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744741 $ErrorCode $::@expr1073744742 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 951 $) ;
952:
953:
954: $loadLibError $(@expr1073744743 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1..0:10</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744744 $ErrorCode $::@expr1073744745 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 954 $) ;
955:
956:
957: $loadLibError $(@expr1073744746 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.-0:10</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744747 $ErrorCode $::@expr1073744748 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 957 $) ;
958:
959:
960: $loadLibError $(@expr1073744749 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>.5:10</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744750 $ErrorCode $::@expr1073744751 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 960 $) ;
961:
962:
963: $loadLibError $(@expr1073744752 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-.5:10</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744753 $ErrorCode $::@expr1073744754 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 963 $) ;
964:
965:
966: $loadLibError $(@expr1073744755 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>0:.5</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744756 $ErrorCode $::@expr1073744757 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 966 $) ;
967:
968:
969: $loadLibError $(@expr1073744758 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-10:-.5</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744759 $ErrorCode $::@expr1073744760 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 969 $) ;
970:
971:
972: $loadLibError $(@expr1073744761 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:5.</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744762 $ErrorCode $::@expr1073744763 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 972 $) ;
973:
974:
975: $loadLibError $(@expr1073744764 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.:5</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744765 $ErrorCode $::@expr1073744766 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 975 $) ;
976:
977:
978: $loadLibError $(@expr1073744767 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:5.,6:10</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744768 $ErrorCode $::@expr1073744769 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 978 $) ;
979:
980:
981: $loadLibError $(@expr1073744770 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-10:0,.5:</valid>\n</arg>\n</function>\n</def>" $, $Library $::@expr1073744771 $ErrorCode $::@expr1073744772 $BAD_ATTRIBUTE_VALUE $, "cppcheck-2.8/test/testlibrary.cpp" $, 981 $) ;
982: }
983: } ;
984:
985: $namespace ${ TestLibrary instance_TestLibrary@var289 $; $}



##Value flow
Line 37
  countTests always !<=-1
Line 38
  fails_counter always !<=-1
Line 39
  todos_counter always !<=-1
Line 40
  succeeded_todos_counter always !<=-1
Line 42
  mVerbose always {!<=-1,!>=2}
Line 50
  quiet_tests always {!<=-1,!>=2}
Line 52
  = always 0
  0 always 0
Line 54
  ( always {!<=-1,!>=2}
Line 55
  , always !<=-1
  linenr always !<=-1
Line 57
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
  , always {!<=-1,!>=2}
  condition always {!<=-1,!>=2}
Line 60
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 61
  != always {!<=-1,!>=2}
Line 63
  expected always !symbolic=(actual)
Line 65
  actual always !symbolic=(expected)
Line 67
  linenr always !<=-1
Line 69
  return always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
Line 74
  , always !<=-1
  linenr always !<=-1
Line 76
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 77
  , always !<=-1
  linenr always !<=-1
Line 78
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 79
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 80
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 81
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 82
  , always !<=-1
  linenr always !<=-1
Line 84
  , always !<=-1
  linenr always !<=-1
Line 86
  , always !<=-1
  linenr always !<=-1
Line 88
  , always !<=-1
  linenr always !<=-1
Line 90
  , always !<=-1
  linenr always !<=-1
Line 91
  , always !<=-1
  linenr always !<=-1
Line 92
  , always !<=-1
  linenr always !<=-1
Line 96
  v always {!<=-1,!>=2}
Line 97
  mVerbose always {!<=-1,!>=2}
  = {!<=-1,!>=2,0@48}
  v {!<=-1,!>=2,0@48}
Line 101
  = always "{file}:{line}:{severity}:{message}"
  "{file}:{line}:{severity}:{message}" always "{file}:{line}:{severity}:{message}"
Line 102
  = always "{file}:{line}:note:{info}"
  "{file}:{line}:note:{info}" always "{file}:{line}:note:{info}"
Line 116
  ( always !<=-1
Line 40
  "TestLibrary" always "TestLibrary"
Line 46
  ( always {!<=-1,!>=2}
  "isCompliantValidationExpression" always "isCompliantValidationExpression"
  false always 0
  false always 0
Line 47
  ( always {!<=-1,!>=2}
  "empty" always "empty"
  false always 0
  false always 0
Line 48
  ( always {!<=-1,!>=2}
  "function" always "function"
  false always 0
  false always 0
Line 49
  ( always {!<=-1,!>=2}
  "function_match_scope" always "function_match_scope"
  false always 0
  false always 0
Line 50
  ( always {!<=-1,!>=2}
  "function_match_args" always "function_match_args"
  false always 0
  false always 0
Line 51
  ( always {!<=-1,!>=2}
  "function_match_args_default" always "function_match_args_default"
  false always 0
  false always 0
Line 52
  ( always {!<=-1,!>=2}
  "function_match_var" always "function_match_var"
  false always 0
  false always 0
Line 53
  ( always {!<=-1,!>=2}
  "function_arg" always "function_arg"
  false always 0
  false always 0
Line 54
  ( always {!<=-1,!>=2}
  "function_arg_any" always "function_arg_any"
  false always 0
  false always 0
Line 55
  ( always {!<=-1,!>=2}
  "function_arg_variadic" always "function_arg_variadic"
  false always 0
  false always 0
Line 56
  ( always {!<=-1,!>=2}
  "function_arg_direction" always "function_arg_direction"
  false always 0
  false always 0
Line 57
  ( always {!<=-1,!>=2}
  "function_arg_valid" always "function_arg_valid"
  false always 0
  false always 0
Line 58
  ( always {!<=-1,!>=2}
  "function_arg_minsize" always "function_arg_minsize"
  false always 0
  false always 0
Line 59
  ( always {!<=-1,!>=2}
  "function_namespace" always "function_namespace"
  false always 0
  false always 0
Line 60
  ( always {!<=-1,!>=2}
  "function_method" always "function_method"
  false always 0
  false always 0
Line 61
  ( always {!<=-1,!>=2}
  "function_baseClassMethod" always "function_baseClassMethod"
  false always 0
  false always 0
Line 62
  ( always {!<=-1,!>=2}
  "function_warn" always "function_warn"
  false always 0
  false always 0
Line 63
  ( always {!<=-1,!>=2}
  "memory" always "memory"
  false always 0
  false always 0
Line 64
  ( always {!<=-1,!>=2}
  "memory2" always "memory2"
  false always 0
  false always 0
Line 65
  ( always {!<=-1,!>=2}
  "memory3" always "memory3"
  false always 0
  false always 0
Line 66
  ( always {!<=-1,!>=2}
  "resource" always "resource"
  false always 0
  false always 0
Line 67
  ( always {!<=-1,!>=2}
  "podtype" always "podtype"
  false always 0
  false always 0
Line 68
  ( always {!<=-1,!>=2}
  "container" always "container"
  false always 0
  false always 0
Line 69
  ( always {!<=-1,!>=2}
  "version" always "version"
  false always 0
  false always 0
Line 70
  ( always {!<=-1,!>=2}
  "loadLibErrors" always "loadLibErrors"
  false always 0
  false always 0
Line 75
  xmldata possible {"<?xml version=\"1.0\"?>\n<def>\n   <X name=\"uint8_t,std::uint8_t\" size=\"1\"/>\n</def>"@279,"<?xml version=\"1.0\"?>\n<def>\n  <define />\n</def>"@535,"<?xml version=\"1.0\"?>\n<def>\n  <define name=\"foo\" />\n</def>"@791,"<?xml version=\"1.0\"?>\n<def>\n  <define value=\"1\" />\n</def>"@1047,"<?xml version=\"1.0\"?>\n<def>\n</def>"@24,"<?xml version=\"1.0\"?>\n<def format=\"1\">\n</def>"@25,"<?xml version=\"1.0\"?>\n<def format=\"42\">\n</def>"@26,"<?xml version=\"1.0\"?>\n<def>\n  <container id=\"A\" startPattern=\"std :: A &lt;\" endPattern=\"&gt; !!::\" itEndPattern=\"&gt; :: iterator\">\n    <type templateParameter=\"1\"/>\n    <size templateParameter=\"4\">\n      <function name=\"resize\" action=\"resize\"/>\n      <function name=\"clear\" action=\"clear\"/>\n      <function name=\"size\" yields=\"size\"/>\n      <function name=\"empty\" yields=\"empty\"/>\n      <function name=\"push_back\" action=\"push\"/>\n      <function name=\"pop_back\" action=\"pop\"/>\n    </size>\n    <access>\n      <function name=\"at\" yields=\"at_index\"/>\n      <function name=\"begin\" yields=\"start-iterator\"/>\n      <function name=\"end\" yields=\"end-iterator\"/>\n      <function name=\"data\" yields=\"buffer\"/>\n      <function name=\"c_str\" yields=\"buffer-nt\"/>\n      <function name=\"front\" yields=\"item\"/>\n      <function name=\"find\" action=\"find\"/>\n    </access>\n  </container>\n  <container id=\"B\" startPattern=\"std :: B &lt;\" inherits=\"A\" opLessAllowed=\"false\">\n    <size templateParameter=\"3\"/>\n  </container>\n  <container id=\"C\">\n    <type string=\"std-like\"/>\n    <access indexOperator=\"array-like\"/>\n  </container>\n</def>"@27,"<?xml version=\"1.0\"?>\n<def>\n  <podtype name=\"s8\" sign=\"s\" size=\"1\"/>\n  <podtype name=\"u8\" sign=\"u\" size=\"1\"/>\n  <podtype name=\"u16\" sign=\"u\" size=\"2\"/>\n  <podtype name=\"s16\" sign=\"s\" size=\"2\"/>\n</def>"@28,"<?xml version=\"1.0\"?>\n<def>\n  <resource>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </resource>\n</def>"@29}
Line 80
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  80 always 80
  true always 1
  "-1" always "-1"
Line 81
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  81 always 81
  true always 1
  "1" always "1"
Line 82
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  82 always 82
  true always 1
  "1:" always "1:"
Line 83
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  83 always 83
  true always 1
  ":1" always ":1"
Line 84
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  84 always 84
  true always 1
  "-1,42" always "-1,42"
Line 85
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  85 always 85
  true always 1
  "-1,-42" always "-1,-42"
Line 86
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  86 always 86
  true always 1
  "-1.0:42.0" always "-1.0:42.0"
Line 87
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  87 always 87
  true always 1
  "1.175494e-38:3.402823e+38" always "1.175494e-38:3.402823e+38"
Line 88
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  88 always 88
  true always 1
  "1.175494e-38,3.402823e+38" always "1.175494e-38,3.402823e+38"
Line 89
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  89 always 89
  true always 1
  "1.175494e-38:" always "1.175494e-38:"
Line 90
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  90 always 90
  true always 1
  ":1.175494e-38" always ":1.175494e-38"
Line 91
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  91 always 91
  true always 1
  ":42.0" always ":42.0"
Line 92
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  92 always 92
  true always 1
  "!42.0" always "!42.0"
Line 95
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  95 always 95
  false always 0
  nullptr always 0
Line 96
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  96 always 96
  false always 0
  "x" always "x"
Line 97
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  97 always 97
  false always 0
  "!" always "!"
Line 98
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  98 always 98
  false always 0
  "" always ""
Line 103
  29 always 29
  = always "<?xml version=\"1.0\"?>\n<def/>"
  "<?xml version=\"1.0\"?>\n<def/>" always "<?xml version=\"1.0\"?>\n<def/>"
Line 105
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  105 always 105
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def/>"
Line 106
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  106 always 106
Line 110
  104 always 104
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <noreturn>false</noreturn>\n  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
Line 117
  nullptr always 0
Line 118
  "foo();" always "foo();"
Line 123
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  123 always 123
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
Line 124
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  124 always 124
  1U always 1
Line 125
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  125 always 125
  "foo" always "foo"
Line 126
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  126 always 126
Line 130
  90 always 90
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
Line 138
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  138 always 138
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
Line 140
  nullptr always 0
Line 141
  "fred.foo(123);" always "fred.foo(123);"
Line 144
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  144 always 144
  2 always 2
Line 147
  nullptr always 0
Line 148
  "Fred::foo(123);" always "Fred::foo(123);"
Line 151
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  151 always 151
  2 always 2
Line 156
  90 always 90
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
Line 163
  nullptr always 0
Line 164
  "foo();" always "foo();"
Line 170
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  170 always 170
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
Line 171
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  171 always 171
Line 175
  119 always 119
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>    <arg nr=\"2\" default=\"0\"/>  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>    <arg nr=\"2\" default=\"0\"/>  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>    <arg nr=\"2\" default=\"0\"/>  </function>\n</def>"
Line 184
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  184 always 184
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>    <arg nr=\"2\" default=\"0\"/>  </function>\n</def>"
Line 187
  nullptr always 0
Line 188
  "foo();" always "foo();"
Line 193
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  193 always 193
Line 196
  nullptr always 0
Line 197
  "foo(a);" always "foo(a);"
Line 202
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  202 always 202
  ! always {!<=-1,!>=2}
Line 205
  nullptr always 0
Line 206
  "foo(a, b);" always "foo(a, b);"
Line 211
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  211 always 211
  ! always {!<=-1,!>=2}
Line 214
  nullptr always 0
Line 215
  "foo(a, b, c);" always "foo(a, b, c);"
Line 220
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  220 always 220
Line 225
  90 always 90
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
Line 232
  nullptr always 0
Line 233
  "Fred foo(123);" always "Fred foo(123);"
Line 236
  1 always 1
Line 239
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  239 always 239
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"/>  </function>\n</def>"
Line 240
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  240 always 240
Line 244
  254 always 254
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><not-uninit/></arg>\n    <arg nr=\"2\"><not-null/></arg>\n    <arg nr=\"3\"><formatstr/></arg>\n    <arg nr=\"4\"><strz/></arg>\n    <arg nr=\"5\" default=\"0\"><not-bool/></arg>\n  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><not-uninit/></arg>\n    <arg nr=\"2\"><not-null/></arg>\n    <arg nr=\"3\"><formatstr/></arg>\n    <arg nr=\"4\"><strz/></arg>\n    <arg nr=\"5\" default=\"0\"><not-bool/></arg>\n  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><not-uninit/></arg>\n    <arg nr=\"2\"><not-null/></arg>\n    <arg nr=\"3\"><formatstr/></arg>\n    <arg nr=\"4\"><strz/></arg>\n    <arg nr=\"5\" default=\"0\"><not-bool/></arg>\n  </function>\n</def>"
Line 256
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  256 always 256
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><not-uninit/></arg>\n    <arg nr=\"2\"><not-null/></arg>\n    <arg nr=\"3\"><formatstr/></arg>\n    <arg nr=\"4\"><strz/></arg>\n    <arg nr=\"5\" default=\"0\"><not-bool/></arg>\n  </function>\n</def>"
Line 257
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  257 always 257
  0 always 0
  "foo" always "foo"
  1 always 1
Line 258
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  258 always 258
  true always 1
  "foo" always "foo"
  2 always 2
Line 259
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  259 always 259
  true always 1
  "foo" always "foo"
  3 always 3
Line 260
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  260 always 260
  true always 1
  "foo" always "foo"
  4 always 4
Line 261
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  261 always 261
  false always 0
  "foo" always "foo"
  4 always 4
Line 262
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  262 always 262
  true always 1
  "foo" always "foo"
  5 always 5
Line 263
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  263 always 263
  true always 1
  "foo" always "foo"
  5 always 5
Line 267
  106 always 106
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"any\"><not-uninit/></arg>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"any\"><not-uninit/></arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"any\"><not-uninit/></arg>\n</function>\n</def>"
Line 275
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  275 always 275
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"any\"><not-uninit/></arg>\n</function>\n</def>"
Line 276
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  276 always 276
  0 always 0
  "foo" always "foo"
  -1 always -1
Line 280
  133 always 133
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\"></arg>\n   <arg nr=\"variadic\"><not-uninit/></arg>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\"></arg>\n   <arg nr=\"variadic\"><not-uninit/></arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\"></arg>\n   <arg nr=\"variadic\"><not-uninit/></arg>\n</function>\n</def>"
Line 289
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  289 always 289
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\"></arg>\n   <arg nr=\"variadic\"><not-uninit/></arg>\n</function>\n</def>"
Line 290
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  290 always 290
  0 always 0
  "foo" always "foo"
  -1 always -1
Line 292
  nullptr always 0
Line 293
  "foo(a,b,c,d,e);" always "foo(a,b,c,d,e);"
Line 297
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  297 always 297
  false always 0
  1 always 1
Line 298
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  298 always 298
  true always 1
  2 always 2
Line 299
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  299 always 299
  true always 1
  3 always 3
Line 300
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  300 always 300
  true always 1
  4 always 4
Line 304
  206 always 206
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\" direction=\"in\"></arg>\n   <arg nr=\"2\" direction=\"out\"></arg>\n   <arg nr=\"3\" direction=\"inout\"></arg>\n   <arg nr=\"4\"></arg>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\" direction=\"in\"></arg>\n   <arg nr=\"2\" direction=\"out\"></arg>\n   <arg nr=\"3\" direction=\"inout\"></arg>\n   <arg nr=\"4\"></arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\" direction=\"in\"></arg>\n   <arg nr=\"2\" direction=\"out\"></arg>\n   <arg nr=\"3\" direction=\"inout\"></arg>\n   <arg nr=\"4\"></arg>\n</function>\n</def>"
Line 315
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  315 always 315
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"foo\">\n   <arg nr=\"1\" direction=\"in\"></arg>\n   <arg nr=\"2\" direction=\"out\"></arg>\n   <arg nr=\"3\" direction=\"inout\"></arg>\n   <arg nr=\"4\"></arg>\n</function>\n</def>"
Line 317
  nullptr always 0
Line 318
  "foo(a,b,c,d);" always "foo(a,b,c,d);"
Line 322
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  322 always 322
  == always {!<=-1,!>=2}
  1 always 1
Line 323
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  323 always 323
  == always {!<=-1,!>=2}
  2 always 2
Line 324
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  324 always 324
  == always {!<=-1,!>=2}
  3 always 3
Line 325
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  325 always 325
  == always {!<=-1,!>=2}
  4 always 4
Line 329
  550 always 550
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><valid>1:</valid></arg>\n    <arg nr=\"2\"><valid>-7:0</valid></arg>\n    <arg nr=\"3\"><valid>1:5,8</valid></arg>\n    <arg nr=\"4\"><valid>-1,5</valid></arg>\n    <arg nr=\"5\"><valid>:1,5</valid></arg>\n    <arg nr=\"6\"><valid>1.5:</valid></arg>\n    <arg nr=\"7\"><valid>-6.7:-5.5,-3.3:-2.7</valid></arg>\n    <arg nr=\"8\"><valid>0.0:</valid></arg>\n    <arg nr=\"9\"><valid>:2.0</valid></arg>\n    <arg nr=\"10\"><valid>0.0</valid></arg>\n    <arg nr=\"11\"><valid>!0.0</valid></arg>\n  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><valid>1:</valid></arg>\n    <arg nr=\"2\"><valid>-7:0</valid></arg>\n    <arg nr=\"3\"><valid>1:5,8</valid></arg>\n    <arg nr=\"4\"><valid>-1,5</valid></arg>\n    <arg nr=\"5\"><valid>:1,5</valid></arg>\n    <arg nr=\"6\"><valid>1.5:</valid></arg>\n    <arg nr=\"7\"><valid>-6.7:-5.5,-3.3:-2.7</valid></arg>\n    <arg nr=\"8\"><valid>0.0:</valid></arg>\n    <arg nr=\"9\"><valid>:2.0</valid></arg>\n    <arg nr=\"10\"><valid>0.0</valid></arg>\n    <arg nr=\"11\"><valid>!0.0</valid></arg>\n  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><valid>1:</valid></arg>\n    <arg nr=\"2\"><valid>-7:0</valid></arg>\n    <arg nr=\"3\"><valid>1:5,8</valid></arg>\n    <arg nr=\"4\"><valid>-1,5</valid></arg>\n    <arg nr=\"5\"><valid>:1,5</valid></arg>\n    <arg nr=\"6\"><valid>1.5:</valid></arg>\n    <arg nr=\"7\"><valid>-6.7:-5.5,-3.3:-2.7</valid></arg>\n    <arg nr=\"8\"><valid>0.0:</valid></arg>\n    <arg nr=\"9\"><valid>:2.0</valid></arg>\n    <arg nr=\"10\"><valid>0.0</valid></arg>\n    <arg nr=\"11\"><valid>!0.0</valid></arg>\n  </function>\n</def>"
Line 347
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  347 always 347
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><valid>1:</valid></arg>\n    <arg nr=\"2\"><valid>-7:0</valid></arg>\n    <arg nr=\"3\"><valid>1:5,8</valid></arg>\n    <arg nr=\"4\"><valid>-1,5</valid></arg>\n    <arg nr=\"5\"><valid>:1,5</valid></arg>\n    <arg nr=\"6\"><valid>1.5:</valid></arg>\n    <arg nr=\"7\"><valid>-6.7:-5.5,-3.3:-2.7</valid></arg>\n    <arg nr=\"8\"><valid>0.0:</valid></arg>\n    <arg nr=\"9\"><valid>:2.0</valid></arg>\n    <arg nr=\"10\"><valid>0.0</valid></arg>\n    <arg nr=\"11\"><valid>!0.0</valid></arg>\n  </function>\n</def>"
Line 349
  nullptr always 0
Line 350
  "foo(a,b,c,d,e,f,g,h,i,j,k);" always "foo(a,b,c,d,e,f,g,h,i,j,k);"
Line 355
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  355 always 355
  false always 0
  1 always 1
  -10 always -10
Line 356
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  356 always 356
  false always 0
  1 always 1
  -10.0 always -10
Line 357
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  357 always 357
  false always 0
  1 always 1
  0 always 0
Line 358
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  358 always 358
  false always 0
  1 always 1
  0.0 always 0
Line 359
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  359 always 359
  true always 1
  1 always 1
  1 always 1
Line 360
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  360 always 360
  true always 1
  1 always 1
  1.0 always 1
Line 361
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  361 always 361
  true always 1
  1 always 1
  10 always 10
Line 362
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  362 always 362
  true always 1
  1 always 1
  10.0 always 10
Line 365
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  365 always 365
  false always 0
  2 always 2
  -10 always -10
Line 366
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  366 always 366
  false always 0
  2 always 2
  -10.0 always -10
Line 367
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  367 always 367
  false always 0
  2 always 2
  -7.5 always -7.5
Line 368
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  368 always 368
  false always 0
  2 always 2
  -7.1 always -7.1
Line 369
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  369 always 369
  true always 1
  2 always 2
  -7 always -7
Line 370
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  370 always 370
  true always 1
  2 always 2
  -7.0 always -7
Line 371
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  371 always 371
  true always 1
  2 always 2
  -3 always -3
Line 372
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  372 always 372
  true always 1
  2 always 2
  -3.0 always -3
Line 373
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  373 always 373
  true always 1
  2 always 2
  -3.5 always -3.5
Line 374
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  374 always 374
  true always 1
  2 always 2
  0 always 0
Line 375
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  375 always 375
  true always 1
  2 always 2
  0.0 always 0
Line 376
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  376 always 376
  false always 0
  2 always 2
  0.5 always 0.5
Line 377
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  377 always 377
  false always 0
  2 always 2
  1 always 1
Line 378
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  378 always 378
  false always 0
  2 always 2
  1.0 always 1
Line 381
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  381 always 381
  false always 0
  3 always 3
  0 always 0
Line 382
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  382 always 382
  false always 0
  3 always 3
  0.0 always 0
Line 383
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  383 always 383
  true always 1
  3 always 3
  1 always 1
Line 384
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  384 always 384
  true always 1
  3 always 3
  1.0 always 1
Line 385
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  385 always 385
  true always 1
  3 always 3
  3 always 3
Line 386
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  386 always 386
  true always 1
  3 always 3
  3.0 always 3
Line 387
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  387 always 387
  true always 1
  3 always 3
  5 always 5
Line 388
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  388 always 388
  true always 1
  3 always 3
  5.0 always 5
Line 389
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  389 always 389
  false always 0
  3 always 3
  6 always 6
Line 390
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  390 always 390
  false always 0
  3 always 3
  6.0 always 6
Line 391
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  391 always 391
  false always 0
  3 always 3
  7 always 7
Line 392
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  392 always 392
  false always 0
  3 always 3
  7.0 always 7
Line 393
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  393 always 393
  true always 1
  3 always 3
  8 always 8
Line 394
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  394 always 394
  false always 0
  3 always 3
  8.0 always 8
Line 395
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  395 always 395
  false always 0
  3 always 3
  9 always 9
Line 396
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  396 always 396
  false always 0
  3 always 3
  9.0 always 9
Line 399
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  399 always 399
  false always 0
  4 always 4
  -10 always -10
Line 400
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  400 always 400
  false always 0
  4 always 4
  -10.0 always -10
Line 401
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  401 always 401
  true always 1
  4 always 4
  -1 always -1
Line 402
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  402 always 402
  false always 0
  4 always 4
  -1.0 always -1
Line 403
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  403 always 403
  false always 0
  4 always 4
  5.000001 always 5
Line 404
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  404 always 404
  false always 0
  4 always 4
  5.5 always 5.5
Line 407
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  407 always 407
  true always 1
  5 always 5
  -10 always -10
Line 408
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  408 always 408
  true always 1
  5 always 5
  -10.0 always -10
Line 409
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  409 always 409
  true always 1
  5 always 5
  1 always 1
Line 410
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  410 always 410
  true always 1
  5 always 5
  1.0 always 1
Line 411
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  411 always 411
  false always 0
  5 always 5
  2 always 2
Line 412
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  412 always 412
  false always 0
  5 always 5
  2.0 always 2
Line 415
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  415 always 415
  false always 0
  6 always 6
  0 always 0
Line 416
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  416 always 416
  false always 0
  6 always 6
  0.0 always 0
Line 417
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  417 always 417
  false always 0
  6 always 6
  1 always 1
Line 418
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  418 always 418
  false always 0
  6 always 6
  1.499999 always 1.5
Line 419
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  419 always 419
  true always 1
  6 always 6
  1.5 always 1.5
Line 420
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  420 always 420
  true always 1
  6 always 6
  2 always 2
Line 421
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  421 always 421
  true always 1
  6 always 6
  10 always 10
Line 424
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  424 always 424
  false always 0
  7 always 7
  -7 always -7
Line 425
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  425 always 425
  false always 0
  7 always 7
  -7.0 always -7
Line 426
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  426 always 426
  false always 0
  7 always 7
  -6.7000001 always -6.7
Line 427
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  427 always 427
  true always 1
  7 always 7
  -6.7 always -6.7
Line 428
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  428 always 428
  true always 1
  7 always 7
  -6 always -6
Line 429
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  429 always 429
  true always 1
  7 always 7
  -6.0 always -6
Line 430
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  430 always 430
  true always 1
  7 always 7
  -5.5 always -5.5
Line 431
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  431 always 431
  false always 0
  7 always 7
  -5.4999999 always -5.5
Line 432
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  432 always 432
  false always 0
  7 always 7
  -3.3000001 always -3.3
Line 433
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  433 always 433
  true always 1
  7 always 7
  -3.3 always -3.3
Line 434
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  434 always 434
  true always 1
  7 always 7
  -3 always -3
Line 435
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  435 always 435
  true always 1
  7 always 7
  -3.0 always -3
Line 436
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  436 always 436
  true always 1
  7 always 7
  -2.7 always -2.7
Line 437
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  437 always 437
  false always 0
  7 always 7
  -2.6999999 always -2.7
Line 438
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  438 always 438
  false always 0
  7 always 7
  -2 always -2
Line 439
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  439 always 439
  false always 0
  7 always 7
  -2.0 always -2
Line 440
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  440 always 440
  false always 0
  7 always 7
  0 always 0
Line 441
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  441 always 441
  false always 0
  7 always 7
  0.0 always 0
Line 442
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  442 always 442
  false always 0
  7 always 7
  3 always 3
Line 443
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  443 always 443
  false always 0
  7 always 7
  3.0 always 3
Line 444
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  444 always 444
  false always 0
  7 always 7
  6 always 6
Line 445
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  445 always 445
  false always 0
  7 always 7
  6.0 always 6
Line 448
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  448 always 448
  false always 0
  8 always 8
  -1 always -1
Line 449
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  449 always 449
  false always 0
  8 always 8
  -1.0 always -1
Line 450
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  450 always 450
  false always 0
  8 always 8
  -0.00000001 always -1e-08
Line 451
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  451 always 451
  true always 1
  8 always 8
  0 always 0
Line 452
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  452 always 452
  true always 1
  8 always 8
  0.0 always 0
Line 453
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  453 always 453
  true always 1
  8 always 8
  0.000000001 always 1e-09
Line 454
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  454 always 454
  true always 1
  8 always 8
  1 always 1
Line 455
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  455 always 455
  true always 1
  8 always 8
  1.0 always 1
Line 458
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  458 always 458
  true always 1
  9 always 9
  -1 always -1
Line 459
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  459 always 459
  true always 1
  9 always 9
  -1.0 always -1
Line 460
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  460 always 460
  true always 1
  9 always 9
  2 always 2
Line 461
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  461 always 461
  true always 1
  9 always 9
  2.0 always 2
Line 462
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  462 always 462
  false always 0
  9 always 9
  2.00000001 always 2
Line 463
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  463 always 463
  false always 0
  9 always 9
  200 always 200
Line 464
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  464 always 464
  false always 0
  9 always 9
  200.0 always 200
Line 467
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  467 always 467
  true always 1
  10 always 10
  0 always 0
Line 468
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  468 always 468
  true always 1
  10 always 10
  0.0 always 0
Line 471
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  471 always 471
  true always 1
  11 always 11
  -0.42 always -0.42
Line 472
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  472 always 472
  false always 0
  11 always 11
  0.0 always 0
Line 473
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  473 always 473
  true always 1
  11 always 11
  0.42 always 0.42
Line 477
  261 always 261
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><minsize type=\"strlen\" arg=\"2\"/></arg>\n    <arg nr=\"2\"><minsize type=\"argvalue\" arg=\"3\"/></arg>\n    <arg nr=\"3\"/>\n    <arg nr=\"4\"><minsize type=\"value\" value=\"500\"/></arg>\n  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><minsize type=\"strlen\" arg=\"2\"/></arg>\n    <arg nr=\"2\"><minsize type=\"argvalue\" arg=\"3\"/></arg>\n    <arg nr=\"3\"/>\n    <arg nr=\"4\"><minsize type=\"value\" value=\"500\"/></arg>\n  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><minsize type=\"strlen\" arg=\"2\"/></arg>\n    <arg nr=\"2\"><minsize type=\"argvalue\" arg=\"3\"/></arg>\n    <arg nr=\"3\"/>\n    <arg nr=\"4\"><minsize type=\"value\" value=\"500\"/></arg>\n  </function>\n</def>"
Line 488
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  488 always 488
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"foo\">\n    <arg nr=\"1\"><minsize type=\"strlen\" arg=\"2\"/></arg>\n    <arg nr=\"2\"><minsize type=\"argvalue\" arg=\"3\"/></arg>\n    <arg nr=\"3\"/>\n    <arg nr=\"4\"><minsize type=\"value\" value=\"500\"/></arg>\n  </function>\n</def>"
Line 490
  nullptr always 0
Line 491
  "foo(a,b,c,d);" always "foo(a,b,c,d);"
Line 496
  1 always 1
Line 497
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  497 always 497
  true always 1
  minsizes possible {0,size=1}
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 498
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  498 always 498
  1U always 1
  minsizes possible {0,size=1}
  ? {1,!<=-1}
  ( always !<=-1
  : always 1
  1U always 1
Line 499
  minsizes possible size=1
  && always {!<=-1,!>=2}
  minsizes always !0
  ( always !<=-1
  == always {!<=-1,!>=2}
  1U always 1
Line 500
  minsizes {!0,size=1}
Line 501
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  501 always 501
  true always 1
  == always {!<=-1,!>=2}
  m always {symbolic=(minsizes->front()),symbolic=(m)}
Line 502
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  502 always 502
  2 always 2
Line 506
  2 always 2
Line 507
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  507 always 507
  true always 1
  minsizes possible {0,size=1}
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 508
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  508 always 508
  1U always 1
  minsizes possible {0,size=1}
  ? {1,!<=-1}
  ( always !<=-1
  : always 1
  1U always 1
Line 509
  minsizes possible size=1
  && always {!<=-1,!>=2}
  minsizes always !0
  ( always !<=-1
  == always {!<=-1,!>=2}
  1U always 1
Line 510
  minsizes {!0,size=1}
Line 511
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  511 always 511
  true always 1
  == always {!<=-1,!>=2}
  m always {symbolic=(minsizes->front()),symbolic=(m)}
Line 512
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  512 always 512
  3 always 3
Line 516
  4 always 4
Line 517
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  517 always 517
  true always 1
  minsizes possible {0,size=1}
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 518
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  518 always 518
  1U always 1
  minsizes possible {0,size=1}
  ? {1,!<=-1}
  ( always !<=-1
  : always 1
  1U always 1
Line 519
  minsizes possible size=1
  && always {!<=-1,!>=2}
  minsizes always !0
  ( always !<=-1
  == always {!<=-1,!>=2}
  1U always 1
Line 520
  minsizes {!0,size=1}
Line 521
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  521 always 521
  == always {!<=-1,!>=2}
  m always {symbolic=(minsizes->front()),symbolic=(m)}
Line 522
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  522 always 522
  500 always 500
Line 527
  113 always 113
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Foo::foo,bar\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Foo::foo,bar\">\n    <noreturn>false</noreturn>\n  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Foo::foo,bar\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
Line 535
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  535 always 535
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Foo::foo,bar\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
Line 536
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  536 always 536
  2U always 2
Line 537
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  537 always 537
  "Foo::foo" always "Foo::foo"
Line 538
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  538 always 538
  "bar" always "bar"
Line 541
  nullptr always 0
Line 542
  "Foo::foo();" always "Foo::foo();"
Line 544
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  544 always 544
  2 always 2
Line 548
  nullptr always 0
Line 549
  "bar();" always "bar();"
Line 551
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  551 always 551
Line 556
  116 always 116
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"CString::Format\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"CString::Format\">\n    <noreturn>false</noreturn>\n  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"CString::Format\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
Line 564
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  564 always 564
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"CString::Format\">\n    <noreturn>false</noreturn>\n  </function>\n</def>"
Line 565
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  565 always 565
  1U always 1
Line 568
  & {lifetime[Address]=(settings),!0}
  nullptr always 0
Line 569
  "CString str; str.Format();" always "CString str; str.Format();"
Line 570
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  570 always 570
  "test.cpp" always "test.cpp"
Line 571
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  571 always 571
  "Format" always "Format"
Line 575
  & {lifetime[Address]=(settings),!0}
  nullptr always 0
Line 576
  "HardDrive hd; hd.Format();" always "HardDrive hd; hd.Format();"
Line 577
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  577 always 577
  "test.cpp" always "test.cpp"
Line 578
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  578 always 578
  ! always {!<=-1,!>=2}
  "Format" always "Format"
Line 583
  111 always 111
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Base::f\">\n    <arg nr=\"1\"><not-null/></arg>\n  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Base::f\">\n    <arg nr=\"1\"><not-null/></arg>\n  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Base::f\">\n    <arg nr=\"1\"><not-null/></arg>\n  </function>\n</def>"
Line 591
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  591 always 591
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"Base::f\">\n    <arg nr=\"1\"><not-null/></arg>\n  </function>\n</def>"
Line 594
  & {lifetime[Address]=(settings),!0}
  nullptr always 0
Line 595
  "struct X : public Base { void dostuff() { f(0); } };" always "struct X : public Base { void dostuff() { f(0); } };"
Line 596
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  596 always 596
  "test.cpp" always "test.cpp"
Line 597
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  597 always 597
  "f" always "f"
  1 always 1
Line 601
  & {lifetime[Address]=(settings),!0}
  nullptr always 0
Line 602
  "struct X : public Base { void dostuff() { f(1,2); } };" always "struct X : public Base { void dostuff() { f(1,2); } };"
Line 603
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  603 always 603
  "test.cpp" always "test.cpp"
Line 604
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  604 always 604
  ! always {!<=-1,!>=2}
  "f" always "f"
  1 always 1
Line 609
  252 always 252
  = always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"a\">\n    <warn severity=\"style\" cstd=\"c99\">Message</warn>\n  </function>\n  <function name=\"b\">\n    <warn severity=\"performance\" cppstd=\"c++11\" reason=\"Obsolescent\" alternatives=\"c,d,e\"/>\n  </function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"a\">\n    <warn severity=\"style\" cstd=\"c99\">Message</warn>\n  </function>\n  <function name=\"b\">\n    <warn severity=\"performance\" cppstd=\"c++11\" reason=\"Obsolescent\" alternatives=\"c,d,e\"/>\n  </function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"a\">\n    <warn severity=\"style\" cstd=\"c99\">Message</warn>\n  </function>\n  <function name=\"b\">\n    <warn severity=\"performance\" cppstd=\"c++11\" reason=\"Obsolescent\" alternatives=\"c,d,e\"/>\n  </function>\n</def>"
Line 620
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  620 always 620
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <function name=\"a\">\n    <warn severity=\"style\" cstd=\"c99\">Message</warn>\n  </function>\n  <function name=\"b\">\n    <warn severity=\"performance\" cppstd=\"c++11\" reason=\"Obsolescent\" alternatives=\"c,d,e\"/>\n  </function>\n</def>"
Line 622
  nullptr always 0
Line 623
  "a(); b();" always "a(); b();"
Line 627
  4 always 4
Line 629
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  629 always 629
  2 always 2
Line 630
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  630 always 630
  a possible 0
  && always {!<=-1,!>=2}
Line 631
  && always {!<=-1,!>=2}
Line 632
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  632 always 632
  "Message" always "Message"
  a always !0
Line 633
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  633 always 633
  a always !0
Line 634
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  634 always 634
Line 635
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  635 always 635
Line 637
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  637 always 637
  "Obsolescent function 'b' called. It is recommended to use 'c', 'd' or 'e' instead." always "Obsolescent function 'b' called. It is recommended to use 'c', 'd' or 'e' instead."
Line 638
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  638 always 638
Line 639
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  639 always 639
Line 640
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  640 always 640
Line 645
  116 always 116
  = always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </memory>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </memory>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </memory>\n</def>"
Line 654
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  654 always 654
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </memory>\n</def>"
Line 655
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  655 always 655
Line 657
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  657 always 657
  "CreateX" always "CreateX"
Line 658
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  658 always 658
  "CreateX" always "CreateX"
  "DeleteX" always "DeleteX"
Line 659
  "CreateX" always "CreateX"
Line 660
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  660 always 660
  && always {!<=-1,!>=2}
  af always !0
  == always {!<=-1,!>=2}
  -1 always -1
Line 661
  "DeleteX" always "DeleteX"
Line 662
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  662 always 662
  && always {!<=-1,!>=2}
  df always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 665
  112 always 112
  = always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>malloc</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>malloc</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>malloc</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
Line 672
  109 always 109
  = always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>foo</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>foo</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>foo</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
Line 681
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  681 always 681
  true always 1
  xmldata1 always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>malloc</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
  sizeof always 112
  ( always 112
  xmldata1 always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>malloc</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
Line 682
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  682 always 682
  true always 1
  xmldata2 always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>foo</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
  sizeof always 109
  ( always 109
  xmldata2 always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc>foo</alloc>\n    <dealloc>free</dealloc>\n  </memory>\n</def>"
Line 684
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  684 always 684
  "free" always "free"
  "malloc" always "malloc"
Line 685
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  685 always 685
  "free" always "free"
  "foo" always "foo"
Line 688
  145 always 145
  = always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc arg=\"5\" init=\"false\">CreateX</alloc>\n    <dealloc arg=\"2\">DeleteX</dealloc>\n  </memory>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc arg=\"5\" init=\"false\">CreateX</alloc>\n    <dealloc arg=\"2\">DeleteX</dealloc>\n  </memory>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc arg=\"5\" init=\"false\">CreateX</alloc>\n    <dealloc arg=\"2\">DeleteX</dealloc>\n  </memory>\n</def>"
Line 697
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  697 always 697
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <memory>\n    <alloc arg=\"5\" init=\"false\">CreateX</alloc>\n    <dealloc arg=\"2\">DeleteX</dealloc>\n  </memory>\n</def>"
Line 698
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  698 always 698
Line 700
  "CreateX" always "CreateX"
Line 701
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  701 always 701
  && always {!<=-1,!>=2}
  af always !0
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  af always !0
Line 702
  "DeleteX" always "DeleteX"
Line 703
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  703 always 703
  && always {!<=-1,!>=2}
  df always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 707
  120 always 120
  = always "<?xml version=\"1.0\"?>\n<def>\n  <resource>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </resource>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <resource>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </resource>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <resource>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </resource>\n</def>"
Line 716
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  716 always 716
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <resource>\n    <alloc>CreateX</alloc>\n    <dealloc>DeleteX</dealloc>\n  </resource>\n</def>"
Line 717
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  717 always 717
Line 719
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  719 always 719
  "CreateX" always "CreateX"
Line 720
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  720 always 720
  "CreateX" always "CreateX"
  "DeleteX" always "DeleteX"
Line 725
  201 always 201
  = always "<?xml version=\"1.0\"?>\n<def>\n  <podtype name=\"s8\" sign=\"s\" size=\"1\"/>\n  <podtype name=\"u8\" sign=\"u\" size=\"1\"/>\n  <podtype name=\"u16\" sign=\"u\" size=\"2\"/>\n  <podtype name=\"s16\" sign=\"s\" size=\"2\"/>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <podtype name=\"s8\" sign=\"s\" size=\"1\"/>\n  <podtype name=\"u8\" sign=\"u\" size=\"1\"/>\n  <podtype name=\"u16\" sign=\"u\" size=\"2\"/>\n  <podtype name=\"s16\" sign=\"s\" size=\"2\"/>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <podtype name=\"s8\" sign=\"s\" size=\"1\"/>\n  <podtype name=\"u8\" sign=\"u\" size=\"1\"/>\n  <podtype name=\"u16\" sign=\"u\" size=\"2\"/>\n  <podtype name=\"s16\" sign=\"s\" size=\"2\"/>\n</def>"
Line 733
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  733 always 733
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <podtype name=\"s8\" sign=\"s\" size=\"1\"/>\n  <podtype name=\"u8\" sign=\"u\" size=\"1\"/>\n  <podtype name=\"u16\" sign=\"u\" size=\"2\"/>\n  <podtype name=\"s16\" sign=\"s\" size=\"2\"/>\n</def>"
Line 736
  "s8" always "s8"
Line 737
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  737 always 737
  true always 1
  type possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 739
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  739 always 739
  1U always 1
  type always !0
Line 740
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  740 always 740
  's' always 115
  type always !0
Line 745
  "u8" always "u8"
Line 746
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  746 always 746
  true always 1
  type possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 748
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  748 always 748
  1U always 1
  type always !0
Line 749
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  749 always 749
  'u' always 117
  type always !0
Line 754
  "u16" always "u16"
Line 755
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  755 always 755
  true always 1
  type possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 757
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  757 always 757
  2U always 2
  type always !0
Line 758
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  758 always 758
  'u' always 117
  type always !0
Line 763
  "s16" always "s16"
Line 764
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  764 always 764
  true always 1
  type possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 766
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  766 always 766
  2U always 2
  type always !0
Line 767
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  767 always 767
  's' always 115
  type always !0
Line 772
  "nonExistingPodType" always "nonExistingPodType"
Line 773
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  773 always 773
  true always 1
  == always {!<=-1,!>=2}
  nullptr always 0
Line 779
  1119 always 1119
  = always "<?xml version=\"1.0\"?>\n<def>\n  <container id=\"A\" startPattern=\"std :: A &lt;\" endPattern=\"&gt; !!::\" itEndPattern=\"&gt; :: iterator\">\n    <type templateParameter=\"1\"/>\n    <size templateParameter=\"4\">\n      <function name=\"resize\" action=\"resize\"/>\n      <function name=\"clear\" action=\"clear\"/>\n      <function name=\"size\" yields=\"size\"/>\n      <function name=\"empty\" yields=\"empty\"/>\n      <function name=\"push_back\" action=\"push\"/>\n      <function name=\"pop_back\" action=\"pop\"/>\n    </size>\n    <access>\n      <function name=\"at\" yields=\"at_index\"/>\n      <function name=\"begin\" yields=\"start-iterator\"/>\n      <function name=\"end\" yields=\"end-iterator\"/>\n      <function name=\"data\" yields=\"buffer\"/>\n      <function name=\"c_str\" yields=\"buffer-nt\"/>\n      <function name=\"front\" yields=\"item\"/>\n      <function name=\"find\" action=\"find\"/>\n    </access>\n  </container>\n  <container id=\"B\" startPattern=\"std :: B &lt;\" inherits=\"A\" opLessAllowed=\"false\">\n    <size templateParameter=\"3\"/>\n  </container>\n  <container id=\"C\">\n    <type string=\"std-like\"/>\n    <access indexOperator=\"array-like\"/>\n  </container>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n  <container id=\"A\" startPattern=\"std :: A &lt;\" endPattern=\"&gt; !!::\" itEndPattern=\"&gt; :: iterator\">\n    <type templateParameter=\"1\"/>\n    <size templateParameter=\"4\">\n      <function name=\"resize\" action=\"resize\"/>\n      <function name=\"clear\" action=\"clear\"/>\n      <function name=\"size\" yields=\"size\"/>\n      <function name=\"empty\" yields=\"empty\"/>\n      <function name=\"push_back\" action=\"push\"/>\n      <function name=\"pop_back\" action=\"pop\"/>\n    </size>\n    <access>\n      <function name=\"at\" yields=\"at_index\"/>\n      <function name=\"begin\" yields=\"start-iterator\"/>\n      <function name=\"end\" yields=\"end-iterator\"/>\n      <function name=\"data\" yields=\"buffer\"/>\n      <function name=\"c_str\" yields=\"buffer-nt\"/>\n      <function name=\"front\" yields=\"item\"/>\n      <function name=\"find\" action=\"find\"/>\n    </access>\n  </container>\n  <container id=\"B\" startPattern=\"std :: B &lt;\" inherits=\"A\" opLessAllowed=\"false\">\n    <size templateParameter=\"3\"/>\n  </container>\n  <container id=\"C\">\n    <type string=\"std-like\"/>\n    <access indexOperator=\"array-like\"/>\n  </container>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <container id=\"A\" startPattern=\"std :: A &lt;\" endPattern=\"&gt; !!::\" itEndPattern=\"&gt; :: iterator\">\n    <type templateParameter=\"1\"/>\n    <size templateParameter=\"4\">\n      <function name=\"resize\" action=\"resize\"/>\n      <function name=\"clear\" action=\"clear\"/>\n      <function name=\"size\" yields=\"size\"/>\n      <function name=\"empty\" yields=\"empty\"/>\n      <function name=\"push_back\" action=\"push\"/>\n      <function name=\"pop_back\" action=\"pop\"/>\n    </size>\n    <access>\n      <function name=\"at\" yields=\"at_index\"/>\n      <function name=\"begin\" yields=\"start-iterator\"/>\n      <function name=\"end\" yields=\"end-iterator\"/>\n      <function name=\"data\" yields=\"buffer\"/>\n      <function name=\"c_str\" yields=\"buffer-nt\"/>\n      <function name=\"front\" yields=\"item\"/>\n      <function name=\"find\" action=\"find\"/>\n    </access>\n  </container>\n  <container id=\"B\" startPattern=\"std :: B &lt;\" inherits=\"A\" opLessAllowed=\"false\">\n    <size templateParameter=\"3\"/>\n  </container>\n  <container id=\"C\">\n    <type string=\"std-like\"/>\n    <access indexOperator=\"array-like\"/>\n  </container>\n</def>"
Line 811
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  811 always 811
  true always 1
  == always {!<=-1,!>=2}
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n  <container id=\"A\" startPattern=\"std :: A &lt;\" endPattern=\"&gt; !!::\" itEndPattern=\"&gt; :: iterator\">\n    <type templateParameter=\"1\"/>\n    <size templateParameter=\"4\">\n      <function name=\"resize\" action=\"resize\"/>\n      <function name=\"clear\" action=\"clear\"/>\n      <function name=\"size\" yields=\"size\"/>\n      <function name=\"empty\" yields=\"empty\"/>\n      <function name=\"push_back\" action=\"push\"/>\n      <function name=\"pop_back\" action=\"pop\"/>\n    </size>\n    <access>\n      <function name=\"at\" yields=\"at_index\"/>\n      <function name=\"begin\" yields=\"start-iterator\"/>\n      <function name=\"end\" yields=\"end-iterator\"/>\n      <function name=\"data\" yields=\"buffer\"/>\n      <function name=\"c_str\" yields=\"buffer-nt\"/>\n      <function name=\"front\" yields=\"item\"/>\n      <function name=\"find\" action=\"find\"/>\n    </access>\n  </container>\n  <container id=\"B\" startPattern=\"std :: B &lt;\" inherits=\"A\" opLessAllowed=\"false\">\n    <size templateParameter=\"3\"/>\n  </container>\n  <container id=\"C\">\n    <type string=\"std-like\"/>\n    <access indexOperator=\"array-like\"/>\n  </container>\n</def>"
Line 813
  "A" always "A"
Line 814
  "B" always "B"
Line 815
  "C" always "C"
Line 817
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  817 always 817
  1 always 1
Line 818
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  818 always 818
  4 always 4
Line 819
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  819 always 819
  "std :: A <" always "std :: A <"
Line 820
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  820 always 820
  "> !!::" always "> !!::"
Line 821
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  821 always 821
  "> :: iterator" always "> :: iterator"
Line 822
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  822 always 822
  false always 0
Line 823
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  823 always 823
  false always 0
Line 824
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  824 always 824
  true always 1
Line 825
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  825 always 825
  == always {!<=-1,!>=2}
  "size" always "size"
Line 826
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  826 always 826
  == always {!<=-1,!>=2}
  "empty" always "empty"
Line 827
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  827 always 827
  == always {!<=-1,!>=2}
  "at" always "at"
Line 828
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  828 always 828
  == always {!<=-1,!>=2}
  "begin" always "begin"
Line 829
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  829 always 829
  == always {!<=-1,!>=2}
  "end" always "end"
Line 830
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  830 always 830
  == always {!<=-1,!>=2}
  "data" always "data"
Line 831
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  831 always 831
  == always {!<=-1,!>=2}
  "c_str" always "c_str"
Line 832
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  832 always 832
  == always {!<=-1,!>=2}
  "front" always "front"
Line 833
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  833 always 833
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 834
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  834 always 834
  == always {!<=-1,!>=2}
  "resize" always "resize"
Line 835
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  835 always 835
  == always {!<=-1,!>=2}
  "clear" always "clear"
Line 836
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  836 always 836
  == always {!<=-1,!>=2}
  "push_back" always "push_back"
Line 837
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  837 always 837
  == always {!<=-1,!>=2}
  "pop_back" always "pop_back"
Line 838
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  838 always 838
  == always {!<=-1,!>=2}
  "find" always "find"
Line 839
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  839 always 839
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 841
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  841 always 841
  1 always 1
Line 842
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  842 always 842
  3 always 3
Line 843
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  843 always 843
  "std :: B <" always "std :: B <"
Line 844
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  844 always 844
  "> !!::" always "> !!::"
Line 845
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  845 always 845
  "> :: iterator" always "> :: iterator"
Line 846
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  846 always 846
Line 847
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  847 always 847
  false always 0
Line 849
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  849 always 849
Line 850
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  850 always 850
  -1 always -1
Line 851
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  851 always 851
  -1 always -1
Line 852
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  852 always 852
  true always 1
Line 853
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  853 always 853
  true always 1
Line 858
  35 always 35
  = always "<?xml version=\"1.0\"?>\n<def>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n</def>"
Line 862
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n</def>"
Line 863
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  863 always 863
  true always 1
  == always {!<=-1,!>=2}
Line 866
  46 always 46
  = always "<?xml version=\"1.0\"?>\n<def format=\"1\">\n</def>"
  "<?xml version=\"1.0\"?>\n<def format=\"1\">\n</def>" always "<?xml version=\"1.0\"?>\n<def format=\"1\">\n</def>"
Line 870
  xmldata always "<?xml version=\"1.0\"?>\n<def format=\"1\">\n</def>"
Line 871
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  871 always 871
  true always 1
  == always {!<=-1,!>=2}
Line 874
  47 always 47
  = always "<?xml version=\"1.0\"?>\n<def format=\"42\">\n</def>"
  "<?xml version=\"1.0\"?>\n<def format=\"42\">\n</def>" always "<?xml version=\"1.0\"?>\n<def format=\"42\">\n</def>"
Line 878
  xmldata always "<?xml version=\"1.0\"?>\n<def format=\"42\">\n</def>"
Line 879
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  879 always 879
  true always 1
  == always {!<=-1,!>=2}
Line 883
  , always !<=-1
  line always !<=-1
Line 885
  ( always {!<=-1,!>=2}
  file possible {"cppcheck-2.8/test/testlibrary.cpp"@1,"cppcheck-2.8/test/testlibrary.cpp"@2,"cppcheck-2.8/test/testlibrary.cpp"@3,"cppcheck-2.8/test/testlibrary.cpp"@4,"cppcheck-2.8/test/testlibrary.cpp"@5,"cppcheck-2.8/test/testlibrary.cpp"@6,"cppcheck-2.8/test/testlibrary.cpp"@7,"cppcheck-2.8/test/testlibrary.cpp"@8,"cppcheck-2.8/test/testlibrary.cpp"@9,"cppcheck-2.8/test/testlibrary.cpp"@10}
  line {!<=-1,901@1,908@2,915@3,921@4,927@5,933@6,936@7,939@8,942@9}
  true always 1
  == always {!<=-1,!>=2}
  xmldata possible {"<?xml version=\"1.0\"?>\n<def>\n   <X name=\"uint8_t,std::uint8_t\" size=\"1\"/>\n</def>"@1,"<?xml version=\"1.0\"?>\n<def>\n  <define />\n</def>"@2,"<?xml version=\"1.0\"?>\n<def>\n  <define name=\"foo\" />\n</def>"@3,"<?xml version=\"1.0\"?>\n<def>\n  <define value=\"1\" />\n</def>"@4,"<?xml version=\"1.0\"?>\n<X>\n</X>"@5,"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid></valid>\n</arg>\n</function>\n</def>"@6,"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>a</valid>\n</arg>\n</function>\n</def>"@7,"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1a</valid>\n</arg>\n</function>\n</def>"@8,"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>0:2-1</valid>\n</arg>\n</function>\n</def>"@9,"<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-</valid>\n</arg>\n</function>\n</def>"@10}
Line 901
  "<?xml version=\"1.0\"?>\n<def>\n   <X name=\"uint8_t,std::uint8_t\" size=\"1\"/>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n   <X name=\"uint8_t,std::uint8_t\" size=\"1\"/>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  901 always 901
Line 908
  "<?xml version=\"1.0\"?>\n<def>\n  <define />\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <define />\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  908 always 908
Line 915
  "<?xml version=\"1.0\"?>\n<def>\n  <define name=\"foo\" />\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <define name=\"foo\" />\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  915 always 915
Line 921
  "<?xml version=\"1.0\"?>\n<def>\n  <define value=\"1\" />\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n  <define value=\"1\" />\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  921 always 921
Line 927
  "<?xml version=\"1.0\"?>\n<X>\n</X>" always "<?xml version=\"1.0\"?>\n<X>\n</X>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  927 always 927
Line 933
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid></valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid></valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  933 always 933
Line 936
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>a</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>a</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  936 always 936
Line 939
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1a</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1a</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  939 always 939
Line 942
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>0:2-1</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>0:2-1</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  942 always 942
Line 945
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  945 always 945
Line 948
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:2:3</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:2:3</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  948 always 948
Line 951
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.0.0:10</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.0.0:10</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  951 always 951
Line 954
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1..0:10</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1..0:10</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  954 always 954
Line 957
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.-0:10</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.-0:10</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  957 always 957
Line 960
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>.5:10</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>.5:10</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  960 always 960
Line 963
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-.5:10</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-.5:10</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  963 always 963
Line 966
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>0:.5</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>0:.5</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  966 always 966
Line 969
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-10:-.5</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-10:-.5</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  969 always 969
Line 972
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:5.</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:5.</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  972 always 972
Line 975
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.:5</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1.:5</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  975 always 975
Line 978
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:5.,6:10</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>1:5.,6:10</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  978 always 978
Line 981
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-10:0,.5:</valid>\n</arg>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"f\">\n<arg nr=\"1\">\n<valid>-10:0,.5:</valid>\n</arg>\n</function>\n</def>"
  "cppcheck-2.8/test/testlibrary.cpp" always "cppcheck-2.8/test/testlibrary.cpp"
  981 always 981
