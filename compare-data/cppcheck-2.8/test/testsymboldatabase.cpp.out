

##file cppcheck-2.8/test/testsuite.h

1:
|
31:
32: class options ;
33:
34: class TestFixture : public ErrorLogger {
35: private:
36: static std :: ostringstream errmsg@var1 ;
37: static unsigned int countTests@var2 ;
38: static unsigned long fails_counter@var3 ;
39: static unsigned long todos_counter@var4 ;
40: static unsigned long succeeded_todos_counter@var5 ;
41: static std :: set < std :: string > missingLibs@var6 ;
42: bool mVerbose@var7 ;
43: std :: string mTemplateFormat@var8 ;
44: std :: string mTemplateLocation@var9 ;
45: std :: string mTestname@var10 ;
46:
47: protected:
48: std :: string exename@var11 ;
49: std :: string testToRun@var12 ;
50: bool quiet_tests@var13 ;
51:
52: virtual void run ( ) = 0 ;
53:
54: bool prepareTest ( const char testname@var14 [ ] ) ;
55: std :: string getLocationStr ( const char * const filename@var15 , const unsigned int linenr@var16 ) const ;
56:
57: bool assert_ ( const char * const filename@var17 , const unsigned int linenr@var18 , const bool condition@var19 ) const ;
58:
59: template < typename T , typename U >
60: bool assertEquals ( const char * const filename@var20 , const unsigned int linenr@var21 , const T & expected@var22 , const U & actual@var23 , const std :: string & msg@var24 = emptyString ) const {
61: if (@expr1073743975 expected@var22 !=@expr1073743976 actual@var23 ) {
62: std ::@expr1073743977 ostringstream expectedStr@var25 ;
63: expectedStr@var25 <<@expr1073743978 expected@var22 ;
64: std ::@expr1073743979 ostringstream actualStr@var26 ;
65: actualStr@var26 <<@expr1073743980 actual@var23 ;
66:
67: assertEqualsFailed (@expr1073743981 filename@var20 , linenr@var21 , expectedStr@var25 .@expr1073743982 str (@expr1073743983 ) , actualStr@var26 .@expr1073743984 str (@expr1073743985 ) , msg@var24 ) ;
68: }
69: return expected@var22 ==@expr1073743986 actual@var23 ;
70: }
71:
72:
73:
74: void assertEqualsFailed ( const char * const filename@var27 , const unsigned int linenr@var28 , const std :: string & expected@var29 , const std :: string & actual@var30 , const std :: string & msg@var31 ) const ;
75:
76: bool assertEquals ( const char * const filename@var32 , const unsigned int linenr@var33 , const std :: string & expected@var34 , const std :: string & actual@var35 , const std :: string & msg@var36 = emptyString ) const ;
77: void assertEqualsWithoutLineNumbers ( const char * const filename@var37 , const unsigned int linenr@var38 , const std :: string & expected@var39 , const std :: string & actual@var40 , const std :: string & msg@var41 = emptyString ) const ;
78: bool assertEquals ( const char * const filename@var42 , const unsigned int linenr@var43 , const char expected@var44 [ ] , const std :: string & actual@var45 , const std :: string & msg@var46 = emptyString ) const ;
79: bool assertEquals ( const char * const filename@var47 , const unsigned int linenr@var48 , const char expected@var49 [ ] , const char actual@var50 [ ] , const std :: string & msg@var51 = emptyString ) const ;
80: bool assertEquals ( const char * const filename@var52 , const unsigned int linenr@var53 , const std :: string & expected@var54 , const char actual@var55 [ ] , const std :: string & msg@var56 = emptyString ) const ;
81: bool assertEquals ( const char * const filename@var57 , const unsigned int linenr@var58 , const long long expected@var59 , const long long actual@var60 , const std :: string & msg@var61 = emptyString ) const ;
82: void assertEqualsDouble ( const char * const filename@var62 , const unsigned int linenr@var63 , const double expected@var64 , const double actual@var65 , const double tolerance@var66 , const std :: string & msg@var67 = emptyString ) const ;
83:
84: void todoAssertEquals ( const char * const filename@var68 , const unsigned int linenr@var69 , const std :: string & wanted@var70 ,
85: const std :: string & current@var71 , const std :: string & actual@var72 ) const ;
86: void todoAssertEquals ( const char * const filename@var73 , const unsigned int linenr@var74 , const char wanted@var75 [ ] ,
87: const char current@var76 [ ] , const std :: string & actual@var77 ) const ;
88: void todoAssertEquals ( const char * const filename@var78 , const unsigned int linenr@var79 , const long long wanted@var80 ,
89: const long long current@var81 , const long long actual@var82 ) const ;
90: void assertThrow ( const char * const filename@var83 , const unsigned int linenr@var84 ) const ;
91: void assertThrowFail ( const char * const filename@var85 , const unsigned int linenr@var86 ) const ;
92: void assertNoThrowFail ( const char * const filename@var87 , const unsigned int linenr@var88 ) const ;
93: static void complainMissingLib ( const char * const libname@var89 ) ;
94: static std :: string deleteLineNumber ( const std :: string & message@var90 ) ;
95:
96: void setVerbose ( bool v@var91 ) {
97: mVerbose@var7 =@expr1073743987 v@var91 ;
98: }
99:
100: void setMultiline ( ) {
101: mTemplateFormat@var8 =@expr1073743988 "{file}:{line}:{severity}:{message}" ;
102: mTemplateLocation@var9 =@expr1073743989 "{file}:{line}:note:{info}" ;
103: }
104:
105: void processOptions ( const options & args@var92 ) ;
106: public:
107: void reportOut ( const std :: string & outmsg@var93 , Color c@var94 = Color :: Reset ) override ;
108: void reportErr ( const ErrorMessage & msg@var95 ) override ;
109: void run ( const std :: string & str@var96 ) ;
110: static void printHelp ( ) ;
111: const std :: string classname@var97 ;
112:
113: explicit TestFixture ( const char * const _name@var98 ) ;
114: ~ TestFixture ( ) override { }
115:
116: static unsigned long runTests ( const options & args@var99 ) ;
117: } ;
118:
119: extern std :: ostringstream errout@var100 ;
120: extern std :: ostringstream output@var101 ;

##file cppcheck-2.8/test/testutils.h

1:
|
34:
35: class Token ;
36:
37: class givenACodeSampleToTokenize {
38: private:
39: Tokenizer tokenizer@var102 ;
40: static const Settings settings@var103 ;
41:
42: public:
43: explicit givenACodeSampleToTokenize ( const char sample@var104 [ ] , bool createOnly@var105 = false , bool cpp@var106 = true )
44: : tokenizer@var102 ( & settings@var103 , nullptr ) {
45: std ::@expr1073743990 istringstream iss@var107 (@expr1073743991 sample@var104 ) ;
46: if (@expr1073743992 createOnly@var105 ) {
47: tokenizer@var102 .@expr1073743993 list@var108 .@expr1073743994 createTokens (@expr1073743995 iss@var107 , cpp@var106 ?@expr2172 "test.cpp" :@expr2173 "test.c" ) ; }
48: else {
49: tokenizer@var102 .@expr1073743998 tokenize (@expr1073743999 iss@var107 , cpp@var106 ?@expr2172 "test.cpp" :@expr2173 "test.c" ) ; }
50: }
51:
52: const Token * tokens ( ) const {
53: return tokenizer@var102 .@expr1073744002 tokens (@expr1073744003 ) ;
54: }
55: } ;
56:
57:
58: class SimpleSuppressor : public ErrorLogger {
59: public:
60: SimpleSuppressor ( Settings & settings@var109 , ErrorLogger * next@var110 )
61: : settings@var114 ( settings@var109 ) , next@var115 ( next@var110 ) { }
62: void reportOut ( const std :: string & outmsg@var111 , Color = Color :: Reset ) override {
63: next@var115 .@expr1073744004 reportOut (@expr1073744005 outmsg@var111 ) ;
64: }
65: void reportErr ( const ErrorMessage & msg@var112 ) override {
66: if (@expr1073744006 !@expr1073744007 msg@var112 .@expr1073744008 callStack@var113 .@expr1073744009 empty (@expr1073744010 ) &&@expr1073744011 !@expr1073744012 settings@var114 .@expr1073744013 nomsg@var116 .@expr1073744014 isSuppressed (@expr1073744015 msg@var112 .@expr1073744016 toSuppressionsErrorMessage (@expr1073744017 ) ) ) {
67: next@var115 .@expr1073744018 reportErr (@expr1073744019 msg@var112 ) ; }
68: }
69: private:
70: Settings & settings@var114 ;
71: ErrorLogger * next@var115 ;
72: } ;
73:
74: class ScopedFile {
75: public:
76: ScopedFile ( const std :: string & name@var117 , const std :: string & content@var118 ) : mName@var120 ( name@var117 ) {
77: std ::@expr1073744020 ofstream of@var119 (@expr1073744021 mName@var120 ) ;
78: of@var119 <<@expr1073744022 content@var118 ;
79: }
80:
81: ~ ScopedFile ( ) {
82: remove (@expr1073744023 mName@var120 .@expr1073744024 c_str (@expr1073744025 ) ) ;
83: }
84: private:
85: std :: string mName@var120 ;
86: } ;

##file cppcheck-2.8/test/testsymboldatabase.cpp

1:
|
44:
45: struct InternalError ;
46: class TestSymbolDatabase ;
47:
|
65:
66: class TestSymbolDatabase : public TestFixture {
67: public:
68: TestSymbolDatabase ( )
69: : TestFixture ( "TestSymbolDatabase" )
70: , vartok@var121 ( nullptr )
71: , typetok@var122 ( nullptr ) { }
72:
73: private:
74: const Token * vartok@var121 ;
75: const Token * typetok@var122 ;
76: Settings settings1@var123 ;
77: Settings settings2@var124 ;
78:
79: void reset ( ) {
80: vartok@var121 =@expr1073744026 nullptr ;
81: typetok@var122 =@expr1073744027 nullptr ;
82: }
83:
84: static const SymbolDatabase * getSymbolDB_inner ( Tokenizer & tokenizer@var125 , const char * code@var126 , const char * filename@var127 ) {
85: errout@var100 .@expr1073744028 str (@expr1073744029 "" ) ;
86: std ::@expr1073744030 istringstream istr@var128 (@expr1073744031 code@var126 ) ;
87: return tokenizer@var125 .@expr1073744032 tokenize (@expr1073744033 istr@var128 , filename@var127 ) ?@expr1073744034 tokenizer@var125 .@expr1073744035 getSymbolDatabase (@expr1073744036 ) :@expr1073744037 nullptr ;
88: }
89:
90: static const Scope * findFunctionScopeByToken ( const SymbolDatabase * db@var129 , const Token * tok@var130 ) {
91: std ::@expr1073744039 list < Scope > ::@expr1073744040 const_iterator scope@var131 ;
92:
93: for (@expr1073744041 scope@var131 =@expr1073744042 db@var129 .@expr2219 scopeList@var132 .@expr1073744044 begin (@expr1073744045 ) ; scope@var131 !=@expr1073744046 db@var129 .@expr2219 scopeList@var132 .@expr1073744048 end (@expr1073744049 ) ; ++@expr1073744050 scope@var131 ) {
94: if (@expr1073744051 scope@var131 .@expr1073744052 type@var133 ==@expr1073744053 Scope ::@expr1073744054 eFunction@expr1073744038 ) {
95: if (@expr1073744055 scope@var131 .@expr1073744056 classDef@var134 ==@expr1073744057 tok@var130 ) {
96: return &@expr1073744058 (@expr1073744059 *@expr1073744060 scope@var131 ) ; }
97: }
98: }
99: return nullptr ;
100: }
101:
102: static const Function * findFunctionByName ( const char str@var135 [ ] , const Scope * startScope@var136 ) {
103: const Scope * currScope@var137 ; currScope@var137 =@expr1073744061 startScope@var136 ;
104: while (@expr1073744062 currScope@var137 &&@expr1073744063 currScope@var137 .@expr1073744064 isExecutable (@expr1073744065 ) ) {
105: if (@expr1073744066 currScope@var137 .@expr2243 functionOf@var138 ) {
106: currScope@var137 =@expr1073744068 currScope@var137 .@expr2243 functionOf@var138 ; }
107: else {
108: currScope@var137 =@expr1073744070 currScope@var137 .@expr2247 nestedIn@var139 ; }
109: }
110: while (@expr1073744072 currScope@var137 ) {
111: for (@expr1073744073 const Function &@expr1073744074 i@var140 :@expr1073744075 currScope@var137 .@expr1073744076 functionList@var141 ) {
112: if (@expr1073744077 i@var140 .@expr1073744078 tokenDef@var142 .@expr1073744079 str (@expr1073744080 ) ==@expr1073744081 str@var135 ) {
113: return &@expr1073744082 i@var140 ; }
114: }
115: currScope@var137 =@expr1073744083 currScope@var137 .@expr2247 nestedIn@var139 ;
116: }
117: return nullptr ;
118: }
119:
120: void run ( ) override {
121: $do ${ $if $(@expr1073744086 settings1@var123 .@expr1073744087 library@var143 $.@expr1073744088 $load $(@expr1073744089 $exename@var11 $.@expr1073744090 $c_str $(@expr1073744091 $) $, "std.cfg" $) $.@expr1073744092 $errorcode $!=@expr1073744093 $Library $::@expr1073744094 $ErrorCode $::@expr1073744095 $OK $) ${ $complainMissingLib $(@expr1073744096 "std.cfg" $) $; $return $; $} $} $while $(@expr1073744097 $false $) ;
122: settings2@var124 .@expr1073744098 platform (@expr1073744099 Settings ::@expr1073744100 Unspecified@expr1073744085 ) ;
123:
124:
125: settings1@var123 .@expr1073744101 checkUnusedTemplates@var144 =@expr1073744102 true ;
126: settings2@var124 .@expr1073744103 checkUnusedTemplates@var145 =@expr1073744104 true ;
127:
128: $do ${ $if $(@expr1073744105 $prepareTest $(@expr1073744106 "array" $) $) ${ $setVerbose $(@expr1073744107 $false $) $; array $(@expr1073744108 $) $; $} $} $while $(@expr1073744109 $false $) ;
129: $do ${ $if $(@expr1073744110 $prepareTest $(@expr1073744111 "stlarray1" $) $) ${ $setVerbose $(@expr1073744112 $false $) $; stlarray1 $(@expr1073744113 $) $; $} $} $while $(@expr1073744114 $false $) ;
130: $do ${ $if $(@expr1073744115 $prepareTest $(@expr1073744116 "stlarray2" $) $) ${ $setVerbose $(@expr1073744117 $false $) $; stlarray2 $(@expr1073744118 $) $; $} $} $while $(@expr1073744119 $false $) ;
131:
132: $do ${ $if $(@expr1073744120 $prepareTest $(@expr1073744121 "test_isVariableDeclarationCanHandleNull" $) $) ${ $setVerbose $(@expr1073744122 $false $) $; test_isVariableDeclarationCanHandleNull $(@expr1073744123 $) $; $} $} $while $(@expr1073744124 $false $) ;
133: $do ${ $if $(@expr1073744125 $prepareTest $(@expr1073744126 "test_isVariableDeclarationIdentifiesSimpleDeclaration" $) $) ${ $setVerbose $(@expr1073744127 $false $) $; test_isVariableDeclarationIdentifiesSimpleDeclaration $(@expr1073744128 $) $; $} $} $while $(@expr1073744129 $false $) ;
134: $do ${ $if $(@expr1073744130 $prepareTest $(@expr1073744131 "test_isVariableDeclarationIdentifiesInitialization" $) $) ${ $setVerbose $(@expr1073744132 $false $) $; test_isVariableDeclarationIdentifiesInitialization $(@expr1073744133 $) $; $} $} $while $(@expr1073744134 $false $) ;
135: $do ${ $if $(@expr1073744135 $prepareTest $(@expr1073744136 "test_isVariableDeclarationIdentifiesCpp11Initialization" $) $) ${ $setVerbose $(@expr1073744137 $false $) $; test_isVariableDeclarationIdentifiesCpp11Initialization $(@expr1073744138 $) $; $} $} $while $(@expr1073744139 $false $) ;
136: $do ${ $if $(@expr1073744140 $prepareTest $(@expr1073744141 "test_isVariableDeclarationIdentifiesScopedDeclaration" $) $) ${ $setVerbose $(@expr1073744142 $false $) $; test_isVariableDeclarationIdentifiesScopedDeclaration $(@expr1073744143 $) $; $} $} $while $(@expr1073744144 $false $) ;
137: $do ${ $if $(@expr1073744145 $prepareTest $(@expr1073744146 "test_isVariableDeclarationIdentifiesStdDeclaration" $) $) ${ $setVerbose $(@expr1073744147 $false $) $; test_isVariableDeclarationIdentifiesStdDeclaration $(@expr1073744148 $) $; $} $} $while $(@expr1073744149 $false $) ;
138: $do ${ $if $(@expr1073744150 $prepareTest $(@expr1073744151 "test_isVariableDeclarationIdentifiesScopedStdDeclaration" $) $) ${ $setVerbose $(@expr1073744152 $false $) $; test_isVariableDeclarationIdentifiesScopedStdDeclaration $(@expr1073744153 $) $; $} $} $while $(@expr1073744154 $false $) ;
139: $do ${ $if $(@expr1073744155 $prepareTest $(@expr1073744156 "test_isVariableDeclarationIdentifiesManyScopes" $) $) ${ $setVerbose $(@expr1073744157 $false $) $; test_isVariableDeclarationIdentifiesManyScopes $(@expr1073744158 $) $; $} $} $while $(@expr1073744159 $false $) ;
140: $do ${ $if $(@expr1073744160 $prepareTest $(@expr1073744161 "test_isVariableDeclarationIdentifiesPointers" $) $) ${ $setVerbose $(@expr1073744162 $false $) $; test_isVariableDeclarationIdentifiesPointers $(@expr1073744163 $) $; $} $} $while $(@expr1073744164 $false $) ;
141: $do ${ $if $(@expr1073744165 $prepareTest $(@expr1073744166 "test_isVariableDeclarationIdentifiesPointers2" $) $) ${ $setVerbose $(@expr1073744167 $false $) $; test_isVariableDeclarationIdentifiesPointers2 $(@expr1073744168 $) $; $} $} $while $(@expr1073744169 $false $) ;
142: $do ${ $if $(@expr1073744170 $prepareTest $(@expr1073744171 "test_isVariableDeclarationDoesNotIdentifyConstness" $) $) ${ $setVerbose $(@expr1073744172 $false $) $; test_isVariableDeclarationDoesNotIdentifyConstness $(@expr1073744173 $) $; $} $} $while $(@expr1073744174 $false $) ;
143: $do ${ $if $(@expr1073744175 $prepareTest $(@expr1073744176 "test_isVariableDeclarationIdentifiesFirstOfManyVariables" $) $) ${ $setVerbose $(@expr1073744177 $false $) $; test_isVariableDeclarationIdentifiesFirstOfManyVariables $(@expr1073744178 $) $; $} $} $while $(@expr1073744179 $false $) ;
144: $do ${ $if $(@expr1073744180 $prepareTest $(@expr1073744181 "test_isVariableDeclarationIdentifiesScopedPointerDeclaration" $) $) ${ $setVerbose $(@expr1073744182 $false $) $; test_isVariableDeclarationIdentifiesScopedPointerDeclaration $(@expr1073744183 $) $; $} $} $while $(@expr1073744184 $false $) ;
145: $do ${ $if $(@expr1073744185 $prepareTest $(@expr1073744186 "test_isVariableDeclarationIdentifiesDeclarationWithIndirection" $) $) ${ $setVerbose $(@expr1073744187 $false $) $; test_isVariableDeclarationIdentifiesDeclarationWithIndirection $(@expr1073744188 $) $; $} $} $while $(@expr1073744189 $false $) ;
146: $do ${ $if $(@expr1073744190 $prepareTest $(@expr1073744191 "test_isVariableDeclarationIdentifiesDeclarationWithMultipleIndirection" $) $) ${ $setVerbose $(@expr1073744192 $false $) $; test_isVariableDeclarationIdentifiesDeclarationWithMultipleIndirection $(@expr1073744193 $) $; $} $} $while $(@expr1073744194 $false $) ;
147: $do ${ $if $(@expr1073744195 $prepareTest $(@expr1073744196 "test_isVariableDeclarationIdentifiesArray" $) $) ${ $setVerbose $(@expr1073744197 $false $) $; test_isVariableDeclarationIdentifiesArray $(@expr1073744198 $) $; $} $} $while $(@expr1073744199 $false $) ;
148: $do ${ $if $(@expr1073744200 $prepareTest $(@expr1073744201 "test_isVariableDeclarationIdentifiesPointerArray" $) $) ${ $setVerbose $(@expr1073744202 $false $) $; test_isVariableDeclarationIdentifiesPointerArray $(@expr1073744203 $) $; $} $} $while $(@expr1073744204 $false $) ;
149: $do ${ $if $(@expr1073744205 $prepareTest $(@expr1073744206 "test_isVariableDeclarationIdentifiesOfArrayPointers" $) $) ${ $setVerbose $(@expr1073744207 $false $) $; test_isVariableDeclarationIdentifiesOfArrayPointers $(@expr1073744208 $) $; $} $} $while $(@expr1073744209 $false $) ;
150: $do ${ $if $(@expr1073744210 $prepareTest $(@expr1073744211 "isVariableDeclarationIdentifiesTemplatedPointerVariable" $) $) ${ $setVerbose $(@expr1073744212 $false $) $; isVariableDeclarationIdentifiesTemplatedPointerVariable $(@expr1073744213 $) $; $} $} $while $(@expr1073744214 $false $) ;
151: $do ${ $if $(@expr1073744215 $prepareTest $(@expr1073744216 "isVariableDeclarationIdentifiesTemplatedPointerToPointerVariable" $) $) ${ $setVerbose $(@expr1073744217 $false $) $; isVariableDeclarationIdentifiesTemplatedPointerToPointerVariable $(@expr1073744218 $) $; $} $} $while $(@expr1073744219 $false $) ;
152: $do ${ $if $(@expr1073744220 $prepareTest $(@expr1073744221 "isVariableDeclarationIdentifiesTemplatedArrayVariable" $) $) ${ $setVerbose $(@expr1073744222 $false $) $; isVariableDeclarationIdentifiesTemplatedArrayVariable $(@expr1073744223 $) $; $} $} $while $(@expr1073744224 $false $) ;
153: $do ${ $if $(@expr1073744225 $prepareTest $(@expr1073744226 "isVariableDeclarationIdentifiesTemplatedVariable" $) $) ${ $setVerbose $(@expr1073744227 $false $) $; isVariableDeclarationIdentifiesTemplatedVariable $(@expr1073744228 $) $; $} $} $while $(@expr1073744229 $false $) ;
154: $do ${ $if $(@expr1073744230 $prepareTest $(@expr1073744231 "isVariableDeclarationIdentifiesTemplatedVariableIterator" $) $) ${ $setVerbose $(@expr1073744232 $false $) $; isVariableDeclarationIdentifiesTemplatedVariableIterator $(@expr1073744233 $) $; $} $} $while $(@expr1073744234 $false $) ;
155: $do ${ $if $(@expr1073744235 $prepareTest $(@expr1073744236 "isVariableDeclarationIdentifiesNestedTemplateVariable" $) $) ${ $setVerbose $(@expr1073744237 $false $) $; isVariableDeclarationIdentifiesNestedTemplateVariable $(@expr1073744238 $) $; $} $} $while $(@expr1073744239 $false $) ;
156: $do ${ $if $(@expr1073744240 $prepareTest $(@expr1073744241 "isVariableDeclarationIdentifiesReference" $) $) ${ $setVerbose $(@expr1073744242 $false $) $; isVariableDeclarationIdentifiesReference $(@expr1073744243 $) $; $} $} $while $(@expr1073744244 $false $) ;
157: $do ${ $if $(@expr1073744245 $prepareTest $(@expr1073744246 "isVariableDeclarationDoesNotIdentifyTemplateClass" $) $) ${ $setVerbose $(@expr1073744247 $false $) $; isVariableDeclarationDoesNotIdentifyTemplateClass $(@expr1073744248 $) $; $} $} $while $(@expr1073744249 $false $) ;
158: $do ${ $if $(@expr1073744250 $prepareTest $(@expr1073744251 "isVariableDeclarationDoesNotIdentifyCppCast" $) $) ${ $setVerbose $(@expr1073744252 $false $) $; isVariableDeclarationDoesNotIdentifyCppCast $(@expr1073744253 $) $; $} $} $while $(@expr1073744254 $false $) ;
159: $do ${ $if $(@expr1073744255 $prepareTest $(@expr1073744256 "isVariableDeclarationPointerConst" $) $) ${ $setVerbose $(@expr1073744257 $false $) $; isVariableDeclarationPointerConst $(@expr1073744258 $) $; $} $} $while $(@expr1073744259 $false $) ;
160: $do ${ $if $(@expr1073744260 $prepareTest $(@expr1073744261 "isVariableDeclarationRValueRef" $) $) ${ $setVerbose $(@expr1073744262 $false $) $; isVariableDeclarationRValueRef $(@expr1073744263 $) $; $} $} $while $(@expr1073744264 $false $) ;
161: $do ${ $if $(@expr1073744265 $prepareTest $(@expr1073744266 "isVariableDeclarationDoesNotIdentifyCase" $) $) ${ $setVerbose $(@expr1073744267 $false $) $; isVariableDeclarationDoesNotIdentifyCase $(@expr1073744268 $) $; $} $} $while $(@expr1073744269 $false $) ;
162: $do ${ $if $(@expr1073744270 $prepareTest $(@expr1073744271 "isVariableDeclarationIf" $) $) ${ $setVerbose $(@expr1073744272 $false $) $; isVariableDeclarationIf $(@expr1073744273 $) $; $} $} $while $(@expr1073744274 $false $) ;
163: $do ${ $if $(@expr1073744275 $prepareTest $(@expr1073744276 "isVariableStlType" $) $) ${ $setVerbose $(@expr1073744277 $false $) $; isVariableStlType $(@expr1073744278 $) $; $} $} $while $(@expr1073744279 $false $) ;
164: $do ${ $if $(@expr1073744280 $prepareTest $(@expr1073744281 "isVariablePointerToConstPointer" $) $) ${ $setVerbose $(@expr1073744282 $false $) $; isVariablePointerToConstPointer $(@expr1073744283 $) $; $} $} $while $(@expr1073744284 $false $) ;
165: $do ${ $if $(@expr1073744285 $prepareTest $(@expr1073744286 "isVariablePointerToVolatilePointer" $) $) ${ $setVerbose $(@expr1073744287 $false $) $; isVariablePointerToVolatilePointer $(@expr1073744288 $) $; $} $} $while $(@expr1073744289 $false $) ;
166: $do ${ $if $(@expr1073744290 $prepareTest $(@expr1073744291 "isVariablePointerToConstVolatilePointer" $) $) ${ $setVerbose $(@expr1073744292 $false $) $; isVariablePointerToConstVolatilePointer $(@expr1073744293 $) $; $} $} $while $(@expr1073744294 $false $) ;
167: $do ${ $if $(@expr1073744295 $prepareTest $(@expr1073744296 "isVariableMultiplePointersAndQualifiers" $) $) ${ $setVerbose $(@expr1073744297 $false $) $; isVariableMultiplePointersAndQualifiers $(@expr1073744298 $) $; $} $} $while $(@expr1073744299 $false $) ;
168: $do ${ $if $(@expr1073744300 $prepareTest $(@expr1073744301 "variableVolatile" $) $) ${ $setVerbose $(@expr1073744302 $false $) $; variableVolatile $(@expr1073744303 $) $; $} $} $while $(@expr1073744304 $false $) ;
169: $do ${ $if $(@expr1073744305 $prepareTest $(@expr1073744306 "variableConstexpr" $) $) ${ $setVerbose $(@expr1073744307 $false $) $; variableConstexpr $(@expr1073744308 $) $; $} $} $while $(@expr1073744309 $false $) ;
170: $do ${ $if $(@expr1073744310 $prepareTest $(@expr1073744311 "isVariableDecltype" $) $) ${ $setVerbose $(@expr1073744312 $false $) $; isVariableDecltype $(@expr1073744313 $) $; $} $} $while $(@expr1073744314 $false $) ;
171:
172: $do ${ $if $(@expr1073744315 $prepareTest $(@expr1073744316 "VariableValueType1" $) $) ${ $setVerbose $(@expr1073744317 $false $) $; VariableValueType1 $(@expr1073744318 $) $; $} $} $while $(@expr1073744319 $false $) ;
173: $do ${ $if $(@expr1073744320 $prepareTest $(@expr1073744321 "VariableValueType2" $) $) ${ $setVerbose $(@expr1073744322 $false $) $; VariableValueType2 $(@expr1073744323 $) $; $} $} $while $(@expr1073744324 $false $) ;
174: $do ${ $if $(@expr1073744325 $prepareTest $(@expr1073744326 "VariableValueType3" $) $) ${ $setVerbose $(@expr1073744327 $false $) $; VariableValueType3 $(@expr1073744328 $) $; $} $} $while $(@expr1073744329 $false $) ;
175: $do ${ $if $(@expr1073744330 $prepareTest $(@expr1073744331 "VariableValueType4" $) $) ${ $setVerbose $(@expr1073744332 $false $) $; VariableValueType4 $(@expr1073744333 $) $; $} $} $while $(@expr1073744334 $false $) ;
176: $do ${ $if $(@expr1073744335 $prepareTest $(@expr1073744336 "VariableValueType5" $) $) ${ $setVerbose $(@expr1073744337 $false $) $; VariableValueType5 $(@expr1073744338 $) $; $} $} $while $(@expr1073744339 $false $) ;
177: $do ${ $if $(@expr1073744340 $prepareTest $(@expr1073744341 "VariableValueTypeReferences" $) $) ${ $setVerbose $(@expr1073744342 $false $) $; VariableValueTypeReferences $(@expr1073744343 $) $; $} $} $while $(@expr1073744344 $false $) ;
178:
179: $do ${ $if $(@expr1073744345 $prepareTest $(@expr1073744346 "findVariableType1" $) $) ${ $setVerbose $(@expr1073744347 $false $) $; findVariableType1 $(@expr1073744348 $) $; $} $} $while $(@expr1073744349 $false $) ;
180: $do ${ $if $(@expr1073744350 $prepareTest $(@expr1073744351 "findVariableType2" $) $) ${ $setVerbose $(@expr1073744352 $false $) $; findVariableType2 $(@expr1073744353 $) $; $} $} $while $(@expr1073744354 $false $) ;
181: $do ${ $if $(@expr1073744355 $prepareTest $(@expr1073744356 "findVariableType3" $) $) ${ $setVerbose $(@expr1073744357 $false $) $; findVariableType3 $(@expr1073744358 $) $; $} $} $while $(@expr1073744359 $false $) ;
182: $do ${ $if $(@expr1073744360 $prepareTest $(@expr1073744361 "findVariableTypeExternC" $) $) ${ $setVerbose $(@expr1073744362 $false $) $; findVariableTypeExternC $(@expr1073744363 $) $; $} $} $while $(@expr1073744364 $false $) ;
183:
184: $do ${ $if $(@expr1073744365 $prepareTest $(@expr1073744366 "rangeBasedFor" $) $) ${ $setVerbose $(@expr1073744367 $false $) $; rangeBasedFor $(@expr1073744368 $) $; $} $} $while $(@expr1073744369 $false $) ;
185:
186: $do ${ $if $(@expr1073744370 $prepareTest $(@expr1073744371 "arrayMemberVar1" $) $) ${ $setVerbose $(@expr1073744372 $false $) $; arrayMemberVar1 $(@expr1073744373 $) $; $} $} $while $(@expr1073744374 $false $) ;
187: $do ${ $if $(@expr1073744375 $prepareTest $(@expr1073744376 "arrayMemberVar2" $) $) ${ $setVerbose $(@expr1073744377 $false $) $; arrayMemberVar2 $(@expr1073744378 $) $; $} $} $while $(@expr1073744379 $false $) ;
188: $do ${ $if $(@expr1073744380 $prepareTest $(@expr1073744381 "arrayMemberVar3" $) $) ${ $setVerbose $(@expr1073744382 $false $) $; arrayMemberVar3 $(@expr1073744383 $) $; $} $} $while $(@expr1073744384 $false $) ;
189: $do ${ $if $(@expr1073744385 $prepareTest $(@expr1073744386 "arrayMemberVar4" $) $) ${ $setVerbose $(@expr1073744387 $false $) $; arrayMemberVar4 $(@expr1073744388 $) $; $} $} $while $(@expr1073744389 $false $) ;
190: $do ${ $if $(@expr1073744390 $prepareTest $(@expr1073744391 "staticMemberVar" $) $) ${ $setVerbose $(@expr1073744392 $false $) $; staticMemberVar $(@expr1073744393 $) $; $} $} $while $(@expr1073744394 $false $) ;
191: $do ${ $if $(@expr1073744395 $prepareTest $(@expr1073744396 "getVariableFromVarIdBoundsCheck" $) $) ${ $setVerbose $(@expr1073744397 $false $) $; getVariableFromVarIdBoundsCheck $(@expr1073744398 $) $; $} $} $while $(@expr1073744399 $false $) ;
192:
193: $do ${ $if $(@expr1073744400 $prepareTest $(@expr1073744401 "hasRegularFunction" $) $) ${ $setVerbose $(@expr1073744402 $false $) $; hasRegularFunction $(@expr1073744403 $) $; $} $} $while $(@expr1073744404 $false $) ;
194: $do ${ $if $(@expr1073744405 $prepareTest $(@expr1073744406 "hasRegularFunction_trailingReturnType" $) $) ${ $setVerbose $(@expr1073744407 $false $) $; hasRegularFunction_trailingReturnType $(@expr1073744408 $) $; $} $} $while $(@expr1073744409 $false $) ;
195: $do ${ $if $(@expr1073744410 $prepareTest $(@expr1073744411 "hasInlineClassFunction" $) $) ${ $setVerbose $(@expr1073744412 $false $) $; hasInlineClassFunction $(@expr1073744413 $) $; $} $} $while $(@expr1073744414 $false $) ;
196: $do ${ $if $(@expr1073744415 $prepareTest $(@expr1073744416 "hasInlineClassFunction_trailingReturnType" $) $) ${ $setVerbose $(@expr1073744417 $false $) $; hasInlineClassFunction_trailingReturnType $(@expr1073744418 $) $; $} $} $while $(@expr1073744419 $false $) ;
197: $do ${ $if $(@expr1073744420 $prepareTest $(@expr1073744421 "hasMissingInlineClassFunction" $) $) ${ $setVerbose $(@expr1073744422 $false $) $; hasMissingInlineClassFunction $(@expr1073744423 $) $; $} $} $while $(@expr1073744424 $false $) ;
198: $do ${ $if $(@expr1073744425 $prepareTest $(@expr1073744426 "hasClassFunction" $) $) ${ $setVerbose $(@expr1073744427 $false $) $; hasClassFunction $(@expr1073744428 $) $; $} $} $while $(@expr1073744429 $false $) ;
199: $do ${ $if $(@expr1073744430 $prepareTest $(@expr1073744431 "hasClassFunction_trailingReturnType" $) $) ${ $setVerbose $(@expr1073744432 $false $) $; hasClassFunction_trailingReturnType $(@expr1073744433 $) $; $} $} $while $(@expr1073744434 $false $) ;
200: $do ${ $if $(@expr1073744435 $prepareTest $(@expr1073744436 "hasClassFunction_decltype_auto" $) $) ${ $setVerbose $(@expr1073744437 $false $) $; hasClassFunction_decltype_auto $(@expr1073744438 $) $; $} $} $while $(@expr1073744439 $false $) ;
201:
202: $do ${ $if $(@expr1073744440 $prepareTest $(@expr1073744441 "hasRegularFunctionReturningFunctionPointer" $) $) ${ $setVerbose $(@expr1073744442 $false $) $; hasRegularFunctionReturningFunctionPointer $(@expr1073744443 $) $; $} $} $while $(@expr1073744444 $false $) ;
203: $do ${ $if $(@expr1073744445 $prepareTest $(@expr1073744446 "hasInlineClassFunctionReturningFunctionPointer" $) $) ${ $setVerbose $(@expr1073744447 $false $) $; hasInlineClassFunctionReturningFunctionPointer $(@expr1073744448 $) $; $} $} $while $(@expr1073744449 $false $) ;
204: $do ${ $if $(@expr1073744450 $prepareTest $(@expr1073744451 "hasMissingInlineClassFunctionReturningFunctionPointer" $) $) ${ $setVerbose $(@expr1073744452 $false $) $; hasMissingInlineClassFunctionReturningFunctionPointer $(@expr1073744453 $) $; $} $} $while $(@expr1073744454 $false $) ;
205: $do ${ $if $(@expr1073744455 $prepareTest $(@expr1073744456 "hasInlineClassOperatorTemplate" $) $) ${ $setVerbose $(@expr1073744457 $false $) $; hasInlineClassOperatorTemplate $(@expr1073744458 $) $; $} $} $while $(@expr1073744459 $false $) ;
206: $do ${ $if $(@expr1073744460 $prepareTest $(@expr1073744461 "hasClassFunctionReturningFunctionPointer" $) $) ${ $setVerbose $(@expr1073744462 $false $) $; hasClassFunctionReturningFunctionPointer $(@expr1073744463 $) $; $} $} $while $(@expr1073744464 $false $) ;
207: $do ${ $if $(@expr1073744465 $prepareTest $(@expr1073744466 "methodWithRedundantScope" $) $) ${ $setVerbose $(@expr1073744467 $false $) $; methodWithRedundantScope $(@expr1073744468 $) $; $} $} $while $(@expr1073744469 $false $) ;
208: $do ${ $if $(@expr1073744470 $prepareTest $(@expr1073744471 "complexFunctionArrayPtr" $) $) ${ $setVerbose $(@expr1073744472 $false $) $; complexFunctionArrayPtr $(@expr1073744473 $) $; $} $} $while $(@expr1073744474 $false $) ;
209: $do ${ $if $(@expr1073744475 $prepareTest $(@expr1073744476 "pointerToMemberFunction" $) $) ${ $setVerbose $(@expr1073744477 $false $) $; pointerToMemberFunction $(@expr1073744478 $) $; $} $} $while $(@expr1073744479 $false $) ;
210: $do ${ $if $(@expr1073744480 $prepareTest $(@expr1073744481 "hasSubClassConstructor" $) $) ${ $setVerbose $(@expr1073744482 $false $) $; hasSubClassConstructor $(@expr1073744483 $) $; $} $} $while $(@expr1073744484 $false $) ;
211: $do ${ $if $(@expr1073744485 $prepareTest $(@expr1073744486 "testConstructors" $) $) ${ $setVerbose $(@expr1073744487 $false $) $; testConstructors $(@expr1073744488 $) $; $} $} $while $(@expr1073744489 $false $) ;
212: $do ${ $if $(@expr1073744490 $prepareTest $(@expr1073744491 "functionDeclarationTemplate" $) $) ${ $setVerbose $(@expr1073744492 $false $) $; functionDeclarationTemplate $(@expr1073744493 $) $; $} $} $while $(@expr1073744494 $false $) ;
213: $do ${ $if $(@expr1073744495 $prepareTest $(@expr1073744496 "functionDeclarations" $) $) ${ $setVerbose $(@expr1073744497 $false $) $; functionDeclarations $(@expr1073744498 $) $; $} $} $while $(@expr1073744499 $false $) ;
214: $do ${ $if $(@expr1073744500 $prepareTest $(@expr1073744501 "functionDeclarations2" $) $) ${ $setVerbose $(@expr1073744502 $false $) $; functionDeclarations2 $(@expr1073744503 $) $; $} $} $while $(@expr1073744504 $false $) ;
215: $do ${ $if $(@expr1073744505 $prepareTest $(@expr1073744506 "constexprFunction" $) $) ${ $setVerbose $(@expr1073744507 $false $) $; constexprFunction $(@expr1073744508 $) $; $} $} $while $(@expr1073744509 $false $) ;
216: $do ${ $if $(@expr1073744510 $prepareTest $(@expr1073744511 "constructorInitialization" $) $) ${ $setVerbose $(@expr1073744512 $false $) $; constructorInitialization $(@expr1073744513 $) $; $} $} $while $(@expr1073744514 $false $) ;
217: $do ${ $if $(@expr1073744515 $prepareTest $(@expr1073744516 "memberFunctionOfUnknownClassMacro1" $) $) ${ $setVerbose $(@expr1073744517 $false $) $; memberFunctionOfUnknownClassMacro1 $(@expr1073744518 $) $; $} $} $while $(@expr1073744519 $false $) ;
218: $do ${ $if $(@expr1073744520 $prepareTest $(@expr1073744521 "memberFunctionOfUnknownClassMacro2" $) $) ${ $setVerbose $(@expr1073744522 $false $) $; memberFunctionOfUnknownClassMacro2 $(@expr1073744523 $) $; $} $} $while $(@expr1073744524 $false $) ;
219: $do ${ $if $(@expr1073744525 $prepareTest $(@expr1073744526 "memberFunctionOfUnknownClassMacro3" $) $) ${ $setVerbose $(@expr1073744527 $false $) $; memberFunctionOfUnknownClassMacro3 $(@expr1073744528 $) $; $} $} $while $(@expr1073744529 $false $) ;
220: $do ${ $if $(@expr1073744530 $prepareTest $(@expr1073744531 "functionLinkage" $) $) ${ $setVerbose $(@expr1073744532 $false $) $; functionLinkage $(@expr1073744533 $) $; $} $} $while $(@expr1073744534 $false $) ;
221:
222: $do ${ $if $(@expr1073744535 $prepareTest $(@expr1073744536 "classWithFriend" $) $) ${ $setVerbose $(@expr1073744537 $false $) $; classWithFriend $(@expr1073744538 $) $; $} $} $while $(@expr1073744539 $false $) ;
223:
224: $do ${ $if $(@expr1073744540 $prepareTest $(@expr1073744541 "parseFunctionCorrect" $) $) ${ $setVerbose $(@expr1073744542 $false $) $; parseFunctionCorrect $(@expr1073744543 $) $; $} $} $while $(@expr1073744544 $false $) ;
225: $do ${ $if $(@expr1073744545 $prepareTest $(@expr1073744546 "parseFunctionDeclarationCorrect" $) $) ${ $setVerbose $(@expr1073744547 $false $) $; parseFunctionDeclarationCorrect $(@expr1073744548 $) $; $} $} $while $(@expr1073744549 $false $) ;
226: $do ${ $if $(@expr1073744550 $prepareTest $(@expr1073744551 "Cpp11InitInInitList" $) $) ${ $setVerbose $(@expr1073744552 $false $) $; Cpp11InitInInitList $(@expr1073744553 $) $; $} $} $while $(@expr1073744554 $false $) ;
227:
228: $do ${ $if $(@expr1073744555 $prepareTest $(@expr1073744556 "hasGlobalVariables1" $) $) ${ $setVerbose $(@expr1073744557 $false $) $; hasGlobalVariables1 $(@expr1073744558 $) $; $} $} $while $(@expr1073744559 $false $) ;
229: $do ${ $if $(@expr1073744560 $prepareTest $(@expr1073744561 "hasGlobalVariables2" $) $) ${ $setVerbose $(@expr1073744562 $false $) $; hasGlobalVariables2 $(@expr1073744563 $) $; $} $} $while $(@expr1073744564 $false $) ;
230: $do ${ $if $(@expr1073744565 $prepareTest $(@expr1073744566 "hasGlobalVariables3" $) $) ${ $setVerbose $(@expr1073744567 $false $) $; hasGlobalVariables3 $(@expr1073744568 $) $; $} $} $while $(@expr1073744569 $false $) ;
231:
232: $do ${ $if $(@expr1073744570 $prepareTest $(@expr1073744571 "checkTypeStartEndToken1" $) $) ${ $setVerbose $(@expr1073744572 $false $) $; checkTypeStartEndToken1 $(@expr1073744573 $) $; $} $} $while $(@expr1073744574 $false $) ;
233: $do ${ $if $(@expr1073744575 $prepareTest $(@expr1073744576 "checkTypeStartEndToken2" $) $) ${ $setVerbose $(@expr1073744577 $false $) $; checkTypeStartEndToken2 $(@expr1073744578 $) $; $} $} $while $(@expr1073744579 $false $) ;
234: $do ${ $if $(@expr1073744580 $prepareTest $(@expr1073744581 "checkTypeStartEndToken3" $) $) ${ $setVerbose $(@expr1073744582 $false $) $; checkTypeStartEndToken3 $(@expr1073744583 $) $; $} $} $while $(@expr1073744584 $false $) ;
235:
236: $do ${ $if $(@expr1073744585 $prepareTest $(@expr1073744586 "functionArgs1" $) $) ${ $setVerbose $(@expr1073744587 $false $) $; functionArgs1 $(@expr1073744588 $) $; $} $} $while $(@expr1073744589 $false $) ;
237: $do ${ $if $(@expr1073744590 $prepareTest $(@expr1073744591 "functionArgs2" $) $) ${ $setVerbose $(@expr1073744592 $false $) $; functionArgs2 $(@expr1073744593 $) $; $} $} $while $(@expr1073744594 $false $) ;
238: $do ${ $if $(@expr1073744595 $prepareTest $(@expr1073744596 "functionArgs4" $) $) ${ $setVerbose $(@expr1073744597 $false $) $; functionArgs4 $(@expr1073744598 $) $; $} $} $while $(@expr1073744599 $false $) ;
239: $do ${ $if $(@expr1073744600 $prepareTest $(@expr1073744601 "functionArgs5" $) $) ${ $setVerbose $(@expr1073744602 $false $) $; functionArgs5 $(@expr1073744603 $) $; $} $} $while $(@expr1073744604 $false $) ;
240: $do ${ $if $(@expr1073744605 $prepareTest $(@expr1073744606 "functionArgs6" $) $) ${ $setVerbose $(@expr1073744607 $false $) $; functionArgs6 $(@expr1073744608 $) $; $} $} $while $(@expr1073744609 $false $) ;
241: $do ${ $if $(@expr1073744610 $prepareTest $(@expr1073744611 "functionArgs7" $) $) ${ $setVerbose $(@expr1073744612 $false $) $; functionArgs7 $(@expr1073744613 $) $; $} $} $while $(@expr1073744614 $false $) ;
242: $do ${ $if $(@expr1073744615 $prepareTest $(@expr1073744616 "functionArgs8" $) $) ${ $setVerbose $(@expr1073744617 $false $) $; functionArgs8 $(@expr1073744618 $) $; $} $} $while $(@expr1073744619 $false $) ;
243: $do ${ $if $(@expr1073744620 $prepareTest $(@expr1073744621 "functionArgs9" $) $) ${ $setVerbose $(@expr1073744622 $false $) $; functionArgs9 $(@expr1073744623 $) $; $} $} $while $(@expr1073744624 $false $) ;
244: $do ${ $if $(@expr1073744625 $prepareTest $(@expr1073744626 "functionArgs10" $) $) ${ $setVerbose $(@expr1073744627 $false $) $; functionArgs10 $(@expr1073744628 $) $; $} $} $while $(@expr1073744629 $false $) ;
245: $do ${ $if $(@expr1073744630 $prepareTest $(@expr1073744631 "functionArgs11" $) $) ${ $setVerbose $(@expr1073744632 $false $) $; functionArgs11 $(@expr1073744633 $) $; $} $} $while $(@expr1073744634 $false $) ;
246: $do ${ $if $(@expr1073744635 $prepareTest $(@expr1073744636 "functionArgs12" $) $) ${ $setVerbose $(@expr1073744637 $false $) $; functionArgs12 $(@expr1073744638 $) $; $} $} $while $(@expr1073744639 $false $) ;
247: $do ${ $if $(@expr1073744640 $prepareTest $(@expr1073744641 "functionArgs13" $) $) ${ $setVerbose $(@expr1073744642 $false $) $; functionArgs13 $(@expr1073744643 $) $; $} $} $while $(@expr1073744644 $false $) ;
248: $do ${ $if $(@expr1073744645 $prepareTest $(@expr1073744646 "functionArgs14" $) $) ${ $setVerbose $(@expr1073744647 $false $) $; functionArgs14 $(@expr1073744648 $) $; $} $} $while $(@expr1073744649 $false $) ;
249: $do ${ $if $(@expr1073744650 $prepareTest $(@expr1073744651 "functionArgs15" $) $) ${ $setVerbose $(@expr1073744652 $false $) $; functionArgs15 $(@expr1073744653 $) $; $} $} $while $(@expr1073744654 $false $) ;
250: $do ${ $if $(@expr1073744655 $prepareTest $(@expr1073744656 "functionArgs16" $) $) ${ $setVerbose $(@expr1073744657 $false $) $; functionArgs16 $(@expr1073744658 $) $; $} $} $while $(@expr1073744659 $false $) ;
251: $do ${ $if $(@expr1073744660 $prepareTest $(@expr1073744661 "functionArgs17" $) $) ${ $setVerbose $(@expr1073744662 $false $) $; functionArgs17 $(@expr1073744663 $) $; $} $} $while $(@expr1073744664 $false $) ;
252: $do ${ $if $(@expr1073744665 $prepareTest $(@expr1073744666 "functionArgs18" $) $) ${ $setVerbose $(@expr1073744667 $false $) $; functionArgs18 $(@expr1073744668 $) $; $} $} $while $(@expr1073744669 $false $) ;
253:
254: $do ${ $if $(@expr1073744670 $prepareTest $(@expr1073744671 "functionImplicitlyVirtual" $) $) ${ $setVerbose $(@expr1073744672 $false $) $; functionImplicitlyVirtual $(@expr1073744673 $) $; $} $} $while $(@expr1073744674 $false $) ;
255:
256: $do ${ $if $(@expr1073744675 $prepareTest $(@expr1073744676 "functionIsInlineKeyword" $) $) ${ $setVerbose $(@expr1073744677 $false $) $; functionIsInlineKeyword $(@expr1073744678 $) $; $} $} $while $(@expr1073744679 $false $) ;
257:
258: $do ${ $if $(@expr1073744680 $prepareTest $(@expr1073744681 "functionStatic" $) $) ${ $setVerbose $(@expr1073744682 $false $) $; functionStatic $(@expr1073744683 $) $; $} $} $while $(@expr1073744684 $false $) ;
259:
260: $do ${ $if $(@expr1073744685 $prepareTest $(@expr1073744686 "functionReturnsReference" $) $) ${ $setVerbose $(@expr1073744687 $false $) $; functionReturnsReference $(@expr1073744688 $) $; $} $} $while $(@expr1073744689 $false $) ;
261:
262: $do ${ $if $(@expr1073744690 $prepareTest $(@expr1073744691 "namespaces1" $) $) ${ $setVerbose $(@expr1073744692 $false $) $; namespaces1 $(@expr1073744693 $) $; $} $} $while $(@expr1073744694 $false $) ;
263: $do ${ $if $(@expr1073744695 $prepareTest $(@expr1073744696 "namespaces2" $) $) ${ $setVerbose $(@expr1073744697 $false $) $; namespaces2 $(@expr1073744698 $) $; $} $} $while $(@expr1073744699 $false $) ;
264: $do ${ $if $(@expr1073744700 $prepareTest $(@expr1073744701 "namespaces3" $) $) ${ $setVerbose $(@expr1073744702 $false $) $; namespaces3 $(@expr1073744703 $) $; $} $} $while $(@expr1073744704 $false $) ;
265: $do ${ $if $(@expr1073744705 $prepareTest $(@expr1073744706 "namespaces4" $) $) ${ $setVerbose $(@expr1073744707 $false $) $; namespaces4 $(@expr1073744708 $) $; $} $} $while $(@expr1073744709 $false $) ;
266:
267: $do ${ $if $(@expr1073744710 $prepareTest $(@expr1073744711 "tryCatch1" $) $) ${ $setVerbose $(@expr1073744712 $false $) $; tryCatch1 $(@expr1073744713 $) $; $} $} $while $(@expr1073744714 $false $) ;
268:
269: $do ${ $if $(@expr1073744715 $prepareTest $(@expr1073744716 "symboldatabase1" $) $) ${ $setVerbose $(@expr1073744717 $false $) $; symboldatabase1 $(@expr1073744718 $) $; $} $} $while $(@expr1073744719 $false $) ;
270: $do ${ $if $(@expr1073744720 $prepareTest $(@expr1073744721 "symboldatabase2" $) $) ${ $setVerbose $(@expr1073744722 $false $) $; symboldatabase2 $(@expr1073744723 $) $; $} $} $while $(@expr1073744724 $false $) ;
271: $do ${ $if $(@expr1073744725 $prepareTest $(@expr1073744726 "symboldatabase3" $) $) ${ $setVerbose $(@expr1073744727 $false $) $; symboldatabase3 $(@expr1073744728 $) $; $} $} $while $(@expr1073744729 $false $) ;
272: $do ${ $if $(@expr1073744730 $prepareTest $(@expr1073744731 "symboldatabase4" $) $) ${ $setVerbose $(@expr1073744732 $false $) $; symboldatabase4 $(@expr1073744733 $) $; $} $} $while $(@expr1073744734 $false $) ;
273: $do ${ $if $(@expr1073744735 $prepareTest $(@expr1073744736 "symboldatabase5" $) $) ${ $setVerbose $(@expr1073744737 $false $) $; symboldatabase5 $(@expr1073744738 $) $; $} $} $while $(@expr1073744739 $false $) ;
274: $do ${ $if $(@expr1073744740 $prepareTest $(@expr1073744741 "symboldatabase6" $) $) ${ $setVerbose $(@expr1073744742 $false $) $; symboldatabase6 $(@expr1073744743 $) $; $} $} $while $(@expr1073744744 $false $) ;
275: $do ${ $if $(@expr1073744745 $prepareTest $(@expr1073744746 "symboldatabase7" $) $) ${ $setVerbose $(@expr1073744747 $false $) $; symboldatabase7 $(@expr1073744748 $) $; $} $} $while $(@expr1073744749 $false $) ;
276: $do ${ $if $(@expr1073744750 $prepareTest $(@expr1073744751 "symboldatabase8" $) $) ${ $setVerbose $(@expr1073744752 $false $) $; symboldatabase8 $(@expr1073744753 $) $; $} $} $while $(@expr1073744754 $false $) ;
277: $do ${ $if $(@expr1073744755 $prepareTest $(@expr1073744756 "symboldatabase9" $) $) ${ $setVerbose $(@expr1073744757 $false $) $; symboldatabase9 $(@expr1073744758 $) $; $} $} $while $(@expr1073744759 $false $) ;
278: $do ${ $if $(@expr1073744760 $prepareTest $(@expr1073744761 "symboldatabase10" $) $) ${ $setVerbose $(@expr1073744762 $false $) $; symboldatabase10 $(@expr1073744763 $) $; $} $} $while $(@expr1073744764 $false $) ;
279: $do ${ $if $(@expr1073744765 $prepareTest $(@expr1073744766 "symboldatabase11" $) $) ${ $setVerbose $(@expr1073744767 $false $) $; symboldatabase11 $(@expr1073744768 $) $; $} $} $while $(@expr1073744769 $false $) ;
280: $do ${ $if $(@expr1073744770 $prepareTest $(@expr1073744771 "symboldatabase12" $) $) ${ $setVerbose $(@expr1073744772 $false $) $; symboldatabase12 $(@expr1073744773 $) $; $} $} $while $(@expr1073744774 $false $) ;
281: $do ${ $if $(@expr1073744775 $prepareTest $(@expr1073744776 "symboldatabase13" $) $) ${ $setVerbose $(@expr1073744777 $false $) $; symboldatabase13 $(@expr1073744778 $) $; $} $} $while $(@expr1073744779 $false $) ;
282: $do ${ $if $(@expr1073744780 $prepareTest $(@expr1073744781 "symboldatabase14" $) $) ${ $setVerbose $(@expr1073744782 $false $) $; symboldatabase14 $(@expr1073744783 $) $; $} $} $while $(@expr1073744784 $false $) ;
283: $do ${ $if $(@expr1073744785 $prepareTest $(@expr1073744786 "symboldatabase17" $) $) ${ $setVerbose $(@expr1073744787 $false $) $; symboldatabase17 $(@expr1073744788 $) $; $} $} $while $(@expr1073744789 $false $) ;
284: $do ${ $if $(@expr1073744790 $prepareTest $(@expr1073744791 "symboldatabase19" $) $) ${ $setVerbose $(@expr1073744792 $false $) $; symboldatabase19 $(@expr1073744793 $) $; $} $} $while $(@expr1073744794 $false $) ;
285: $do ${ $if $(@expr1073744795 $prepareTest $(@expr1073744796 "symboldatabase20" $) $) ${ $setVerbose $(@expr1073744797 $false $) $; symboldatabase20 $(@expr1073744798 $) $; $} $} $while $(@expr1073744799 $false $) ;
286: $do ${ $if $(@expr1073744800 $prepareTest $(@expr1073744801 "symboldatabase21" $) $) ${ $setVerbose $(@expr1073744802 $false $) $; symboldatabase21 $(@expr1073744803 $) $; $} $} $while $(@expr1073744804 $false $) ;
287: $do ${ $if $(@expr1073744805 $prepareTest $(@expr1073744806 "symboldatabase22" $) $) ${ $setVerbose $(@expr1073744807 $false $) $; symboldatabase22 $(@expr1073744808 $) $; $} $} $while $(@expr1073744809 $false $) ;
288: $do ${ $if $(@expr1073744810 $prepareTest $(@expr1073744811 "symboldatabase23" $) $) ${ $setVerbose $(@expr1073744812 $false $) $; symboldatabase23 $(@expr1073744813 $) $; $} $} $while $(@expr1073744814 $false $) ;
289: $do ${ $if $(@expr1073744815 $prepareTest $(@expr1073744816 "symboldatabase24" $) $) ${ $setVerbose $(@expr1073744817 $false $) $; symboldatabase24 $(@expr1073744818 $) $; $} $} $while $(@expr1073744819 $false $) ;
290: $do ${ $if $(@expr1073744820 $prepareTest $(@expr1073744821 "symboldatabase25" $) $) ${ $setVerbose $(@expr1073744822 $false $) $; symboldatabase25 $(@expr1073744823 $) $; $} $} $while $(@expr1073744824 $false $) ;
291: $do ${ $if $(@expr1073744825 $prepareTest $(@expr1073744826 "symboldatabase26" $) $) ${ $setVerbose $(@expr1073744827 $false $) $; symboldatabase26 $(@expr1073744828 $) $; $} $} $while $(@expr1073744829 $false $) ;
292: $do ${ $if $(@expr1073744830 $prepareTest $(@expr1073744831 "symboldatabase27" $) $) ${ $setVerbose $(@expr1073744832 $false $) $; symboldatabase27 $(@expr1073744833 $) $; $} $} $while $(@expr1073744834 $false $) ;
293: $do ${ $if $(@expr1073744835 $prepareTest $(@expr1073744836 "symboldatabase28" $) $) ${ $setVerbose $(@expr1073744837 $false $) $; symboldatabase28 $(@expr1073744838 $) $; $} $} $while $(@expr1073744839 $false $) ;
294: $do ${ $if $(@expr1073744840 $prepareTest $(@expr1073744841 "symboldatabase29" $) $) ${ $setVerbose $(@expr1073744842 $false $) $; symboldatabase29 $(@expr1073744843 $) $; $} $} $while $(@expr1073744844 $false $) ;
295: $do ${ $if $(@expr1073744845 $prepareTest $(@expr1073744846 "symboldatabase30" $) $) ${ $setVerbose $(@expr1073744847 $false $) $; symboldatabase30 $(@expr1073744848 $) $; $} $} $while $(@expr1073744849 $false $) ;
296: $do ${ $if $(@expr1073744850 $prepareTest $(@expr1073744851 "symboldatabase31" $) $) ${ $setVerbose $(@expr1073744852 $false $) $; symboldatabase31 $(@expr1073744853 $) $; $} $} $while $(@expr1073744854 $false $) ;
297: $do ${ $if $(@expr1073744855 $prepareTest $(@expr1073744856 "symboldatabase32" $) $) ${ $setVerbose $(@expr1073744857 $false $) $; symboldatabase32 $(@expr1073744858 $) $; $} $} $while $(@expr1073744859 $false $) ;
298: $do ${ $if $(@expr1073744860 $prepareTest $(@expr1073744861 "symboldatabase33" $) $) ${ $setVerbose $(@expr1073744862 $false $) $; symboldatabase33 $(@expr1073744863 $) $; $} $} $while $(@expr1073744864 $false $) ;
299: $do ${ $if $(@expr1073744865 $prepareTest $(@expr1073744866 "symboldatabase34" $) $) ${ $setVerbose $(@expr1073744867 $false $) $; symboldatabase34 $(@expr1073744868 $) $; $} $} $while $(@expr1073744869 $false $) ;
300: $do ${ $if $(@expr1073744870 $prepareTest $(@expr1073744871 "symboldatabase35" $) $) ${ $setVerbose $(@expr1073744872 $false $) $; symboldatabase35 $(@expr1073744873 $) $; $} $} $while $(@expr1073744874 $false $) ;
301: $do ${ $if $(@expr1073744875 $prepareTest $(@expr1073744876 "symboldatabase36" $) $) ${ $setVerbose $(@expr1073744877 $false $) $; symboldatabase36 $(@expr1073744878 $) $; $} $} $while $(@expr1073744879 $false $) ;
302: $do ${ $if $(@expr1073744880 $prepareTest $(@expr1073744881 "symboldatabase37" $) $) ${ $setVerbose $(@expr1073744882 $false $) $; symboldatabase37 $(@expr1073744883 $) $; $} $} $while $(@expr1073744884 $false $) ;
303: $do ${ $if $(@expr1073744885 $prepareTest $(@expr1073744886 "symboldatabase38" $) $) ${ $setVerbose $(@expr1073744887 $false $) $; symboldatabase38 $(@expr1073744888 $) $; $} $} $while $(@expr1073744889 $false $) ;
304: $do ${ $if $(@expr1073744890 $prepareTest $(@expr1073744891 "symboldatabase40" $) $) ${ $setVerbose $(@expr1073744892 $false $) $; symboldatabase40 $(@expr1073744893 $) $; $} $} $while $(@expr1073744894 $false $) ;
305: $do ${ $if $(@expr1073744895 $prepareTest $(@expr1073744896 "symboldatabase41" $) $) ${ $setVerbose $(@expr1073744897 $false $) $; symboldatabase41 $(@expr1073744898 $) $; $} $} $while $(@expr1073744899 $false $) ;
306: $do ${ $if $(@expr1073744900 $prepareTest $(@expr1073744901 "symboldatabase42" $) $) ${ $setVerbose $(@expr1073744902 $false $) $; symboldatabase42 $(@expr1073744903 $) $; $} $} $while $(@expr1073744904 $false $) ;
307: $do ${ $if $(@expr1073744905 $prepareTest $(@expr1073744906 "symboldatabase43" $) $) ${ $setVerbose $(@expr1073744907 $false $) $; symboldatabase43 $(@expr1073744908 $) $; $} $} $while $(@expr1073744909 $false $) ;
308: $do ${ $if $(@expr1073744910 $prepareTest $(@expr1073744911 "symboldatabase44" $) $) ${ $setVerbose $(@expr1073744912 $false $) $; symboldatabase44 $(@expr1073744913 $) $; $} $} $while $(@expr1073744914 $false $) ;
309: $do ${ $if $(@expr1073744915 $prepareTest $(@expr1073744916 "symboldatabase45" $) $) ${ $setVerbose $(@expr1073744917 $false $) $; symboldatabase45 $(@expr1073744918 $) $; $} $} $while $(@expr1073744919 $false $) ;
310: $do ${ $if $(@expr1073744920 $prepareTest $(@expr1073744921 "symboldatabase46" $) $) ${ $setVerbose $(@expr1073744922 $false $) $; symboldatabase46 $(@expr1073744923 $) $; $} $} $while $(@expr1073744924 $false $) ;
311: $do ${ $if $(@expr1073744925 $prepareTest $(@expr1073744926 "symboldatabase47" $) $) ${ $setVerbose $(@expr1073744927 $false $) $; symboldatabase47 $(@expr1073744928 $) $; $} $} $while $(@expr1073744929 $false $) ;
312: $do ${ $if $(@expr1073744930 $prepareTest $(@expr1073744931 "symboldatabase48" $) $) ${ $setVerbose $(@expr1073744932 $false $) $; symboldatabase48 $(@expr1073744933 $) $; $} $} $while $(@expr1073744934 $false $) ;
313: $do ${ $if $(@expr1073744935 $prepareTest $(@expr1073744936 "symboldatabase49" $) $) ${ $setVerbose $(@expr1073744937 $false $) $; symboldatabase49 $(@expr1073744938 $) $; $} $} $while $(@expr1073744939 $false $) ;
314: $do ${ $if $(@expr1073744940 $prepareTest $(@expr1073744941 "symboldatabase50" $) $) ${ $setVerbose $(@expr1073744942 $false $) $; symboldatabase50 $(@expr1073744943 $) $; $} $} $while $(@expr1073744944 $false $) ;
315: $do ${ $if $(@expr1073744945 $prepareTest $(@expr1073744946 "symboldatabase51" $) $) ${ $setVerbose $(@expr1073744947 $false $) $; symboldatabase51 $(@expr1073744948 $) $; $} $} $while $(@expr1073744949 $false $) ;
316: $do ${ $if $(@expr1073744950 $prepareTest $(@expr1073744951 "symboldatabase52" $) $) ${ $setVerbose $(@expr1073744952 $false $) $; symboldatabase52 $(@expr1073744953 $) $; $} $} $while $(@expr1073744954 $false $) ;
317: $do ${ $if $(@expr1073744955 $prepareTest $(@expr1073744956 "symboldatabase53" $) $) ${ $setVerbose $(@expr1073744957 $false $) $; symboldatabase53 $(@expr1073744958 $) $; $} $} $while $(@expr1073744959 $false $) ;
318: $do ${ $if $(@expr1073744960 $prepareTest $(@expr1073744961 "symboldatabase54" $) $) ${ $setVerbose $(@expr1073744962 $false $) $; symboldatabase54 $(@expr1073744963 $) $; $} $} $while $(@expr1073744964 $false $) ;
319: $do ${ $if $(@expr1073744965 $prepareTest $(@expr1073744966 "symboldatabase55" $) $) ${ $setVerbose $(@expr1073744967 $false $) $; symboldatabase55 $(@expr1073744968 $) $; $} $} $while $(@expr1073744969 $false $) ;
320: $do ${ $if $(@expr1073744970 $prepareTest $(@expr1073744971 "symboldatabase56" $) $) ${ $setVerbose $(@expr1073744972 $false $) $; symboldatabase56 $(@expr1073744973 $) $; $} $} $while $(@expr1073744974 $false $) ;
321: $do ${ $if $(@expr1073744975 $prepareTest $(@expr1073744976 "symboldatabase57" $) $) ${ $setVerbose $(@expr1073744977 $false $) $; symboldatabase57 $(@expr1073744978 $) $; $} $} $while $(@expr1073744979 $false $) ;
322: $do ${ $if $(@expr1073744980 $prepareTest $(@expr1073744981 "symboldatabase58" $) $) ${ $setVerbose $(@expr1073744982 $false $) $; symboldatabase58 $(@expr1073744983 $) $; $} $} $while $(@expr1073744984 $false $) ;
323: $do ${ $if $(@expr1073744985 $prepareTest $(@expr1073744986 "symboldatabase59" $) $) ${ $setVerbose $(@expr1073744987 $false $) $; symboldatabase59 $(@expr1073744988 $) $; $} $} $while $(@expr1073744989 $false $) ;
324: $do ${ $if $(@expr1073744990 $prepareTest $(@expr1073744991 "symboldatabase60" $) $) ${ $setVerbose $(@expr1073744992 $false $) $; symboldatabase60 $(@expr1073744993 $) $; $} $} $while $(@expr1073744994 $false $) ;
325: $do ${ $if $(@expr1073744995 $prepareTest $(@expr1073744996 "symboldatabase61" $) $) ${ $setVerbose $(@expr1073744997 $false $) $; symboldatabase61 $(@expr1073744998 $) $; $} $} $while $(@expr1073744999 $false $) ;
326: $do ${ $if $(@expr1073745000 $prepareTest $(@expr1073745001 "symboldatabase62" $) $) ${ $setVerbose $(@expr1073745002 $false $) $; symboldatabase62 $(@expr1073745003 $) $; $} $} $while $(@expr1073745004 $false $) ;
327: $do ${ $if $(@expr1073745005 $prepareTest $(@expr1073745006 "symboldatabase63" $) $) ${ $setVerbose $(@expr1073745007 $false $) $; symboldatabase63 $(@expr1073745008 $) $; $} $} $while $(@expr1073745009 $false $) ;
328: $do ${ $if $(@expr1073745010 $prepareTest $(@expr1073745011 "symboldatabase64" $) $) ${ $setVerbose $(@expr1073745012 $false $) $; symboldatabase64 $(@expr1073745013 $) $; $} $} $while $(@expr1073745014 $false $) ;
329: $do ${ $if $(@expr1073745015 $prepareTest $(@expr1073745016 "symboldatabase65" $) $) ${ $setVerbose $(@expr1073745017 $false $) $; symboldatabase65 $(@expr1073745018 $) $; $} $} $while $(@expr1073745019 $false $) ;
330: $do ${ $if $(@expr1073745020 $prepareTest $(@expr1073745021 "symboldatabase66" $) $) ${ $setVerbose $(@expr1073745022 $false $) $; symboldatabase66 $(@expr1073745023 $) $; $} $} $while $(@expr1073745024 $false $) ;
331: $do ${ $if $(@expr1073745025 $prepareTest $(@expr1073745026 "symboldatabase67" $) $) ${ $setVerbose $(@expr1073745027 $false $) $; symboldatabase67 $(@expr1073745028 $) $; $} $} $while $(@expr1073745029 $false $) ;
332: $do ${ $if $(@expr1073745030 $prepareTest $(@expr1073745031 "symboldatabase68" $) $) ${ $setVerbose $(@expr1073745032 $false $) $; symboldatabase68 $(@expr1073745033 $) $; $} $} $while $(@expr1073745034 $false $) ;
333: $do ${ $if $(@expr1073745035 $prepareTest $(@expr1073745036 "symboldatabase69" $) $) ${ $setVerbose $(@expr1073745037 $false $) $; symboldatabase69 $(@expr1073745038 $) $; $} $} $while $(@expr1073745039 $false $) ;
334: $do ${ $if $(@expr1073745040 $prepareTest $(@expr1073745041 "symboldatabase70" $) $) ${ $setVerbose $(@expr1073745042 $false $) $; symboldatabase70 $(@expr1073745043 $) $; $} $} $while $(@expr1073745044 $false $) ;
335: $do ${ $if $(@expr1073745045 $prepareTest $(@expr1073745046 "symboldatabase71" $) $) ${ $setVerbose $(@expr1073745047 $false $) $; symboldatabase71 $(@expr1073745048 $) $; $} $} $while $(@expr1073745049 $false $) ;
336: $do ${ $if $(@expr1073745050 $prepareTest $(@expr1073745051 "symboldatabase72" $) $) ${ $setVerbose $(@expr1073745052 $false $) $; symboldatabase72 $(@expr1073745053 $) $; $} $} $while $(@expr1073745054 $false $) ;
337: $do ${ $if $(@expr1073745055 $prepareTest $(@expr1073745056 "symboldatabase74" $) $) ${ $setVerbose $(@expr1073745057 $false $) $; symboldatabase74 $(@expr1073745058 $) $; $} $} $while $(@expr1073745059 $false $) ;
338: $do ${ $if $(@expr1073745060 $prepareTest $(@expr1073745061 "symboldatabase75" $) $) ${ $setVerbose $(@expr1073745062 $false $) $; symboldatabase75 $(@expr1073745063 $) $; $} $} $while $(@expr1073745064 $false $) ;
339: $do ${ $if $(@expr1073745065 $prepareTest $(@expr1073745066 "symboldatabase76" $) $) ${ $setVerbose $(@expr1073745067 $false $) $; symboldatabase76 $(@expr1073745068 $) $; $} $} $while $(@expr1073745069 $false $) ;
340: $do ${ $if $(@expr1073745070 $prepareTest $(@expr1073745071 "symboldatabase77" $) $) ${ $setVerbose $(@expr1073745072 $false $) $; symboldatabase77 $(@expr1073745073 $) $; $} $} $while $(@expr1073745074 $false $) ;
341: $do ${ $if $(@expr1073745075 $prepareTest $(@expr1073745076 "symboldatabase78" $) $) ${ $setVerbose $(@expr1073745077 $false $) $; symboldatabase78 $(@expr1073745078 $) $; $} $} $while $(@expr1073745079 $false $) ;
342: $do ${ $if $(@expr1073745080 $prepareTest $(@expr1073745081 "symboldatabase79" $) $) ${ $setVerbose $(@expr1073745082 $false $) $; symboldatabase79 $(@expr1073745083 $) $; $} $} $while $(@expr1073745084 $false $) ;
343: $do ${ $if $(@expr1073745085 $prepareTest $(@expr1073745086 "symboldatabase80" $) $) ${ $setVerbose $(@expr1073745087 $false $) $; symboldatabase80 $(@expr1073745088 $) $; $} $} $while $(@expr1073745089 $false $) ;
344: $do ${ $if $(@expr1073745090 $prepareTest $(@expr1073745091 "symboldatabase81" $) $) ${ $setVerbose $(@expr1073745092 $false $) $; symboldatabase81 $(@expr1073745093 $) $; $} $} $while $(@expr1073745094 $false $) ;
345: $do ${ $if $(@expr1073745095 $prepareTest $(@expr1073745096 "symboldatabase82" $) $) ${ $setVerbose $(@expr1073745097 $false $) $; symboldatabase82 $(@expr1073745098 $) $; $} $} $while $(@expr1073745099 $false $) ;
346: $do ${ $if $(@expr1073745100 $prepareTest $(@expr1073745101 "symboldatabase83" $) $) ${ $setVerbose $(@expr1073745102 $false $) $; symboldatabase83 $(@expr1073745103 $) $; $} $} $while $(@expr1073745104 $false $) ;
347: $do ${ $if $(@expr1073745105 $prepareTest $(@expr1073745106 "symboldatabase84" $) $) ${ $setVerbose $(@expr1073745107 $false $) $; symboldatabase84 $(@expr1073745108 $) $; $} $} $while $(@expr1073745109 $false $) ;
348: $do ${ $if $(@expr1073745110 $prepareTest $(@expr1073745111 "symboldatabase85" $) $) ${ $setVerbose $(@expr1073745112 $false $) $; symboldatabase85 $(@expr1073745113 $) $; $} $} $while $(@expr1073745114 $false $) ;
349: $do ${ $if $(@expr1073745115 $prepareTest $(@expr1073745116 "symboldatabase86" $) $) ${ $setVerbose $(@expr1073745117 $false $) $; symboldatabase86 $(@expr1073745118 $) $; $} $} $while $(@expr1073745119 $false $) ;
350: $do ${ $if $(@expr1073745120 $prepareTest $(@expr1073745121 "symboldatabase87" $) $) ${ $setVerbose $(@expr1073745122 $false $) $; symboldatabase87 $(@expr1073745123 $) $; $} $} $while $(@expr1073745124 $false $) ;
351: $do ${ $if $(@expr1073745125 $prepareTest $(@expr1073745126 "symboldatabase88" $) $) ${ $setVerbose $(@expr1073745127 $false $) $; symboldatabase88 $(@expr1073745128 $) $; $} $} $while $(@expr1073745129 $false $) ;
352: $do ${ $if $(@expr1073745130 $prepareTest $(@expr1073745131 "symboldatabase89" $) $) ${ $setVerbose $(@expr1073745132 $false $) $; symboldatabase89 $(@expr1073745133 $) $; $} $} $while $(@expr1073745134 $false $) ;
353: $do ${ $if $(@expr1073745135 $prepareTest $(@expr1073745136 "symboldatabase90" $) $) ${ $setVerbose $(@expr1073745137 $false $) $; symboldatabase90 $(@expr1073745138 $) $; $} $} $while $(@expr1073745139 $false $) ;
354: $do ${ $if $(@expr1073745140 $prepareTest $(@expr1073745141 "symboldatabase91" $) $) ${ $setVerbose $(@expr1073745142 $false $) $; symboldatabase91 $(@expr1073745143 $) $; $} $} $while $(@expr1073745144 $false $) ;
355: $do ${ $if $(@expr1073745145 $prepareTest $(@expr1073745146 "symboldatabase92" $) $) ${ $setVerbose $(@expr1073745147 $false $) $; symboldatabase92 $(@expr1073745148 $) $; $} $} $while $(@expr1073745149 $false $) ;
356: $do ${ $if $(@expr1073745150 $prepareTest $(@expr1073745151 "symboldatabase93" $) $) ${ $setVerbose $(@expr1073745152 $false $) $; symboldatabase93 $(@expr1073745153 $) $; $} $} $while $(@expr1073745154 $false $) ;
357: $do ${ $if $(@expr1073745155 $prepareTest $(@expr1073745156 "symboldatabase94" $) $) ${ $setVerbose $(@expr1073745157 $false $) $; symboldatabase94 $(@expr1073745158 $) $; $} $} $while $(@expr1073745159 $false $) ;
358: $do ${ $if $(@expr1073745160 $prepareTest $(@expr1073745161 "symboldatabase95" $) $) ${ $setVerbose $(@expr1073745162 $false $) $; symboldatabase95 $(@expr1073745163 $) $; $} $} $while $(@expr1073745164 $false $) ;
359: $do ${ $if $(@expr1073745165 $prepareTest $(@expr1073745166 "symboldatabase96" $) $) ${ $setVerbose $(@expr1073745167 $false $) $; symboldatabase96 $(@expr1073745168 $) $; $} $} $while $(@expr1073745169 $false $) ;
360: $do ${ $if $(@expr1073745170 $prepareTest $(@expr1073745171 "symboldatabase97" $) $) ${ $setVerbose $(@expr1073745172 $false $) $; symboldatabase97 $(@expr1073745173 $) $; $} $} $while $(@expr1073745174 $false $) ;
361: $do ${ $if $(@expr1073745175 $prepareTest $(@expr1073745176 "symboldatabase98" $) $) ${ $setVerbose $(@expr1073745177 $false $) $; symboldatabase98 $(@expr1073745178 $) $; $} $} $while $(@expr1073745179 $false $) ;
362: $do ${ $if $(@expr1073745180 $prepareTest $(@expr1073745181 "symboldatabase99" $) $) ${ $setVerbose $(@expr1073745182 $false $) $; symboldatabase99 $(@expr1073745183 $) $; $} $} $while $(@expr1073745184 $false $) ;
363: $do ${ $if $(@expr1073745185 $prepareTest $(@expr1073745186 "symboldatabase100" $) $) ${ $setVerbose $(@expr1073745187 $false $) $; symboldatabase100 $(@expr1073745188 $) $; $} $} $while $(@expr1073745189 $false $) ;
364:
365: $do ${ $if $(@expr1073745190 $prepareTest $(@expr1073745191 "createSymbolDatabaseFindAllScopes1" $) $) ${ $setVerbose $(@expr1073745192 $false $) $; createSymbolDatabaseFindAllScopes1 $(@expr1073745193 $) $; $} $} $while $(@expr1073745194 $false $) ;
366: $do ${ $if $(@expr1073745195 $prepareTest $(@expr1073745196 "createSymbolDatabaseFindAllScopes2" $) $) ${ $setVerbose $(@expr1073745197 $false $) $; createSymbolDatabaseFindAllScopes2 $(@expr1073745198 $) $; $} $} $while $(@expr1073745199 $false $) ;
367: $do ${ $if $(@expr1073745200 $prepareTest $(@expr1073745201 "createSymbolDatabaseFindAllScopes3" $) $) ${ $setVerbose $(@expr1073745202 $false $) $; createSymbolDatabaseFindAllScopes3 $(@expr1073745203 $) $; $} $} $while $(@expr1073745204 $false $) ;
368: $do ${ $if $(@expr1073745205 $prepareTest $(@expr1073745206 "createSymbolDatabaseFindAllScopes4" $) $) ${ $setVerbose $(@expr1073745207 $false $) $; createSymbolDatabaseFindAllScopes4 $(@expr1073745208 $) $; $} $} $while $(@expr1073745209 $false $) ;
369:
370: $do ${ $if $(@expr1073745210 $prepareTest $(@expr1073745211 "enum1" $) $) ${ $setVerbose $(@expr1073745212 $false $) $; enum1 $(@expr1073745213 $) $; $} $} $while $(@expr1073745214 $false $) ;
371: $do ${ $if $(@expr1073745215 $prepareTest $(@expr1073745216 "enum2" $) $) ${ $setVerbose $(@expr1073745217 $false $) $; enum2 $(@expr1073745218 $) $; $} $} $while $(@expr1073745219 $false $) ;
372: $do ${ $if $(@expr1073745220 $prepareTest $(@expr1073745221 "enum3" $) $) ${ $setVerbose $(@expr1073745222 $false $) $; enum3 $(@expr1073745223 $) $; $} $} $while $(@expr1073745224 $false $) ;
373: $do ${ $if $(@expr1073745225 $prepareTest $(@expr1073745226 "enum4" $) $) ${ $setVerbose $(@expr1073745227 $false $) $; enum4 $(@expr1073745228 $) $; $} $} $while $(@expr1073745229 $false $) ;
374: $do ${ $if $(@expr1073745230 $prepareTest $(@expr1073745231 "enum5" $) $) ${ $setVerbose $(@expr1073745232 $false $) $; enum5 $(@expr1073745233 $) $; $} $} $while $(@expr1073745234 $false $) ;
375: $do ${ $if $(@expr1073745235 $prepareTest $(@expr1073745236 "enum6" $) $) ${ $setVerbose $(@expr1073745237 $false $) $; enum6 $(@expr1073745238 $) $; $} $} $while $(@expr1073745239 $false $) ;
376: $do ${ $if $(@expr1073745240 $prepareTest $(@expr1073745241 "enum7" $) $) ${ $setVerbose $(@expr1073745242 $false $) $; enum7 $(@expr1073745243 $) $; $} $} $while $(@expr1073745244 $false $) ;
377: $do ${ $if $(@expr1073745245 $prepareTest $(@expr1073745246 "enum8" $) $) ${ $setVerbose $(@expr1073745247 $false $) $; enum8 $(@expr1073745248 $) $; $} $} $while $(@expr1073745249 $false $) ;
378: $do ${ $if $(@expr1073745250 $prepareTest $(@expr1073745251 "enum9" $) $) ${ $setVerbose $(@expr1073745252 $false $) $; enum9 $(@expr1073745253 $) $; $} $} $while $(@expr1073745254 $false $) ;
379: $do ${ $if $(@expr1073745255 $prepareTest $(@expr1073745256 "enum10" $) $) ${ $setVerbose $(@expr1073745257 $false $) $; enum10 $(@expr1073745258 $) $; $} $} $while $(@expr1073745259 $false $) ;
380:
381: $do ${ $if $(@expr1073745260 $prepareTest $(@expr1073745261 "sizeOfType" $) $) ${ $setVerbose $(@expr1073745262 $false $) $; sizeOfType $(@expr1073745263 $) $; $} $} $while $(@expr1073745264 $false $) ;
382:
383: $do ${ $if $(@expr1073745265 $prepareTest $(@expr1073745266 "isImplicitlyVirtual" $) $) ${ $setVerbose $(@expr1073745267 $false $) $; isImplicitlyVirtual $(@expr1073745268 $) $; $} $} $while $(@expr1073745269 $false $) ;
384: $do ${ $if $(@expr1073745270 $prepareTest $(@expr1073745271 "isPure" $) $) ${ $setVerbose $(@expr1073745272 $false $) $; isPure $(@expr1073745273 $) $; $} $} $while $(@expr1073745274 $false $) ;
385:
386: $do ${ $if $(@expr1073745275 $prepareTest $(@expr1073745276 "isFunction1" $) $) ${ $setVerbose $(@expr1073745277 $false $) $; isFunction1 $(@expr1073745278 $) $; $} $} $while $(@expr1073745279 $false $) ;
387: $do ${ $if $(@expr1073745280 $prepareTest $(@expr1073745281 "isFunction2" $) $) ${ $setVerbose $(@expr1073745282 $false $) $; isFunction2 $(@expr1073745283 $) $; $} $} $while $(@expr1073745284 $false $) ;
388:
389: $do ${ $if $(@expr1073745285 $prepareTest $(@expr1073745286 "findFunction1" $) $) ${ $setVerbose $(@expr1073745287 $false $) $; findFunction1 $(@expr1073745288 $) $; $} $} $while $(@expr1073745289 $false $) ;
390: $do ${ $if $(@expr1073745290 $prepareTest $(@expr1073745291 "findFunction2" $) $) ${ $setVerbose $(@expr1073745292 $false $) $; findFunction2 $(@expr1073745293 $) $; $} $} $while $(@expr1073745294 $false $) ;
391: $do ${ $if $(@expr1073745295 $prepareTest $(@expr1073745296 "findFunction3" $) $) ${ $setVerbose $(@expr1073745297 $false $) $; findFunction3 $(@expr1073745298 $) $; $} $} $while $(@expr1073745299 $false $) ;
392: $do ${ $if $(@expr1073745300 $prepareTest $(@expr1073745301 "findFunction4" $) $) ${ $setVerbose $(@expr1073745302 $false $) $; findFunction4 $(@expr1073745303 $) $; $} $} $while $(@expr1073745304 $false $) ;
393: $do ${ $if $(@expr1073745305 $prepareTest $(@expr1073745306 "findFunction5" $) $) ${ $setVerbose $(@expr1073745307 $false $) $; findFunction5 $(@expr1073745308 $) $; $} $} $while $(@expr1073745309 $false $) ;
394: $do ${ $if $(@expr1073745310 $prepareTest $(@expr1073745311 "findFunction6" $) $) ${ $setVerbose $(@expr1073745312 $false $) $; findFunction6 $(@expr1073745313 $) $; $} $} $while $(@expr1073745314 $false $) ;
395: $do ${ $if $(@expr1073745315 $prepareTest $(@expr1073745316 "findFunction7" $) $) ${ $setVerbose $(@expr1073745317 $false $) $; findFunction7 $(@expr1073745318 $) $; $} $} $while $(@expr1073745319 $false $) ;
396: $do ${ $if $(@expr1073745320 $prepareTest $(@expr1073745321 "findFunction8" $) $) ${ $setVerbose $(@expr1073745322 $false $) $; findFunction8 $(@expr1073745323 $) $; $} $} $while $(@expr1073745324 $false $) ;
397: $do ${ $if $(@expr1073745325 $prepareTest $(@expr1073745326 "findFunction9" $) $) ${ $setVerbose $(@expr1073745327 $false $) $; findFunction9 $(@expr1073745328 $) $; $} $} $while $(@expr1073745329 $false $) ;
398: $do ${ $if $(@expr1073745330 $prepareTest $(@expr1073745331 "findFunction10" $) $) ${ $setVerbose $(@expr1073745332 $false $) $; findFunction10 $(@expr1073745333 $) $; $} $} $while $(@expr1073745334 $false $) ;
399: $do ${ $if $(@expr1073745335 $prepareTest $(@expr1073745336 "findFunction11" $) $) ${ $setVerbose $(@expr1073745337 $false $) $; findFunction11 $(@expr1073745338 $) $; $} $} $while $(@expr1073745339 $false $) ;
400: $do ${ $if $(@expr1073745340 $prepareTest $(@expr1073745341 "findFunction12" $) $) ${ $setVerbose $(@expr1073745342 $false $) $; findFunction12 $(@expr1073745343 $) $; $} $} $while $(@expr1073745344 $false $) ;
401: $do ${ $if $(@expr1073745345 $prepareTest $(@expr1073745346 "findFunction13" $) $) ${ $setVerbose $(@expr1073745347 $false $) $; findFunction13 $(@expr1073745348 $) $; $} $} $while $(@expr1073745349 $false $) ;
402: $do ${ $if $(@expr1073745350 $prepareTest $(@expr1073745351 "findFunction14" $) $) ${ $setVerbose $(@expr1073745352 $false $) $; findFunction14 $(@expr1073745353 $) $; $} $} $while $(@expr1073745354 $false $) ;
403: $do ${ $if $(@expr1073745355 $prepareTest $(@expr1073745356 "findFunction15" $) $) ${ $setVerbose $(@expr1073745357 $false $) $; findFunction15 $(@expr1073745358 $) $; $} $} $while $(@expr1073745359 $false $) ;
404: $do ${ $if $(@expr1073745360 $prepareTest $(@expr1073745361 "findFunction16" $) $) ${ $setVerbose $(@expr1073745362 $false $) $; findFunction16 $(@expr1073745363 $) $; $} $} $while $(@expr1073745364 $false $) ;
405: $do ${ $if $(@expr1073745365 $prepareTest $(@expr1073745366 "findFunction17" $) $) ${ $setVerbose $(@expr1073745367 $false $) $; findFunction17 $(@expr1073745368 $) $; $} $} $while $(@expr1073745369 $false $) ;
406: $do ${ $if $(@expr1073745370 $prepareTest $(@expr1073745371 "findFunction18" $) $) ${ $setVerbose $(@expr1073745372 $false $) $; findFunction18 $(@expr1073745373 $) $; $} $} $while $(@expr1073745374 $false $) ;
407: $do ${ $if $(@expr1073745375 $prepareTest $(@expr1073745376 "findFunction19" $) $) ${ $setVerbose $(@expr1073745377 $false $) $; findFunction19 $(@expr1073745378 $) $; $} $} $while $(@expr1073745379 $false $) ;
408: $do ${ $if $(@expr1073745380 $prepareTest $(@expr1073745381 "findFunction20" $) $) ${ $setVerbose $(@expr1073745382 $false $) $; findFunction20 $(@expr1073745383 $) $; $} $} $while $(@expr1073745384 $false $) ;
409: $do ${ $if $(@expr1073745385 $prepareTest $(@expr1073745386 "findFunction21" $) $) ${ $setVerbose $(@expr1073745387 $false $) $; findFunction21 $(@expr1073745388 $) $; $} $} $while $(@expr1073745389 $false $) ;
410: $do ${ $if $(@expr1073745390 $prepareTest $(@expr1073745391 "findFunction22" $) $) ${ $setVerbose $(@expr1073745392 $false $) $; findFunction22 $(@expr1073745393 $) $; $} $} $while $(@expr1073745394 $false $) ;
411: $do ${ $if $(@expr1073745395 $prepareTest $(@expr1073745396 "findFunction23" $) $) ${ $setVerbose $(@expr1073745397 $false $) $; findFunction23 $(@expr1073745398 $) $; $} $} $while $(@expr1073745399 $false $) ;
412: $do ${ $if $(@expr1073745400 $prepareTest $(@expr1073745401 "findFunction24" $) $) ${ $setVerbose $(@expr1073745402 $false $) $; findFunction24 $(@expr1073745403 $) $; $} $} $while $(@expr1073745404 $false $) ;
413: $do ${ $if $(@expr1073745405 $prepareTest $(@expr1073745406 "findFunction25" $) $) ${ $setVerbose $(@expr1073745407 $false $) $; findFunction25 $(@expr1073745408 $) $; $} $} $while $(@expr1073745409 $false $) ;
414: $do ${ $if $(@expr1073745410 $prepareTest $(@expr1073745411 "findFunction26" $) $) ${ $setVerbose $(@expr1073745412 $false $) $; findFunction26 $(@expr1073745413 $) $; $} $} $while $(@expr1073745414 $false $) ;
415: $do ${ $if $(@expr1073745415 $prepareTest $(@expr1073745416 "findFunction27" $) $) ${ $setVerbose $(@expr1073745417 $false $) $; findFunction27 $(@expr1073745418 $) $; $} $} $while $(@expr1073745419 $false $) ;
416: $do ${ $if $(@expr1073745420 $prepareTest $(@expr1073745421 "findFunction28" $) $) ${ $setVerbose $(@expr1073745422 $false $) $; findFunction28 $(@expr1073745423 $) $; $} $} $while $(@expr1073745424 $false $) ;
417: $do ${ $if $(@expr1073745425 $prepareTest $(@expr1073745426 "findFunction29" $) $) ${ $setVerbose $(@expr1073745427 $false $) $; findFunction29 $(@expr1073745428 $) $; $} $} $while $(@expr1073745429 $false $) ;
418: $do ${ $if $(@expr1073745430 $prepareTest $(@expr1073745431 "findFunction30" $) $) ${ $setVerbose $(@expr1073745432 $false $) $; findFunction30 $(@expr1073745433 $) $; $} $} $while $(@expr1073745434 $false $) ;
419: $do ${ $if $(@expr1073745435 $prepareTest $(@expr1073745436 "findFunction31" $) $) ${ $setVerbose $(@expr1073745437 $false $) $; findFunction31 $(@expr1073745438 $) $; $} $} $while $(@expr1073745439 $false $) ;
420: $do ${ $if $(@expr1073745440 $prepareTest $(@expr1073745441 "findFunction32" $) $) ${ $setVerbose $(@expr1073745442 $false $) $; findFunction32 $(@expr1073745443 $) $; $} $} $while $(@expr1073745444 $false $) ;
421: $do ${ $if $(@expr1073745445 $prepareTest $(@expr1073745446 "findFunction33" $) $) ${ $setVerbose $(@expr1073745447 $false $) $; findFunction33 $(@expr1073745448 $) $; $} $} $while $(@expr1073745449 $false $) ;
422: $do ${ $if $(@expr1073745450 $prepareTest $(@expr1073745451 "findFunction34" $) $) ${ $setVerbose $(@expr1073745452 $false $) $; findFunction34 $(@expr1073745453 $) $; $} $} $while $(@expr1073745454 $false $) ;
423: $do ${ $if $(@expr1073745455 $prepareTest $(@expr1073745456 "findFunction35" $) $) ${ $setVerbose $(@expr1073745457 $false $) $; findFunction35 $(@expr1073745458 $) $; $} $} $while $(@expr1073745459 $false $) ;
424: $do ${ $if $(@expr1073745460 $prepareTest $(@expr1073745461 "findFunction36" $) $) ${ $setVerbose $(@expr1073745462 $false $) $; findFunction36 $(@expr1073745463 $) $; $} $} $while $(@expr1073745464 $false $) ;
425: $do ${ $if $(@expr1073745465 $prepareTest $(@expr1073745466 "findFunction37" $) $) ${ $setVerbose $(@expr1073745467 $false $) $; findFunction37 $(@expr1073745468 $) $; $} $} $while $(@expr1073745469 $false $) ;
426: $do ${ $if $(@expr1073745470 $prepareTest $(@expr1073745471 "findFunction38" $) $) ${ $setVerbose $(@expr1073745472 $false $) $; findFunction38 $(@expr1073745473 $) $; $} $} $while $(@expr1073745474 $false $) ;
427: $do ${ $if $(@expr1073745475 $prepareTest $(@expr1073745476 "findFunction39" $) $) ${ $setVerbose $(@expr1073745477 $false $) $; findFunction39 $(@expr1073745478 $) $; $} $} $while $(@expr1073745479 $false $) ;
428: $do ${ $if $(@expr1073745480 $prepareTest $(@expr1073745481 "findFunction40" $) $) ${ $setVerbose $(@expr1073745482 $false $) $; findFunction40 $(@expr1073745483 $) $; $} $} $while $(@expr1073745484 $false $) ;
429: $do ${ $if $(@expr1073745485 $prepareTest $(@expr1073745486 "findFunction41" $) $) ${ $setVerbose $(@expr1073745487 $false $) $; findFunction41 $(@expr1073745488 $) $; $} $} $while $(@expr1073745489 $false $) ;
430: $do ${ $if $(@expr1073745490 $prepareTest $(@expr1073745491 "findFunction42" $) $) ${ $setVerbose $(@expr1073745492 $false $) $; findFunction42 $(@expr1073745493 $) $; $} $} $while $(@expr1073745494 $false $) ;
431: $do ${ $if $(@expr1073745495 $prepareTest $(@expr1073745496 "findFunction43" $) $) ${ $setVerbose $(@expr1073745497 $false $) $; findFunction43 $(@expr1073745498 $) $; $} $} $while $(@expr1073745499 $false $) ;
432: $do ${ $if $(@expr1073745500 $prepareTest $(@expr1073745501 "findFunctionContainer" $) $) ${ $setVerbose $(@expr1073745502 $false $) $; findFunctionContainer $(@expr1073745503 $) $; $} $} $while $(@expr1073745504 $false $) ;
433: $do ${ $if $(@expr1073745505 $prepareTest $(@expr1073745506 "findFunctionExternC" $) $) ${ $setVerbose $(@expr1073745507 $false $) $; findFunctionExternC $(@expr1073745508 $) $; $} $} $while $(@expr1073745509 $false $) ;
434: $do ${ $if $(@expr1073745510 $prepareTest $(@expr1073745511 "findFunctionGlobalScope" $) $) ${ $setVerbose $(@expr1073745512 $false $) $; findFunctionGlobalScope $(@expr1073745513 $) $; $} $} $while $(@expr1073745514 $false $) ;
435:
436: $do ${ $if $(@expr1073745515 $prepareTest $(@expr1073745516 "overloadedFunction1" $) $) ${ $setVerbose $(@expr1073745517 $false $) $; overloadedFunction1 $(@expr1073745518 $) $; $} $} $while $(@expr1073745519 $false $) ;
437:
438: $do ${ $if $(@expr1073745520 $prepareTest $(@expr1073745521 "valueTypeMatchParameter" $) $) ${ $setVerbose $(@expr1073745522 $false $) $; valueTypeMatchParameter $(@expr1073745523 $) $; $} $} $while $(@expr1073745524 $false $) ;
439:
440: $do ${ $if $(@expr1073745525 $prepareTest $(@expr1073745526 "noexceptFunction1" $) $) ${ $setVerbose $(@expr1073745527 $false $) $; noexceptFunction1 $(@expr1073745528 $) $; $} $} $while $(@expr1073745529 $false $) ;
441: $do ${ $if $(@expr1073745530 $prepareTest $(@expr1073745531 "noexceptFunction2" $) $) ${ $setVerbose $(@expr1073745532 $false $) $; noexceptFunction2 $(@expr1073745533 $) $; $} $} $while $(@expr1073745534 $false $) ;
442: $do ${ $if $(@expr1073745535 $prepareTest $(@expr1073745536 "noexceptFunction3" $) $) ${ $setVerbose $(@expr1073745537 $false $) $; noexceptFunction3 $(@expr1073745538 $) $; $} $} $while $(@expr1073745539 $false $) ;
443: $do ${ $if $(@expr1073745540 $prepareTest $(@expr1073745541 "noexceptFunction4" $) $) ${ $setVerbose $(@expr1073745542 $false $) $; noexceptFunction4 $(@expr1073745543 $) $; $} $} $while $(@expr1073745544 $false $) ;
444:
445: $do ${ $if $(@expr1073745545 $prepareTest $(@expr1073745546 "throwFunction1" $) $) ${ $setVerbose $(@expr1073745547 $false $) $; throwFunction1 $(@expr1073745548 $) $; $} $} $while $(@expr1073745549 $false $) ;
446: $do ${ $if $(@expr1073745550 $prepareTest $(@expr1073745551 "throwFunction2" $) $) ${ $setVerbose $(@expr1073745552 $false $) $; throwFunction2 $(@expr1073745553 $) $; $} $} $while $(@expr1073745554 $false $) ;
447:
448: $do ${ $if $(@expr1073745555 $prepareTest $(@expr1073745556 "nothrowAttributeFunction" $) $) ${ $setVerbose $(@expr1073745557 $false $) $; nothrowAttributeFunction $(@expr1073745558 $) $; $} $} $while $(@expr1073745559 $false $) ;
449: $do ${ $if $(@expr1073745560 $prepareTest $(@expr1073745561 "nothrowDeclspecFunction" $) $) ${ $setVerbose $(@expr1073745562 $false $) $; nothrowDeclspecFunction $(@expr1073745563 $) $; $} $} $while $(@expr1073745564 $false $) ;
450:
451: $do ${ $if $(@expr1073745565 $prepareTest $(@expr1073745566 "noreturnAttributeFunction" $) $) ${ $setVerbose $(@expr1073745567 $false $) $; noreturnAttributeFunction $(@expr1073745568 $) $; $} $} $while $(@expr1073745569 $false $) ;
452: $do ${ $if $(@expr1073745570 $prepareTest $(@expr1073745571 "nodiscardAttributeFunction" $) $) ${ $setVerbose $(@expr1073745572 $false $) $; nodiscardAttributeFunction $(@expr1073745573 $) $; $} $} $while $(@expr1073745574 $false $) ;
453:
454: $do ${ $if $(@expr1073745575 $prepareTest $(@expr1073745576 "varTypesIntegral" $) $) ${ $setVerbose $(@expr1073745577 $false $) $; varTypesIntegral $(@expr1073745578 $) $; $} $} $while $(@expr1073745579 $false $) ;
455: $do ${ $if $(@expr1073745580 $prepareTest $(@expr1073745581 "varTypesFloating" $) $) ${ $setVerbose $(@expr1073745582 $false $) $; varTypesFloating $(@expr1073745583 $) $; $} $} $while $(@expr1073745584 $false $) ;
456: $do ${ $if $(@expr1073745585 $prepareTest $(@expr1073745586 "varTypesOther" $) $) ${ $setVerbose $(@expr1073745587 $false $) $; varTypesOther $(@expr1073745588 $) $; $} $} $while $(@expr1073745589 $false $) ;
457:
458: $do ${ $if $(@expr1073745590 $prepareTest $(@expr1073745591 "functionPrototype" $) $) ${ $setVerbose $(@expr1073745592 $false $) $; functionPrototype $(@expr1073745593 $) $; $} $} $while $(@expr1073745594 $false $) ;
459:
460: $do ${ $if $(@expr1073745595 $prepareTest $(@expr1073745596 "lambda" $) $) ${ $setVerbose $(@expr1073745597 $false $) $; lambda $(@expr1073745598 $) $; $} $} $while $(@expr1073745599 $false $) ;
461: $do ${ $if $(@expr1073745600 $prepareTest $(@expr1073745601 "lambda2" $) $) ${ $setVerbose $(@expr1073745602 $false $) $; lambda2 $(@expr1073745603 $) $; $} $} $while $(@expr1073745604 $false $) ;
462: $do ${ $if $(@expr1073745605 $prepareTest $(@expr1073745606 "lambda3" $) $) ${ $setVerbose $(@expr1073745607 $false $) $; lambda3 $(@expr1073745608 $) $; $} $} $while $(@expr1073745609 $false $) ;
463:
464: $do ${ $if $(@expr1073745610 $prepareTest $(@expr1073745611 "circularDependencies" $) $) ${ $setVerbose $(@expr1073745612 $false $) $; circularDependencies $(@expr1073745613 $) $; $} $} $while $(@expr1073745614 $false $) ;
465:
466: $do ${ $if $(@expr1073745615 $prepareTest $(@expr1073745616 "executableScopeWithUnknownFunction" $) $) ${ $setVerbose $(@expr1073745617 $false $) $; executableScopeWithUnknownFunction $(@expr1073745618 $) $; $} $} $while $(@expr1073745619 $false $) ;
467:
468: $do ${ $if $(@expr1073745620 $prepareTest $(@expr1073745621 "valuetype" $) $) ${ $setVerbose $(@expr1073745622 $false $) $; valuetype $(@expr1073745623 $) $; $} $} $while $(@expr1073745624 $false $) ;
469:
470: $do ${ $if $(@expr1073745625 $prepareTest $(@expr1073745626 "variadic1" $) $) ${ $setVerbose $(@expr1073745627 $false $) $; variadic1 $(@expr1073745628 $) $; $} $} $while $(@expr1073745629 $false $) ;
471: $do ${ $if $(@expr1073745630 $prepareTest $(@expr1073745631 "variadic2" $) $) ${ $setVerbose $(@expr1073745632 $false $) $; variadic2 $(@expr1073745633 $) $; $} $} $while $(@expr1073745634 $false $) ;
472: $do ${ $if $(@expr1073745635 $prepareTest $(@expr1073745636 "variadic3" $) $) ${ $setVerbose $(@expr1073745637 $false $) $; variadic3 $(@expr1073745638 $) $; $} $} $while $(@expr1073745639 $false $) ;
473:
474: $do ${ $if $(@expr1073745640 $prepareTest $(@expr1073745641 "noReturnType" $) $) ${ $setVerbose $(@expr1073745642 $false $) $; noReturnType $(@expr1073745643 $) $; $} $} $while $(@expr1073745644 $false $) ;
475:
476: $do ${ $if $(@expr1073745645 $prepareTest $(@expr1073745646 "auto1" $) $) ${ $setVerbose $(@expr1073745647 $false $) $; auto1 $(@expr1073745648 $) $; $} $} $while $(@expr1073745649 $false $) ;
477: $do ${ $if $(@expr1073745650 $prepareTest $(@expr1073745651 "auto2" $) $) ${ $setVerbose $(@expr1073745652 $false $) $; auto2 $(@expr1073745653 $) $; $} $} $while $(@expr1073745654 $false $) ;
478: $do ${ $if $(@expr1073745655 $prepareTest $(@expr1073745656 "auto3" $) $) ${ $setVerbose $(@expr1073745657 $false $) $; auto3 $(@expr1073745658 $) $; $} $} $while $(@expr1073745659 $false $) ;
479: $do ${ $if $(@expr1073745660 $prepareTest $(@expr1073745661 "auto4" $) $) ${ $setVerbose $(@expr1073745662 $false $) $; auto4 $(@expr1073745663 $) $; $} $} $while $(@expr1073745664 $false $) ;
480: $do ${ $if $(@expr1073745665 $prepareTest $(@expr1073745666 "auto5" $) $) ${ $setVerbose $(@expr1073745667 $false $) $; auto5 $(@expr1073745668 $) $; $} $} $while $(@expr1073745669 $false $) ;
481: $do ${ $if $(@expr1073745670 $prepareTest $(@expr1073745671 "auto6" $) $) ${ $setVerbose $(@expr1073745672 $false $) $; auto6 $(@expr1073745673 $) $; $} $} $while $(@expr1073745674 $false $) ;
482: $do ${ $if $(@expr1073745675 $prepareTest $(@expr1073745676 "auto7" $) $) ${ $setVerbose $(@expr1073745677 $false $) $; auto7 $(@expr1073745678 $) $; $} $} $while $(@expr1073745679 $false $) ;
483: $do ${ $if $(@expr1073745680 $prepareTest $(@expr1073745681 "auto8" $) $) ${ $setVerbose $(@expr1073745682 $false $) $; auto8 $(@expr1073745683 $) $; $} $} $while $(@expr1073745684 $false $) ;
484: $do ${ $if $(@expr1073745685 $prepareTest $(@expr1073745686 "auto9" $) $) ${ $setVerbose $(@expr1073745687 $false $) $; auto9 $(@expr1073745688 $) $; $} $} $while $(@expr1073745689 $false $) ;
485: $do ${ $if $(@expr1073745690 $prepareTest $(@expr1073745691 "auto10" $) $) ${ $setVerbose $(@expr1073745692 $false $) $; auto10 $(@expr1073745693 $) $; $} $} $while $(@expr1073745694 $false $) ;
486: $do ${ $if $(@expr1073745695 $prepareTest $(@expr1073745696 "auto11" $) $) ${ $setVerbose $(@expr1073745697 $false $) $; auto11 $(@expr1073745698 $) $; $} $} $while $(@expr1073745699 $false $) ;
487: $do ${ $if $(@expr1073745700 $prepareTest $(@expr1073745701 "auto12" $) $) ${ $setVerbose $(@expr1073745702 $false $) $; auto12 $(@expr1073745703 $) $; $} $} $while $(@expr1073745704 $false $) ;
488: $do ${ $if $(@expr1073745705 $prepareTest $(@expr1073745706 "auto13" $) $) ${ $setVerbose $(@expr1073745707 $false $) $; auto13 $(@expr1073745708 $) $; $} $} $while $(@expr1073745709 $false $) ;
489: $do ${ $if $(@expr1073745710 $prepareTest $(@expr1073745711 "auto14" $) $) ${ $setVerbose $(@expr1073745712 $false $) $; auto14 $(@expr1073745713 $) $; $} $} $while $(@expr1073745714 $false $) ;
490: $do ${ $if $(@expr1073745715 $prepareTest $(@expr1073745716 "auto15" $) $) ${ $setVerbose $(@expr1073745717 $false $) $; auto15 $(@expr1073745718 $) $; $} $} $while $(@expr1073745719 $false $) ;
491: $do ${ $if $(@expr1073745720 $prepareTest $(@expr1073745721 "auto16" $) $) ${ $setVerbose $(@expr1073745722 $false $) $; auto16 $(@expr1073745723 $) $; $} $} $while $(@expr1073745724 $false $) ;
492:
493: $do ${ $if $(@expr1073745725 $prepareTest $(@expr1073745726 "unionWithConstructor" $) $) ${ $setVerbose $(@expr1073745727 $false $) $; unionWithConstructor $(@expr1073745728 $) $; $} $} $while $(@expr1073745729 $false $) ;
494:
495: $do ${ $if $(@expr1073745730 $prepareTest $(@expr1073745731 "incomplete_type" $) $) ${ $setVerbose $(@expr1073745732 $false $) $; incomplete_type $(@expr1073745733 $) $; $} $} $while $(@expr1073745734 $false $) ;
496: }
497:
498: void array ( ) {
499: $Tokenizer $tokenizer@var146 $(@expr1073745735 $&@expr1073745736 $settings1@var123 $, $this@expr1073745737 $) $; $const $SymbolDatabase $* $db@var147 $; $db@var147 $=@expr1073745738 $getSymbolDB_inner $(@expr1073745739 $tokenizer@var146 $, "int a[10+2];" $, $"test.c" $) $; $do ${ $} $while $(@expr1073745740 $false $) ;
500: $if $(@expr1073745741 $!@expr1073745742 $assert_ $(@expr1073745743 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 500 $, db@var147 !=@expr1073745744 nullptr $) $) { $return ; }
501:
502: $if $(@expr1073745745 $!@expr1073745746 $assert_ $(@expr1073745747 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 502 $, db@var147 .@expr1073745748 variableList (@expr1073745749 ) .@expr1073745750 size (@expr1073745751 ) ==@expr1073745752 2 $) $) { $return ; }
503: const Variable * v@var148 ; v@var148 =@expr1073745753 db@var147 .@expr1073745754 getVariableFromVarId (@expr1073745755 1 ) ;
504: $if $(@expr1073745756 $!@expr1073745757 $assert_ $(@expr1073745758 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 504 $, v@var148 !=@expr1073745759 nullptr $) $) { $return ; }
505:
506: $if $(@expr1073745760 $!@expr1073745761 $assert_ $(@expr1073745762 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 506 $, v@var148 .@expr1073745763 isArray (@expr1073745764 ) $) $) { $return ; }
507: $if $(@expr1073745765 $!@expr1073745766 $assertEquals $(@expr1073745767 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 507 $, 1U $, v@var148 .@expr1073745768 dimensions (@expr1073745769 ) .@expr1073745770 size (@expr1073745771 ) $) $) { $return ; }
508: $if $(@expr1073745772 $!@expr1073745773 $assertEquals $(@expr1073745774 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 508 $, 12U $, v@var148 .@expr1073745775 dimension (@expr1073745776 0 ) $) $) { $return ; }
509: }
510:
511: void stlarray1 ( ) {
512: $Tokenizer $tokenizer@var149 $(@expr1073745777 $&@expr1073745778 $settings1@var123 $, $this@expr1073745779 $) $; $const $SymbolDatabase $* $db@var150 $; $db@var150 $=@expr1073745780 $getSymbolDB_inner $(@expr1073745781 $tokenizer@var149 $, "std::array<int, 16 + 4> arr;" $, $"test.cpp" $) $; $if $(@expr1073745782 $!@expr1073745783 $assert_ $(@expr1073745784 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 512 $, $db@var150 $) $) { $return $; } $do ${ $} $while $(@expr1073745785 $false $) ;
513: $if $(@expr1073745786 $!@expr1073745787 $assert_ $(@expr1073745788 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 513 $, db@var150 !=@expr1073745789 nullptr $) $) { $return ; }
514:
515: $if $(@expr1073745790 $!@expr1073745791 $assertEquals $(@expr1073745792 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 515 $, 2 $, db@var150 .@expr1073745793 variableList (@expr1073745794 ) .@expr1073745795 size (@expr1073745796 ) $) $) { $return ; }
516: const Variable * v@var151 ; v@var151 =@expr1073745797 db@var150 .@expr1073745798 getVariableFromVarId (@expr1073745799 1 ) ;
517: $if $(@expr1073745800 $!@expr1073745801 $assert_ $(@expr1073745802 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 517 $, v@var151 !=@expr1073745803 nullptr $) $) { $return ; }
518:
519: $if $(@expr1073745804 $!@expr1073745805 $assert_ $(@expr1073745806 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 519 $, v@var151 .@expr1073745807 isArray (@expr1073745808 ) $) $) { $return ; }
520: $if $(@expr1073745809 $!@expr1073745810 $assertEquals $(@expr1073745811 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 520 $, 1U $, v@var151 .@expr1073745812 dimensions (@expr1073745813 ) .@expr1073745814 size (@expr1073745815 ) $) $) { $return ; }
521: $if $(@expr1073745816 $!@expr1073745817 $assertEquals $(@expr1073745818 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 521 $, 20U $, v@var151 .@expr1073745819 dimension (@expr1073745820 0 ) $) $) { $return ; }
522: }
523:
524: void stlarray2 ( ) {
525: $Tokenizer $tokenizer@var152 $(@expr1073745821 $&@expr1073745822 $settings1@var123 $, $this@expr1073745823 $) $; $const $SymbolDatabase $* $db@var153 $; $db@var153 $=@expr1073745824 $getSymbolDB_inner $(@expr1073745825 $tokenizer@var152 $, "constexpr int sz = 16; std::array<int, sz + 4> arr;" $, $"test.cpp" $) $; $if $(@expr1073745826 $!@expr1073745827 $assert_ $(@expr1073745828 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 525 $, $db@var153 $) $) { $return $; } $do ${ $} $while $(@expr1073745829 $false $) ;
526: $if $(@expr1073745830 $!@expr1073745831 $assert_ $(@expr1073745832 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 526 $, db@var153 !=@expr1073745833 nullptr $) $) { $return ; }
527:
528: $if $(@expr1073745834 $!@expr1073745835 $assertEquals $(@expr1073745836 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 528 $, 3 $, db@var153 .@expr1073745837 variableList (@expr1073745838 ) .@expr1073745839 size (@expr1073745840 ) $) $) { $return ; }
529: const Variable * v@var154 ; v@var154 =@expr1073745841 db@var153 .@expr1073745842 getVariableFromVarId (@expr1073745843 2 ) ;
530: $if $(@expr1073745844 $!@expr1073745845 $assert_ $(@expr1073745846 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 530 $, v@var154 !=@expr1073745847 nullptr $) $) { $return ; }
531:
532: $if $(@expr1073745848 $!@expr1073745849 $assert_ $(@expr1073745850 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 532 $, v@var154 .@expr1073745851 isArray (@expr1073745852 ) $) $) { $return ; }
533: $if $(@expr1073745853 $!@expr1073745854 $assertEquals $(@expr1073745855 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 533 $, 1U $, v@var154 .@expr1073745856 dimensions (@expr1073745857 ) .@expr1073745858 size (@expr1073745859 ) $) $) { $return ; }
534: $if $(@expr1073745860 $!@expr1073745861 $assertEquals $(@expr1073745862 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 534 $, 20U $, v@var154 .@expr1073745863 dimension (@expr1073745864 0 ) $) $) { $return ; }
535: }
536:
537: void test_isVariableDeclarationCanHandleNull ( ) {
538: reset (@expr1073745865 ) ;
539: $Tokenizer $tokenizer@var155 $(@expr1073745866 $&@expr1073745867 $settings1@var123 $, $this@expr1073745868 $) $; $const $SymbolDatabase $* $db@var156 $; $db@var156 $=@expr1073745869 $getSymbolDB_inner $(@expr1073745870 $tokenizer@var155 $, "void main(){}" $, $"test.cpp" $) $; $if $(@expr1073745871 $!@expr1073745872 $assert_ $(@expr1073745873 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 539 $, $db@var156 $) $) { $return $; } $do ${ $} $while $(@expr1073745874 $false $) ;
540: const bool result@var157 =@expr1073745875 db@var156 .@expr1073745876 scopeList@var158 .@expr1073745877 front (@expr1073745878 ) .@expr1073745879 isVariableDeclaration (@expr1073745880 nullptr , vartok@var121 , typetok@var122 ) ;
541: $if $(@expr1073745881 $!@expr1073745882 $assertEquals $(@expr1073745883 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 541 $, false $, result@var157 $) $) { $return ; }
542: $if $(@expr1073745884 $!@expr1073745885 $assert_ $(@expr1073745886 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 542 $, nullptr ==@expr1073745887 vartok@var121 $) $) { $return ; }
543: $if $(@expr1073745888 $!@expr1073745889 $assert_ $(@expr1073745890 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 543 $, nullptr ==@expr1073745891 typetok@var122 $) $) { $return ; }
544: Variable v@var159 (@expr1073745892 nullptr , nullptr , nullptr , 0 , AccessControl ::@expr1073745893 Public , nullptr , nullptr , &@expr1073745894 settings1@var123 ) ;
545: }
546:
547: void test_isVariableDeclarationIdentifiesSimpleDeclaration ( ) {
548: reset (@expr1073745895 ) ;
549: $Tokenizer $tokenizer@var160 $(@expr1073745896 $&@expr1073745897 $settings1@var123 $, $this@expr1073745898 $) $; $const $SymbolDatabase $* $db@var161 $; $db@var161 $=@expr1073745899 $getSymbolDB_inner $(@expr1073745900 $tokenizer@var160 $, "int x;" $, $"test.cpp" $) $; $if $(@expr1073745901 $!@expr1073745902 $assert_ $(@expr1073745903 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 549 $, $db@var161 $) $) { $return $; } $do ${ $} $while $(@expr1073745904 $false $) ;
550: const bool result@var162 =@expr1073745905 db@var161 .@expr1073745906 scopeList@var163 .@expr1073745907 front (@expr1073745908 ) .@expr1073745909 isVariableDeclaration (@expr1073745910 tokenizer@var160 .@expr1073745911 tokens (@expr1073745912 ) , vartok@var121 , typetok@var122 ) ;
551: $if $(@expr1073745913 $!@expr1073745914 $assertEquals $(@expr1073745915 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 551 $, true $, result@var162 $) $) { $return ; }
552: $if $(@expr1073745916 $!@expr1073745917 $assertEquals $(@expr1073745918 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 552 $, "x" $, vartok@var121 .@expr1073745919 str (@expr1073745920 ) $) $) { $return ; }
553: $if $(@expr1073745921 $!@expr1073745922 $assertEquals $(@expr1073745923 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 553 $, "int" $, typetok@var122 .@expr1073745924 str (@expr1073745925 ) $) $) { $return ; }
554: Variable v@var164 (@expr1073745926 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073745927 previous (@expr1073745928 ) , 0 , AccessControl ::@expr1073745929 Public , nullptr , nullptr , &@expr1073745930 settings1@var123 ) ;
555: $if $(@expr1073745931 $!@expr1073745932 $assert_ $(@expr1073745933 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 555 $, false ==@expr1073745934 v@var164 .@expr1073745935 isArray (@expr1073745936 ) $) $) { $return ; }
556: $if $(@expr1073745937 $!@expr1073745938 $assert_ $(@expr1073745939 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 556 $, false ==@expr1073745940 v@var164 .@expr1073745941 isPointer (@expr1073745942 ) $) $) { $return ; }
557: $if $(@expr1073745943 $!@expr1073745944 $assert_ $(@expr1073745945 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 557 $, false ==@expr1073745946 v@var164 .@expr1073745947 isReference (@expr1073745948 ) $) $) { $return ; }
558: }
559:
560: void test_isVariableDeclarationIdentifiesInitialization ( ) {
561: reset (@expr1073745949 ) ;
562: $Tokenizer $tokenizer@var165 $(@expr1073745950 $&@expr1073745951 $settings1@var123 $, $this@expr1073745952 $) $; $const $SymbolDatabase $* $db@var166 $; $db@var166 $=@expr1073745953 $getSymbolDB_inner $(@expr1073745954 $tokenizer@var165 $, "int x (1);" $, $"test.cpp" $) $; $if $(@expr1073745955 $!@expr1073745956 $assert_ $(@expr1073745957 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 562 $, $db@var166 $) $) { $return $; } $do ${ $} $while $(@expr1073745958 $false $) ;
563: const bool result@var167 =@expr1073745959 db@var166 .@expr1073745960 scopeList@var168 .@expr1073745961 front (@expr1073745962 ) .@expr1073745963 isVariableDeclaration (@expr1073745964 tokenizer@var165 .@expr1073745965 tokens (@expr1073745966 ) , vartok@var121 , typetok@var122 ) ;
564: $if $(@expr1073745967 $!@expr1073745968 $assertEquals $(@expr1073745969 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 564 $, true $, result@var167 $) $) { $return ; }
565: $if $(@expr1073745970 $!@expr1073745971 $assertEquals $(@expr1073745972 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 565 $, "x" $, vartok@var121 .@expr1073745973 str (@expr1073745974 ) $) $) { $return ; }
566: $if $(@expr1073745975 $!@expr1073745976 $assertEquals $(@expr1073745977 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 566 $, "int" $, typetok@var122 .@expr1073745978 str (@expr1073745979 ) $) $) { $return ; }
567: Variable v@var169 (@expr1073745980 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073745981 previous (@expr1073745982 ) , 0 , AccessControl ::@expr1073745983 Public , nullptr , nullptr , &@expr1073745984 settings1@var123 ) ;
568: $if $(@expr1073745985 $!@expr1073745986 $assert_ $(@expr1073745987 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 568 $, false ==@expr1073745988 v@var169 .@expr1073745989 isArray (@expr1073745990 ) $) $) { $return ; }
569: $if $(@expr1073745991 $!@expr1073745992 $assert_ $(@expr1073745993 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 569 $, false ==@expr1073745994 v@var169 .@expr1073745995 isPointer (@expr1073745996 ) $) $) { $return ; }
570: $if $(@expr1073745997 $!@expr1073745998 $assert_ $(@expr1073745999 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 570 $, false ==@expr1073746000 v@var169 .@expr1073746001 isReference (@expr1073746002 ) $) $) { $return ; }
571: }
572:
573: void test_isVariableDeclarationIdentifiesCpp11Initialization ( ) {
574: reset (@expr1073746003 ) ;
575: $Tokenizer $tokenizer@var170 $(@expr1073746004 $&@expr1073746005 $settings1@var123 $, $this@expr1073746006 $) $; $const $SymbolDatabase $* $db@var171 $; $db@var171 $=@expr1073746007 $getSymbolDB_inner $(@expr1073746008 $tokenizer@var170 $, "int x {1};" $, $"test.cpp" $) $; $if $(@expr1073746009 $!@expr1073746010 $assert_ $(@expr1073746011 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 575 $, $db@var171 $) $) { $return $; } $do ${ $} $while $(@expr1073746012 $false $) ;
576: const bool result@var172 =@expr1073746013 db@var171 .@expr1073746014 scopeList@var173 .@expr1073746015 front (@expr1073746016 ) .@expr1073746017 isVariableDeclaration (@expr1073746018 tokenizer@var170 .@expr1073746019 tokens (@expr1073746020 ) , vartok@var121 , typetok@var122 ) ;
577: $if $(@expr1073746021 $!@expr1073746022 $assertEquals $(@expr1073746023 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 577 $, true $, result@var172 $) $) { $return ; }
578: $if $(@expr1073746024 $!@expr1073746025 $assertEquals $(@expr1073746026 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 578 $, "x" $, vartok@var121 .@expr1073746027 str (@expr1073746028 ) $) $) { $return ; }
579: $if $(@expr1073746029 $!@expr1073746030 $assertEquals $(@expr1073746031 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 579 $, "int" $, typetok@var122 .@expr1073746032 str (@expr1073746033 ) $) $) { $return ; }
580: Variable v@var174 (@expr1073746034 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746035 previous (@expr1073746036 ) , 0 , AccessControl ::@expr1073746037 Public , nullptr , nullptr , &@expr1073746038 settings1@var123 ) ;
581: $if $(@expr1073746039 $!@expr1073746040 $assert_ $(@expr1073746041 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 581 $, false ==@expr1073746042 v@var174 .@expr1073746043 isArray (@expr1073746044 ) $) $) { $return ; }
582: $if $(@expr1073746045 $!@expr1073746046 $assert_ $(@expr1073746047 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 582 $, false ==@expr1073746048 v@var174 .@expr1073746049 isPointer (@expr1073746050 ) $) $) { $return ; }
583: $if $(@expr1073746051 $!@expr1073746052 $assert_ $(@expr1073746053 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 583 $, false ==@expr1073746054 v@var174 .@expr1073746055 isReference (@expr1073746056 ) $) $) { $return ; }
584: }
585:
586: void test_isVariableDeclarationIdentifiesScopedDeclaration ( ) {
587: reset (@expr1073746057 ) ;
588: $Tokenizer $tokenizer@var175 $(@expr1073746058 $&@expr1073746059 $settings1@var123 $, $this@expr1073746060 $) $; $const $SymbolDatabase $* $db@var176 $; $db@var176 $=@expr1073746061 $getSymbolDB_inner $(@expr1073746062 $tokenizer@var175 $, "::int x;" $, $"test.cpp" $) $; $if $(@expr1073746063 $!@expr1073746064 $assert_ $(@expr1073746065 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 588 $, $db@var176 $) $) { $return $; } $do ${ $} $while $(@expr1073746066 $false $) ;
589: const bool result@var177 =@expr1073746067 db@var176 .@expr1073746068 scopeList@var178 .@expr1073746069 front (@expr1073746070 ) .@expr1073746071 isVariableDeclaration (@expr1073746072 tokenizer@var175 .@expr1073746073 tokens (@expr1073746074 ) , vartok@var121 , typetok@var122 ) ;
590: $if $(@expr1073746075 $!@expr1073746076 $assertEquals $(@expr1073746077 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 590 $, true $, result@var177 $) $) { $return ; }
591: $if $(@expr1073746078 $!@expr1073746079 $assertEquals $(@expr1073746080 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 591 $, "x" $, vartok@var121 .@expr1073746081 str (@expr1073746082 ) $) $) { $return ; }
592: $if $(@expr1073746083 $!@expr1073746084 $assertEquals $(@expr1073746085 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 592 $, "int" $, typetok@var122 .@expr1073746086 str (@expr1073746087 ) $) $) { $return ; }
593: Variable v@var179 (@expr1073746088 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746089 previous (@expr1073746090 ) , 0 , AccessControl ::@expr1073746091 Public , nullptr , nullptr , &@expr1073746092 settings1@var123 ) ;
594: $if $(@expr1073746093 $!@expr1073746094 $assert_ $(@expr1073746095 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 594 $, false ==@expr1073746096 v@var179 .@expr1073746097 isArray (@expr1073746098 ) $) $) { $return ; }
595: $if $(@expr1073746099 $!@expr1073746100 $assert_ $(@expr1073746101 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 595 $, false ==@expr1073746102 v@var179 .@expr1073746103 isPointer (@expr1073746104 ) $) $) { $return ; }
596: $if $(@expr1073746105 $!@expr1073746106 $assert_ $(@expr1073746107 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 596 $, false ==@expr1073746108 v@var179 .@expr1073746109 isReference (@expr1073746110 ) $) $) { $return ; }
597: }
598:
599: void test_isVariableDeclarationIdentifiesStdDeclaration ( ) {
600: reset (@expr1073746111 ) ;
601: $Tokenizer $tokenizer@var180 $(@expr1073746112 $&@expr1073746113 $settings1@var123 $, $this@expr1073746114 $) $; $const $SymbolDatabase $* $db@var181 $; $db@var181 $=@expr1073746115 $getSymbolDB_inner $(@expr1073746116 $tokenizer@var180 $, "std::string x;" $, $"test.cpp" $) $; $if $(@expr1073746117 $!@expr1073746118 $assert_ $(@expr1073746119 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 601 $, $db@var181 $) $) { $return $; } $do ${ $} $while $(@expr1073746120 $false $) ;
602: const bool result@var182 =@expr1073746121 db@var181 .@expr1073746122 scopeList@var183 .@expr1073746123 front (@expr1073746124 ) .@expr1073746125 isVariableDeclaration (@expr1073746126 tokenizer@var180 .@expr1073746127 tokens (@expr1073746128 ) , vartok@var121 , typetok@var122 ) ;
603: $if $(@expr1073746129 $!@expr1073746130 $assertEquals $(@expr1073746131 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 603 $, true $, result@var182 $) $) { $return ; }
604: $if $(@expr1073746132 $!@expr1073746133 $assertEquals $(@expr1073746134 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 604 $, "x" $, vartok@var121 .@expr1073746135 str (@expr1073746136 ) $) $) { $return ; }
605: $if $(@expr1073746137 $!@expr1073746138 $assertEquals $(@expr1073746139 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 605 $, "string" $, typetok@var122 .@expr1073746140 str (@expr1073746141 ) $) $) { $return ; }
606: Variable v@var184 (@expr1073746142 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746143 previous (@expr1073746144 ) , 0 , AccessControl ::@expr1073746145 Public , nullptr , nullptr , &@expr1073746146 settings1@var123 ) ;
607: $if $(@expr1073746147 $!@expr1073746148 $assert_ $(@expr1073746149 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 607 $, false ==@expr1073746150 v@var184 .@expr1073746151 isArray (@expr1073746152 ) $) $) { $return ; }
608: $if $(@expr1073746153 $!@expr1073746154 $assert_ $(@expr1073746155 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 608 $, false ==@expr1073746156 v@var184 .@expr1073746157 isPointer (@expr1073746158 ) $) $) { $return ; }
609: $if $(@expr1073746159 $!@expr1073746160 $assert_ $(@expr1073746161 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 609 $, false ==@expr1073746162 v@var184 .@expr1073746163 isReference (@expr1073746164 ) $) $) { $return ; }
610: }
611:
612: void test_isVariableDeclarationIdentifiesScopedStdDeclaration ( ) {
613: reset (@expr1073746165 ) ;
614: $Tokenizer $tokenizer@var185 $(@expr1073746166 $&@expr1073746167 $settings1@var123 $, $this@expr1073746168 $) $; $const $SymbolDatabase $* $db@var186 $; $db@var186 $=@expr1073746169 $getSymbolDB_inner $(@expr1073746170 $tokenizer@var185 $, "::std::string x;" $, $"test.cpp" $) $; $if $(@expr1073746171 $!@expr1073746172 $assert_ $(@expr1073746173 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 614 $, $db@var186 $) $) { $return $; } $do ${ $} $while $(@expr1073746174 $false $) ;
615: const bool result@var187 =@expr1073746175 db@var186 .@expr1073746176 scopeList@var188 .@expr1073746177 front (@expr1073746178 ) .@expr1073746179 isVariableDeclaration (@expr1073746180 tokenizer@var185 .@expr1073746181 tokens (@expr1073746182 ) , vartok@var121 , typetok@var122 ) ;
616: $if $(@expr1073746183 $!@expr1073746184 $assertEquals $(@expr1073746185 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 616 $, true $, result@var187 $) $) { $return ; }
617: $if $(@expr1073746186 $!@expr1073746187 $assertEquals $(@expr1073746188 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 617 $, "x" $, vartok@var121 .@expr1073746189 str (@expr1073746190 ) $) $) { $return ; }
618: $if $(@expr1073746191 $!@expr1073746192 $assertEquals $(@expr1073746193 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 618 $, "string" $, typetok@var122 .@expr1073746194 str (@expr1073746195 ) $) $) { $return ; }
619: Variable v@var189 (@expr1073746196 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746197 previous (@expr1073746198 ) , 0 , AccessControl ::@expr1073746199 Public , nullptr , nullptr , &@expr1073746200 settings1@var123 ) ;
620: $if $(@expr1073746201 $!@expr1073746202 $assert_ $(@expr1073746203 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 620 $, false ==@expr1073746204 v@var189 .@expr1073746205 isArray (@expr1073746206 ) $) $) { $return ; }
621: $if $(@expr1073746207 $!@expr1073746208 $assert_ $(@expr1073746209 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 621 $, false ==@expr1073746210 v@var189 .@expr1073746211 isPointer (@expr1073746212 ) $) $) { $return ; }
622: $if $(@expr1073746213 $!@expr1073746214 $assert_ $(@expr1073746215 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 622 $, false ==@expr1073746216 v@var189 .@expr1073746217 isReference (@expr1073746218 ) $) $) { $return ; }
623: }
624:
625: void test_isVariableDeclarationIdentifiesManyScopes ( ) {
626: reset (@expr1073746219 ) ;
627: $Tokenizer $tokenizer@var190 $(@expr1073746220 $&@expr1073746221 $settings1@var123 $, $this@expr1073746222 $) $; $const $SymbolDatabase $* $db@var191 $; $db@var191 $=@expr1073746223 $getSymbolDB_inner $(@expr1073746224 $tokenizer@var190 $, "AA::BB::CC::DD::EE x;" $, $"test.cpp" $) $; $if $(@expr1073746225 $!@expr1073746226 $assert_ $(@expr1073746227 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 627 $, $db@var191 $) $) { $return $; } $do ${ $} $while $(@expr1073746228 $false $) ;
628: const bool result@var192 =@expr1073746229 db@var191 .@expr1073746230 scopeList@var193 .@expr1073746231 front (@expr1073746232 ) .@expr1073746233 isVariableDeclaration (@expr1073746234 tokenizer@var190 .@expr1073746235 tokens (@expr1073746236 ) , vartok@var121 , typetok@var122 ) ;
629: $if $(@expr1073746237 $!@expr1073746238 $assertEquals $(@expr1073746239 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 629 $, true $, result@var192 $) $) { $return ; }
630: $if $(@expr1073746240 $!@expr1073746241 $assertEquals $(@expr1073746242 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 630 $, "x" $, vartok@var121 .@expr1073746243 str (@expr1073746244 ) $) $) { $return ; }
631: $if $(@expr1073746245 $!@expr1073746246 $assertEquals $(@expr1073746247 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 631 $, "EE" $, typetok@var122 .@expr1073746248 str (@expr1073746249 ) $) $) { $return ; }
632: Variable v@var194 (@expr1073746250 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746251 previous (@expr1073746252 ) , 0 , AccessControl ::@expr1073746253 Public , nullptr , nullptr , &@expr1073746254 settings1@var123 ) ;
633: $if $(@expr1073746255 $!@expr1073746256 $assert_ $(@expr1073746257 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 633 $, false ==@expr1073746258 v@var194 .@expr1073746259 isArray (@expr1073746260 ) $) $) { $return ; }
634: $if $(@expr1073746261 $!@expr1073746262 $assert_ $(@expr1073746263 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 634 $, false ==@expr1073746264 v@var194 .@expr1073746265 isPointer (@expr1073746266 ) $) $) { $return ; }
635: $if $(@expr1073746267 $!@expr1073746268 $assert_ $(@expr1073746269 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 635 $, false ==@expr1073746270 v@var194 .@expr1073746271 isReference (@expr1073746272 ) $) $) { $return ; }
636: }
637:
638: void test_isVariableDeclarationIdentifiesPointers ( ) {
639: {
640: reset (@expr4449 ) ;
641: $Tokenizer $tokenizer@var195 $(@expr1073746274 $&@expr1073746275 $settings1@var123 $, $this@expr4452 $) $; $const $SymbolDatabase $* $db@var196 $; $db@var196 $=@expr1073746277 $getSymbolDB_inner $(@expr1073746278 $tokenizer@var195 $, "int* p;" $, $"test.cpp" $) $; $if $(@expr1073746279 $!@expr1073746280 $assert_ $(@expr1073746281 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 641 $, $db@var196 $) $) { $return $; } $do ${ $} $while $(@expr1073746282 $false $) ;
642: const bool result1@var197 =@expr1073746283 db@var196 .@expr1073746284 scopeList@var198 .@expr1073746285 front (@expr1073746286 ) .@expr1073746287 isVariableDeclaration (@expr1073746288 tokenizer@var195 .@expr1073746289 tokens (@expr1073746290 ) , vartok@var121 , typetok@var122 ) ;
643: $if $(@expr1073746291 $!@expr1073746292 $assertEquals $(@expr1073746293 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 643 $, true $, result1@var197 $) $) { $return ; }
644: $if $(@expr1073746294 $!@expr1073746295 $assertEquals $(@expr1073746296 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 644 $, "p" $, vartok@var121 .@expr4473 str (@expr4474 ) $) $) { $return ; }
645: $if $(@expr1073746299 $!@expr1073746300 $assertEquals $(@expr1073746301 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 645 $, "int" $, typetok@var122 .@expr4478 str (@expr4479 ) $) $) { $return ; }
646: Variable v1@var199 (@expr1073746304 vartok@var121 , typetok@var122 , vartok@var121 .@expr4481 previous (@expr4482 ) , 0 , AccessControl ::@expr4483 Public , nullptr , nullptr , &@expr4484 settings1@var123 ) ;
647: $if $(@expr1073746309 $!@expr1073746310 $assert_ $(@expr1073746311 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 647 $, false ==@expr1073746312 v1@var199 .@expr1073746313 isArray (@expr1073746314 ) $) $) { $return ; }
648: $if $(@expr1073746315 $!@expr1073746316 $assert_ $(@expr1073746317 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 648 $, true ==@expr1073746318 v1@var199 .@expr1073746319 isPointer (@expr1073746320 ) $) $) { $return ; }
649: $if $(@expr1073746321 $!@expr1073746322 $assert_ $(@expr1073746323 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 649 $, false ==@expr1073746324 v1@var199 .@expr1073746325 isReference (@expr1073746326 ) $) $) { $return ; }
650: }
651: {
652: reset (@expr4449 ) ;
653: givenACodeSampleToTokenize constpointer@var200 (@expr1073746328 "const int* p;" ) ;
654: Variable v2@var201 (@expr1073746329 constpointer@var200 .@expr4506 tokens (@expr4507 ) .@expr4508 tokAt (@expr1073746333 3 ) , constpointer@var200 .@expr4506 tokens (@expr4507 ) .@expr1073746336 next (@expr1073746337 ) , constpointer@var200 .@expr4506 tokens (@expr4507 ) .@expr4508 tokAt (@expr1073746341 2 ) , 0 , AccessControl ::@expr4483 Public , nullptr , nullptr , &@expr4484 settings1@var123 ) ;
655: $if $(@expr1073746344 $!@expr1073746345 $assert_ $(@expr1073746346 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 655 $, false ==@expr1073746347 v2@var201 .@expr1073746348 isArray (@expr1073746349 ) $) $) { $return ; }
656: $if $(@expr1073746350 $!@expr1073746351 $assert_ $(@expr1073746352 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 656 $, true ==@expr1073746353 v2@var201 .@expr1073746354 isPointer (@expr1073746355 ) $) $) { $return ; }
657: $if $(@expr1073746356 $!@expr1073746357 $assert_ $(@expr1073746358 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 657 $, false ==@expr1073746359 v2@var201 .@expr1073746360 isConst (@expr1073746361 ) $) $) { $return ; }
658: $if $(@expr1073746362 $!@expr1073746363 $assert_ $(@expr1073746364 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 658 $, false ==@expr1073746365 v2@var201 .@expr1073746366 isReference (@expr1073746367 ) $) $) { $return ; }
659: }
660: {
661: reset (@expr4449 ) ;
662: $Tokenizer $tokenizer@var202 $(@expr1073746369 $&@expr1073746370 $settings1@var123 $, $this@expr4452 $) $; $const $SymbolDatabase $* $db@var203 $; $db@var203 $=@expr1073746371 $getSymbolDB_inner $(@expr1073746372 $tokenizer@var202 $, "int* const p;" $, $"test.cpp" $) $; $if $(@expr1073746373 $!@expr1073746374 $assert_ $(@expr1073746375 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 662 $, $db@var203 $) $) { $return $; } $do ${ $} $while $(@expr1073746376 $false $) ;
663: const bool result2@var204 =@expr1073746377 db@var203 .@expr1073746378 scopeList@var205 .@expr1073746379 front (@expr1073746380 ) .@expr1073746381 isVariableDeclaration (@expr1073746382 tokenizer@var202 .@expr1073746383 tokens (@expr1073746384 ) , vartok@var121 , typetok@var122 ) ;
664: $if $(@expr1073746385 $!@expr1073746386 $assertEquals $(@expr1073746387 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 664 $, true $, result2@var204 $) $) { $return ; }
665: $if $(@expr1073746388 $!@expr1073746389 $assertEquals $(@expr1073746390 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 665 $, "p" $, vartok@var121 .@expr4473 str (@expr4474 ) $) $) { $return ; }
666: $if $(@expr1073746393 $!@expr1073746394 $assertEquals $(@expr1073746395 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 666 $, "int" $, typetok@var122 .@expr4478 str (@expr4479 ) $) $) { $return ; }
667: Variable v3@var206 (@expr1073746398 vartok@var121 , typetok@var122 , vartok@var121 .@expr4481 previous (@expr4482 ) , 0 , AccessControl ::@expr4483 Public , nullptr , nullptr , &@expr4484 settings1@var123 ) ;
668: $if $(@expr1073746403 $!@expr1073746404 $assert_ $(@expr1073746405 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 668 $, false ==@expr1073746406 v3@var206 .@expr1073746407 isArray (@expr1073746408 ) $) $) { $return ; }
669: $if $(@expr1073746409 $!@expr1073746410 $assert_ $(@expr1073746411 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 669 $, true ==@expr1073746412 v3@var206 .@expr1073746413 isPointer (@expr1073746414 ) $) $) { $return ; }
670: $if $(@expr1073746415 $!@expr1073746416 $assert_ $(@expr1073746417 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 670 $, true ==@expr1073746418 v3@var206 .@expr1073746419 isConst (@expr1073746420 ) $) $) { $return ; }
671: $if $(@expr1073746421 $!@expr1073746422 $assert_ $(@expr1073746423 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 671 $, false ==@expr1073746424 v3@var206 .@expr1073746425 isReference (@expr1073746426 ) $) $) { $return ; }
672: }
673: }
674:
675: void test_isVariableDeclarationIdentifiesPointers2 ( ) {
676:
677: $Tokenizer $tokenizer@var207 $(@expr1073746427 $&@expr1073746428 $settings1@var123 $, $this@expr1073746429 $) $; $const $SymbolDatabase $* $db@var208 $; $db@var208 $=@expr1073746430 $getSymbolDB_inner $(@expr1073746431 $tokenizer@var207 $, "void slurpInManifest() {\n  std::string tmpiostring(*tI);\n  if(tmpiostring==\"infoonly\"){}\n}" $, $"test.cpp" $) $; $if $(@expr1073746432 $!@expr1073746433 $assert_ $(@expr1073746434 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 677 $, $db@var208 $) $) { $return $; } $do ${ $} $while $(@expr1073746435 $false $)
678:
679:
680: ;
681:
682: const Token * tok@var209 ; tok@var209 =@expr1073746436 Token ::@expr1073746437 findsimplematch (@expr1073746438 tokenizer@var207 .@expr1073746439 tokens (@expr1073746440 ) , "tmpiostring ==" ) ;
683: $if $(@expr1073746441 $!@expr1073746442 $assert_ $(@expr1073746443 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 683 $, tok@var209 .@expr4620 variable (@expr4621 ) $) $) { $return ; }
684: $if $(@expr1073746446 $!@expr1073746447 $assert_ $(@expr1073746448 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 684 $, !@expr1073746449 tok@var209 .@expr4620 variable (@expr4621 ) .@expr1073746452 isPointer (@expr1073746453 ) $) $) { $return ; }
685: }
686:
687: void test_isVariableDeclarationDoesNotIdentifyConstness ( ) {
688: reset (@expr1073746454 ) ;
689: $Tokenizer $tokenizer@var210 $(@expr1073746455 $&@expr1073746456 $settings1@var123 $, $this@expr1073746457 $) $; $const $SymbolDatabase $* $db@var211 $; $db@var211 $=@expr1073746458 $getSymbolDB_inner $(@expr1073746459 $tokenizer@var210 $, "const int* cp;" $, $"test.cpp" $) $; $if $(@expr1073746460 $!@expr1073746461 $assert_ $(@expr1073746462 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 689 $, $db@var211 $) $) { $return $; } $do ${ $} $while $(@expr1073746463 $false $) ;
690: const bool result@var212 =@expr1073746464 db@var211 .@expr1073746465 scopeList@var213 .@expr1073746466 front (@expr1073746467 ) .@expr1073746468 isVariableDeclaration (@expr1073746469 tokenizer@var210 .@expr1073746470 tokens (@expr1073746471 ) , vartok@var121 , typetok@var122 ) ;
691: $if $(@expr1073746472 $!@expr1073746473 $assertEquals $(@expr1073746474 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 691 $, false $, result@var212 $) $) { $return ; }
692: $if $(@expr1073746475 $!@expr1073746476 $assert_ $(@expr1073746477 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 692 $, nullptr ==@expr1073746478 vartok@var121 $) $) { $return ; }
693: $if $(@expr1073746479 $!@expr1073746480 $assert_ $(@expr1073746481 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 693 $, nullptr ==@expr1073746482 typetok@var122 $) $) { $return ; }
694: }
695:
696: void test_isVariableDeclarationIdentifiesFirstOfManyVariables ( ) {
697: reset (@expr1073746483 ) ;
698: $Tokenizer $tokenizer@var214 $(@expr1073746484 $&@expr1073746485 $settings1@var123 $, $this@expr1073746486 $) $; $const $SymbolDatabase $* $db@var215 $; $db@var215 $=@expr1073746487 $getSymbolDB_inner $(@expr1073746488 $tokenizer@var214 $, "int first, second;" $, $"test.cpp" $) $; $if $(@expr1073746489 $!@expr1073746490 $assert_ $(@expr1073746491 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 698 $, $db@var215 $) $) { $return $; } $do ${ $} $while $(@expr1073746492 $false $) ;
699: const bool result@var216 =@expr1073746493 db@var215 .@expr1073746494 scopeList@var217 .@expr1073746495 front (@expr1073746496 ) .@expr1073746497 isVariableDeclaration (@expr1073746498 tokenizer@var214 .@expr1073746499 tokens (@expr1073746500 ) , vartok@var121 , typetok@var122 ) ;
700: $if $(@expr1073746501 $!@expr1073746502 $assertEquals $(@expr1073746503 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 700 $, true $, result@var216 $) $) { $return ; }
701: $if $(@expr1073746504 $!@expr1073746505 $assertEquals $(@expr1073746506 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 701 $, "first" $, vartok@var121 .@expr1073746507 str (@expr1073746508 ) $) $) { $return ; }
702: $if $(@expr1073746509 $!@expr1073746510 $assertEquals $(@expr1073746511 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 702 $, "int" $, typetok@var122 .@expr1073746512 str (@expr1073746513 ) $) $) { $return ; }
703: Variable v@var218 (@expr1073746514 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746515 previous (@expr1073746516 ) , 0 , AccessControl ::@expr1073746517 Public , nullptr , nullptr , &@expr1073746518 settings1@var123 ) ;
704: $if $(@expr1073746519 $!@expr1073746520 $assert_ $(@expr1073746521 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 704 $, false ==@expr1073746522 v@var218 .@expr1073746523 isArray (@expr1073746524 ) $) $) { $return ; }
705: $if $(@expr1073746525 $!@expr1073746526 $assert_ $(@expr1073746527 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 705 $, false ==@expr1073746528 v@var218 .@expr1073746529 isPointer (@expr1073746530 ) $) $) { $return ; }
706: $if $(@expr1073746531 $!@expr1073746532 $assert_ $(@expr1073746533 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 706 $, false ==@expr1073746534 v@var218 .@expr1073746535 isReference (@expr1073746536 ) $) $) { $return ; }
707: }
708:
709: void test_isVariableDeclarationIdentifiesScopedPointerDeclaration ( ) {
710: reset (@expr1073746537 ) ;
711: $Tokenizer $tokenizer@var219 $(@expr1073746538 $&@expr1073746539 $settings1@var123 $, $this@expr1073746540 $) $; $const $SymbolDatabase $* $db@var220 $; $db@var220 $=@expr1073746541 $getSymbolDB_inner $(@expr1073746542 $tokenizer@var219 $, "AA::BB::CC::DD::EE* p;" $, $"test.cpp" $) $; $if $(@expr1073746543 $!@expr1073746544 $assert_ $(@expr1073746545 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 711 $, $db@var220 $) $) { $return $; } $do ${ $} $while $(@expr1073746546 $false $) ;
712: const bool result@var221 =@expr1073746547 db@var220 .@expr1073746548 scopeList@var222 .@expr1073746549 front (@expr1073746550 ) .@expr1073746551 isVariableDeclaration (@expr1073746552 tokenizer@var219 .@expr1073746553 tokens (@expr1073746554 ) , vartok@var121 , typetok@var122 ) ;
713: $if $(@expr1073746555 $!@expr1073746556 $assertEquals $(@expr1073746557 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 713 $, true $, result@var221 $) $) { $return ; }
714: $if $(@expr1073746558 $!@expr1073746559 $assertEquals $(@expr1073746560 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 714 $, "p" $, vartok@var121 .@expr1073746561 str (@expr1073746562 ) $) $) { $return ; }
715: $if $(@expr1073746563 $!@expr1073746564 $assertEquals $(@expr1073746565 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 715 $, "EE" $, typetok@var122 .@expr1073746566 str (@expr1073746567 ) $) $) { $return ; }
716: Variable v@var223 (@expr1073746568 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746569 previous (@expr1073746570 ) , 0 , AccessControl ::@expr1073746571 Public , nullptr , nullptr , &@expr1073746572 settings1@var123 ) ;
717: $if $(@expr1073746573 $!@expr1073746574 $assert_ $(@expr1073746575 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 717 $, false ==@expr1073746576 v@var223 .@expr1073746577 isArray (@expr1073746578 ) $) $) { $return ; }
718: $if $(@expr1073746579 $!@expr1073746580 $assert_ $(@expr1073746581 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 718 $, true ==@expr1073746582 v@var223 .@expr1073746583 isPointer (@expr1073746584 ) $) $) { $return ; }
719: $if $(@expr1073746585 $!@expr1073746586 $assert_ $(@expr1073746587 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 719 $, false ==@expr1073746588 v@var223 .@expr1073746589 isReference (@expr1073746590 ) $) $) { $return ; }
720: }
721:
722: void test_isVariableDeclarationIdentifiesDeclarationWithIndirection ( ) {
723: reset (@expr1073746591 ) ;
724: $Tokenizer $tokenizer@var224 $(@expr1073746592 $&@expr1073746593 $settings1@var123 $, $this@expr1073746594 $) $; $const $SymbolDatabase $* $db@var225 $; $db@var225 $=@expr1073746595 $getSymbolDB_inner $(@expr1073746596 $tokenizer@var224 $, "int** pp;" $, $"test.cpp" $) $; $if $(@expr1073746597 $!@expr1073746598 $assert_ $(@expr1073746599 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 724 $, $db@var225 $) $) { $return $; } $do ${ $} $while $(@expr1073746600 $false $) ;
725: const bool result@var226 =@expr1073746601 db@var225 .@expr1073746602 scopeList@var227 .@expr1073746603 front (@expr1073746604 ) .@expr1073746605 isVariableDeclaration (@expr1073746606 tokenizer@var224 .@expr1073746607 tokens (@expr1073746608 ) , vartok@var121 , typetok@var122 ) ;
726: $if $(@expr1073746609 $!@expr1073746610 $assertEquals $(@expr1073746611 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 726 $, true $, result@var226 $) $) { $return ; }
727: $if $(@expr1073746612 $!@expr1073746613 $assertEquals $(@expr1073746614 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 727 $, "pp" $, vartok@var121 .@expr1073746615 str (@expr1073746616 ) $) $) { $return ; }
728: $if $(@expr1073746617 $!@expr1073746618 $assertEquals $(@expr1073746619 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 728 $, "int" $, typetok@var122 .@expr1073746620 str (@expr1073746621 ) $) $) { $return ; }
729: Variable v@var228 (@expr1073746622 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746623 previous (@expr1073746624 ) , 0 , AccessControl ::@expr1073746625 Public , nullptr , nullptr , &@expr1073746626 settings1@var123 ) ;
730: $if $(@expr1073746627 $!@expr1073746628 $assert_ $(@expr1073746629 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 730 $, false ==@expr1073746630 v@var228 .@expr1073746631 isArray (@expr1073746632 ) $) $) { $return ; }
731: $if $(@expr1073746633 $!@expr1073746634 $assert_ $(@expr1073746635 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 731 $, true ==@expr1073746636 v@var228 .@expr1073746637 isPointer (@expr1073746638 ) $) $) { $return ; }
732: $if $(@expr1073746639 $!@expr1073746640 $assert_ $(@expr1073746641 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 732 $, false ==@expr1073746642 v@var228 .@expr1073746643 isReference (@expr1073746644 ) $) $) { $return ; }
733: }
734:
735: void test_isVariableDeclarationIdentifiesDeclarationWithMultipleIndirection ( ) {
736: reset (@expr1073746645 ) ;
737: $Tokenizer $tokenizer@var229 $(@expr1073746646 $&@expr1073746647 $settings1@var123 $, $this@expr1073746648 $) $; $const $SymbolDatabase $* $db@var230 $; $db@var230 $=@expr1073746649 $getSymbolDB_inner $(@expr1073746650 $tokenizer@var229 $, "int***** p;" $, $"test.cpp" $) $; $if $(@expr1073746651 $!@expr1073746652 $assert_ $(@expr1073746653 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 737 $, $db@var230 $) $) { $return $; } $do ${ $} $while $(@expr1073746654 $false $) ;
738: const bool result@var231 =@expr1073746655 db@var230 .@expr1073746656 scopeList@var232 .@expr1073746657 front (@expr1073746658 ) .@expr1073746659 isVariableDeclaration (@expr1073746660 tokenizer@var229 .@expr1073746661 tokens (@expr1073746662 ) , vartok@var121 , typetok@var122 ) ;
739: $if $(@expr1073746663 $!@expr1073746664 $assertEquals $(@expr1073746665 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 739 $, true $, result@var231 $) $) { $return ; }
740: $if $(@expr1073746666 $!@expr1073746667 $assertEquals $(@expr1073746668 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 740 $, "p" $, vartok@var121 .@expr1073746669 str (@expr1073746670 ) $) $) { $return ; }
741: $if $(@expr1073746671 $!@expr1073746672 $assertEquals $(@expr1073746673 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 741 $, "int" $, typetok@var122 .@expr1073746674 str (@expr1073746675 ) $) $) { $return ; }
742: Variable v@var233 (@expr1073746676 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746677 previous (@expr1073746678 ) , 0 , AccessControl ::@expr1073746679 Public , nullptr , nullptr , &@expr1073746680 settings1@var123 ) ;
743: $if $(@expr1073746681 $!@expr1073746682 $assert_ $(@expr1073746683 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 743 $, false ==@expr1073746684 v@var233 .@expr1073746685 isArray (@expr1073746686 ) $) $) { $return ; }
744: $if $(@expr1073746687 $!@expr1073746688 $assert_ $(@expr1073746689 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 744 $, true ==@expr1073746690 v@var233 .@expr1073746691 isPointer (@expr1073746692 ) $) $) { $return ; }
745: $if $(@expr1073746693 $!@expr1073746694 $assert_ $(@expr1073746695 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 745 $, false ==@expr1073746696 v@var233 .@expr1073746697 isReference (@expr1073746698 ) $) $) { $return ; }
746: }
747:
748: void test_isVariableDeclarationIdentifiesArray ( ) {
749: reset (@expr1073746699 ) ;
750: $Tokenizer $tokenizer@var234 $(@expr1073746700 $&@expr1073746701 $settings1@var123 $, $this@expr1073746702 $) $; $const $SymbolDatabase $* $db@var235 $; $db@var235 $=@expr1073746703 $getSymbolDB_inner $(@expr1073746704 $tokenizer@var234 $, "::std::string v[3];" $, $"test.cpp" $) $; $if $(@expr1073746705 $!@expr1073746706 $assert_ $(@expr1073746707 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 750 $, $db@var235 $) $) { $return $; } $do ${ $} $while $(@expr1073746708 $false $) ;
751: const bool result@var236 =@expr1073746709 db@var235 .@expr1073746710 scopeList@var237 .@expr1073746711 front (@expr1073746712 ) .@expr1073746713 isVariableDeclaration (@expr1073746714 tokenizer@var234 .@expr1073746715 tokens (@expr1073746716 ) , vartok@var121 , typetok@var122 ) ;
752: $if $(@expr1073746717 $!@expr1073746718 $assertEquals $(@expr1073746719 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 752 $, true $, result@var236 $) $) { $return ; }
753: $if $(@expr1073746720 $!@expr1073746721 $assertEquals $(@expr1073746722 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 753 $, "v" $, vartok@var121 .@expr1073746723 str (@expr1073746724 ) $) $) { $return ; }
754: $if $(@expr1073746725 $!@expr1073746726 $assertEquals $(@expr1073746727 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 754 $, "string" $, typetok@var122 .@expr1073746728 str (@expr1073746729 ) $) $) { $return ; }
755: Variable v@var238 (@expr1073746730 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746731 previous (@expr1073746732 ) , 0 , AccessControl ::@expr1073746733 Public , nullptr , nullptr , &@expr1073746734 settings1@var123 ) ;
756: $if $(@expr1073746735 $!@expr1073746736 $assert_ $(@expr1073746737 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 756 $, true ==@expr1073746738 v@var238 .@expr1073746739 isArray (@expr1073746740 ) $) $) { $return ; }
757: $if $(@expr1073746741 $!@expr1073746742 $assert_ $(@expr1073746743 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 757 $, false ==@expr1073746744 v@var238 .@expr1073746745 isPointer (@expr1073746746 ) $) $) { $return ; }
758: $if $(@expr1073746747 $!@expr1073746748 $assert_ $(@expr1073746749 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 758 $, false ==@expr1073746750 v@var238 .@expr1073746751 isPointerArray (@expr1073746752 ) $) $) { $return ; }
759: $if $(@expr1073746753 $!@expr1073746754 $assert_ $(@expr1073746755 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 759 $, false ==@expr1073746756 v@var238 .@expr1073746757 isReference (@expr1073746758 ) $) $) { $return ; }
760: }
761:
762: void test_isVariableDeclarationIdentifiesPointerArray ( ) {
763: reset (@expr1073746759 ) ;
764: $Tokenizer $tokenizer@var239 $(@expr1073746760 $&@expr1073746761 $settings1@var123 $, $this@expr1073746762 $) $; $const $SymbolDatabase $* $db@var240 $; $db@var240 $=@expr1073746763 $getSymbolDB_inner $(@expr1073746764 $tokenizer@var239 $, "A *a[5];" $, $"test.cpp" $) $; $if $(@expr1073746765 $!@expr1073746766 $assert_ $(@expr1073746767 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 764 $, $db@var240 $) $) { $return $; } $do ${ $} $while $(@expr1073746768 $false $) ;
765: const bool result@var241 =@expr1073746769 db@var240 .@expr1073746770 scopeList@var242 .@expr1073746771 front (@expr1073746772 ) .@expr1073746773 isVariableDeclaration (@expr1073746774 tokenizer@var239 .@expr1073746775 tokens (@expr1073746776 ) , vartok@var121 , typetok@var122 ) ;
766: $if $(@expr1073746777 $!@expr1073746778 $assertEquals $(@expr1073746779 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 766 $, true $, result@var241 $) $) { $return ; }
767: $if $(@expr1073746780 $!@expr1073746781 $assertEquals $(@expr1073746782 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 767 $, "a" $, vartok@var121 .@expr1073746783 str (@expr1073746784 ) $) $) { $return ; }
768: $if $(@expr1073746785 $!@expr1073746786 $assertEquals $(@expr1073746787 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 768 $, "A" $, typetok@var122 .@expr1073746788 str (@expr1073746789 ) $) $) { $return ; }
769: Variable v@var243 (@expr1073746790 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746791 previous (@expr1073746792 ) , 0 , AccessControl ::@expr1073746793 Public , nullptr , nullptr , &@expr1073746794 settings1@var123 ) ;
770: $if $(@expr1073746795 $!@expr1073746796 $assert_ $(@expr1073746797 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 770 $, false ==@expr1073746798 v@var243 .@expr1073746799 isPointer (@expr1073746800 ) $) $) { $return ; }
771: $if $(@expr1073746801 $!@expr1073746802 $assert_ $(@expr1073746803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 771 $, true ==@expr1073746804 v@var243 .@expr1073746805 isArray (@expr1073746806 ) $) $) { $return ; }
772: $if $(@expr1073746807 $!@expr1073746808 $assert_ $(@expr1073746809 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 772 $, false ==@expr1073746810 v@var243 .@expr1073746811 isPointerToArray (@expr1073746812 ) $) $) { $return ; }
773: $if $(@expr1073746813 $!@expr1073746814 $assert_ $(@expr1073746815 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 773 $, true ==@expr1073746816 v@var243 .@expr1073746817 isPointerArray (@expr1073746818 ) $) $) { $return ; }
774: $if $(@expr1073746819 $!@expr1073746820 $assert_ $(@expr1073746821 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 774 $, false ==@expr1073746822 v@var243 .@expr1073746823 isReference (@expr1073746824 ) $) $) { $return ; }
775: }
776:
777: void test_isVariableDeclarationIdentifiesOfArrayPointers ( ) {
778: reset (@expr1073746825 ) ;
779: $Tokenizer $tokenizer@var244 $(@expr1073746826 $&@expr1073746827 $settings1@var123 $, $this@expr1073746828 $) $; $const $SymbolDatabase $* $db@var245 $; $db@var245 $=@expr1073746829 $getSymbolDB_inner $(@expr1073746830 $tokenizer@var244 $, "A (*a)[5];" $, $"test.cpp" $) $; $if $(@expr1073746831 $!@expr1073746832 $assert_ $(@expr1073746833 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 779 $, $db@var245 $) $) { $return $; } $do ${ $} $while $(@expr1073746834 $false $) ;
780: const bool result@var246 =@expr1073746835 db@var245 .@expr1073746836 scopeList@var247 .@expr1073746837 front (@expr1073746838 ) .@expr1073746839 isVariableDeclaration (@expr1073746840 tokenizer@var244 .@expr1073746841 tokens (@expr1073746842 ) , vartok@var121 , typetok@var122 ) ;
781: $if $(@expr1073746843 $!@expr1073746844 $assertEquals $(@expr1073746845 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 781 $, true $, result@var246 $) $) { $return ; }
782: $if $(@expr1073746846 $!@expr1073746847 $assertEquals $(@expr1073746848 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 782 $, "a" $, vartok@var121 .@expr1073746849 str (@expr1073746850 ) $) $) { $return ; }
783: $if $(@expr1073746851 $!@expr1073746852 $assertEquals $(@expr1073746853 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 783 $, "A" $, typetok@var122 .@expr1073746854 str (@expr1073746855 ) $) $) { $return ; }
784: Variable v@var248 (@expr1073746856 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746857 previous (@expr1073746858 ) , 0 , AccessControl ::@expr1073746859 Public , nullptr , nullptr , &@expr1073746860 settings1@var123 ) ;
785: $if $(@expr1073746861 $!@expr1073746862 $assert_ $(@expr1073746863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 785 $, true ==@expr1073746864 v@var248 .@expr1073746865 isPointer (@expr1073746866 ) $) $) { $return ; }
786: $if $(@expr1073746867 $!@expr1073746868 $assert_ $(@expr1073746869 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 786 $, false ==@expr1073746870 v@var248 .@expr1073746871 isArray (@expr1073746872 ) $) $) { $return ; }
787: $if $(@expr1073746873 $!@expr1073746874 $assert_ $(@expr1073746875 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 787 $, true ==@expr1073746876 v@var248 .@expr1073746877 isPointerToArray (@expr1073746878 ) $) $) { $return ; }
788: $if $(@expr1073746879 $!@expr1073746880 $assert_ $(@expr1073746881 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 788 $, false ==@expr1073746882 v@var248 .@expr1073746883 isPointerArray (@expr1073746884 ) $) $) { $return ; }
789: $if $(@expr1073746885 $!@expr1073746886 $assert_ $(@expr1073746887 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 789 $, false ==@expr1073746888 v@var248 .@expr1073746889 isReference (@expr1073746890 ) $) $) { $return ; }
790: }
791:
792: void isVariableDeclarationIdentifiesTemplatedPointerVariable ( ) {
793: reset (@expr1073746891 ) ;
794: $Tokenizer $tokenizer@var249 $(@expr1073746892 $&@expr1073746893 $settings1@var123 $, $this@expr1073746894 $) $; $const $SymbolDatabase $* $db@var250 $; $db@var250 $=@expr1073746895 $getSymbolDB_inner $(@expr1073746896 $tokenizer@var249 $, "std::set<char>* chars;" $, $"test.cpp" $) $; $if $(@expr1073746897 $!@expr1073746898 $assert_ $(@expr1073746899 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 794 $, $db@var250 $) $) { $return $; } $do ${ $} $while $(@expr1073746900 $false $) ;
795: const bool result@var251 =@expr1073746901 db@var250 .@expr1073746902 scopeList@var252 .@expr1073746903 front (@expr1073746904 ) .@expr1073746905 isVariableDeclaration (@expr1073746906 tokenizer@var249 .@expr1073746907 tokens (@expr1073746908 ) , vartok@var121 , typetok@var122 ) ;
796: $if $(@expr1073746909 $!@expr1073746910 $assertEquals $(@expr1073746911 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 796 $, true $, result@var251 $) $) { $return ; }
797: $if $(@expr1073746912 $!@expr1073746913 $assertEquals $(@expr1073746914 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 797 $, "chars" $, vartok@var121 .@expr1073746915 str (@expr1073746916 ) $) $) { $return ; }
798: $if $(@expr1073746917 $!@expr1073746918 $assertEquals $(@expr1073746919 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 798 $, "set" $, typetok@var122 .@expr1073746920 str (@expr1073746921 ) $) $) { $return ; }
799: Variable v@var253 (@expr1073746922 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746923 previous (@expr1073746924 ) , 0 , AccessControl ::@expr1073746925 Public , nullptr , nullptr , &@expr1073746926 settings1@var123 ) ;
800: $if $(@expr1073746927 $!@expr1073746928 $assert_ $(@expr1073746929 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 800 $, false ==@expr1073746930 v@var253 .@expr1073746931 isArray (@expr1073746932 ) $) $) { $return ; }
801: $if $(@expr1073746933 $!@expr1073746934 $assert_ $(@expr1073746935 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 801 $, true ==@expr1073746936 v@var253 .@expr1073746937 isPointer (@expr1073746938 ) $) $) { $return ; }
802: $if $(@expr1073746939 $!@expr1073746940 $assert_ $(@expr1073746941 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 802 $, false ==@expr1073746942 v@var253 .@expr1073746943 isReference (@expr1073746944 ) $) $) { $return ; }
803: }
804:
805: void isVariableDeclarationIdentifiesTemplatedPointerToPointerVariable ( ) {
806: reset (@expr1073746945 ) ;
807: $Tokenizer $tokenizer@var254 $(@expr1073746946 $&@expr1073746947 $settings1@var123 $, $this@expr1073746948 $) $; $const $SymbolDatabase $* $db@var255 $; $db@var255 $=@expr1073746949 $getSymbolDB_inner $(@expr1073746950 $tokenizer@var254 $, "std::deque<int>*** ints;" $, $"test.cpp" $) $; $if $(@expr1073746951 $!@expr1073746952 $assert_ $(@expr1073746953 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 807 $, $db@var255 $) $) { $return $; } $do ${ $} $while $(@expr1073746954 $false $) ;
808: const bool result@var256 =@expr1073746955 db@var255 .@expr1073746956 scopeList@var257 .@expr1073746957 front (@expr1073746958 ) .@expr1073746959 isVariableDeclaration (@expr1073746960 tokenizer@var254 .@expr1073746961 tokens (@expr1073746962 ) , vartok@var121 , typetok@var122 ) ;
809: $if $(@expr1073746963 $!@expr1073746964 $assertEquals $(@expr1073746965 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 809 $, true $, result@var256 $) $) { $return ; }
810: $if $(@expr1073746966 $!@expr1073746967 $assertEquals $(@expr1073746968 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 810 $, "ints" $, vartok@var121 .@expr1073746969 str (@expr1073746970 ) $) $) { $return ; }
811: $if $(@expr1073746971 $!@expr1073746972 $assertEquals $(@expr1073746973 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 811 $, "deque" $, typetok@var122 .@expr1073746974 str (@expr1073746975 ) $) $) { $return ; }
812: Variable v@var258 (@expr1073746976 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073746977 previous (@expr1073746978 ) , 0 , AccessControl ::@expr1073746979 Public , nullptr , nullptr , &@expr1073746980 settings1@var123 ) ;
813: $if $(@expr1073746981 $!@expr1073746982 $assert_ $(@expr1073746983 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 813 $, false ==@expr1073746984 v@var258 .@expr1073746985 isArray (@expr1073746986 ) $) $) { $return ; }
814: $if $(@expr1073746987 $!@expr1073746988 $assert_ $(@expr1073746989 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 814 $, true ==@expr1073746990 v@var258 .@expr1073746991 isPointer (@expr1073746992 ) $) $) { $return ; }
815: $if $(@expr1073746993 $!@expr1073746994 $assert_ $(@expr1073746995 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 815 $, false ==@expr1073746996 v@var258 .@expr1073746997 isReference (@expr1073746998 ) $) $) { $return ; }
816: }
817:
818: void isVariableDeclarationIdentifiesTemplatedArrayVariable ( ) {
819: reset (@expr1073746999 ) ;
820: $Tokenizer $tokenizer@var259 $(@expr1073747000 $&@expr1073747001 $settings1@var123 $, $this@expr1073747002 $) $; $const $SymbolDatabase $* $db@var260 $; $db@var260 $=@expr1073747003 $getSymbolDB_inner $(@expr1073747004 $tokenizer@var259 $, "std::deque<int> ints[3];" $, $"test.cpp" $) $; $if $(@expr1073747005 $!@expr1073747006 $assert_ $(@expr1073747007 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 820 $, $db@var260 $) $) { $return $; } $do ${ $} $while $(@expr1073747008 $false $) ;
821: const bool result@var261 =@expr1073747009 db@var260 .@expr1073747010 scopeList@var262 .@expr1073747011 front (@expr1073747012 ) .@expr1073747013 isVariableDeclaration (@expr1073747014 tokenizer@var259 .@expr1073747015 tokens (@expr1073747016 ) , vartok@var121 , typetok@var122 ) ;
822: $if $(@expr1073747017 $!@expr1073747018 $assertEquals $(@expr1073747019 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 822 $, true $, result@var261 $) $) { $return ; }
823: $if $(@expr1073747020 $!@expr1073747021 $assertEquals $(@expr1073747022 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 823 $, "ints" $, vartok@var121 .@expr1073747023 str (@expr1073747024 ) $) $) { $return ; }
824: $if $(@expr1073747025 $!@expr1073747026 $assertEquals $(@expr1073747027 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 824 $, "deque" $, typetok@var122 .@expr1073747028 str (@expr1073747029 ) $) $) { $return ; }
825: Variable v@var263 (@expr1073747030 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073747031 previous (@expr1073747032 ) , 0 , AccessControl ::@expr1073747033 Public , nullptr , nullptr , &@expr1073747034 settings1@var123 ) ;
826: $if $(@expr1073747035 $!@expr1073747036 $assert_ $(@expr1073747037 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 826 $, true ==@expr1073747038 v@var263 .@expr1073747039 isArray (@expr1073747040 ) $) $) { $return ; }
827: $if $(@expr1073747041 $!@expr1073747042 $assert_ $(@expr1073747043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 827 $, false ==@expr1073747044 v@var263 .@expr1073747045 isPointer (@expr1073747046 ) $) $) { $return ; }
828: $if $(@expr1073747047 $!@expr1073747048 $assert_ $(@expr1073747049 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 828 $, false ==@expr1073747050 v@var263 .@expr1073747051 isReference (@expr1073747052 ) $) $) { $return ; }
829: }
830:
831: void isVariableDeclarationIdentifiesTemplatedVariable ( ) {
832: reset (@expr1073747053 ) ;
833: $Tokenizer $tokenizer@var264 $(@expr1073747054 $&@expr1073747055 $settings1@var123 $, $this@expr1073747056 $) $; $const $SymbolDatabase $* $db@var265 $; $db@var265 $=@expr1073747057 $getSymbolDB_inner $(@expr1073747058 $tokenizer@var264 $, "std::vector<int> ints;" $, $"test.cpp" $) $; $if $(@expr1073747059 $!@expr1073747060 $assert_ $(@expr1073747061 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 833 $, $db@var265 $) $) { $return $; } $do ${ $} $while $(@expr1073747062 $false $) ;
834: const bool result@var266 =@expr1073747063 db@var265 .@expr1073747064 scopeList@var267 .@expr1073747065 front (@expr1073747066 ) .@expr1073747067 isVariableDeclaration (@expr1073747068 tokenizer@var264 .@expr1073747069 tokens (@expr1073747070 ) , vartok@var121 , typetok@var122 ) ;
835: $if $(@expr1073747071 $!@expr1073747072 $assertEquals $(@expr1073747073 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 835 $, true $, result@var266 $) $) { $return ; }
836: $if $(@expr1073747074 $!@expr1073747075 $assertEquals $(@expr1073747076 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 836 $, "ints" $, vartok@var121 .@expr1073747077 str (@expr1073747078 ) $) $) { $return ; }
837: $if $(@expr1073747079 $!@expr1073747080 $assertEquals $(@expr1073747081 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 837 $, "vector" $, typetok@var122 .@expr1073747082 str (@expr1073747083 ) $) $) { $return ; }
838: Variable v@var268 (@expr1073747084 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073747085 previous (@expr1073747086 ) , 0 , AccessControl ::@expr1073747087 Public , nullptr , nullptr , &@expr1073747088 settings1@var123 ) ;
839: $if $(@expr1073747089 $!@expr1073747090 $assert_ $(@expr1073747091 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 839 $, false ==@expr1073747092 v@var268 .@expr1073747093 isArray (@expr1073747094 ) $) $) { $return ; }
840: $if $(@expr1073747095 $!@expr1073747096 $assert_ $(@expr1073747097 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 840 $, false ==@expr1073747098 v@var268 .@expr1073747099 isPointer (@expr1073747100 ) $) $) { $return ; }
841: $if $(@expr1073747101 $!@expr1073747102 $assert_ $(@expr1073747103 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 841 $, false ==@expr1073747104 v@var268 .@expr1073747105 isReference (@expr1073747106 ) $) $) { $return ; }
842: }
843:
844: void isVariableDeclarationIdentifiesTemplatedVariableIterator ( ) {
845: reset (@expr1073747107 ) ;
846: $Tokenizer $tokenizer@var269 $(@expr1073747108 $&@expr1073747109 $settings1@var123 $, $this@expr1073747110 $) $; $const $SymbolDatabase $* $db@var270 $; $db@var270 $=@expr1073747111 $getSymbolDB_inner $(@expr1073747112 $tokenizer@var269 $, "std::list<int>::const_iterator floats;" $, $"test.cpp" $) $; $if $(@expr1073747113 $!@expr1073747114 $assert_ $(@expr1073747115 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 846 $, $db@var270 $) $) { $return $; } $do ${ $} $while $(@expr1073747116 $false $) ;
847: const bool result@var271 =@expr1073747117 db@var270 .@expr1073747118 scopeList@var272 .@expr1073747119 front (@expr1073747120 ) .@expr1073747121 isVariableDeclaration (@expr1073747122 tokenizer@var269 .@expr1073747123 tokens (@expr1073747124 ) , vartok@var121 , typetok@var122 ) ;
848: $if $(@expr1073747125 $!@expr1073747126 $assertEquals $(@expr1073747127 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 848 $, true $, result@var271 $) $) { $return ; }
849: $if $(@expr1073747128 $!@expr1073747129 $assertEquals $(@expr1073747130 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 849 $, "floats" $, vartok@var121 .@expr1073747131 str (@expr1073747132 ) $) $) { $return ; }
850: $if $(@expr1073747133 $!@expr1073747134 $assertEquals $(@expr1073747135 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 850 $, "const_iterator" $, typetok@var122 .@expr1073747136 str (@expr1073747137 ) $) $) { $return ; }
851: Variable v@var273 (@expr1073747138 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073747139 previous (@expr1073747140 ) , 0 , AccessControl ::@expr1073747141 Public , nullptr , nullptr , &@expr1073747142 settings1@var123 ) ;
852: $if $(@expr1073747143 $!@expr1073747144 $assert_ $(@expr1073747145 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 852 $, false ==@expr1073747146 v@var273 .@expr1073747147 isArray (@expr1073747148 ) $) $) { $return ; }
853: $if $(@expr1073747149 $!@expr1073747150 $assert_ $(@expr1073747151 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 853 $, false ==@expr1073747152 v@var273 .@expr1073747153 isPointer (@expr1073747154 ) $) $) { $return ; }
854: $if $(@expr1073747155 $!@expr1073747156 $assert_ $(@expr1073747157 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 854 $, false ==@expr1073747158 v@var273 .@expr1073747159 isReference (@expr1073747160 ) $) $) { $return ; }
855: }
856:
857: void isVariableDeclarationIdentifiesNestedTemplateVariable ( ) {
858: reset (@expr1073747161 ) ;
859: $Tokenizer $tokenizer@var274 $(@expr1073747162 $&@expr1073747163 $settings1@var123 $, $this@expr1073747164 $) $; $const $SymbolDatabase $* $db@var275 $; $db@var275 $=@expr1073747165 $getSymbolDB_inner $(@expr1073747166 $tokenizer@var274 $, "std::deque<std::set<int> > intsets;" $, $"test.cpp" $) $; $if $(@expr1073747167 $!@expr1073747168 $assert_ $(@expr1073747169 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 859 $, $db@var275 $) $) { $return $; } $do ${ $} $while $(@expr1073747170 $false $) ;
860: const bool result@var276 =@expr1073747171 db@var275 .@expr1073747172 scopeList@var277 .@expr1073747173 front (@expr1073747174 ) .@expr1073747175 isVariableDeclaration (@expr1073747176 tokenizer@var274 .@expr1073747177 tokens (@expr1073747178 ) , vartok@var121 , typetok@var122 ) ;
861: $if $(@expr1073747179 $!@expr1073747180 $assertEquals $(@expr1073747181 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 861 $, true $, result@var276 $) $) { $return ; }
862: $if $(@expr1073747182 $!@expr1073747183 $assertEquals $(@expr1073747184 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 862 $, "intsets" $, vartok@var121 .@expr1073747185 str (@expr1073747186 ) $) $) { $return ; }
863: $if $(@expr1073747187 $!@expr1073747188 $assertEquals $(@expr1073747189 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 863 $, "deque" $, typetok@var122 .@expr1073747190 str (@expr1073747191 ) $) $) { $return ; }
864: Variable v@var278 (@expr1073747192 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073747193 previous (@expr1073747194 ) , 0 , AccessControl ::@expr1073747195 Public , nullptr , nullptr , &@expr1073747196 settings1@var123 ) ;
865: $if $(@expr1073747197 $!@expr1073747198 $assert_ $(@expr1073747199 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 865 $, false ==@expr1073747200 v@var278 .@expr1073747201 isArray (@expr1073747202 ) $) $) { $return ; }
866: $if $(@expr1073747203 $!@expr1073747204 $assert_ $(@expr1073747205 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 866 $, false ==@expr1073747206 v@var278 .@expr1073747207 isPointer (@expr1073747208 ) $) $) { $return ; }
867: $if $(@expr1073747209 $!@expr1073747210 $assert_ $(@expr1073747211 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 867 $, false ==@expr1073747212 v@var278 .@expr1073747213 isReference (@expr1073747214 ) $) $) { $return ; }
868: }
869:
870: void isVariableDeclarationIdentifiesReference ( ) {
871: {
872: reset (@expr5391 ) ;
873: $Tokenizer $tokenizer@var279 $(@expr1073747216 $&@expr1073747217 $settings1@var123 $, $this@expr5394 $) $; $const $SymbolDatabase $* $db@var280 $; $db@var280 $=@expr1073747219 $getSymbolDB_inner $(@expr1073747220 $tokenizer@var279 $, "int& foo;" $, $"test.cpp" $) $; $if $(@expr1073747221 $!@expr1073747222 $assert_ $(@expr1073747223 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 873 $, $db@var280 $) $) { $return $; } $do ${ $} $while $(@expr1073747224 $false $) ;
874: const bool result1@var281 =@expr1073747225 db@var280 .@expr1073747226 scopeList@var282 .@expr1073747227 front (@expr1073747228 ) .@expr1073747229 isVariableDeclaration (@expr1073747230 tokenizer@var279 .@expr1073747231 tokens (@expr1073747232 ) , vartok@var121 , typetok@var122 ) ;
875: $if $(@expr1073747233 $!@expr1073747234 $assertEquals $(@expr1073747235 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 875 $, true $, result1@var281 $) $) { $return ; }
876: Variable v1@var283 (@expr1073747236 vartok@var121 , typetok@var122 , vartok@var121 .@expr5413 previous (@expr5414 ) , 0 , AccessControl ::@expr5415 Public , nullptr , nullptr , &@expr5416 settings1@var123 ) ;
877: $if $(@expr1073747241 $!@expr1073747242 $assert_ $(@expr1073747243 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 877 $, false ==@expr1073747244 v1@var283 .@expr1073747245 isArray (@expr1073747246 ) $) $) { $return ; }
878: $if $(@expr1073747247 $!@expr1073747248 $assert_ $(@expr1073747249 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 878 $, false ==@expr1073747250 v1@var283 .@expr1073747251 isPointer (@expr1073747252 ) $) $) { $return ; }
879: $if $(@expr1073747253 $!@expr1073747254 $assert_ $(@expr1073747255 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 879 $, true ==@expr1073747256 v1@var283 .@expr1073747257 isReference (@expr1073747258 ) $) $) { $return ; }
880: }
881: {
882: reset (@expr5391 ) ;
883: $Tokenizer $tokenizer@var284 $(@expr1073747260 $&@expr1073747261 $settings1@var123 $, $this@expr5394 $) $; $const $SymbolDatabase $* $db@var285 $; $db@var285 $=@expr1073747262 $getSymbolDB_inner $(@expr1073747263 $tokenizer@var284 $, "foo*& bar;" $, $"test.cpp" $) $; $if $(@expr1073747264 $!@expr1073747265 $assert_ $(@expr1073747266 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 883 $, $db@var285 $) $) { $return $; } $do ${ $} $while $(@expr1073747267 $false $) ;
884: const bool result2@var286 =@expr1073747268 db@var285 .@expr1073747269 scopeList@var287 .@expr1073747270 front (@expr1073747271 ) .@expr1073747272 isVariableDeclaration (@expr1073747273 tokenizer@var284 .@expr1073747274 tokens (@expr1073747275 ) , vartok@var121 , typetok@var122 ) ;
885: $if $(@expr1073747276 $!@expr1073747277 $assertEquals $(@expr1073747278 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 885 $, true $, result2@var286 $) $) { $return ; }
886: Variable v2@var288 (@expr1073747279 vartok@var121 , typetok@var122 , vartok@var121 .@expr5413 previous (@expr5414 ) , 0 , AccessControl ::@expr5415 Public , nullptr , nullptr , &@expr5416 settings1@var123 ) ;
887: $if $(@expr1073747284 $!@expr1073747285 $assert_ $(@expr1073747286 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 887 $, false ==@expr1073747287 v2@var288 .@expr1073747288 isArray (@expr1073747289 ) $) $) { $return ; }
888: $if $(@expr1073747290 $!@expr1073747291 $assert_ $(@expr1073747292 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 888 $, true ==@expr1073747293 v2@var288 .@expr1073747294 isPointer (@expr1073747295 ) $) $) { $return ; }
889: $if $(@expr1073747296 $!@expr1073747297 $assert_ $(@expr1073747298 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 889 $, true ==@expr1073747299 v2@var288 .@expr1073747300 isReference (@expr1073747301 ) $) $) { $return ; }
890: }
891: {
892: reset (@expr5391 ) ;
893: $Tokenizer $tokenizer@var289 $(@expr1073747303 $&@expr1073747304 $settings1@var123 $, $this@expr5394 $) $; $const $SymbolDatabase $* $db@var290 $; $db@var290 $=@expr1073747305 $getSymbolDB_inner $(@expr1073747306 $tokenizer@var289 $, "std::vector<int>& foo;" $, $"test.cpp" $) $; $if $(@expr1073747307 $!@expr1073747308 $assert_ $(@expr1073747309 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 893 $, $db@var290 $) $) { $return $; } $do ${ $} $while $(@expr1073747310 $false $) ;
894: const bool result3@var291 =@expr1073747311 db@var290 .@expr1073747312 scopeList@var292 .@expr1073747313 front (@expr1073747314 ) .@expr1073747315 isVariableDeclaration (@expr1073747316 tokenizer@var289 .@expr1073747317 tokens (@expr1073747318 ) , vartok@var121 , typetok@var122 ) ;
895: $if $(@expr1073747319 $!@expr1073747320 $assertEquals $(@expr1073747321 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 895 $, true $, result3@var291 $) $) { $return ; }
896: Variable v3@var293 (@expr1073747322 vartok@var121 , typetok@var122 , vartok@var121 .@expr5413 previous (@expr5414 ) , 0 , AccessControl ::@expr5415 Public , nullptr , nullptr , &@expr5416 settings1@var123 ) ;
897: $if $(@expr1073747327 $!@expr1073747328 $assert_ $(@expr1073747329 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 897 $, false ==@expr1073747330 v3@var293 .@expr1073747331 isArray (@expr1073747332 ) $) $) { $return ; }
898: $if $(@expr1073747333 $!@expr1073747334 $assert_ $(@expr1073747335 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 898 $, false ==@expr1073747336 v3@var293 .@expr1073747337 isPointer (@expr1073747338 ) $) $) { $return ; }
899: $if $(@expr1073747339 $!@expr1073747340 $assert_ $(@expr1073747341 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 899 $, true ==@expr1073747342 v3@var293 .@expr1073747343 isReference (@expr1073747344 ) $) $) { $return ; }
900: }
901: }
902:
903: void isVariableDeclarationDoesNotIdentifyTemplateClass ( ) {
904: reset (@expr1073747345 ) ;
905: $Tokenizer $tokenizer@var294 $(@expr1073747346 $&@expr1073747347 $settings1@var123 $, $this@expr1073747348 $) $; $const $SymbolDatabase $* $db@var295 $; $db@var295 $=@expr1073747349 $getSymbolDB_inner $(@expr1073747350 $tokenizer@var294 $, "template <class T> class SomeClass{};" $, $"test.cpp" $) $; $if $(@expr1073747351 $!@expr1073747352 $assert_ $(@expr1073747353 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 905 $, $db@var295 $) $) { $return $; } $do ${ $} $while $(@expr1073747354 $false $) ;
906: const bool result@var296 =@expr1073747355 db@var295 .@expr1073747356 scopeList@var297 .@expr1073747357 front (@expr1073747358 ) .@expr1073747359 isVariableDeclaration (@expr1073747360 tokenizer@var294 .@expr1073747361 tokens (@expr1073747362 ) , vartok@var121 , typetok@var122 ) ;
907: $if $(@expr1073747363 $!@expr1073747364 $assertEquals $(@expr1073747365 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 907 $, false $, result@var296 $) $) { $return ; }
908: }
909:
910: void isVariableDeclarationDoesNotIdentifyCppCast ( ) {
911: reset (@expr1073747366 ) ;
912: $Tokenizer $tokenizer@var298 $(@expr1073747367 $&@expr1073747368 $settings1@var123 $, $this@expr1073747369 $) $; $const $SymbolDatabase $* $db@var299 $; $db@var299 $=@expr1073747370 $getSymbolDB_inner $(@expr1073747371 $tokenizer@var298 $, "reinterpret_cast <char *> (code)[0] = 0;" $, $"test.cpp" $) $; $if $(@expr1073747372 $!@expr1073747373 $assert_ $(@expr1073747374 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 912 $, $db@var299 $) $) { $return $; } $do ${ $} $while $(@expr1073747375 $false $) ;
913: const bool result@var300 =@expr1073747376 db@var299 .@expr1073747377 scopeList@var301 .@expr1073747378 front (@expr1073747379 ) .@expr1073747380 isVariableDeclaration (@expr1073747381 tokenizer@var298 .@expr1073747382 tokens (@expr1073747383 ) , vartok@var121 , typetok@var122 ) ;
914: $if $(@expr1073747384 $!@expr1073747385 $assertEquals $(@expr1073747386 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 914 $, false $, result@var300 $) $) { $return ; }
915: }
916:
917: void isVariableDeclarationPointerConst ( ) {
918: reset (@expr1073747387 ) ;
919: $Tokenizer $tokenizer@var302 $(@expr1073747388 $&@expr1073747389 $settings1@var123 $, $this@expr1073747390 $) $; $const $SymbolDatabase $* $db@var303 $; $db@var303 $=@expr1073747391 $getSymbolDB_inner $(@expr1073747392 $tokenizer@var302 $, "std::string const* s;" $, $"test.cpp" $) $; $if $(@expr1073747393 $!@expr1073747394 $assert_ $(@expr1073747395 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 919 $, $db@var303 $) $) { $return $; } $do ${ $} $while $(@expr1073747396 $false $) ;
920: const bool result@var304 =@expr1073747397 db@var303 .@expr1073747398 scopeList@var305 .@expr1073747399 front (@expr1073747400 ) .@expr1073747401 isVariableDeclaration (@expr1073747402 tokenizer@var302 .@expr1073747403 tokens (@expr1073747404 ) .@expr1073747405 next (@expr1073747406 ) , vartok@var121 , typetok@var122 ) ;
921: $if $(@expr1073747407 $!@expr1073747408 $assertEquals $(@expr1073747409 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 921 $, true $, result@var304 $) $) { $return ; }
922: Variable v@var306 (@expr1073747410 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073747411 previous (@expr1073747412 ) , 0 , AccessControl ::@expr1073747413 Public , nullptr , nullptr , &@expr1073747414 settings1@var123 ) ;
923: $if $(@expr1073747415 $!@expr1073747416 $assert_ $(@expr1073747417 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 923 $, false ==@expr1073747418 v@var306 .@expr1073747419 isArray (@expr1073747420 ) $) $) { $return ; }
924: $if $(@expr1073747421 $!@expr1073747422 $assert_ $(@expr1073747423 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 924 $, true ==@expr1073747424 v@var306 .@expr1073747425 isPointer (@expr1073747426 ) $) $) { $return ; }
925: $if $(@expr1073747427 $!@expr1073747428 $assert_ $(@expr1073747429 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 925 $, false ==@expr1073747430 v@var306 .@expr1073747431 isReference (@expr1073747432 ) $) $) { $return ; }
926: }
927:
928: void isVariableDeclarationRValueRef ( ) {
929: reset (@expr1073747433 ) ;
930: $Tokenizer $tokenizer@var307 $(@expr1073747434 $&@expr1073747435 $settings1@var123 $, $this@expr1073747436 $) $; $const $SymbolDatabase $* $db@var308 $; $db@var308 $=@expr1073747437 $getSymbolDB_inner $(@expr1073747438 $tokenizer@var307 $, "int&& i;" $, $"test.cpp" $) $; $if $(@expr1073747439 $!@expr1073747440 $assert_ $(@expr1073747441 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 930 $, $db@var308 $) $) { $return $; } $do ${ $} $while $(@expr1073747442 $false $) ;
931: const bool result@var309 =@expr1073747443 db@var308 .@expr1073747444 scopeList@var310 .@expr1073747445 front (@expr1073747446 ) .@expr1073747447 isVariableDeclaration (@expr1073747448 tokenizer@var307 .@expr5625 tokens (@expr5626 ) , vartok@var121 , typetok@var122 ) ;
932: $if $(@expr1073747451 $!@expr1073747452 $assertEquals $(@expr1073747453 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 932 $, true $, result@var309 $) $) { $return ; }
933: Variable v@var311 (@expr1073747454 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073747455 previous (@expr1073747456 ) , 0 , AccessControl ::@expr1073747457 Public , nullptr , nullptr , &@expr1073747458 settings1@var123 ) ;
934: $if $(@expr1073747459 $!@expr1073747460 $assert_ $(@expr1073747461 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 934 $, false ==@expr1073747462 v@var311 .@expr1073747463 isArray (@expr1073747464 ) $) $) { $return ; }
935: $if $(@expr1073747465 $!@expr1073747466 $assert_ $(@expr1073747467 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 935 $, false ==@expr1073747468 v@var311 .@expr1073747469 isPointer (@expr1073747470 ) $) $) { $return ; }
936: $if $(@expr1073747471 $!@expr1073747472 $assert_ $(@expr1073747473 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 936 $, true ==@expr1073747474 v@var311 .@expr1073747475 isReference (@expr1073747476 ) $) $) { $return ; }
937: $if $(@expr1073747477 $!@expr1073747478 $assert_ $(@expr1073747479 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 937 $, true ==@expr1073747480 v@var311 .@expr1073747481 isRValueReference (@expr1073747482 ) $) $) { $return ; }
938: $if $(@expr1073747483 $!@expr1073747484 $assert_ $(@expr1073747485 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 938 $, tokenizer@var307 .@expr5625 tokens (@expr5626 ) .@expr1073747488 tokAt (@expr1073747489 2 ) .@expr1073747490 scope (@expr1073747491 ) !=@expr1073747492 nullptr $) $) { $return ; }
939: }
940:
941: void isVariableDeclarationDoesNotIdentifyCase ( ) {
942: $Tokenizer $tokenizer@var312 $(@expr1073747493 $&@expr1073747494 $settings1@var123 $, $this@expr1073747495 $) $; $const $SymbolDatabase $* $db@var313 $; $db@var313 $=@expr1073747496 $getSymbolDB_inner $(@expr1073747497 $tokenizer@var312 $, "a b;\nvoid f() {\n  switch (c) {\n    case b:;\n  }}" $, $"test.c" $) $; $do ${ $} $while $(@expr1073747498 $false $)
943:
|
946:
947: ;
948: const Variable * b@var314 ; b@var314 =@expr1073747499 db@var313 .@expr1073747500 getVariableFromVarId (@expr1073747501 1 ) ;
949: $if $(@expr1073747502 $!@expr1073747503 $assertEquals $(@expr1073747504 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 949 $, "b" $, b@var314 .@expr1073747505 name (@expr1073747506 ) $) $) { $return ; }
950: $if $(@expr1073747507 $!@expr1073747508 $assertEquals $(@expr1073747509 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 950 $, "a" $, b@var314 .@expr1073747510 typeStartToken (@expr1073747511 ) .@expr1073747512 str (@expr1073747513 ) $) $) { $return ; }
951: }
952:
953: void isVariableDeclarationIf ( ) {
954: $Tokenizer $tokenizer@var315 $(@expr1073747514 $&@expr1073747515 $settings1@var123 $, $this@expr1073747516 $) $; $const $SymbolDatabase $* $db@var316 $; $db@var316 $=@expr1073747517 $getSymbolDB_inner $(@expr1073747518 $tokenizer@var315 $, "void foo() {\n    for (auto& elem : items) {\n        if (auto x = bar()) { int y = 3; }\n    }\n}" $, $"test.cpp" $) $; $if $(@expr1073747519 $!@expr1073747520 $assert_ $(@expr1073747521 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 954 $, $db@var316 $) $) { $return $; } $do ${ $} $while $(@expr1073747522 $false $)
955:
956:
957:
958: ;
959: const Token * x@var317 ; x@var317 =@expr1073747523 Token ::@expr5700 findsimplematch (@expr1073747525 tokenizer@var315 .@expr5702 tokens (@expr5703 ) , "x" ) ;
960: $if $(@expr1073747528 $!@expr1073747529 $assert_ $(@expr1073747530 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 960 $, x@var317 $) $) { $return ; }
961: $if $(@expr1073747531 $!@expr1073747532 $assert_ $(@expr1073747533 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 961 $, x@var317 .@expr1073747534 varId (@expr1073747535 ) $) $) { $return ; }
962: $if $(@expr1073747536 $!@expr1073747537 $assert_ $(@expr1073747538 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 962 $, x@var317 .@expr1073747539 variable (@expr1073747540 ) $) $) { $return ; }
963:
964: const Token * y@var318 ; y@var318 =@expr1073747541 Token ::@expr5700 findsimplematch (@expr1073747543 tokenizer@var315 .@expr5702 tokens (@expr5703 ) , "y" ) ;
965: $if $(@expr1073747546 $!@expr1073747547 $assert_ $(@expr1073747548 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 965 $, y@var318 $) $) { $return ; }
966: $if $(@expr1073747549 $!@expr1073747550 $assert_ $(@expr1073747551 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 966 $, y@var318 .@expr1073747552 varId (@expr1073747553 ) $) $) { $return ; }
967: $if $(@expr1073747554 $!@expr1073747555 $assert_ $(@expr1073747556 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 967 $, y@var318 .@expr1073747557 variable (@expr1073747558 ) $) $) { $return ; }
968: }
969:
970: void VariableValueType1 ( ) {
971: $Tokenizer $tokenizer@var319 $(@expr1073747559 $&@expr1073747560 $settings1@var123 $, $this@expr1073747561 $) $; $const $SymbolDatabase $* $db@var320 $; $db@var320 $=@expr1073747562 $getSymbolDB_inner $(@expr1073747563 $tokenizer@var319 $, "typedef uint8_t u8;\nstatic u8 x;" $, $"test.cpp" $) $; $if $(@expr1073747564 $!@expr1073747565 $assert_ $(@expr1073747566 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 971 $, $db@var320 $) $) { $return $; } $do ${ $} $while $(@expr1073747567 $false $)
972: ;
973: const Variable * x@var321 ; x@var321 =@expr1073747568 db@var320 .@expr1073747569 getVariableFromVarId (@expr1073747570 1 ) ;
974: $if $(@expr1073747571 $!@expr1073747572 $assertEquals $(@expr1073747573 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 974 $, "x" $, x@var321 .@expr1073747574 name (@expr1073747575 ) $) $) { $return ; }
975: $if $(@expr1073747576 $!@expr1073747577 $assert_ $(@expr1073747578 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 975 $, x@var321 .@expr1073747579 valueType (@expr1073747580 ) .@expr1073747581 isIntegral (@expr1073747582 ) $) $) { $return ; }
976: }
977:
978: void VariableValueType2 ( ) {
979: $Tokenizer $tokenizer@var322 $(@expr1073747583 $&@expr1073747584 $settings1@var123 $, $this@expr1073747585 $) $; $const $SymbolDatabase $* $db@var323 $; $db@var323 $=@expr1073747586 $getSymbolDB_inner $(@expr1073747587 $tokenizer@var322 $, "using u8 = uint8_t;\nstatic u8 x;" $, $"test.cpp" $) $; $if $(@expr1073747588 $!@expr1073747589 $assert_ $(@expr1073747590 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 979 $, $db@var323 $) $) { $return $; } $do ${ $} $while $(@expr1073747591 $false $)
980: ;
981: const Variable * x@var324 ; x@var324 =@expr1073747592 db@var323 .@expr1073747593 getVariableFromVarId (@expr1073747594 1 ) ;
982: $if $(@expr1073747595 $!@expr1073747596 $assertEquals $(@expr1073747597 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 982 $, "x" $, x@var324 .@expr1073747598 name (@expr1073747599 ) $) $) { $return ; }
983: $if $(@expr1073747600 $!@expr1073747601 $assert_ $(@expr1073747602 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 983 $, x@var324 .@expr1073747603 valueType (@expr1073747604 ) .@expr1073747605 isIntegral (@expr1073747606 ) $) $) { $return ; }
984: }
985:
986: void VariableValueType3 ( ) {
987:
988: {
989: $Tokenizer $tokenizer@var325 $(@expr1073747611 $&@expr1073747612 $settings1@var123 $, $this@expr5789 $) $; $const $SymbolDatabase $* $db@var326 $; $db@var326 $=@expr1073747614 $getSymbolDB_inner $(@expr1073747615 $tokenizer@var325 $, "void f(std::string::size_type x);" $, $"test.cpp" $) $; $if $(@expr1073747616 $!@expr1073747617 $assert_ $(@expr1073747618 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 989 $, $db@var326 $) $) { $return $; } $do ${ $} $while $(@expr1073747619 $false $) ;
990: const Variable * const x@var327 ; x@var327 =@expr1073747620 db@var326 .@expr1073747621 getVariableFromVarId (@expr1073747622 1 ) ;
991: $if $(@expr1073747623 $!@expr1073747624 $assertEquals $(@expr1073747625 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 991 $, "x" $, x@var327 .@expr1073747626 name (@expr1073747627 ) $) $) { $return ; }
992:
993: $todoAssertEquals $(@expr1073747628 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 993 $, ValueType ::@expr5805 Type ::@expr5806 LONGLONG $, ValueType ::@expr5805 Type ::@expr5808 UNKNOWN_INT@expr5783 $, x@var327 .@expr5809 valueType (@expr5810 ) .@expr1073747635 type@expr5784 $) ;
994: $if $(@expr1073747636 $!@expr1073747637 $assertEquals $(@expr1073747638 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 994 $, ValueType ::@expr5815 Sign ::@expr5816 UNSIGNED@expr5785 $, x@var327 .@expr5809 valueType (@expr5810 ) .@expr1073747643 sign@expr5786 $) $) { $return ; }
995: }
996:
997: {
998: $Tokenizer $tokenizer@var328 $(@expr1073747644 $&@expr1073747645 $settings1@var123 $, $this@expr5789 $) $; $const $SymbolDatabase $* $db@var329 $; $db@var329 $=@expr1073747646 $getSymbolDB_inner $(@expr1073747647 $tokenizer@var328 $, "void f(std::wstring::size_type x);" $, $"test.cpp" $) $; $if $(@expr1073747648 $!@expr1073747649 $assert_ $(@expr1073747650 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 998 $, $db@var329 $) $) { $return $; } $do ${ $} $while $(@expr1073747651 $false $) ;
999: const Variable * const x@var330 ; x@var330 =@expr1073747652 db@var329 .@expr1073747653 getVariableFromVarId (@expr1073747654 1 ) ;
1000: $if $(@expr1073747655 $!@expr1073747656 $assertEquals $(@expr1073747657 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1000 $, "x" $, x@var330 .@expr1073747658 name (@expr1073747659 ) $) $) { $return ; }
1001:
1002: $todoAssertEquals $(@expr1073747660 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1002 $, ValueType ::@expr5805 Type ::@expr5806 LONGLONG $, ValueType ::@expr5805 Type ::@expr5808 UNKNOWN_INT@expr5783 $, x@var330 .@expr5841 valueType (@expr5842 ) .@expr1073747667 type@expr5784 $) ;
1003: $if $(@expr1073747668 $!@expr1073747669 $assertEquals $(@expr1073747670 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1003 $, ValueType ::@expr5815 Sign ::@expr5816 UNSIGNED@expr5785 $, x@var330 .@expr5841 valueType (@expr5842 ) .@expr1073747675 sign@expr5786 $) $) { $return ; }
1004: }
1005:
1006: {
1007: $Tokenizer $tokenizer@var331 $(@expr1073747676 $&@expr1073747677 $settings1@var123 $, $this@expr5789 $) $; $const $SymbolDatabase $* $db@var332 $; $db@var332 $=@expr1073747678 $getSymbolDB_inner $(@expr1073747679 $tokenizer@var331 $, "void f(std::u16string::size_type x);" $, $"test.cpp" $) $; $if $(@expr1073747680 $!@expr1073747681 $assert_ $(@expr1073747682 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1007 $, $db@var332 $) $) { $return $; } $do ${ $} $while $(@expr1073747683 $false $) ;
1008: const Variable * const x@var333 ; x@var333 =@expr1073747684 db@var332 .@expr1073747685 getVariableFromVarId (@expr1073747686 1 ) ;
1009: $if $(@expr1073747687 $!@expr1073747688 $assertEquals $(@expr1073747689 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1009 $, "x" $, x@var333 .@expr1073747690 name (@expr1073747691 ) $) $) { $return ; }
1010:
1011: $todoAssertEquals $(@expr1073747692 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1011 $, ValueType ::@expr5805 Type ::@expr5806 LONGLONG $, ValueType ::@expr5805 Type ::@expr5808 UNKNOWN_INT@expr5783 $, x@var333 .@expr5873 valueType (@expr5874 ) .@expr1073747699 type@expr5784 $) ;
1012: $if $(@expr1073747700 $!@expr1073747701 $assertEquals $(@expr1073747702 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1012 $, ValueType ::@expr5815 Sign ::@expr5816 UNSIGNED@expr5785 $, x@var333 .@expr5873 valueType (@expr5874 ) .@expr1073747707 sign@expr5786 $) $) { $return ; }
1013: }
1014:
1015: {
1016: $Tokenizer $tokenizer@var334 $(@expr1073747708 $&@expr1073747709 $settings1@var123 $, $this@expr5789 $) $; $const $SymbolDatabase $* $db@var335 $; $db@var335 $=@expr1073747710 $getSymbolDB_inner $(@expr1073747711 $tokenizer@var334 $, "void f(std::u32string::size_type x);" $, $"test.cpp" $) $; $if $(@expr1073747712 $!@expr1073747713 $assert_ $(@expr1073747714 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1016 $, $db@var335 $) $) { $return $; } $do ${ $} $while $(@expr1073747715 $false $) ;
1017: const Variable * const x@var336 ; x@var336 =@expr1073747716 db@var335 .@expr1073747717 getVariableFromVarId (@expr1073747718 1 ) ;
1018: $if $(@expr1073747719 $!@expr1073747720 $assertEquals $(@expr1073747721 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1018 $, "x" $, x@var336 .@expr1073747722 name (@expr1073747723 ) $) $) { $return ; }
1019:
1020: $todoAssertEquals $(@expr1073747724 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1020 $, ValueType ::@expr5805 Type ::@expr5806 LONGLONG $, ValueType ::@expr5805 Type ::@expr5808 UNKNOWN_INT@expr5783 $, x@var336 .@expr5905 valueType (@expr5906 ) .@expr1073747731 type@expr5784 $) ;
1021: $if $(@expr1073747732 $!@expr1073747733 $assertEquals $(@expr1073747734 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1021 $, ValueType ::@expr5815 Sign ::@expr5816 UNSIGNED@expr5785 $, x@var336 .@expr5905 valueType (@expr5906 ) .@expr1073747739 sign@expr5786 $) $) { $return ; }
1022: }
1023: }
1024:
1025: void VariableValueType4 ( ) {
1026: $Tokenizer $tokenizer@var337 $(@expr1073747741 $&@expr1073747742 $settings1@var123 $, $this@expr1073747743 $) $; $const $SymbolDatabase $* $db@var338 $; $db@var338 $=@expr1073747744 $getSymbolDB_inner $(@expr1073747745 $tokenizer@var337 $, "class C {\npublic:\n  std::shared_ptr<C> x;\n};" $, $"test.cpp" $) $; $if $(@expr1073747746 $!@expr1073747747 $assert_ $(@expr1073747748 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1026 $, $db@var338 $) $) { $return $; } $do ${ $} $while $(@expr1073747749 $false $)
1027:
1028:
1029: ;
1030:
1031: const Variable * const x@var339 ; x@var339 =@expr1073747750 db@var338 .@expr1073747751 getVariableFromVarId (@expr1073747752 1 ) ;
1032: $if $(@expr1073747753 $!@expr1073747754 $assert_ $(@expr1073747755 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1032 $, x@var339 .@expr5932 valueType (@expr5933 ) $) $) { $return ; }
1033: $if $(@expr1073747758 $!@expr1073747759 $assert_ $(@expr1073747760 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1033 $, x@var339 .@expr5932 valueType (@expr5933 ) .@expr1073747763 smartPointerType@expr1073747740 $) $) { $return ; }
1034: }
1035:
1036: void VariableValueType5 ( ) {
1037: $Tokenizer $tokenizer@var340 $(@expr1073747766 $&@expr1073747767 $settings1@var123 $, $this@expr1073747768 $) $; $const $SymbolDatabase $* $db@var341 $; $db@var341 $=@expr1073747769 $getSymbolDB_inner $(@expr1073747770 $tokenizer@var340 $, "class C {};\nvoid foo(std::shared_ptr<C>* p) {}" $, $"test.cpp" $) $; $if $(@expr1073747771 $!@expr1073747772 $assert_ $(@expr1073747773 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1037 $, $db@var341 $) $) { $return $; } $do ${ $} $while $(@expr1073747774 $false $)
1038: ;
1039:
1040: const Variable * const p@var342 ; p@var342 =@expr1073747775 db@var341 .@expr1073747776 getVariableFromVarId (@expr1073747777 1 ) ;
1041: $if $(@expr1073747778 $!@expr1073747779 $assert_ $(@expr1073747780 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1041 $, p@var342 .@expr5957 valueType (@expr5958 ) $) $) { $return ; }
1042: $if $(@expr1073747783 $!@expr1073747784 $assert_ $(@expr1073747785 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1042 $, p@var342 .@expr5957 valueType (@expr5958 ) .@expr1073747788 smartPointerTypeToken@expr1073747764 $) $) { $return ; }
1043: $if $(@expr1073747789 $!@expr1073747790 $assert_ $(@expr1073747791 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1043 $, p@var342 .@expr5957 valueType (@expr5958 ) .@expr1073747794 pointer@expr1073747765 ==@expr1073747795 1 $) $) { $return ; }
1044: }
1045:
1046: void VariableValueTypeReferences ( ) {
1047: {
1048: $Tokenizer $tokenizer@var343 $(@expr1073747802 $&@expr1073747803 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var344 $; $db@var344 $=@expr1073747805 $getSymbolDB_inner $(@expr1073747806 $tokenizer@var343 $, "void foo(int x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073747807 $!@expr1073747808 $assert_ $(@expr1073747809 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1048 $, $db@var344 $) $) { $return $; } $do ${ $} $while $(@expr1073747810 $false $) ;
1049: const Variable * const p@var345 ; p@var345 =@expr1073747811 db@var344 .@expr1073747812 getVariableFromVarId (@expr1073747813 1 ) ;
1050: $if $(@expr1073747814 $!@expr1073747815 $assert_ $(@expr1073747816 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1050 $, p@var345 .@expr5993 valueType (@expr5994 ) $) $) { $return ; }
1051: $if $(@expr1073747819 $!@expr1073747820 $assert_ $(@expr1073747821 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1051 $, p@var345 .@expr5993 valueType (@expr5994 ) .@expr1073747824 pointer@expr5972 ==@expr1073747825 0 $) $) { $return ; }
1052: $if $(@expr1073747826 $!@expr1073747827 $assert_ $(@expr1073747828 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1052 $, p@var345 .@expr5993 valueType (@expr5994 ) .@expr1073747831 constness@expr5973 ==@expr1073747832 0 $) $) { $return ; }
1053: $if $(@expr1073747833 $!@expr1073747834 $assert_ $(@expr1073747835 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1053 $, p@var345 .@expr5993 valueType (@expr5994 ) .@expr1073747838 reference@expr5974 ==@expr1073747839 Reference ::@expr6016 None@expr5975 $) $) { $return ; }
1054: }
1055: {
1056: $Tokenizer $tokenizer@var346 $(@expr1073747841 $&@expr1073747842 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var347 $; $db@var347 $=@expr1073747843 $getSymbolDB_inner $(@expr1073747844 $tokenizer@var346 $, "void foo(int* x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073747845 $!@expr1073747846 $assert_ $(@expr1073747847 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1056 $, $db@var347 $) $) { $return $; } $do ${ $} $while $(@expr1073747848 $false $) ;
1057: const Variable * const p@var348 ; p@var348 =@expr1073747849 db@var347 .@expr1073747850 getVariableFromVarId (@expr1073747851 1 ) ;
1058: $if $(@expr1073747852 $!@expr1073747853 $assert_ $(@expr1073747854 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1058 $, p@var348 .@expr6031 valueType (@expr6032 ) $) $) { $return ; }
1059: $if $(@expr1073747857 $!@expr1073747858 $assert_ $(@expr1073747859 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1059 $, p@var348 .@expr6031 valueType (@expr6032 ) .@expr1073747862 pointer@expr5972 ==@expr1073747863 1 $) $) { $return ; }
1060: $if $(@expr1073747864 $!@expr1073747865 $assert_ $(@expr1073747866 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1060 $, p@var348 .@expr6031 valueType (@expr6032 ) .@expr1073747869 constness@expr5973 ==@expr1073747870 0 $) $) { $return ; }
1061: $if $(@expr1073747871 $!@expr1073747872 $assert_ $(@expr1073747873 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1061 $, p@var348 .@expr6031 valueType (@expr6032 ) .@expr1073747876 reference@expr5974 ==@expr1073747877 Reference ::@expr6016 None@expr5975 $) $) { $return ; }
1062: }
1063: {
1064: $Tokenizer $tokenizer@var349 $(@expr1073747879 $&@expr1073747880 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var350 $; $db@var350 $=@expr1073747881 $getSymbolDB_inner $(@expr1073747882 $tokenizer@var349 $, "void foo(int& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073747883 $!@expr1073747884 $assert_ $(@expr1073747885 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1064 $, $db@var350 $) $) { $return $; } $do ${ $} $while $(@expr1073747886 $false $) ;
1065: const Variable * const p@var351 ; p@var351 =@expr1073747887 db@var350 .@expr1073747888 getVariableFromVarId (@expr1073747889 1 ) ;
1066: $if $(@expr1073747890 $!@expr1073747891 $assert_ $(@expr1073747892 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1066 $, p@var351 .@expr6069 valueType (@expr6070 ) $) $) { $return ; }
1067: $if $(@expr1073747895 $!@expr1073747896 $assert_ $(@expr1073747897 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1067 $, p@var351 .@expr6069 valueType (@expr6070 ) .@expr1073747900 pointer@expr5972 ==@expr1073747901 0 $) $) { $return ; }
1068: $if $(@expr1073747902 $!@expr1073747903 $assert_ $(@expr1073747904 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1068 $, p@var351 .@expr6069 valueType (@expr6070 ) .@expr1073747907 constness@expr5973 ==@expr1073747908 0 $) $) { $return ; }
1069: $if $(@expr1073747909 $!@expr1073747910 $assert_ $(@expr1073747911 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1069 $, p@var351 .@expr6069 valueType (@expr6070 ) .@expr1073747914 reference@expr5974 ==@expr1073747915 Reference ::@expr6092 LValue@expr5976 $) $) { $return ; }
1070: }
1071: {
1072: $Tokenizer $tokenizer@var352 $(@expr1073747917 $&@expr1073747918 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var353 $; $db@var353 $=@expr1073747919 $getSymbolDB_inner $(@expr1073747920 $tokenizer@var352 $, "void foo(int&& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073747921 $!@expr1073747922 $assert_ $(@expr1073747923 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1072 $, $db@var353 $) $) { $return $; } $do ${ $} $while $(@expr1073747924 $false $) ;
1073: const Variable * const p@var354 ; p@var354 =@expr1073747925 db@var353 .@expr1073747926 getVariableFromVarId (@expr1073747927 1 ) ;
1074: $if $(@expr1073747928 $!@expr1073747929 $assert_ $(@expr1073747930 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1074 $, p@var354 .@expr6107 valueType (@expr6108 ) $) $) { $return ; }
1075: $if $(@expr1073747933 $!@expr1073747934 $assert_ $(@expr1073747935 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1075 $, p@var354 .@expr6107 valueType (@expr6108 ) .@expr1073747938 pointer@expr5972 ==@expr1073747939 0 $) $) { $return ; }
1076: $if $(@expr1073747940 $!@expr1073747941 $assert_ $(@expr1073747942 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1076 $, p@var354 .@expr6107 valueType (@expr6108 ) .@expr1073747945 constness@expr5973 ==@expr1073747946 0 $) $) { $return ; }
1077: $if $(@expr1073747947 $!@expr1073747948 $assert_ $(@expr1073747949 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1077 $, p@var354 .@expr6107 valueType (@expr6108 ) .@expr1073747952 reference@expr5974 ==@expr1073747953 Reference ::@expr6130 RValue@expr5977 $) $) { $return ; }
1078: }
1079: {
1080: $Tokenizer $tokenizer@var355 $(@expr1073747955 $&@expr1073747956 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var356 $; $db@var356 $=@expr1073747957 $getSymbolDB_inner $(@expr1073747958 $tokenizer@var355 $, "void foo(int*& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073747959 $!@expr1073747960 $assert_ $(@expr1073747961 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1080 $, $db@var356 $) $) { $return $; } $do ${ $} $while $(@expr1073747962 $false $) ;
1081: const Variable * const p@var357 ; p@var357 =@expr1073747963 db@var356 .@expr1073747964 getVariableFromVarId (@expr1073747965 1 ) ;
1082: $if $(@expr1073747966 $!@expr1073747967 $assert_ $(@expr1073747968 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1082 $, p@var357 .@expr6145 valueType (@expr6146 ) $) $) { $return ; }
1083: $if $(@expr1073747971 $!@expr1073747972 $assert_ $(@expr1073747973 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1083 $, p@var357 .@expr6145 valueType (@expr6146 ) .@expr1073747976 pointer@expr5972 ==@expr1073747977 1 $) $) { $return ; }
1084: $if $(@expr1073747978 $!@expr1073747979 $assert_ $(@expr1073747980 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1084 $, p@var357 .@expr6145 valueType (@expr6146 ) .@expr1073747983 constness@expr5973 ==@expr1073747984 0 $) $) { $return ; }
1085: $if $(@expr1073747985 $!@expr1073747986 $assert_ $(@expr1073747987 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1085 $, p@var357 .@expr6145 valueType (@expr6146 ) .@expr1073747990 reference@expr5974 ==@expr1073747991 Reference ::@expr6092 LValue@expr5976 $) $) { $return ; }
1086: }
1087: {
1088: $Tokenizer $tokenizer@var358 $(@expr1073747993 $&@expr1073747994 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var359 $; $db@var359 $=@expr1073747995 $getSymbolDB_inner $(@expr1073747996 $tokenizer@var358 $, "void foo(int*&& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073747997 $!@expr1073747998 $assert_ $(@expr1073747999 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1088 $, $db@var359 $) $) { $return $; } $do ${ $} $while $(@expr1073748000 $false $) ;
1089: const Variable * const p@var360 ; p@var360 =@expr1073748001 db@var359 .@expr1073748002 getVariableFromVarId (@expr1073748003 1 ) ;
1090: $if $(@expr1073748004 $!@expr1073748005 $assert_ $(@expr1073748006 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1090 $, p@var360 .@expr6183 valueType (@expr6184 ) $) $) { $return ; }
1091: $if $(@expr1073748009 $!@expr1073748010 $assert_ $(@expr1073748011 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1091 $, p@var360 .@expr6183 valueType (@expr6184 ) .@expr1073748014 pointer@expr5972 ==@expr1073748015 1 $) $) { $return ; }
1092: $if $(@expr1073748016 $!@expr1073748017 $assert_ $(@expr1073748018 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1092 $, p@var360 .@expr6183 valueType (@expr6184 ) .@expr1073748021 constness@expr5973 ==@expr1073748022 0 $) $) { $return ; }
1093: $if $(@expr1073748023 $!@expr1073748024 $assert_ $(@expr1073748025 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1093 $, p@var360 .@expr6183 valueType (@expr6184 ) .@expr1073748028 reference@expr5974 ==@expr1073748029 Reference ::@expr6130 RValue@expr5977 $) $) { $return ; }
1094: }
1095: {
1096: $Tokenizer $tokenizer@var361 $(@expr1073748031 $&@expr1073748032 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var362 $; $db@var362 $=@expr1073748033 $getSymbolDB_inner $(@expr1073748034 $tokenizer@var361 $, "void foo(int**& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073748035 $!@expr1073748036 $assert_ $(@expr1073748037 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1096 $, $db@var362 $) $) { $return $; } $do ${ $} $while $(@expr1073748038 $false $) ;
1097: const Variable * const p@var363 ; p@var363 =@expr1073748039 db@var362 .@expr1073748040 getVariableFromVarId (@expr1073748041 1 ) ;
1098: $if $(@expr1073748042 $!@expr1073748043 $assert_ $(@expr1073748044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1098 $, p@var363 .@expr6221 valueType (@expr6222 ) $) $) { $return ; }
1099: $if $(@expr1073748047 $!@expr1073748048 $assert_ $(@expr1073748049 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1099 $, p@var363 .@expr6221 valueType (@expr6222 ) .@expr1073748052 pointer@expr5972 ==@expr1073748053 2 $) $) { $return ; }
1100: $if $(@expr1073748054 $!@expr1073748055 $assert_ $(@expr1073748056 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1100 $, p@var363 .@expr6221 valueType (@expr6222 ) .@expr1073748059 constness@expr5973 ==@expr1073748060 0 $) $) { $return ; }
1101: $if $(@expr1073748061 $!@expr1073748062 $assert_ $(@expr1073748063 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1101 $, p@var363 .@expr6221 valueType (@expr6222 ) .@expr1073748066 reference@expr5974 ==@expr1073748067 Reference ::@expr6092 LValue@expr5976 $) $) { $return ; }
1102: }
1103: {
1104: $Tokenizer $tokenizer@var364 $(@expr1073748069 $&@expr1073748070 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var365 $; $db@var365 $=@expr1073748071 $getSymbolDB_inner $(@expr1073748072 $tokenizer@var364 $, "void foo(int**&& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073748073 $!@expr1073748074 $assert_ $(@expr1073748075 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1104 $, $db@var365 $) $) { $return $; } $do ${ $} $while $(@expr1073748076 $false $) ;
1105: const Variable * const p@var366 ; p@var366 =@expr1073748077 db@var365 .@expr1073748078 getVariableFromVarId (@expr1073748079 1 ) ;
1106: $if $(@expr1073748080 $!@expr1073748081 $assert_ $(@expr1073748082 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1106 $, p@var366 .@expr6259 valueType (@expr6260 ) $) $) { $return ; }
1107: $if $(@expr1073748085 $!@expr1073748086 $assert_ $(@expr1073748087 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1107 $, p@var366 .@expr6259 valueType (@expr6260 ) .@expr1073748090 pointer@expr5972 ==@expr1073748091 2 $) $) { $return ; }
1108: $if $(@expr1073748092 $!@expr1073748093 $assert_ $(@expr1073748094 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1108 $, p@var366 .@expr6259 valueType (@expr6260 ) .@expr1073748097 constness@expr5973 ==@expr1073748098 0 $) $) { $return ; }
1109: $if $(@expr1073748099 $!@expr1073748100 $assert_ $(@expr1073748101 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1109 $, p@var366 .@expr6259 valueType (@expr6260 ) .@expr1073748104 reference@expr5974 ==@expr1073748105 Reference ::@expr6130 RValue@expr5977 $) $) { $return ; }
1110: }
1111: {
1112: $Tokenizer $tokenizer@var367 $(@expr1073748107 $&@expr1073748108 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var368 $; $db@var368 $=@expr1073748109 $getSymbolDB_inner $(@expr1073748110 $tokenizer@var367 $, "void foo(const int& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073748111 $!@expr1073748112 $assert_ $(@expr1073748113 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1112 $, $db@var368 $) $) { $return $; } $do ${ $} $while $(@expr1073748114 $false $) ;
1113: const Variable * const p@var369 ; p@var369 =@expr1073748115 db@var368 .@expr1073748116 getVariableFromVarId (@expr1073748117 1 ) ;
1114: $if $(@expr1073748118 $!@expr1073748119 $assert_ $(@expr1073748120 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1114 $, p@var369 .@expr6297 valueType (@expr6298 ) $) $) { $return ; }
1115: $if $(@expr1073748123 $!@expr1073748124 $assert_ $(@expr1073748125 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1115 $, p@var369 .@expr6297 valueType (@expr6298 ) .@expr1073748128 pointer@expr5972 ==@expr1073748129 0 $) $) { $return ; }
1116: $if $(@expr1073748130 $!@expr1073748131 $assert_ $(@expr1073748132 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1116 $, p@var369 .@expr6297 valueType (@expr6298 ) .@expr1073748135 constness@expr5973 ==@expr1073748136 1 $) $) { $return ; }
1117: $if $(@expr1073748137 $!@expr1073748138 $assert_ $(@expr1073748139 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1117 $, p@var369 .@expr6297 valueType (@expr6298 ) .@expr1073748142 reference@expr5974 ==@expr1073748143 Reference ::@expr6092 LValue@expr5976 $) $) { $return ; }
1118: }
1119: {
1120: $Tokenizer $tokenizer@var370 $(@expr1073748145 $&@expr1073748146 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var371 $; $db@var371 $=@expr1073748147 $getSymbolDB_inner $(@expr1073748148 $tokenizer@var370 $, "void foo(const int&& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073748149 $!@expr1073748150 $assert_ $(@expr1073748151 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1120 $, $db@var371 $) $) { $return $; } $do ${ $} $while $(@expr1073748152 $false $) ;
1121: const Variable * const p@var372 ; p@var372 =@expr1073748153 db@var371 .@expr1073748154 getVariableFromVarId (@expr1073748155 1 ) ;
1122: $if $(@expr1073748156 $!@expr1073748157 $assert_ $(@expr1073748158 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1122 $, p@var372 .@expr6335 valueType (@expr6336 ) $) $) { $return ; }
1123: $if $(@expr1073748161 $!@expr1073748162 $assert_ $(@expr1073748163 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1123 $, p@var372 .@expr6335 valueType (@expr6336 ) .@expr1073748166 pointer@expr5972 ==@expr1073748167 0 $) $) { $return ; }
1124: $if $(@expr1073748168 $!@expr1073748169 $assert_ $(@expr1073748170 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1124 $, p@var372 .@expr6335 valueType (@expr6336 ) .@expr1073748173 constness@expr5973 ==@expr1073748174 1 $) $) { $return ; }
1125: $if $(@expr1073748175 $!@expr1073748176 $assert_ $(@expr1073748177 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1125 $, p@var372 .@expr6335 valueType (@expr6336 ) .@expr1073748180 reference@expr5974 ==@expr1073748181 Reference ::@expr6130 RValue@expr5977 $) $) { $return ; }
1126: }
1127: {
1128: $Tokenizer $tokenizer@var373 $(@expr1073748183 $&@expr1073748184 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var374 $; $db@var374 $=@expr1073748185 $getSymbolDB_inner $(@expr1073748186 $tokenizer@var373 $, "void foo(const int*& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073748187 $!@expr1073748188 $assert_ $(@expr1073748189 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1128 $, $db@var374 $) $) { $return $; } $do ${ $} $while $(@expr1073748190 $false $) ;
1129: const Variable * const p@var375 ; p@var375 =@expr1073748191 db@var374 .@expr1073748192 getVariableFromVarId (@expr1073748193 1 ) ;
1130: $if $(@expr1073748194 $!@expr1073748195 $assert_ $(@expr1073748196 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1130 $, p@var375 .@expr6373 valueType (@expr6374 ) $) $) { $return ; }
1131: $if $(@expr1073748199 $!@expr1073748200 $assert_ $(@expr1073748201 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1131 $, p@var375 .@expr6373 valueType (@expr6374 ) .@expr1073748204 pointer@expr5972 ==@expr1073748205 1 $) $) { $return ; }
1132: $if $(@expr1073748206 $!@expr1073748207 $assert_ $(@expr1073748208 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1132 $, p@var375 .@expr6373 valueType (@expr6374 ) .@expr1073748211 constness@expr5973 ==@expr1073748212 1 $) $) { $return ; }
1133: $if $(@expr1073748213 $!@expr1073748214 $assert_ $(@expr1073748215 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1133 $, p@var375 .@expr6373 valueType (@expr6374 ) .@expr1073748218 reference@expr5974 ==@expr1073748219 Reference ::@expr6092 LValue@expr5976 $) $) { $return ; }
1134: }
1135: {
1136: $Tokenizer $tokenizer@var376 $(@expr1073748221 $&@expr1073748222 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var377 $; $db@var377 $=@expr1073748223 $getSymbolDB_inner $(@expr1073748224 $tokenizer@var376 $, "void foo(const int*&& x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073748225 $!@expr1073748226 $assert_ $(@expr1073748227 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1136 $, $db@var377 $) $) { $return $; } $do ${ $} $while $(@expr1073748228 $false $) ;
1137: const Variable * const p@var378 ; p@var378 =@expr1073748229 db@var377 .@expr1073748230 getVariableFromVarId (@expr1073748231 1 ) ;
1138: $if $(@expr1073748232 $!@expr1073748233 $assert_ $(@expr1073748234 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1138 $, p@var378 .@expr6411 valueType (@expr6412 ) $) $) { $return ; }
1139: $if $(@expr1073748237 $!@expr1073748238 $assert_ $(@expr1073748239 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1139 $, p@var378 .@expr6411 valueType (@expr6412 ) .@expr1073748242 pointer@expr5972 ==@expr1073748243 1 $) $) { $return ; }
1140: $if $(@expr1073748244 $!@expr1073748245 $assert_ $(@expr1073748246 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1140 $, p@var378 .@expr6411 valueType (@expr6412 ) .@expr1073748249 constness@expr5973 ==@expr1073748250 1 $) $) { $return ; }
1141: $if $(@expr1073748251 $!@expr1073748252 $assert_ $(@expr1073748253 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1141 $, p@var378 .@expr6411 valueType (@expr6412 ) .@expr1073748256 reference@expr5974 ==@expr1073748257 Reference ::@expr6130 RValue@expr5977 $) $) { $return ; }
1142: }
1143: {
1144: $Tokenizer $tokenizer@var379 $(@expr1073748259 $&@expr1073748260 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var380 $; $db@var380 $=@expr1073748261 $getSymbolDB_inner $(@expr1073748262 $tokenizer@var379 $, "void foo(int* const & x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073748263 $!@expr1073748264 $assert_ $(@expr1073748265 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1144 $, $db@var380 $) $) { $return $; } $do ${ $} $while $(@expr1073748266 $false $) ;
1145: const Variable * const p@var381 ; p@var381 =@expr1073748267 db@var380 .@expr1073748268 getVariableFromVarId (@expr1073748269 1 ) ;
1146: $if $(@expr1073748270 $!@expr1073748271 $assert_ $(@expr1073748272 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1146 $, p@var381 .@expr6449 valueType (@expr6450 ) $) $) { $return ; }
1147: $if $(@expr1073748275 $!@expr1073748276 $assert_ $(@expr1073748277 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1147 $, p@var381 .@expr6449 valueType (@expr6450 ) .@expr1073748280 pointer@expr5972 ==@expr1073748281 1 $) $) { $return ; }
1148: $if $(@expr1073748282 $!@expr1073748283 $assert_ $(@expr1073748284 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1148 $, p@var381 .@expr6449 valueType (@expr6450 ) .@expr1073748287 constness@expr5973 ==@expr1073748288 2 $) $) { $return ; }
1149: $if $(@expr1073748289 $!@expr1073748290 $assert_ $(@expr1073748291 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1149 $, p@var381 .@expr6449 valueType (@expr6450 ) .@expr1073748294 reference@expr5974 ==@expr1073748295 Reference ::@expr6092 LValue@expr5976 $) $) { $return ; }
1150: }
1151: {
1152: $Tokenizer $tokenizer@var382 $(@expr1073748297 $&@expr1073748298 $settings1@var123 $, $this@expr5980 $) $; $const $SymbolDatabase $* $db@var383 $; $db@var383 $=@expr1073748299 $getSymbolDB_inner $(@expr1073748300 $tokenizer@var382 $, "void foo(int* const && x) {}\n" $, $"test.cpp" $) $; $if $(@expr1073748301 $!@expr1073748302 $assert_ $(@expr1073748303 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1152 $, $db@var383 $) $) { $return $; } $do ${ $} $while $(@expr1073748304 $false $) ;
1153: const Variable * const p@var384 ; p@var384 =@expr1073748305 db@var383 .@expr1073748306 getVariableFromVarId (@expr1073748307 1 ) ;
1154: $if $(@expr1073748308 $!@expr1073748309 $assert_ $(@expr1073748310 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1154 $, p@var384 .@expr6487 valueType (@expr6488 ) $) $) { $return ; }
1155: $if $(@expr1073748313 $!@expr1073748314 $assert_ $(@expr1073748315 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1155 $, p@var384 .@expr6487 valueType (@expr6488 ) .@expr1073748318 pointer@expr5972 ==@expr1073748319 1 $) $) { $return ; }
1156: $if $(@expr1073748320 $!@expr1073748321 $assert_ $(@expr1073748322 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1156 $, p@var384 .@expr6487 valueType (@expr6488 ) .@expr1073748325 constness@expr5973 ==@expr1073748326 2 $) $) { $return ; }
1157: $if $(@expr1073748327 $!@expr1073748328 $assert_ $(@expr1073748329 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1157 $, p@var384 .@expr6487 valueType (@expr6488 ) .@expr1073748332 reference@expr5974 ==@expr1073748333 Reference ::@expr6130 RValue@expr5977 $) $) { $return ; }
1158: }
1159: }
1160:
1161: void findVariableType1 ( ) {
1162: $Tokenizer $tokenizer@var385 $(@expr1073748335 $&@expr1073748336 $settings1@var123 $, $this@expr1073748337 $) $; $const $SymbolDatabase $* $db@var386 $; $db@var386 $=@expr1073748338 $getSymbolDB_inner $(@expr1073748339 $tokenizer@var385 $, "class A {\npublic:\n    struct B {};\n    void f();\n};\n\nvoid f()\n{\n    struct A::B b;\n    b.x = 1;\n}" $, $"test.cpp" $) $; $if $(@expr1073748340 $!@expr1073748341 $assert_ $(@expr1073748342 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1162 $, $db@var386 $) $) { $return $; } $do ${ $} $while $(@expr1073748343 $false $)
1163:
|
1171:
1172: ;
1173: $if $(@expr1073748344 $!@expr1073748345 $assert_ $(@expr1073748346 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1173 $, db@var386 !=@expr1073748347 nullptr $) $) { $return ; }
1174:
1175: const Variable * bvar@var387 ; bvar@var387 =@expr1073748348 db@var386 .@expr1073748349 getVariableFromVarId (@expr1073748350 1 ) ;
1176: $if $(@expr1073748351 $!@expr1073748352 $assertEquals $(@expr1073748353 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1176 $, "b" $, bvar@var387 .@expr1073748354 name (@expr1073748355 ) $) $) { $return ; }
1177: $if $(@expr1073748356 $!@expr1073748357 $assert_ $(@expr1073748358 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1177 $, bvar@var387 .@expr1073748359 type (@expr1073748360 ) !=@expr1073748361 nullptr $) $) { $return ; }
1178: }
1179:
1180: void findVariableType2 ( ) {
1181: $Tokenizer $tokenizer@var388 $(@expr1073748362 $&@expr1073748363 $settings1@var123 $, $this@expr1073748364 $) $; $const $SymbolDatabase $* $db@var389 $; $db@var389 $=@expr1073748365 $getSymbolDB_inner $(@expr1073748366 $tokenizer@var388 $, "class A {\npublic:\n    class B {\n    public:\n        struct C {\n            int x;\n            int y;\n        };\n    };\n\n    void f();\n};\n\nvoid A::f()\n{\n    struct B::C c;\n    c.x = 1;\n}" $, $"test.cpp" $) $; $if $(@expr1073748367 $!@expr1073748368 $assert_ $(@expr1073748369 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1181 $, $db@var389 $) $) { $return $; } $do ${ $} $while $(@expr1073748370 $false $)
1182:
|
1197:
1198: ;
1199: $if $(@expr1073748371 $!@expr1073748372 $assert_ $(@expr1073748373 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1199 $, db@var389 !=@expr1073748374 nullptr $) $) { $return ; }
1200:
1201: const Variable * cvar@var390 ; cvar@var390 =@expr1073748375 db@var389 .@expr1073748376 getVariableFromVarId (@expr1073748377 3 ) ;
1202: $if $(@expr1073748378 $!@expr1073748379 $assertEquals $(@expr1073748380 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1202 $, "c" $, cvar@var390 .@expr1073748381 name (@expr1073748382 ) $) $) { $return ; }
1203: $if $(@expr1073748383 $!@expr1073748384 $assert_ $(@expr1073748385 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1203 $, cvar@var390 .@expr1073748386 type (@expr1073748387 ) !=@expr1073748388 nullptr $) $) { $return ; }
1204: }
1205:
1206: void findVariableType3 ( ) {
1207: $Tokenizer $tokenizer@var391 $(@expr1073748389 $&@expr1073748390 $settings1@var123 $, $this@expr1073748391 $) $; $const $SymbolDatabase $* $db@var392 $; $db@var392 $=@expr1073748392 $getSymbolDB_inner $(@expr1073748393 $tokenizer@var391 $, "namespace {\n    struct A {\n        int x;\n        int y;\n    };\n}\n\nvoid f()\n{\n    struct A a;\n    a.x = 1;\n}" $, $"test.cpp" $) $; $if $(@expr1073748394 $!@expr1073748395 $assert_ $(@expr1073748396 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1207 $, $db@var392 $) $) { $return $; } $do ${ $} $while $(@expr1073748397 $false $)
1208:
|
1217:
1218: ;
1219: (@expr1073748398 void ) db@var392 ;
1220: const Variable * avar@var393 ; avar@var393 =@expr1073748399 Token ::@expr1073748400 findsimplematch (@expr1073748401 tokenizer@var391 .@expr1073748402 tokens (@expr1073748403 ) , "a" ) .@expr1073748404 variable (@expr1073748405 ) ;
1221: $if $(@expr1073748406 $!@expr1073748407 $assert_ $(@expr1073748408 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1221 $, avar@var393 $) $) { $return ; }
1222: $if $(@expr1073748409 $!@expr1073748410 $assert_ $(@expr1073748411 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1222 $, avar@var393 &&@expr1073748412 avar@var393 .@expr1073748413 type (@expr1073748414 ) !=@expr1073748415 nullptr $) $) { $return ; }
1223: }
1224:
1225: void findVariableTypeExternC ( ) {
1226: $Tokenizer $tokenizer@var394 $(@expr1073748416 $&@expr1073748417 $settings1@var123 $, $this@expr1073748418 $) $; $const $SymbolDatabase $* $db@var395 $; $db@var395 $=@expr1073748419 $getSymbolDB_inner $(@expr1073748420 $tokenizer@var394 $, "extern \"C\" { typedef int INT; }\nvoid bar() {\n    INT x = 3;\n}" $, $"test.cpp" $) $; $if $(@expr1073748421 $!@expr1073748422 $assert_ $(@expr1073748423 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1226 $, $db@var395 $) $) { $return $; } $do ${ $} $while $(@expr1073748424 $false $)
1227:
1228:
1229: ;
1230: (@expr1073748425 void ) db@var395 ;
1231: const Variable * avar@var396 ; avar@var396 =@expr1073748426 Token ::@expr1073748427 findsimplematch (@expr1073748428 tokenizer@var394 .@expr1073748429 tokens (@expr1073748430 ) , "x" ) .@expr1073748431 variable (@expr1073748432 ) ;
1232: $if $(@expr1073748433 $!@expr1073748434 $assert_ $(@expr1073748435 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1232 $, avar@var396 $) $) { $return ; }
1233: $if $(@expr1073748436 $!@expr1073748437 $assert_ $(@expr1073748438 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1233 $, avar@var396 .@expr6615 valueType (@expr6616 ) !=@expr1073748441 nullptr $) $) { $return ; }
1234: $if $(@expr1073748442 $!@expr1073748443 $assert_ $(@expr1073748444 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1234 $, avar@var396 .@expr6615 valueType (@expr6616 ) .@expr1073748447 str (@expr1073748448 ) ==@expr1073748449 "signed int" $) $) { $return ; }
1235: }
1236:
1237: void rangeBasedFor ( ) {
1238: $Tokenizer $tokenizer@var397 $(@expr1073748452 $&@expr1073748453 $settings1@var123 $, $this@expr1073748454 $) $; $const $SymbolDatabase $* $db@var398 $; $db@var398 $=@expr1073748455 $getSymbolDB_inner $(@expr1073748456 $tokenizer@var397 $, "void reset() {\n    for(auto& e : array)\n        foo(e);\n}" $, $"test.cpp" $) $; $if $(@expr1073748457 $!@expr1073748458 $assert_ $(@expr1073748459 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1238 $, $db@var398 $) $) { $return $; } $do ${ $} $while $(@expr1073748460 $false $)
1239:
1240:
1241: ;
1242:
1243: $if $(@expr1073748461 $!@expr1073748462 $assert_ $(@expr1073748463 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1243 $, db@var398 !=@expr1073748464 nullptr $) $) { $return ; }
1244:
1245: $if $(@expr1073748465 $!@expr1073748466 $assert_ $(@expr1073748467 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1245 $, db@var398 .@expr1073748468 scopeList@var399 .@expr1073748469 back (@expr1073748470 ) .@expr1073748471 type@expr1073748450 ==@expr1073748472 Scope ::@expr1073748473 eFor@expr1073748451 $) $) { $return ; }
1246: $if $(@expr1073748474 $!@expr1073748475 $assertEquals $(@expr1073748476 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1246 $, 2 $, db@var398 .@expr1073748477 variableList (@expr1073748478 ) .@expr1073748479 size (@expr1073748480 ) $) $) { $return ; }
1247:
1248: const Variable * e@var400 ; e@var400 =@expr1073748481 db@var398 .@expr1073748482 getVariableFromVarId (@expr1073748483 1 ) ;
1249: $if $(@expr1073748484 $!@expr1073748485 $assert_ $(@expr1073748486 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1249 $, e@var400 &&@expr1073748487 e@var400 .@expr1073748488 isReference (@expr1073748489 ) &&@expr1073748490 e@var400 .@expr1073748491 isLocal (@expr1073748492 ) $) $) { $return ; }
1250: }
1251: void isVariableStlType ( ) {
1252: {
1253: reset (@expr6669 ) ;
1254: $Tokenizer $tokenizer@var401 $(@expr1073748494 $&@expr1073748495 $settings1@var123 $, $this@expr6672 $) $; $const $SymbolDatabase $* $db@var402 $; $db@var402 $=@expr1073748497 $getSymbolDB_inner $(@expr1073748498 $tokenizer@var401 $, "std::string s;" $, $"test.cpp" $) $; $if $(@expr1073748499 $!@expr1073748500 $assert_ $(@expr1073748501 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1254 $, $db@var402 $) $) { $return $; } $do ${ $} $while $(@expr1073748502 $false $) ;
1255: const bool result@var403 =@expr1073748503 db@var402 .@expr1073748504 scopeList@var404 .@expr1073748505 front (@expr1073748506 ) .@expr1073748507 isVariableDeclaration (@expr1073748508 tokenizer@var401 .@expr6685 tokens (@expr6686 ) , vartok@var121 , typetok@var122 ) ;
1256: $if $(@expr1073748511 $!@expr1073748512 $assertEquals $(@expr1073748513 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1256 $, true $, result@var403 $) $) { $return ; }
1257: Variable v@var405 (@expr1073748514 vartok@var121 , tokenizer@var401 .@expr6685 tokens (@expr6686 ) , tokenizer@var401 .@expr1073748517 list@var406 .@expr1073748518 back (@expr1073748519 ) , 0 , AccessControl ::@expr6696 Public , nullptr , nullptr , &@expr6697 settings1@var123 ) ;
1258: static const std ::@expr1073748522 set < std ::@expr6699 string > types@var407 =@expr1073748524 {@expr1073748525 "string" , "wstring" } ;
1259: static const std ::@expr1073748526 set < std ::@expr6699 string > no_types@var408 =@expr1073748528 {@expr1073748529 "set" } ;
1260: $if $(@expr1073748530 $!@expr1073748531 $assertEquals $(@expr1073748532 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1260 $, true $, v@var405 .@expr6709 isStlType (@expr1073748534 ) $) $) { $return ; }
1261: $if $(@expr1073748535 $!@expr1073748536 $assertEquals $(@expr1073748537 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1261 $, true $, v@var405 .@expr6709 isStlType (@expr1073748539 types@var407 ) $) $) { $return ; }
1262: $if $(@expr1073748540 $!@expr1073748541 $assertEquals $(@expr1073748542 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1262 $, false $, v@var405 .@expr6709 isStlType (@expr1073748544 no_types@var408 ) $) $) { $return ; }
1263: $if $(@expr1073748545 $!@expr1073748546 $assertEquals $(@expr1073748547 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1263 $, true $, v@var405 .@expr1073748548 isStlStringType (@expr1073748549 ) $) $) { $return ; }
1264: }
1265: {
1266: reset (@expr6669 ) ;
1267: $Tokenizer $tokenizer@var409 $(@expr1073748551 $&@expr1073748552 $settings1@var123 $, $this@expr6672 $) $; $const $SymbolDatabase $* $db@var410 $; $db@var410 $=@expr1073748553 $getSymbolDB_inner $(@expr1073748554 $tokenizer@var409 $, "std::vector<int> v;" $, $"test.cpp" $) $; $if $(@expr1073748555 $!@expr1073748556 $assert_ $(@expr1073748557 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1267 $, $db@var410 $) $) { $return $; } $do ${ $} $while $(@expr1073748558 $false $) ;
1268: const bool result@var411 =@expr1073748559 db@var410 .@expr1073748560 scopeList@var412 .@expr1073748561 front (@expr1073748562 ) .@expr1073748563 isVariableDeclaration (@expr1073748564 tokenizer@var409 .@expr6741 tokens (@expr6742 ) , vartok@var121 , typetok@var122 ) ;
1269: $if $(@expr1073748567 $!@expr1073748568 $assertEquals $(@expr1073748569 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1269 $, true $, result@var411 $) $) { $return ; }
1270: Variable v@var413 (@expr1073748570 vartok@var121 , tokenizer@var409 .@expr6741 tokens (@expr6742 ) , tokenizer@var409 .@expr1073748573 list@var414 .@expr1073748574 back (@expr1073748575 ) , 0 , AccessControl ::@expr6696 Public , nullptr , nullptr , &@expr6697 settings1@var123 ) ;
1271: static const std ::@expr1073748578 set < std ::@expr6699 string > types@var415 =@expr1073748580 {@expr1073748581 "bitset" , "set" , "vector" , "wstring" } ;
1272: static const std ::@expr1073748582 set < std ::@expr6699 string > no_types@var416 =@expr1073748584 {@expr1073748585 "bitset" , "map" , "set" } ;
1273: $if $(@expr1073748586 $!@expr1073748587 $assertEquals $(@expr1073748588 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1273 $, true $, v@var413 .@expr6765 isStlType (@expr1073748590 ) $) $) { $return ; }
1274: $if $(@expr1073748591 $!@expr1073748592 $assertEquals $(@expr1073748593 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1274 $, true $, v@var413 .@expr6765 isStlType (@expr1073748595 types@var415 ) $) $) { $return ; }
1275: $if $(@expr1073748596 $!@expr1073748597 $assertEquals $(@expr1073748598 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1275 $, false $, v@var413 .@expr6765 isStlType (@expr1073748600 no_types@var416 ) $) $) { $return ; }
1276: $if $(@expr1073748601 $!@expr1073748602 $assertEquals $(@expr1073748603 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1276 $, false $, v@var413 .@expr1073748604 isStlStringType (@expr1073748605 ) $) $) { $return ; }
1277: }
1278: {
1279: reset (@expr6669 ) ;
1280: $Tokenizer $tokenizer@var417 $(@expr1073748607 $&@expr1073748608 $settings1@var123 $, $this@expr6672 $) $; $const $SymbolDatabase $* $db@var418 $; $db@var418 $=@expr1073748609 $getSymbolDB_inner $(@expr1073748610 $tokenizer@var417 $, "SomeClass s;" $, $"test.cpp" $) $; $if $(@expr1073748611 $!@expr1073748612 $assert_ $(@expr1073748613 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1280 $, $db@var418 $) $) { $return $; } $do ${ $} $while $(@expr1073748614 $false $) ;
1281: const bool result@var419 =@expr1073748615 db@var418 .@expr1073748616 scopeList@var420 .@expr1073748617 front (@expr1073748618 ) .@expr1073748619 isVariableDeclaration (@expr1073748620 tokenizer@var417 .@expr6797 tokens (@expr6798 ) , vartok@var121 , typetok@var122 ) ;
1282: $if $(@expr1073748623 $!@expr1073748624 $assertEquals $(@expr1073748625 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1282 $, true $, result@var419 $) $) { $return ; }
1283: Variable v@var421 (@expr1073748626 vartok@var121 , tokenizer@var417 .@expr6797 tokens (@expr6798 ) , tokenizer@var417 .@expr1073748629 list@var422 .@expr1073748630 back (@expr1073748631 ) , 0 , AccessControl ::@expr6696 Public , nullptr , nullptr , &@expr6697 settings1@var123 ) ;
1284: static const std ::@expr1073748634 set < std ::@expr6699 string > types@var423 =@expr1073748636 {@expr1073748637 "bitset" , "set" , "vector" } ;
1285: $if $(@expr1073748638 $!@expr1073748639 $assertEquals $(@expr1073748640 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1285 $, false $, v@var421 .@expr6817 isStlType (@expr1073748642 ) $) $) { $return ; }
1286: $if $(@expr1073748643 $!@expr1073748644 $assertEquals $(@expr1073748645 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1286 $, false $, v@var421 .@expr6817 isStlType (@expr1073748647 types@var423 ) $) $) { $return ; }
1287: $if $(@expr1073748648 $!@expr1073748649 $assertEquals $(@expr1073748650 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1287 $, false $, v@var421 .@expr1073748651 isStlStringType (@expr1073748652 ) $) $) { $return ; }
1288: }
1289: }
1290:
1291: void isVariablePointerToConstPointer ( ) {
1292: reset (@expr1073748653 ) ;
1293: $Tokenizer $tokenizer@var424 $(@expr1073748654 $&@expr1073748655 $settings1@var123 $, $this@expr1073748656 $) $; $const $SymbolDatabase $* $db@var425 $; $db@var425 $=@expr1073748657 $getSymbolDB_inner $(@expr1073748658 $tokenizer@var424 $, "char* const * s;" $, $"test.cpp" $) $; $if $(@expr1073748659 $!@expr1073748660 $assert_ $(@expr1073748661 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1293 $, $db@var425 $) $) { $return $; } $do ${ $} $while $(@expr1073748662 $false $) ;
1294: bool result@var426 ; result@var426 =@expr1073748663 db@var425 .@expr1073748664 scopeList@var427 .@expr1073748665 front (@expr1073748666 ) .@expr1073748667 isVariableDeclaration (@expr1073748668 tokenizer@var424 .@expr1073748669 tokens (@expr1073748670 ) , vartok@var121 , typetok@var122 ) ;
1295: $if $(@expr1073748671 $!@expr1073748672 $assertEquals $(@expr1073748673 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1295 $, true $, result@var426 $) $) { $return ; }
1296: Variable v@var428 (@expr1073748674 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073748675 previous (@expr1073748676 ) , 0 , AccessControl ::@expr1073748677 Public , nullptr , nullptr , &@expr1073748678 settings1@var123 ) ;
1297: $if $(@expr1073748679 $!@expr1073748680 $assert_ $(@expr1073748681 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1297 $, false ==@expr1073748682 v@var428 .@expr1073748683 isArray (@expr1073748684 ) $) $) { $return ; }
1298: $if $(@expr1073748685 $!@expr1073748686 $assert_ $(@expr1073748687 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1298 $, true ==@expr1073748688 v@var428 .@expr1073748689 isPointer (@expr1073748690 ) $) $) { $return ; }
1299: $if $(@expr1073748691 $!@expr1073748692 $assert_ $(@expr1073748693 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1299 $, false ==@expr1073748694 v@var428 .@expr1073748695 isReference (@expr1073748696 ) $) $) { $return ; }
1300: }
1301:
1302: void isVariablePointerToVolatilePointer ( ) {
1303: reset (@expr1073748697 ) ;
1304: $Tokenizer $tokenizer@var429 $(@expr1073748698 $&@expr1073748699 $settings1@var123 $, $this@expr1073748700 $) $; $const $SymbolDatabase $* $db@var430 $; $db@var430 $=@expr1073748701 $getSymbolDB_inner $(@expr1073748702 $tokenizer@var429 $, "char* volatile * s;" $, $"test.cpp" $) $; $if $(@expr1073748703 $!@expr1073748704 $assert_ $(@expr1073748705 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1304 $, $db@var430 $) $) { $return $; } $do ${ $} $while $(@expr1073748706 $false $) ;
1305: bool result@var431 ; result@var431 =@expr1073748707 db@var430 .@expr1073748708 scopeList@var432 .@expr1073748709 front (@expr1073748710 ) .@expr1073748711 isVariableDeclaration (@expr1073748712 tokenizer@var429 .@expr1073748713 tokens (@expr1073748714 ) , vartok@var121 , typetok@var122 ) ;
1306: $if $(@expr1073748715 $!@expr1073748716 $assertEquals $(@expr1073748717 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1306 $, true $, result@var431 $) $) { $return ; }
1307: Variable v@var433 (@expr1073748718 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073748719 previous (@expr1073748720 ) , 0 , AccessControl ::@expr1073748721 Public , nullptr , nullptr , &@expr1073748722 settings1@var123 ) ;
1308: $if $(@expr1073748723 $!@expr1073748724 $assert_ $(@expr1073748725 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1308 $, false ==@expr1073748726 v@var433 .@expr1073748727 isArray (@expr1073748728 ) $) $) { $return ; }
1309: $if $(@expr1073748729 $!@expr1073748730 $assert_ $(@expr1073748731 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1309 $, true ==@expr1073748732 v@var433 .@expr1073748733 isPointer (@expr1073748734 ) $) $) { $return ; }
1310: $if $(@expr1073748735 $!@expr1073748736 $assert_ $(@expr1073748737 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1310 $, false ==@expr1073748738 v@var433 .@expr1073748739 isReference (@expr1073748740 ) $) $) { $return ; }
1311: }
1312:
1313: void isVariablePointerToConstVolatilePointer ( ) {
1314: reset (@expr1073748741 ) ;
1315: $Tokenizer $tokenizer@var434 $(@expr1073748742 $&@expr1073748743 $settings1@var123 $, $this@expr1073748744 $) $; $const $SymbolDatabase $* $db@var435 $; $db@var435 $=@expr1073748745 $getSymbolDB_inner $(@expr1073748746 $tokenizer@var434 $, "char* const volatile * s;" $, $"test.cpp" $) $; $if $(@expr1073748747 $!@expr1073748748 $assert_ $(@expr1073748749 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1315 $, $db@var435 $) $) { $return $; } $do ${ $} $while $(@expr1073748750 $false $) ;
1316: bool result@var436 ; result@var436 =@expr1073748751 db@var435 .@expr1073748752 scopeList@var437 .@expr1073748753 front (@expr1073748754 ) .@expr1073748755 isVariableDeclaration (@expr1073748756 tokenizer@var434 .@expr1073748757 tokens (@expr1073748758 ) , vartok@var121 , typetok@var122 ) ;
1317: $if $(@expr1073748759 $!@expr1073748760 $assertEquals $(@expr1073748761 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1317 $, true $, result@var436 $) $) { $return ; }
1318: Variable v@var438 (@expr1073748762 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073748763 previous (@expr1073748764 ) , 0 , AccessControl ::@expr1073748765 Public , nullptr , nullptr , &@expr1073748766 settings1@var123 ) ;
1319: $if $(@expr1073748767 $!@expr1073748768 $assert_ $(@expr1073748769 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1319 $, false ==@expr1073748770 v@var438 .@expr1073748771 isArray (@expr1073748772 ) $) $) { $return ; }
1320: $if $(@expr1073748773 $!@expr1073748774 $assert_ $(@expr1073748775 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1320 $, true ==@expr1073748776 v@var438 .@expr1073748777 isPointer (@expr1073748778 ) $) $) { $return ; }
1321: $if $(@expr1073748779 $!@expr1073748780 $assert_ $(@expr1073748781 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1321 $, false ==@expr1073748782 v@var438 .@expr1073748783 isReference (@expr1073748784 ) $) $) { $return ; }
1322: }
1323:
1324: void isVariableMultiplePointersAndQualifiers ( ) {
1325: reset (@expr1073748785 ) ;
1326: $Tokenizer $tokenizer@var439 $(@expr1073748786 $&@expr1073748787 $settings1@var123 $, $this@expr1073748788 $) $; $const $SymbolDatabase $* $db@var440 $; $db@var440 $=@expr1073748789 $getSymbolDB_inner $(@expr1073748790 $tokenizer@var439 $, "const char* const volatile * const volatile * const volatile * const volatile s;" $, $"test.cpp" $) $; $if $(@expr1073748791 $!@expr1073748792 $assert_ $(@expr1073748793 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1326 $, $db@var440 $) $) { $return $; } $do ${ $} $while $(@expr1073748794 $false $) ;
1327: bool result@var441 ; result@var441 =@expr1073748795 db@var440 .@expr1073748796 scopeList@var442 .@expr1073748797 front (@expr1073748798 ) .@expr1073748799 isVariableDeclaration (@expr1073748800 tokenizer@var439 .@expr1073748801 tokens (@expr1073748802 ) .@expr1073748803 next (@expr1073748804 ) , vartok@var121 , typetok@var122 ) ;
1328: $if $(@expr1073748805 $!@expr1073748806 $assertEquals $(@expr1073748807 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1328 $, true $, result@var441 $) $) { $return ; }
1329: Variable v@var443 (@expr1073748808 vartok@var121 , typetok@var122 , vartok@var121 .@expr1073748809 previous (@expr1073748810 ) , 0 , AccessControl ::@expr1073748811 Public , nullptr , nullptr , &@expr1073748812 settings1@var123 ) ;
1330: $if $(@expr1073748813 $!@expr1073748814 $assert_ $(@expr1073748815 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1330 $, false ==@expr1073748816 v@var443 .@expr1073748817 isArray (@expr1073748818 ) $) $) { $return ; }
1331: $if $(@expr1073748819 $!@expr1073748820 $assert_ $(@expr1073748821 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1331 $, true ==@expr1073748822 v@var443 .@expr1073748823 isPointer (@expr1073748824 ) $) $) { $return ; }
1332: $if $(@expr1073748825 $!@expr1073748826 $assert_ $(@expr1073748827 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1332 $, false ==@expr1073748828 v@var443 .@expr1073748829 isReference (@expr1073748830 ) $) $) { $return ; }
1333: }
1334:
1335: void variableVolatile ( ) {
1336: $Tokenizer $tokenizer@var444 $(@expr1073748831 $&@expr1073748832 $settings1@var123 $, $this@expr1073748833 $) $; $const $SymbolDatabase $* $db@var445 $; $db@var445 $=@expr1073748834 $getSymbolDB_inner $(@expr1073748835 $tokenizer@var444 $, "std::atomic<int> x;\nvolatile int y;" $, $"test.cpp" $) $; $if $(@expr1073748836 $!@expr1073748837 $assert_ $(@expr1073748838 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1336 $, $db@var445 $) $) { $return $; } $do ${ $} $while $(@expr1073748839 $false $)
1337: ;
1338:
1339: const Token * x@var446 ; x@var446 =@expr1073748840 Token ::@expr7017 findsimplematch (@expr1073748842 tokenizer@var444 .@expr7019 tokens (@expr7020 ) , "x" ) ;
1340: $if $(@expr1073748845 $!@expr1073748846 $assert_ $(@expr1073748847 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1340 $, x@var446 $) $) { $return ; }
1341: $if $(@expr1073748848 $!@expr1073748849 $assert_ $(@expr1073748850 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1341 $, x@var446 .@expr7027 variable (@expr7028 ) $) $) { $return ; }
1342: $if $(@expr1073748853 $!@expr1073748854 $assert_ $(@expr1073748855 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1342 $, x@var446 .@expr7027 variable (@expr7028 ) .@expr1073748858 isVolatile (@expr1073748859 ) $) $) { $return ; }
1343:
1344: const Token * y@var447 ; y@var447 =@expr1073748860 Token ::@expr7017 findsimplematch (@expr1073748862 tokenizer@var444 .@expr7019 tokens (@expr7020 ) , "y" ) ;
1345: $if $(@expr1073748865 $!@expr1073748866 $assert_ $(@expr1073748867 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1345 $, y@var447 $) $) { $return ; }
1346: $if $(@expr1073748868 $!@expr1073748869 $assert_ $(@expr1073748870 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1346 $, y@var447 .@expr7047 variable (@expr7048 ) $) $) { $return ; }
1347: $if $(@expr1073748873 $!@expr1073748874 $assert_ $(@expr1073748875 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1347 $, y@var447 .@expr7047 variable (@expr7048 ) .@expr1073748878 isVolatile (@expr1073748879 ) $) $) { $return ; }
1348: }
1349:
1350: void variableConstexpr ( ) {
1351: $Tokenizer $tokenizer@var448 $(@expr1073748884 $&@expr1073748885 $settings1@var123 $, $this@expr1073748886 $) $; $const $SymbolDatabase $* $db@var449 $; $db@var449 $=@expr1073748887 $getSymbolDB_inner $(@expr1073748888 $tokenizer@var448 $, "constexpr int x = 16;" $, $"test.cpp" $) $; $if $(@expr1073748889 $!@expr1073748890 $assert_ $(@expr1073748891 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1351 $, $db@var449 $) $) { $return $; } $do ${ $} $while $(@expr1073748892 $false $) ;
1352:
1353: const Token * x@var450 ; x@var450 =@expr1073748893 Token ::@expr1073748894 findsimplematch (@expr1073748895 tokenizer@var448 .@expr1073748896 tokens (@expr1073748897 ) , "x" ) ;
1354: $if $(@expr1073748898 $!@expr1073748899 $assert_ $(@expr1073748900 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1354 $, x@var450 $) $) { $return ; }
1355: $if $(@expr1073748901 $!@expr1073748902 $assert_ $(@expr1073748903 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1355 $, x@var450 .@expr7080 variable (@expr7081 ) $) $) { $return ; }
1356: $if $(@expr1073748906 $!@expr1073748907 $assert_ $(@expr1073748908 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1356 $, x@var450 .@expr7080 variable (@expr7081 ) .@expr1073748911 isConst (@expr1073748912 ) $) $) { $return ; }
1357: $if $(@expr1073748913 $!@expr1073748914 $assert_ $(@expr1073748915 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1357 $, x@var450 .@expr7080 variable (@expr7081 ) .@expr1073748918 isStatic (@expr1073748919 ) $) $) { $return ; }
1358: $if $(@expr1073748920 $!@expr1073748921 $assert_ $(@expr1073748922 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1358 $, x@var450 .@expr7099 valueType (@expr7100 ) $) $) { $return ; }
1359: $if $(@expr1073748925 $!@expr1073748926 $assert_ $(@expr1073748927 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1359 $, x@var450 .@expr7099 valueType (@expr7100 ) .@expr1073748930 pointer@expr1073748880 ==@expr1073748931 0 $) $) { $return ; }
1360: $if $(@expr1073748932 $!@expr1073748933 $assert_ $(@expr1073748934 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1360 $, x@var450 .@expr7099 valueType (@expr7100 ) .@expr1073748937 constness@expr1073748881 ==@expr1073748938 1 $) $) { $return ; }
1361: $if $(@expr1073748939 $!@expr1073748940 $assert_ $(@expr1073748941 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1361 $, x@var450 .@expr7099 valueType (@expr7100 ) .@expr1073748944 reference@expr1073748882 ==@expr1073748945 Reference ::@expr1073748946 None@expr1073748883 $) $) { $return ; }
1362: }
1363:
1364: void isVariableDecltype ( ) {
1365: $Tokenizer $tokenizer@var451 $(@expr1073748947 $&@expr1073748948 $settings1@var123 $, $this@expr1073748949 $) $; $const $SymbolDatabase $* $db@var452 $; $db@var452 $=@expr1073748950 $getSymbolDB_inner $(@expr1073748951 $tokenizer@var451 $, "int x;\ndecltype(x) a;\nconst decltype(x) b;\ndecltype(x) *c;\n" $, $"test.cpp" $) $; $if $(@expr1073748952 $!@expr1073748953 $assert_ $(@expr1073748954 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1365 $, $db@var452 $) $) { $return $; } $do ${ $} $while $(@expr1073748955 $false $)
1366:
1367:
1368: ;
1369: $if $(@expr1073748956 $!@expr1073748957 $assert_ $(@expr1073748958 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1369 $, db@var452 $) $) { $return ; }
1370: $if $(@expr1073748959 $!@expr1073748960 $assertEquals $(@expr1073748961 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1370 $, 4 $, db@var452 .@expr1073748962 scopeList@var453 .@expr1073748963 front (@expr1073748964 ) .@expr1073748965 varlist .@expr1073748966 size (@expr1073748967 ) $) $) { $return ; }
1371:
1372: const Variable * a@var454 ; a@var454 =@expr1073748968 Token ::@expr7145 findsimplematch (@expr1073748970 tokenizer@var451 .@expr7147 tokens (@expr7148 ) , "a" ) .@expr1073748973 variable (@expr1073748974 ) ;
1373: $if $(@expr1073748975 $!@expr1073748976 $assert_ $(@expr1073748977 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1373 $, a@var454 $) $) { $return ; }
1374: $if $(@expr1073748978 $!@expr1073748979 $assertEquals $(@expr1073748980 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1374 $, "a" $, a@var454 .@expr1073748981 name (@expr1073748982 ) $) $) { $return ; }
1375: $if $(@expr1073748983 $!@expr1073748984 $assert_ $(@expr1073748985 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1375 $, a@var454 .@expr7162 valueType (@expr7163 ) $) $) { $return ; }
1376: $if $(@expr1073748988 $!@expr1073748989 $assertEquals $(@expr1073748990 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1376 $, "signed int" $, a@var454 .@expr7162 valueType (@expr7163 ) .@expr1073748993 str (@expr1073748994 ) $) $) { $return ; }
1377:
1378: const Variable * b@var455 ; b@var455 =@expr1073748995 Token ::@expr7145 findsimplematch (@expr1073748997 tokenizer@var451 .@expr7147 tokens (@expr7148 ) , "b" ) .@expr1073749000 variable (@expr1073749001 ) ;
1379: $if $(@expr1073749002 $!@expr1073749003 $assert_ $(@expr1073749004 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1379 $, b@var455 $) $) { $return ; }
1380: $if $(@expr1073749005 $!@expr1073749006 $assertEquals $(@expr1073749007 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1380 $, "b" $, b@var455 .@expr1073749008 name (@expr1073749009 ) $) $) { $return ; }
1381: $if $(@expr1073749010 $!@expr1073749011 $assert_ $(@expr1073749012 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1381 $, b@var455 .@expr7189 valueType (@expr7190 ) $) $) { $return ; }
1382: $if $(@expr1073749015 $!@expr1073749016 $assertEquals $(@expr1073749017 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1382 $, "const signed int" $, b@var455 .@expr7189 valueType (@expr7190 ) .@expr1073749020 str (@expr1073749021 ) $) $) { $return ; }
1383:
1384: const Variable * c@var456 ; c@var456 =@expr1073749022 Token ::@expr7145 findsimplematch (@expr1073749024 tokenizer@var451 .@expr7147 tokens (@expr7148 ) , "c" ) .@expr1073749027 variable (@expr1073749028 ) ;
1385: $if $(@expr1073749029 $!@expr1073749030 $assert_ $(@expr1073749031 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1385 $, c@var456 $) $) { $return ; }
1386: $if $(@expr1073749032 $!@expr1073749033 $assertEquals $(@expr1073749034 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1386 $, "c" $, c@var456 .@expr1073749035 name (@expr1073749036 ) $) $) { $return ; }
1387: $if $(@expr1073749037 $!@expr1073749038 $assert_ $(@expr1073749039 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1387 $, c@var456 .@expr7216 valueType (@expr7217 ) $) $) { $return ; }
1388: $if $(@expr1073749042 $!@expr1073749043 $assertEquals $(@expr1073749044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1388 $, "signed int *" $, c@var456 .@expr7216 valueType (@expr7217 ) .@expr1073749047 str (@expr1073749048 ) $) $) { $return ; }
1389: }
1390:
1391: void arrayMemberVar1 ( ) {
1392: $Tokenizer $tokenizer@var457 $(@expr1073749049 $&@expr1073749050 $settings1@var123 $, $this@expr1073749051 $) $; $const $SymbolDatabase $* $db@var458 $; $db@var458 $=@expr1073749052 $getSymbolDB_inner $(@expr1073749053 $tokenizer@var457 $, "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10];\n    foo[1].x = 123;\n}" $, $"test.cpp" $) $; $if $(@expr1073749054 $!@expr1073749055 $assert_ $(@expr1073749056 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1392 $, $db@var458 $) $) { $return $; } $do ${ $} $while $(@expr1073749057 $false $)
1393:
|
1397:
1398: ;
1399:
1400: const Token * tok@var459 ; tok@var459 =@expr1073749058 Token ::@expr1073749059 findsimplematch (@expr1073749060 tokenizer@var457 .@expr1073749061 tokens (@expr1073749062 ) , ". x" ) ;
1401: tok@var459 =@expr1073749063 tok@var459 ?@expr1073749064 tok@var459 .@expr1073749065 next (@expr1073749066 ) :@expr1073749067 nullptr ;
1402: $if $(@expr1073749068 $!@expr1073749069 $assert_ $(@expr1073749070 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1402 $, db@var458 !=@expr1073749071 nullptr $) $) { $return ; }
1403: $if $(@expr1073749072 $!@expr1073749073 $assert_ $(@expr1073749074 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1403 $, $(@expr1073749075 tok@var459 &&@expr1073749076 tok@var459 .@expr7253 variable (@expr7254 ) &&@expr1073749079 Token ::@expr1073749080 simpleMatch (@expr1073749081 tok@var459 .@expr7253 variable (@expr7254 ) .@expr1073749084 typeStartToken (@expr1073749085 ) , "int x ;" ) $) $) $) { $return ; }
1404: $if $(@expr1073749086 $!@expr1073749087 $assert_ $(@expr1073749088 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1404 $, tok@var459 &&@expr1073749089 tok@var459 .@expr1073749090 varId (@expr1073749091 ) ==@expr1073749092 3U $) $) { $return ; }
1405: }
1406:
1407: void arrayMemberVar2 ( ) {
1408: $Tokenizer $tokenizer@var460 $(@expr1073749093 $&@expr1073749094 $settings1@var123 $, $this@expr1073749095 $) $; $const $SymbolDatabase $* $db@var461 $; $db@var461 $=@expr1073749096 $getSymbolDB_inner $(@expr1073749097 $tokenizer@var460 $, "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10][10];\n    foo[1][2].x = 123;\n}" $, $"test.cpp" $) $; $if $(@expr1073749098 $!@expr1073749099 $assert_ $(@expr1073749100 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1408 $, $db@var461 $) $) { $return $; } $do ${ $} $while $(@expr1073749101 $false $)
1409:
|
1413:
1414: ;
1415:
1416: const Token * tok@var462 ; tok@var462 =@expr1073749102 Token ::@expr1073749103 findsimplematch (@expr1073749104 tokenizer@var460 .@expr1073749105 tokens (@expr1073749106 ) , ". x" ) ;
1417: tok@var462 =@expr1073749107 tok@var462 ?@expr1073749108 tok@var462 .@expr1073749109 next (@expr1073749110 ) :@expr1073749111 nullptr ;
1418: $if $(@expr1073749112 $!@expr1073749113 $assert_ $(@expr1073749114 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1418 $, db@var461 !=@expr1073749115 nullptr $) $) { $return ; }
1419: $if $(@expr1073749116 $!@expr1073749117 $assert_ $(@expr1073749118 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1419 $, $(@expr1073749119 tok@var462 &&@expr1073749120 tok@var462 .@expr7297 variable (@expr7298 ) &&@expr1073749123 Token ::@expr1073749124 simpleMatch (@expr1073749125 tok@var462 .@expr7297 variable (@expr7298 ) .@expr1073749128 typeStartToken (@expr1073749129 ) , "int x ;" ) $) $) $) { $return ; }
1420: $if $(@expr1073749130 $!@expr1073749131 $assert_ $(@expr1073749132 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1420 $, tok@var462 &&@expr1073749133 tok@var462 .@expr1073749134 varId (@expr1073749135 ) ==@expr1073749136 3U $) $) { $return ; }
1421: }
1422:
1423: void arrayMemberVar3 ( ) {
1424: $Tokenizer $tokenizer@var463 $(@expr1073749137 $&@expr1073749138 $settings1@var123 $, $this@expr1073749139 $) $; $const $SymbolDatabase $* $db@var464 $; $db@var464 $=@expr1073749140 $getSymbolDB_inner $(@expr1073749141 $tokenizer@var463 $, "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10];\n    (foo[1]).x = 123;\n}" $, $"test.cpp" $) $; $if $(@expr1073749142 $!@expr1073749143 $assert_ $(@expr1073749144 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1424 $, $db@var464 $) $) { $return $; } $do ${ $} $while $(@expr1073749145 $false $)
1425:
|
1429:
1430: ;
1431:
1432: const Token * tok@var465 ; tok@var465 =@expr1073749146 Token ::@expr1073749147 findsimplematch (@expr1073749148 tokenizer@var463 .@expr1073749149 tokens (@expr1073749150 ) , ". x" ) ;
1433: tok@var465 =@expr1073749151 tok@var465 ?@expr1073749152 tok@var465 .@expr1073749153 next (@expr1073749154 ) :@expr1073749155 nullptr ;
1434: $if $(@expr1073749156 $!@expr1073749157 $assert_ $(@expr1073749158 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1434 $, db@var464 !=@expr1073749159 nullptr $) $) { $return ; }
1435: $if $(@expr1073749160 $!@expr1073749161 $assert_ $(@expr1073749162 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1435 $, $(@expr1073749163 tok@var465 &&@expr1073749164 tok@var465 .@expr7341 variable (@expr7342 ) &&@expr1073749167 Token ::@expr1073749168 simpleMatch (@expr1073749169 tok@var465 .@expr7341 variable (@expr7342 ) .@expr1073749172 typeStartToken (@expr1073749173 ) , "int x ;" ) $) $) $) { $return ; }
1436: $if $(@expr1073749174 $!@expr1073749175 $assert_ $(@expr1073749176 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1436 $, tok@var465 &&@expr1073749177 tok@var465 .@expr1073749178 varId (@expr1073749179 ) ==@expr1073749180 3U $) $) { $return ; }
1437: }
1438:
1439: void arrayMemberVar4 ( ) {
1440: $Tokenizer $tokenizer@var466 $(@expr1073749181 $&@expr1073749182 $settings1@var123 $, $this@expr1073749183 $) $; $const $SymbolDatabase $* $db@var467 $; $db@var467 $=@expr1073749184 $getSymbolDB_inner $(@expr1073749185 $tokenizer@var466 $, "struct S { unsigned char* s; };\nstruct T { S s[38]; };\nvoid f(T* t) {\n    t->s;\n}\n" $, $"test.cpp" $) $; $if $(@expr1073749186 $!@expr1073749187 $assert_ $(@expr1073749188 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1440 $, $db@var467 $) $) { $return $; } $do ${ $} $while $(@expr1073749189 $false $)
1441:
1442:
1443:
1444: ;
1445: const Token * tok@var468 ; tok@var468 =@expr1073749190 Token ::@expr1073749191 findsimplematch (@expr1073749192 tokenizer@var466 .@expr1073749193 tokens (@expr1073749194 ) , ". s" ) ;
1446: tok@var468 =@expr1073749195 tok@var468 ?@expr1073749196 tok@var468 .@expr1073749197 next (@expr1073749198 ) :@expr1073749199 nullptr ;
1447: $if $(@expr1073749200 $!@expr1073749201 $assert_ $(@expr1073749202 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1447 $, db@var467 !=@expr1073749203 nullptr $) $) { $return ; }
1448: $if $(@expr1073749204 $!@expr1073749205 $assert_ $(@expr1073749206 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1448 $, $(@expr1073749207 tok@var468 &&@expr1073749208 tok@var468 .@expr7385 variable (@expr7386 ) &&@expr1073749211 Token ::@expr1073749212 simpleMatch (@expr1073749213 tok@var468 .@expr7385 variable (@expr7386 ) .@expr1073749216 typeStartToken (@expr1073749217 ) , "S s [ 38 ] ;" ) $) $) $) { $return ; }
1449: $if $(@expr1073749218 $!@expr1073749219 $assert_ $(@expr1073749220 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1449 $, tok@var468 &&@expr1073749221 tok@var468 .@expr1073749222 varId (@expr1073749223 ) ==@expr1073749224 4U $) $) { $return ; }
1450: }
1451:
1452: void staticMemberVar ( ) {
1453: $Tokenizer $tokenizer@var469 $(@expr1073749225 $&@expr1073749226 $settings1@var123 $, $this@expr1073749227 $) $; $const $SymbolDatabase $* $db@var470 $; $db@var470 $=@expr1073749228 $getSymbolDB_inner $(@expr1073749229 $tokenizer@var469 $, "class Foo {\n    static const double d;\n};\nconst double Foo::d = 5.0;" $, $"test.cpp" $) $; $if $(@expr1073749230 $!@expr1073749231 $assert_ $(@expr1073749232 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1453 $, $db@var470 $) $) { $return $; } $do ${ $} $while $(@expr1073749233 $false $)
1454:
1455:
1456: ;
1457:
1458: const Variable * v@var471 ; v@var471 =@expr1073749234 db@var470 .@expr1073749235 getVariableFromVarId (@expr1073749236 1 ) ;
1459: $if $(@expr1073749237 $!@expr1073749238 $assert_ $(@expr1073749239 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1459 $, v@var471 &&@expr1073749240 db@var470 .@expr1073749241 variableList (@expr1073749242 ) .@expr1073749243 size (@expr1073749244 ) ==@expr1073749245 2 $) $) { $return ; }
1460: $if $(@expr1073749246 $!@expr1073749247 $assert_ $(@expr1073749248 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1460 $, v@var471 &&@expr1073749249 v@var471 .@expr1073749250 isStatic (@expr1073749251 ) &&@expr1073749252 v@var471 .@expr1073749253 isConst (@expr1073749254 ) &&@expr1073749255 v@var471 .@expr1073749256 isPrivate (@expr1073749257 ) $) $) { $return ; }
1461: }
1462:
1463: void getVariableFromVarIdBoundsCheck ( ) {
1464: $Tokenizer $tokenizer@var472 $(@expr1073749258 $&@expr1073749259 $settings1@var123 $, $this@expr1073749260 $) $; $const $SymbolDatabase $* $db@var473 $; $db@var473 $=@expr1073749261 $getSymbolDB_inner $(@expr1073749262 $tokenizer@var472 $, "int x;\nint y;" $, $"test.cpp" $) $; $if $(@expr1073749263 $!@expr1073749264 $assert_ $(@expr1073749265 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1464 $, $db@var473 $) $) { $return $; } $do ${ $} $while $(@expr1073749266 $false $)
1465: ;
1466:
1467: const Variable * v@var474 ; v@var474 =@expr1073749267 db@var473 .@expr7444 getVariableFromVarId (@expr1073749269 2 ) ;
1468:
1469: $if $(@expr1073749270 $!@expr1073749271 $assert_ $(@expr1073749272 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1469 $, v@var474 &&@expr1073749273 db@var473 .@expr1073749274 variableList (@expr1073749275 ) .@expr1073749276 size (@expr1073749277 ) ==@expr1073749278 3 $) $) { $return ; }
1470:
1471: $do ${ $try ${ db@var473 .@expr7444 getVariableFromVarId (@expr1073749280 3 ) $; $assertThrowFail $(@expr1073749281 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1471 $) $; $} $catch $(@expr1073749282 $const std ::@expr1073749283 out_of_range $&@expr1073749284 $) ${ $} $catch $(@expr1073749285 $... $) ${ $assertThrowFail $(@expr1073749286 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1471 $) $; $} $} $while $(@expr1073749287 $false $) ;
1472: }
1473:
1474: void hasRegularFunction ( ) {
1475: $Tokenizer $tokenizer@var475 $(@expr1073749288 $&@expr1073749289 $settings1@var123 $, $this@expr1073749290 $) $; $const $SymbolDatabase $* $db@var476 $; $db@var476 $=@expr1073749291 $getSymbolDB_inner $(@expr1073749292 $tokenizer@var475 $, "void func() { }" $, $"test.cpp" $) $; $if $(@expr1073749293 $!@expr1073749294 $assert_ $(@expr1073749295 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1475 $, $db@var476 $) $) { $return $; } $do ${ $} $while $(@expr1073749296 $false $) ;
1476:
1477:
1478: $if $(@expr1073749297 $!@expr1073749298 $assert_ $(@expr1073749299 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1478 $, db@var476 &&@expr1073749300 db@var476 .@expr7477 scopeList@var477 .@expr1073749302 size (@expr1073749303 ) ==@expr1073749304 2 $) $) { $return ; }
1479:
1480: const Scope * scope@var478 ; scope@var478 =@expr1073749305 findFunctionScopeByToken (@expr1073749306 db@var476 , tokenizer@var475 .@expr7483 tokens (@expr7484 ) .@expr7485 next (@expr7486 ) ) ;
1481:
1482: $if $(@expr1073749311 $!@expr1073749312 $assert_ $(@expr1073749313 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1482 $, scope@var478 &&@expr1073749314 scope@var478 .@expr1073749315 className@var479 ==@expr1073749316 "func" $) $) { $return ; }
1483:
1484: $if $(@expr1073749317 $!@expr1073749318 $assert_ $(@expr1073749319 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1484 $, scope@var478 .@expr1073749320 functionOf@var480 ==@expr1073749321 nullptr $) $) { $return ; }
1485:
1486: const Function * function@var481 ; function@var481 =@expr1073749322 findFunctionByName (@expr1073749323 "func" , &@expr1073749324 db@var476 .@expr7477 scopeList@var477 .@expr1073749326 front (@expr1073749327 ) ) ;
1487:
1488: $if $(@expr1073749328 $!@expr1073749329 $assert_ $(@expr1073749330 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1488 $, function@var481 &&@expr1073749331 function@var481 .@expr7508 token@var482 .@expr1073749333 str (@expr1073749334 ) ==@expr1073749335 "func" $) $) { $return ; }
1489: $if $(@expr1073749336 $!@expr1073749337 $assert_ $(@expr1073749338 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1489 $, function@var481 &&@expr1073749339 function@var481 .@expr7508 token@var482 ==@expr1073749341 tokenizer@var475 .@expr7483 tokens (@expr7484 ) .@expr7485 next (@expr7486 ) $) $) { $return ; }
1490: $if $(@expr1073749346 $!@expr1073749347 $assert_ $(@expr1073749348 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1490 $, function@var481 &&@expr1073749349 function@var481 .@expr1073749350 hasBody (@expr1073749351 ) $) $) { $return ; }
1491: $if $(@expr1073749352 $!@expr1073749353 $assert_ $(@expr1073749354 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1491 $, function@var481 &&@expr1073749355 function@var481 .@expr1073749356 functionScope@var483 ==@expr1073749357 scope@var478 &&@expr1073749358 scope@var478 .@expr1073749359 function@var484 ==@expr1073749360 function@var481 &&@expr1073749361 function@var481 .@expr1073749362 nestedIn@var485 !=@expr1073749363 scope@var478 $) $) { $return ; }
1492: $if $(@expr1073749364 $!@expr1073749365 $assert_ $(@expr1073749366 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1492 $, function@var481 &&@expr1073749367 function@var481 .@expr1073749368 retDef@var486 ==@expr1073749369 tokenizer@var475 .@expr7483 tokens (@expr7484 ) $) $) { $return ; }
1493: }
1494:
1495: void hasRegularFunction_trailingReturnType ( ) {
1496: $Tokenizer $tokenizer@var487 $(@expr1073749372 $&@expr1073749373 $settings1@var123 $, $this@expr1073749374 $) $; $const $SymbolDatabase $* $db@var488 $; $db@var488 $=@expr1073749375 $getSymbolDB_inner $(@expr1073749376 $tokenizer@var487 $, "auto func() -> int { }" $, $"test.cpp" $) $; $if $(@expr1073749377 $!@expr1073749378 $assert_ $(@expr1073749379 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1496 $, $db@var488 $) $) { $return $; } $do ${ $} $while $(@expr1073749380 $false $) ;
1497:
1498:
1499: $if $(@expr1073749381 $!@expr1073749382 $assert_ $(@expr1073749383 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1499 $, db@var488 &&@expr1073749384 db@var488 .@expr7561 scopeList@var489 .@expr1073749386 size (@expr1073749387 ) ==@expr1073749388 2 $) $) { $return ; }
1500:
1501: const Scope * scope@var490 ; scope@var490 =@expr1073749389 findFunctionScopeByToken (@expr1073749390 db@var488 , tokenizer@var487 .@expr7567 tokens (@expr7568 ) .@expr7569 next (@expr7570 ) ) ;
1502:
1503: $if $(@expr1073749395 $!@expr1073749396 $assert_ $(@expr1073749397 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1503 $, scope@var490 &&@expr1073749398 scope@var490 .@expr1073749399 className@var491 ==@expr1073749400 "func" $) $) { $return ; }
1504:
1505: $if $(@expr1073749401 $!@expr1073749402 $assert_ $(@expr1073749403 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1505 $, scope@var490 .@expr1073749404 functionOf@var492 ==@expr1073749405 nullptr $) $) { $return ; }
1506:
1507: const Function * function@var493 ; function@var493 =@expr1073749406 findFunctionByName (@expr1073749407 "func" , &@expr1073749408 db@var488 .@expr7561 scopeList@var489 .@expr1073749410 front (@expr1073749411 ) ) ;
1508:
1509: $if $(@expr1073749412 $!@expr1073749413 $assert_ $(@expr1073749414 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1509 $, function@var493 &&@expr1073749415 function@var493 .@expr7592 token@var494 .@expr1073749417 str (@expr1073749418 ) ==@expr1073749419 "func" $) $) { $return ; }
1510: $if $(@expr1073749420 $!@expr1073749421 $assert_ $(@expr1073749422 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1510 $, function@var493 &&@expr1073749423 function@var493 .@expr7592 token@var494 ==@expr1073749425 tokenizer@var487 .@expr7567 tokens (@expr7568 ) .@expr7569 next (@expr7570 ) $) $) { $return ; }
1511: $if $(@expr1073749430 $!@expr1073749431 $assert_ $(@expr1073749432 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1511 $, function@var493 &&@expr1073749433 function@var493 .@expr1073749434 hasBody (@expr1073749435 ) $) $) { $return ; }
1512: $if $(@expr1073749436 $!@expr1073749437 $assert_ $(@expr1073749438 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1512 $, function@var493 &&@expr1073749439 function@var493 .@expr1073749440 functionScope@var495 ==@expr1073749441 scope@var490 &&@expr1073749442 scope@var490 .@expr1073749443 function@var496 ==@expr1073749444 function@var493 &&@expr1073749445 function@var493 .@expr1073749446 nestedIn@var497 !=@expr1073749447 scope@var490 $) $) { $return ; }
1513: $if $(@expr1073749448 $!@expr1073749449 $assert_ $(@expr1073749450 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1513 $, function@var493 &&@expr1073749451 function@var493 .@expr1073749452 retDef@var498 ==@expr1073749453 tokenizer@var487 .@expr7567 tokens (@expr7568 ) .@expr1073749456 tokAt (@expr1073749457 5 ) $) $) { $return ; }
1514: }
1515:
1516: void hasInlineClassFunction ( ) {
1517: $Tokenizer $tokenizer@var499 $(@expr1073749458 $&@expr1073749459 $settings1@var123 $, $this@expr1073749460 $) $; $const $SymbolDatabase $* $db@var500 $; $db@var500 $=@expr1073749461 $getSymbolDB_inner $(@expr1073749462 $tokenizer@var499 $, "class Fred { void func() { } };" $, $"test.cpp" $) $; $if $(@expr1073749463 $!@expr1073749464 $assert_ $(@expr1073749465 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1517 $, $db@var500 $) $) { $return $; } $do ${ $} $while $(@expr1073749466 $false $) ;
1518:
1519:
1520: $if $(@expr1073749467 $!@expr1073749468 $assert_ $(@expr1073749469 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1520 $, db@var500 &&@expr1073749470 db@var500 .@expr7647 scopeList@var501 .@expr1073749472 size (@expr1073749473 ) ==@expr1073749474 3 $) $) { $return ; }
1521:
1522: const Token * const functionToken@var502 ; functionToken@var502 =@expr1073749475 Token ::@expr1073749476 findsimplematch (@expr1073749477 tokenizer@var499 .@expr1073749478 tokens (@expr1073749479 ) , "func" ) ;
1523:
1524: const Scope * scope@var503 ; scope@var503 =@expr1073749480 findFunctionScopeByToken (@expr1073749481 db@var500 , functionToken@var502 ) ;
1525:
1526: $if $(@expr1073749482 $!@expr1073749483 $assert_ $(@expr1073749484 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1526 $, scope@var503 &&@expr1073749485 scope@var503 .@expr1073749486 className@var504 ==@expr1073749487 "func" $) $) { $return ; }
1527:
1528: $if $(@expr1073749488 $!@expr1073749489 $assert_ $(@expr1073749490 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1528 $, scope@var503 .@expr7667 functionOf@var505 &&@expr1073749492 scope@var503 .@expr7667 functionOf@var505 ==@expr1073749494 db@var500 .@expr7671 findScopeByName (@expr7672 "Fred" ) $) $) { $return ; }
1529:
1530: const Function * function@var506 ; function@var506 =@expr1073749497 findFunctionByName (@expr1073749498 "func" , &@expr1073749499 db@var500 .@expr7647 scopeList@var501 .@expr1073749501 back (@expr1073749502 ) ) ;
1531:
1532: $if $(@expr1073749503 $!@expr1073749504 $assert_ $(@expr1073749505 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1532 $, function@var506 &&@expr1073749506 function@var506 .@expr7683 token@var507 .@expr1073749508 str (@expr1073749509 ) ==@expr1073749510 "func" $) $) { $return ; }
1533: $if $(@expr1073749511 $!@expr1073749512 $assert_ $(@expr1073749513 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1533 $, function@var506 &&@expr1073749514 function@var506 .@expr7683 token@var507 ==@expr1073749516 functionToken@var502 $) $) { $return ; }
1534: $if $(@expr1073749517 $!@expr1073749518 $assert_ $(@expr1073749519 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1534 $, function@var506 &&@expr1073749520 function@var506 .@expr1073749521 hasBody (@expr1073749522 ) &&@expr1073749523 function@var506 .@expr1073749524 isInline (@expr1073749525 ) $) $) { $return ; }
1535: $if $(@expr1073749526 $!@expr1073749527 $assert_ $(@expr1073749528 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1535 $, function@var506 &&@expr1073749529 function@var506 .@expr1073749530 functionScope@var508 ==@expr1073749531 scope@var503 &&@expr1073749532 scope@var503 .@expr1073749533 function@var509 ==@expr1073749534 function@var506 &&@expr1073749535 function@var506 .@expr1073749536 nestedIn@var510 ==@expr1073749537 db@var500 .@expr7671 findScopeByName (@expr7672 "Fred" ) $) $) { $return ; }
1536: $if $(@expr1073749540 $!@expr1073749541 $assert_ $(@expr1073749542 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1536 $, function@var506 &&@expr1073749543 function@var506 .@expr1073749544 retDef@var511 ==@expr1073749545 functionToken@var502 .@expr1073749546 previous (@expr1073749547 ) $) $) { $return ; }
1537:
1538: $if $(@expr1073749548 $!@expr1073749549 $assert_ $(@expr1073749550 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1538 $, db@var500 &&@expr1073749551 db@var500 .@expr7671 findScopeByName (@expr7672 "Fred" ) &&@expr1073749554 db@var500 .@expr7671 findScopeByName (@expr7672 "Fred" ) .@expr1073749557 definedType .@expr1073749558 getFunction (@expr1073749559 "func" ) ==@expr1073749560 function@var506 $) $) { $return ; }
1539: }
1540:
1541:
1542: void hasInlineClassFunction_trailingReturnType ( ) {
1543: $Tokenizer $tokenizer@var512 $(@expr1073749561 $&@expr1073749562 $settings1@var123 $, $this@expr1073749563 $) $; $const $SymbolDatabase $* $db@var513 $; $db@var513 $=@expr1073749564 $getSymbolDB_inner $(@expr1073749565 $tokenizer@var512 $, "class Fred { auto func() -> int { } };" $, $"test.cpp" $) $; $if $(@expr1073749566 $!@expr1073749567 $assert_ $(@expr1073749568 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1543 $, $db@var513 $) $) { $return $; } $do ${ $} $while $(@expr1073749569 $false $) ;
1544:
1545:
1546: $if $(@expr1073749570 $!@expr1073749571 $assert_ $(@expr1073749572 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1546 $, db@var513 &&@expr1073749573 db@var513 .@expr7750 scopeList@var514 .@expr1073749575 size (@expr1073749576 ) ==@expr1073749577 3 $) $) { $return ; }
1547:
1548: const Token * const functionToken@var515 ; functionToken@var515 =@expr1073749578 Token ::@expr1073749579 findsimplematch (@expr1073749580 tokenizer@var512 .@expr1073749581 tokens (@expr1073749582 ) , "func" ) ;
1549:
1550: const Scope * scope@var516 ; scope@var516 =@expr1073749583 findFunctionScopeByToken (@expr1073749584 db@var513 , functionToken@var515 ) ;
1551:
1552: $if $(@expr1073749585 $!@expr1073749586 $assert_ $(@expr1073749587 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1552 $, scope@var516 &&@expr1073749588 scope@var516 .@expr1073749589 className@var517 ==@expr1073749590 "func" $) $) { $return ; }
1553:
1554: $if $(@expr1073749591 $!@expr1073749592 $assert_ $(@expr1073749593 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1554 $, scope@var516 .@expr7770 functionOf@var518 &&@expr1073749595 scope@var516 .@expr7770 functionOf@var518 ==@expr1073749597 db@var513 .@expr7774 findScopeByName (@expr7775 "Fred" ) $) $) { $return ; }
1555:
1556: const Function * function@var519 ; function@var519 =@expr1073749600 findFunctionByName (@expr1073749601 "func" , &@expr1073749602 db@var513 .@expr7750 scopeList@var514 .@expr1073749604 back (@expr1073749605 ) ) ;
1557:
1558: $if $(@expr1073749606 $!@expr1073749607 $assert_ $(@expr1073749608 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1558 $, function@var519 &&@expr1073749609 function@var519 .@expr7786 token@var520 .@expr1073749611 str (@expr1073749612 ) ==@expr1073749613 "func" $) $) { $return ; }
1559: $if $(@expr1073749614 $!@expr1073749615 $assert_ $(@expr1073749616 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1559 $, function@var519 &&@expr1073749617 function@var519 .@expr7786 token@var520 ==@expr1073749619 functionToken@var515 $) $) { $return ; }
1560: $if $(@expr1073749620 $!@expr1073749621 $assert_ $(@expr1073749622 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1560 $, function@var519 &&@expr1073749623 function@var519 .@expr1073749624 hasBody (@expr1073749625 ) &&@expr1073749626 function@var519 .@expr1073749627 isInline (@expr1073749628 ) $) $) { $return ; }
1561: $if $(@expr1073749629 $!@expr1073749630 $assert_ $(@expr1073749631 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1561 $, function@var519 &&@expr1073749632 function@var519 .@expr1073749633 functionScope@var521 ==@expr1073749634 scope@var516 &&@expr1073749635 scope@var516 .@expr1073749636 function@var522 ==@expr1073749637 function@var519 &&@expr1073749638 function@var519 .@expr1073749639 nestedIn@var523 ==@expr1073749640 db@var513 .@expr7774 findScopeByName (@expr7775 "Fred" ) $) $) { $return ; }
1562: $if $(@expr1073749643 $!@expr1073749644 $assert_ $(@expr1073749645 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1562 $, function@var519 &&@expr1073749646 function@var519 .@expr1073749647 retDef@var524 ==@expr1073749648 functionToken@var515 .@expr1073749649 tokAt (@expr1073749650 4 ) $) $) { $return ; }
1563:
1564: $if $(@expr1073749651 $!@expr1073749652 $assert_ $(@expr1073749653 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1564 $, db@var513 &&@expr1073749654 db@var513 .@expr7774 findScopeByName (@expr7775 "Fred" ) &&@expr1073749657 db@var513 .@expr7774 findScopeByName (@expr7775 "Fred" ) .@expr1073749660 definedType .@expr1073749661 getFunction (@expr1073749662 "func" ) ==@expr1073749663 function@var519 $) $) { $return ; }
1565: }
1566:
1567: void hasMissingInlineClassFunction ( ) {
1568: $Tokenizer $tokenizer@var525 $(@expr1073749664 $&@expr1073749665 $settings1@var123 $, $this@expr1073749666 $) $; $const $SymbolDatabase $* $db@var526 $; $db@var526 $=@expr1073749667 $getSymbolDB_inner $(@expr1073749668 $tokenizer@var525 $, "class Fred { void func(); };" $, $"test.cpp" $) $; $if $(@expr1073749669 $!@expr1073749670 $assert_ $(@expr1073749671 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1568 $, $db@var526 $) $) { $return $; } $do ${ $} $while $(@expr1073749672 $false $) ;
1569:
1570:
1571: $if $(@expr1073749673 $!@expr1073749674 $assert_ $(@expr1073749675 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1571 $, db@var526 &&@expr1073749676 db@var526 .@expr7853 scopeList@var527 .@expr1073749678 size (@expr1073749679 ) ==@expr1073749680 2 $) $) { $return ; }
1572:
1573: const Token * const functionToken@var528 ; functionToken@var528 =@expr1073749681 Token ::@expr1073749682 findsimplematch (@expr1073749683 tokenizer@var525 .@expr1073749684 tokens (@expr1073749685 ) , "func" ) ;
1574:
1575: const Scope * scope@var529 ; scope@var529 =@expr1073749686 findFunctionScopeByToken (@expr1073749687 db@var526 , functionToken@var528 ) ;
1576:
1577: $if $(@expr1073749688 $!@expr1073749689 $assert_ $(@expr1073749690 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1577 $, scope@var529 ==@expr1073749691 nullptr $) $) { $return ; }
1578:
1579: const Function * function@var530 ; function@var530 =@expr1073749692 findFunctionByName (@expr1073749693 "func" , &@expr1073749694 db@var526 .@expr7853 scopeList@var527 .@expr1073749696 back (@expr1073749697 ) ) ;
1580:
1581: $if $(@expr1073749698 $!@expr1073749699 $assert_ $(@expr1073749700 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1581 $, function@var530 &&@expr1073749701 function@var530 .@expr7878 token@var531 .@expr1073749703 str (@expr1073749704 ) ==@expr1073749705 "func" $) $) { $return ; }
1582: $if $(@expr1073749706 $!@expr1073749707 $assert_ $(@expr1073749708 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1582 $, function@var530 &&@expr1073749709 function@var530 .@expr7878 token@var531 ==@expr1073749711 functionToken@var528 $) $) { $return ; }
1583: $if $(@expr1073749712 $!@expr1073749713 $assert_ $(@expr1073749714 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1583 $, function@var530 &&@expr1073749715 !@expr1073749716 function@var530 .@expr1073749717 hasBody (@expr1073749718 ) $) $) { $return ; }
1584: }
1585:
1586: void hasInlineClassOperatorTemplate ( ) {
1587: $Tokenizer $tokenizer@var532 $(@expr1073749719 $&@expr1073749720 $settings1@var123 $, $this@expr1073749721 $) $; $const $SymbolDatabase $* $db@var533 $; $db@var533 $=@expr1073749722 $getSymbolDB_inner $(@expr1073749723 $tokenizer@var532 $, "struct Fred { template<typename T> Foo & operator=(const Foo &) { return *this; } };" $, $"test.cpp" $) $; $if $(@expr1073749724 $!@expr1073749725 $assert_ $(@expr1073749726 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1587 $, $db@var533 $) $) { $return $; } $do ${ $} $while $(@expr1073749727 $false $) ;
1588:
1589:
1590: $if $(@expr1073749728 $!@expr1073749729 $assert_ $(@expr1073749730 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1590 $, db@var533 &&@expr1073749731 db@var533 .@expr7908 scopeList@var534 .@expr1073749733 size (@expr1073749734 ) ==@expr1073749735 3 $) $) { $return ; }
1591:
1592: const Token * const functionToken@var535 ; functionToken@var535 =@expr1073749736 Token ::@expr1073749737 findsimplematch (@expr1073749738 tokenizer@var532 .@expr1073749739 tokens (@expr1073749740 ) , "operator=" ) ;
1593:
1594: const Scope * scope@var536 ; scope@var536 =@expr1073749741 findFunctionScopeByToken (@expr1073749742 db@var533 , functionToken@var535 ) ;
1595:
1596: $if $(@expr1073749743 $!@expr1073749744 $assert_ $(@expr1073749745 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1596 $, scope@var536 &&@expr1073749746 scope@var536 .@expr1073749747 className@var537 ==@expr1073749748 "operator=" $) $) { $return ; }
1597:
1598: $if $(@expr1073749749 $!@expr1073749750 $assert_ $(@expr1073749751 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1598 $, scope@var536 .@expr7928 functionOf@var538 &&@expr1073749753 scope@var536 .@expr7928 functionOf@var538 ==@expr1073749755 db@var533 .@expr7932 findScopeByName (@expr7933 "Fred" ) $) $) { $return ; }
1599:
1600: const Function * function@var539 ; function@var539 =@expr1073749758 findFunctionByName (@expr1073749759 "operator=" , &@expr1073749760 db@var533 .@expr7908 scopeList@var534 .@expr1073749762 back (@expr1073749763 ) ) ;
1601:
1602: $if $(@expr1073749764 $!@expr1073749765 $assert_ $(@expr1073749766 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1602 $, function@var539 &&@expr1073749767 function@var539 .@expr7944 token@var540 .@expr1073749769 str (@expr1073749770 ) ==@expr1073749771 "operator=" $) $) { $return ; }
1603: $if $(@expr1073749772 $!@expr1073749773 $assert_ $(@expr1073749774 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1603 $, function@var539 &&@expr1073749775 function@var539 .@expr7944 token@var540 ==@expr1073749777 functionToken@var535 $) $) { $return ; }
1604: $if $(@expr1073749778 $!@expr1073749779 $assert_ $(@expr1073749780 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1604 $, function@var539 &&@expr1073749781 function@var539 .@expr1073749782 hasBody (@expr1073749783 ) &&@expr1073749784 function@var539 .@expr1073749785 isInline (@expr1073749786 ) $) $) { $return ; }
1605: $if $(@expr1073749787 $!@expr1073749788 $assert_ $(@expr1073749789 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1605 $, function@var539 &&@expr1073749790 function@var539 .@expr1073749791 functionScope@var541 ==@expr1073749792 scope@var536 &&@expr1073749793 scope@var536 .@expr1073749794 function@var542 ==@expr1073749795 function@var539 &&@expr1073749796 function@var539 .@expr1073749797 nestedIn@var543 ==@expr1073749798 db@var533 .@expr7932 findScopeByName (@expr7933 "Fred" ) $) $) { $return ; }
1606: $if $(@expr1073749801 $!@expr1073749802 $assert_ $(@expr1073749803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1606 $, function@var539 &&@expr1073749804 function@var539 .@expr1073749805 retDef@var544 ==@expr1073749806 functionToken@var535 .@expr1073749807 tokAt (@expr1073749808 -2 ) $) $) { $return ; }
1607:
1608: $if $(@expr1073749809 $!@expr1073749810 $assert_ $(@expr1073749811 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1608 $, db@var533 &&@expr1073749812 db@var533 .@expr7932 findScopeByName (@expr7933 "Fred" ) &&@expr1073749815 db@var533 .@expr7932 findScopeByName (@expr7933 "Fred" ) .@expr1073749818 definedType .@expr1073749819 getFunction (@expr1073749820 "operator=" ) ==@expr1073749821 function@var539 $) $) { $return ; }
1609: }
1610:
1611: void hasClassFunction ( ) {
1612: $Tokenizer $tokenizer@var545 $(@expr1073749822 $&@expr1073749823 $settings1@var123 $, $this@expr1073749824 $) $; $const $SymbolDatabase $* $db@var546 $; $db@var546 $=@expr1073749825 $getSymbolDB_inner $(@expr1073749826 $tokenizer@var545 $, "class Fred { void func(); }; void Fred::func() { }" $, $"test.cpp" $) $; $if $(@expr1073749827 $!@expr1073749828 $assert_ $(@expr1073749829 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1612 $, $db@var546 $) $) { $return $; } $do ${ $} $while $(@expr1073749830 $false $) ;
1613:
1614:
1615: $if $(@expr1073749831 $!@expr1073749832 $assert_ $(@expr1073749833 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1615 $, db@var546 &&@expr1073749834 db@var546 .@expr8011 scopeList@var547 .@expr1073749836 size (@expr1073749837 ) ==@expr1073749838 3 $) $) { $return ; }
1616:
1617: const Token * const functionToken@var548 ; functionToken@var548 =@expr1073749839 Token ::@expr1073749840 findsimplematch (@expr1073749841 tokenizer@var545 .@expr1073749842 tokens (@expr1073749843 ) .@expr1073749844 linkAt (@expr1073749845 2 ) , "func" ) ;
1618:
1619: const Scope * scope@var549 ; scope@var549 =@expr1073749846 findFunctionScopeByToken (@expr1073749847 db@var546 , functionToken@var548 ) ;
1620:
1621: $if $(@expr1073749848 $!@expr1073749849 $assert_ $(@expr1073749850 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1621 $, scope@var549 &&@expr1073749851 scope@var549 .@expr1073749852 className@var550 ==@expr1073749853 "func" $) $) { $return ; }
1622:
1623: $if $(@expr1073749854 $!@expr1073749855 $assert_ $(@expr1073749856 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1623 $, scope@var549 .@expr8033 functionOf@var551 &&@expr1073749858 scope@var549 .@expr8033 functionOf@var551 ==@expr1073749860 db@var546 .@expr8037 findScopeByName (@expr8038 "Fred" ) $) $) { $return ; }
1624:
1625: const Function * function@var552 ; function@var552 =@expr1073749863 findFunctionByName (@expr1073749864 "func" , &@expr1073749865 db@var546 .@expr8011 scopeList@var547 .@expr1073749867 back (@expr1073749868 ) ) ;
1626:
1627: $if $(@expr1073749869 $!@expr1073749870 $assert_ $(@expr1073749871 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1627 $, function@var552 &&@expr1073749872 function@var552 .@expr8049 token@var553 .@expr1073749874 str (@expr1073749875 ) ==@expr1073749876 "func" $) $) { $return ; }
1628: $if $(@expr1073749877 $!@expr1073749878 $assert_ $(@expr1073749879 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1628 $, function@var552 &&@expr1073749880 function@var552 .@expr8049 token@var553 ==@expr1073749882 functionToken@var548 $) $) { $return ; }
1629: $if $(@expr1073749883 $!@expr1073749884 $assert_ $(@expr1073749885 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1629 $, function@var552 &&@expr1073749886 function@var552 .@expr1073749887 hasBody (@expr1073749888 ) &&@expr1073749889 !@expr1073749890 function@var552 .@expr1073749891 isInline (@expr1073749892 ) $) $) { $return ; }
1630: $if $(@expr1073749893 $!@expr1073749894 $assert_ $(@expr1073749895 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1630 $, function@var552 &&@expr1073749896 function@var552 .@expr1073749897 functionScope@var554 ==@expr1073749898 scope@var549 &&@expr1073749899 scope@var549 .@expr1073749900 function@var555 ==@expr1073749901 function@var552 &&@expr1073749902 function@var552 .@expr1073749903 nestedIn@var556 ==@expr1073749904 db@var546 .@expr8037 findScopeByName (@expr8038 "Fred" ) $) $) { $return ; }
1631: }
1632:
1633: void hasClassFunction_trailingReturnType ( ) {
1634: $Tokenizer $tokenizer@var557 $(@expr1073749907 $&@expr1073749908 $settings1@var123 $, $this@expr1073749909 $) $; $const $SymbolDatabase $* $db@var558 $; $db@var558 $=@expr1073749910 $getSymbolDB_inner $(@expr1073749911 $tokenizer@var557 $, "class Fred { auto func() -> int; }; auto Fred::func() -> int { }" $, $"test.cpp" $) $; $if $(@expr1073749912 $!@expr1073749913 $assert_ $(@expr1073749914 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1634 $, $db@var558 $) $) { $return $; } $do ${ $} $while $(@expr1073749915 $false $) ;
1635:
1636:
1637: $if $(@expr1073749916 $!@expr1073749917 $assert_ $(@expr1073749918 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1637 $, db@var558 &&@expr1073749919 db@var558 .@expr8096 scopeList@var559 .@expr1073749921 size (@expr1073749922 ) ==@expr1073749923 3 $) $) { $return ; }
1638:
1639: const Token * const functionToken@var560 ; functionToken@var560 =@expr1073749924 Token ::@expr1073749925 findsimplematch (@expr1073749926 tokenizer@var557 .@expr1073749927 tokens (@expr1073749928 ) .@expr1073749929 linkAt (@expr1073749930 2 ) , "func" ) ;
1640:
1641: const Scope * scope@var561 ; scope@var561 =@expr1073749931 findFunctionScopeByToken (@expr1073749932 db@var558 , functionToken@var560 ) ;
1642:
1643: $if $(@expr1073749933 $!@expr1073749934 $assert_ $(@expr1073749935 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1643 $, scope@var561 &&@expr1073749936 scope@var561 .@expr1073749937 className@var562 ==@expr1073749938 "func" $) $) { $return ; }
1644:
1645: $if $(@expr1073749939 $!@expr1073749940 $assert_ $(@expr1073749941 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1645 $, scope@var561 .@expr8118 functionOf@var563 &&@expr1073749943 scope@var561 .@expr8118 functionOf@var563 ==@expr1073749945 db@var558 .@expr8122 findScopeByName (@expr8123 "Fred" ) $) $) { $return ; }
1646:
1647: const Function * function@var564 ; function@var564 =@expr1073749948 findFunctionByName (@expr1073749949 "func" , &@expr1073749950 db@var558 .@expr8096 scopeList@var559 .@expr1073749952 back (@expr1073749953 ) ) ;
1648:
1649: $if $(@expr1073749954 $!@expr1073749955 $assert_ $(@expr1073749956 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1649 $, function@var564 &&@expr1073749957 function@var564 .@expr8134 token@var565 .@expr1073749959 str (@expr1073749960 ) ==@expr1073749961 "func" $) $) { $return ; }
1650: $if $(@expr1073749962 $!@expr1073749963 $assert_ $(@expr1073749964 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1650 $, function@var564 &&@expr1073749965 function@var564 .@expr8134 token@var565 ==@expr1073749967 functionToken@var560 $) $) { $return ; }
1651: $if $(@expr1073749968 $!@expr1073749969 $assert_ $(@expr1073749970 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1651 $, function@var564 &&@expr1073749971 function@var564 .@expr1073749972 hasBody (@expr1073749973 ) &&@expr1073749974 !@expr1073749975 function@var564 .@expr1073749976 isInline (@expr1073749977 ) $) $) { $return ; }
1652: $if $(@expr1073749978 $!@expr1073749979 $assert_ $(@expr1073749980 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1652 $, function@var564 &&@expr1073749981 function@var564 .@expr1073749982 functionScope@var566 ==@expr1073749983 scope@var561 &&@expr1073749984 scope@var561 .@expr1073749985 function@var567 ==@expr1073749986 function@var564 &&@expr1073749987 function@var564 .@expr1073749988 nestedIn@var568 ==@expr1073749989 db@var558 .@expr8122 findScopeByName (@expr8123 "Fred" ) $) $) { $return ; }
1653: }
1654:
1655: void hasClassFunction_decltype_auto ( )
1656: {
1657: $Tokenizer $tokenizer@var569 $(@expr1073749992 $&@expr1073749993 $settings1@var123 $, $this@expr1073749994 $) $; $const $SymbolDatabase $* $db@var570 $; $db@var570 $=@expr1073749995 $getSymbolDB_inner $(@expr1073749996 $tokenizer@var569 $, "struct d { decltype(auto) f() {} };" $, $"test.cpp" $) $; $if $(@expr1073749997 $!@expr1073749998 $assert_ $(@expr1073749999 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1657 $, $db@var570 $) $) { $return $; } $do ${ $} $while $(@expr1073750000 $false $) ;
1658:
1659:
1660: $if $(@expr1073750001 $!@expr1073750002 $assert_ $(@expr1073750003 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1660 $, db@var570 &&@expr1073750004 db@var570 .@expr8181 scopeList@var571 .@expr1073750006 size (@expr1073750007 ) ==@expr1073750008 3 $) $) { $return ; }
1661:
1662: const Token * const functionToken@var572 ; functionToken@var572 =@expr1073750009 Token ::@expr1073750010 findsimplematch (@expr1073750011 tokenizer@var569 .@expr1073750012 tokens (@expr1073750013 ) , "f" ) ;
1663:
1664: const Scope * scope@var573 ; scope@var573 =@expr1073750014 findFunctionScopeByToken (@expr1073750015 db@var570 , functionToken@var572 ) ;
1665:
1666: $if $(@expr1073750016 $!@expr1073750017 $assert_ $(@expr1073750018 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1666 $, scope@var573 &&@expr1073750019 scope@var573 .@expr1073750020 className@var574 ==@expr1073750021 "f" $) $) { $return ; }
1667:
1668: $if $(@expr1073750022 $!@expr1073750023 $assert_ $(@expr1073750024 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1668 $, scope@var573 .@expr8201 functionOf@var575 &&@expr1073750026 scope@var573 .@expr8201 functionOf@var575 ==@expr1073750028 db@var570 .@expr1073750029 findScopeByName (@expr1073750030 "d" ) $) $) { $return ; }
1669:
1670: const Function * function@var576 ; function@var576 =@expr1073750031 findFunctionByName (@expr1073750032 "f" , &@expr1073750033 db@var570 .@expr8181 scopeList@var571 .@expr1073750035 back (@expr1073750036 ) ) ;
1671:
1672: $if $(@expr1073750037 $!@expr1073750038 $assert_ $(@expr1073750039 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1672 $, function@var576 &&@expr1073750040 function@var576 .@expr8217 token@var577 .@expr1073750042 str (@expr1073750043 ) ==@expr1073750044 "f" $) $) { $return ; }
1673: $if $(@expr1073750045 $!@expr1073750046 $assert_ $(@expr1073750047 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1673 $, function@var576 &&@expr1073750048 function@var576 .@expr8217 token@var577 ==@expr1073750050 functionToken@var572 $) $) { $return ; }
1674: $if $(@expr1073750051 $!@expr1073750052 $assert_ $(@expr1073750053 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1674 $, function@var576 &&@expr1073750054 function@var576 .@expr1073750055 hasBody (@expr1073750056 ) $) $) { $return ; }
1675: }
1676:
1677: void hasRegularFunctionReturningFunctionPointer ( ) {
1678: $Tokenizer $tokenizer@var578 $(@expr1073750057 $&@expr1073750058 $settings1@var123 $, $this@expr1073750059 $) $; $const $SymbolDatabase $* $db@var579 $; $db@var579 $=@expr1073750060 $getSymbolDB_inner $(@expr1073750061 $tokenizer@var578 $, "void (*func(int f))(char) { }" $, $"test.cpp" $) $; $if $(@expr1073750062 $!@expr1073750063 $assert_ $(@expr1073750064 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1678 $, $db@var579 $) $) { $return $; } $do ${ $} $while $(@expr1073750065 $false $) ;
1679:
1680:
1681: $if $(@expr1073750066 $!@expr1073750067 $assert_ $(@expr1073750068 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1681 $, db@var579 &&@expr1073750069 db@var579 .@expr8246 scopeList@var580 .@expr1073750071 size (@expr1073750072 ) ==@expr1073750073 2 $) $) { $return ; }
1682:
1683: const Token * const functionToken@var581 ; functionToken@var581 =@expr1073750074 Token ::@expr1073750075 findsimplematch (@expr1073750076 tokenizer@var578 .@expr1073750077 tokens (@expr1073750078 ) , "func" ) ;
1684:
1685: const Scope * scope@var582 ; scope@var582 =@expr1073750079 findFunctionScopeByToken (@expr1073750080 db@var579 , functionToken@var581 ) ;
1686:
1687: $if $(@expr1073750081 $!@expr1073750082 $assert_ $(@expr1073750083 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1687 $, scope@var582 &&@expr1073750084 scope@var582 .@expr1073750085 className@var583 ==@expr1073750086 "func" $) $) { $return ; }
1688:
1689: const Function * function@var584 ; function@var584 =@expr1073750087 findFunctionByName (@expr1073750088 "func" , &@expr1073750089 db@var579 .@expr8246 scopeList@var580 .@expr1073750091 front (@expr1073750092 ) ) ;
1690:
1691: $if $(@expr1073750093 $!@expr1073750094 $assert_ $(@expr1073750095 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1691 $, function@var584 &&@expr1073750096 function@var584 .@expr8273 token@var585 .@expr1073750098 str (@expr1073750099 ) ==@expr1073750100 "func" $) $) { $return ; }
1692: $if $(@expr1073750101 $!@expr1073750102 $assert_ $(@expr1073750103 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1692 $, function@var584 &&@expr1073750104 function@var584 .@expr8273 token@var585 ==@expr1073750106 functionToken@var581 $) $) { $return ; }
1693: $if $(@expr1073750107 $!@expr1073750108 $assert_ $(@expr1073750109 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1693 $, function@var584 &&@expr1073750110 function@var584 .@expr1073750111 hasBody (@expr1073750112 ) $) $) { $return ; }
1694: }
1695:
1696: void hasInlineClassFunctionReturningFunctionPointer ( ) {
1697: $Tokenizer $tokenizer@var586 $(@expr1073750113 $&@expr1073750114 $settings1@var123 $, $this@expr1073750115 $) $; $const $SymbolDatabase $* $db@var587 $; $db@var587 $=@expr1073750116 $getSymbolDB_inner $(@expr1073750117 $tokenizer@var586 $, "class Fred { void (*func(int f))(char) { } };" $, $"test.cpp" $) $; $if $(@expr1073750118 $!@expr1073750119 $assert_ $(@expr1073750120 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1697 $, $db@var587 $) $) { $return $; } $do ${ $} $while $(@expr1073750121 $false $) ;
1698:
1699:
1700: $if $(@expr1073750122 $!@expr1073750123 $assert_ $(@expr1073750124 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1700 $, db@var587 &&@expr1073750125 db@var587 .@expr8302 scopeList@var588 .@expr1073750127 size (@expr1073750128 ) ==@expr1073750129 3 $) $) { $return ; }
1701:
1702: const Token * const functionToken@var589 ; functionToken@var589 =@expr1073750130 Token ::@expr1073750131 findsimplematch (@expr1073750132 tokenizer@var586 .@expr1073750133 tokens (@expr1073750134 ) , "func" ) ;
1703:
1704: const Scope * scope@var590 ; scope@var590 =@expr1073750135 findFunctionScopeByToken (@expr1073750136 db@var587 , functionToken@var589 ) ;
1705:
1706: $if $(@expr1073750137 $!@expr1073750138 $assert_ $(@expr1073750139 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1706 $, scope@var590 &&@expr1073750140 scope@var590 .@expr1073750141 className@var591 ==@expr1073750142 "func" $) $) { $return ; }
1707:
1708: const Function * function@var592 ; function@var592 =@expr1073750143 findFunctionByName (@expr1073750144 "func" , &@expr1073750145 db@var587 .@expr8302 scopeList@var588 .@expr1073750147 back (@expr1073750148 ) ) ;
1709:
1710: $if $(@expr1073750149 $!@expr1073750150 $assert_ $(@expr1073750151 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1710 $, function@var592 &&@expr1073750152 function@var592 .@expr8329 token@var593 .@expr1073750154 str (@expr1073750155 ) ==@expr1073750156 "func" $) $) { $return ; }
1711: $if $(@expr1073750157 $!@expr1073750158 $assert_ $(@expr1073750159 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1711 $, function@var592 &&@expr1073750160 function@var592 .@expr8329 token@var593 ==@expr1073750162 functionToken@var589 $) $) { $return ; }
1712: $if $(@expr1073750163 $!@expr1073750164 $assert_ $(@expr1073750165 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1712 $, function@var592 &&@expr1073750166 function@var592 .@expr1073750167 hasBody (@expr1073750168 ) &&@expr1073750169 function@var592 .@expr1073750170 isInline (@expr1073750171 ) $) $) { $return ; }
1713: }
1714:
1715: void hasMissingInlineClassFunctionReturningFunctionPointer ( ) {
1716: $Tokenizer $tokenizer@var594 $(@expr1073750172 $&@expr1073750173 $settings1@var123 $, $this@expr1073750174 $) $; $const $SymbolDatabase $* $db@var595 $; $db@var595 $=@expr1073750175 $getSymbolDB_inner $(@expr1073750176 $tokenizer@var594 $, "class Fred { void (*func(int f))(char); };" $, $"test.cpp" $) $; $if $(@expr1073750177 $!@expr1073750178 $assert_ $(@expr1073750179 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1716 $, $db@var595 $) $) { $return $; } $do ${ $} $while $(@expr1073750180 $false $) ;
1717:
1718:
1719: $if $(@expr1073750181 $!@expr1073750182 $assert_ $(@expr1073750183 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1719 $, db@var595 &&@expr1073750184 db@var595 .@expr8361 scopeList@var596 .@expr1073750186 size (@expr1073750187 ) ==@expr1073750188 2 $) $) { $return ; }
1720:
1721: const Token * const functionToken@var597 ; functionToken@var597 =@expr1073750189 Token ::@expr1073750190 findsimplematch (@expr1073750191 tokenizer@var594 .@expr1073750192 tokens (@expr1073750193 ) , "func" ) ;
1722:
1723: const Scope * scope@var598 ; scope@var598 =@expr1073750194 findFunctionScopeByToken (@expr1073750195 db@var595 , functionToken@var597 ) ;
1724:
1725: $if $(@expr1073750196 $!@expr1073750197 $assert_ $(@expr1073750198 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1725 $, scope@var598 ==@expr1073750199 nullptr $) $) { $return ; }
1726:
1727: const Function * function@var599 ; function@var599 =@expr1073750200 findFunctionByName (@expr1073750201 "func" , &@expr1073750202 db@var595 .@expr8361 scopeList@var596 .@expr1073750204 back (@expr1073750205 ) ) ;
1728:
1729: $if $(@expr1073750206 $!@expr1073750207 $assert_ $(@expr1073750208 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1729 $, function@var599 &&@expr1073750209 function@var599 .@expr8386 token@var600 .@expr1073750211 str (@expr1073750212 ) ==@expr1073750213 "func" $) $) { $return ; }
1730: $if $(@expr1073750214 $!@expr1073750215 $assert_ $(@expr1073750216 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1730 $, function@var599 &&@expr1073750217 function@var599 .@expr8386 token@var600 ==@expr1073750219 functionToken@var597 $) $) { $return ; }
1731: $if $(@expr1073750220 $!@expr1073750221 $assert_ $(@expr1073750222 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1731 $, function@var599 &&@expr1073750223 !@expr1073750224 function@var599 .@expr1073750225 hasBody (@expr1073750226 ) $) $) { $return ; }
1732: }
1733:
1734: void hasClassFunctionReturningFunctionPointer ( ) {
1735: $Tokenizer $tokenizer@var601 $(@expr1073750227 $&@expr1073750228 $settings1@var123 $, $this@expr1073750229 $) $; $const $SymbolDatabase $* $db@var602 $; $db@var602 $=@expr1073750230 $getSymbolDB_inner $(@expr1073750231 $tokenizer@var601 $, "class Fred { void (*func(int f))(char); }; void (*Fred::func(int f))(char) { }" $, $"test.cpp" $) $; $if $(@expr1073750232 $!@expr1073750233 $assert_ $(@expr1073750234 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1735 $, $db@var602 $) $) { $return $; } $do ${ $} $while $(@expr1073750235 $false $) ;
1736:
1737:
1738: $if $(@expr1073750236 $!@expr1073750237 $assert_ $(@expr1073750238 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1738 $, db@var602 &&@expr1073750239 db@var602 .@expr8416 scopeList@var603 .@expr1073750241 size (@expr1073750242 ) ==@expr1073750243 3 $) $) { $return ; }
1739:
1740: const Token * const functionToken@var604 ; functionToken@var604 =@expr1073750244 Token ::@expr1073750245 findsimplematch (@expr1073750246 tokenizer@var601 .@expr1073750247 tokens (@expr1073750248 ) .@expr1073750249 linkAt (@expr1073750250 2 ) , "func" ) ;
1741:
1742: const Scope * scope@var605 ; scope@var605 =@expr1073750251 findFunctionScopeByToken (@expr1073750252 db@var602 , functionToken@var604 ) ;
1743:
1744: $if $(@expr1073750253 $!@expr1073750254 $assert_ $(@expr1073750255 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1744 $, scope@var605 &&@expr1073750256 scope@var605 .@expr1073750257 className@var606 ==@expr1073750258 "func" $) $) { $return ; }
1745:
1746: const Function * function@var607 ; function@var607 =@expr1073750259 findFunctionByName (@expr1073750260 "func" , &@expr1073750261 db@var602 .@expr8416 scopeList@var603 .@expr1073750263 back (@expr1073750264 ) ) ;
1747:
1748: $if $(@expr1073750265 $!@expr1073750266 $assert_ $(@expr1073750267 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1748 $, function@var607 &&@expr1073750268 function@var607 .@expr8445 token@var608 .@expr1073750270 str (@expr1073750271 ) ==@expr1073750272 "func" $) $) { $return ; }
1749: $if $(@expr1073750273 $!@expr1073750274 $assert_ $(@expr1073750275 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1749 $, function@var607 &&@expr1073750276 function@var607 .@expr8445 token@var608 ==@expr1073750278 functionToken@var604 $) $) { $return ; }
1750: $if $(@expr1073750279 $!@expr1073750280 $assert_ $(@expr1073750281 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1750 $, function@var607 &&@expr1073750282 function@var607 .@expr1073750283 hasBody (@expr1073750284 ) &&@expr1073750285 !@expr1073750286 function@var607 .@expr1073750287 isInline (@expr1073750288 ) $) $) { $return ; }
1751: }
1752:
1753: void methodWithRedundantScope ( ) {
1754: $Tokenizer $tokenizer@var609 $(@expr1073750289 $&@expr1073750290 $settings1@var123 $, $this@expr1073750291 $) $; $const $SymbolDatabase $* $db@var610 $; $db@var610 $=@expr1073750292 $getSymbolDB_inner $(@expr1073750293 $tokenizer@var609 $, "class Fred { void Fred::func() {} };" $, $"test.cpp" $) $; $if $(@expr1073750294 $!@expr1073750295 $assert_ $(@expr1073750296 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1754 $, $db@var610 $) $) { $return $; } $do ${ $} $while $(@expr1073750297 $false $) ;
1755:
1756:
1757: $if $(@expr1073750298 $!@expr1073750299 $assert_ $(@expr1073750300 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1757 $, db@var610 &&@expr1073750301 db@var610 .@expr8478 scopeList@var611 .@expr1073750303 size (@expr1073750304 ) ==@expr1073750305 3 $) $) { $return ; }
1758:
1759: const Token * const functionToken@var612 ; functionToken@var612 =@expr1073750306 Token ::@expr1073750307 findsimplematch (@expr1073750308 tokenizer@var609 .@expr1073750309 tokens (@expr1073750310 ) , "func" ) ;
1760:
1761: const Scope * scope@var613 ; scope@var613 =@expr1073750311 findFunctionScopeByToken (@expr1073750312 db@var610 , functionToken@var612 ) ;
1762:
1763: $if $(@expr1073750313 $!@expr1073750314 $assert_ $(@expr1073750315 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1763 $, scope@var613 &&@expr1073750316 scope@var613 .@expr1073750317 className@var614 ==@expr1073750318 "func" $) $) { $return ; }
1764:
1765: const Function * function@var615 ; function@var615 =@expr1073750319 findFunctionByName (@expr1073750320 "func" , &@expr1073750321 db@var610 .@expr8478 scopeList@var611 .@expr1073750323 back (@expr1073750324 ) ) ;
1766:
1767: $if $(@expr1073750325 $!@expr1073750326 $assert_ $(@expr1073750327 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1767 $, function@var615 &&@expr1073750328 function@var615 .@expr8505 token@var616 .@expr1073750330 str (@expr1073750331 ) ==@expr1073750332 "func" $) $) { $return ; }
1768: $if $(@expr1073750333 $!@expr1073750334 $assert_ $(@expr1073750335 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1768 $, function@var615 &&@expr1073750336 function@var615 .@expr8505 token@var616 ==@expr1073750338 functionToken@var612 $) $) { $return ; }
1769: $if $(@expr1073750339 $!@expr1073750340 $assert_ $(@expr1073750341 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1769 $, function@var615 &&@expr1073750342 function@var615 .@expr1073750343 hasBody (@expr1073750344 ) &&@expr1073750345 function@var615 .@expr1073750346 isInline (@expr1073750347 ) $) $) { $return ; }
1770: }
1771:
1772: void complexFunctionArrayPtr ( ) {
1773: $Tokenizer $tokenizer@var617 $(@expr1073750348 $&@expr1073750349 $settings1@var123 $, $this@expr1073750350 $) $; $const $SymbolDatabase $* $db@var618 $; $db@var618 $=@expr1073750351 $getSymbolDB_inner $(@expr1073750352 $tokenizer@var617 $, "int(*p1)[10]; \nvoid(*p2)(char); \nint(*(*p3)(char))[10];\nfloat(*(*p4)(char))(long); \nshort(*(*(*p5) (char))(long))(double);\nint(*a1[10])(void); \nfloat(*(*a2[10])(char))(long);\nshort(*(*(*a3[10])(char))(long))(double);\n::boost::rational(&r_)[9];\n::boost::rational<T>(&r_)[9];" $, $"test.cpp" $) $; $if $(@expr1073750353 $!@expr1073750354 $assert_ $(@expr1073750355 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1773 $, $db@var618 $) $) { $return $; } $do ${ $} $while $(@expr1073750356 $false $)
1774:
|
1781:
1782: ;
1783:
1784: $if $(@expr1073750357 $!@expr1073750358 $assert_ $(@expr1073750359 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1784 $, db@var618 !=@expr1073750360 nullptr $) $) { $return ; }
1785:
1786: $if $(@expr1073750361 $!@expr1073750362 $assertEquals $(@expr1073750363 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1786 $, 10 $, db@var618 .@expr1073750364 variableList (@expr1073750365 ) .@expr1073750366 size (@expr1073750367 ) -@expr1073750368 1 $) $) { $return ; }
1787: $if $(@expr1073750369 $!@expr1073750370 $assertEquals $(@expr1073750371 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1787 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr8549 1 ) &&@expr1073750374 db@var618 .@expr8548 getVariableFromVarId (@expr8549 1 ) .@expr1073750377 dimensions (@expr1073750378 ) .@expr1073750379 size (@expr1073750380 ) ==@expr1073750381 1 $) $) { $return ; }
1788: $if $(@expr1073750382 $!@expr1073750383 $assertEquals $(@expr1073750384 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1788 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr1073750386 2 ) !=@expr1073750387 nullptr $) $) { $return ; }
1789: $if $(@expr1073750388 $!@expr1073750389 $assertEquals $(@expr1073750390 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1789 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr8568 3 ) &&@expr1073750393 db@var618 .@expr8548 getVariableFromVarId (@expr8568 3 ) .@expr1073750396 dimensions (@expr1073750397 ) .@expr1073750398 size (@expr1073750399 ) ==@expr1073750400 0 $) $) { $return ; }
1790: $if $(@expr1073750401 $!@expr1073750402 $assertEquals $(@expr1073750403 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1790 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr1073750405 4 ) !=@expr1073750406 nullptr $) $) { $return ; }
1791: $if $(@expr1073750407 $!@expr1073750408 $assertEquals $(@expr1073750409 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1791 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr1073750411 5 ) !=@expr1073750412 nullptr $) $) { $return ; }
1792: $if $(@expr1073750413 $!@expr1073750414 $assertEquals $(@expr1073750415 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1792 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr8593 6 ) &&@expr1073750418 db@var618 .@expr8548 getVariableFromVarId (@expr8593 6 ) .@expr1073750421 dimensions (@expr1073750422 ) .@expr1073750423 size (@expr1073750424 ) ==@expr1073750425 1 $) $) { $return ; }
1793: $if $(@expr1073750426 $!@expr1073750427 $assertEquals $(@expr1073750428 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1793 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr8606 7 ) &&@expr1073750431 db@var618 .@expr8548 getVariableFromVarId (@expr8606 7 ) .@expr1073750434 dimensions (@expr1073750435 ) .@expr1073750436 size (@expr1073750437 ) ==@expr1073750438 1 $) $) { $return ; }
1794: $if $(@expr1073750439 $!@expr1073750440 $assertEquals $(@expr1073750441 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1794 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr8619 8 ) &&@expr1073750444 db@var618 .@expr8548 getVariableFromVarId (@expr8619 8 ) .@expr1073750447 dimensions (@expr1073750448 ) .@expr1073750449 size (@expr1073750450 ) ==@expr1073750451 1 $) $) { $return ; }
1795: $if $(@expr1073750452 $!@expr1073750453 $assertEquals $(@expr1073750454 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1795 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr8632 9 ) &&@expr1073750457 db@var618 .@expr8548 getVariableFromVarId (@expr8632 9 ) .@expr1073750460 dimensions (@expr1073750461 ) .@expr1073750462 size (@expr1073750463 ) ==@expr1073750464 1 $) $) { $return ; }
1796: $if $(@expr1073750465 $!@expr1073750466 $assertEquals $(@expr1073750467 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1796 $, true $, db@var618 .@expr8548 getVariableFromVarId (@expr8645 10 ) &&@expr1073750470 db@var618 .@expr8548 getVariableFromVarId (@expr8645 10 ) .@expr1073750473 dimensions (@expr1073750474 ) .@expr1073750475 size (@expr1073750476 ) ==@expr1073750477 1 $) $) { $return ; }
1797: $if $(@expr1073750478 $!@expr1073750479 $assertEquals $(@expr1073750480 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1797 $, "" $, errout@var100 .@expr1073750481 str (@expr1073750482 ) $) $) { $return ; }
1798: }
1799:
1800: void pointerToMemberFunction ( ) {
1801: $Tokenizer $tokenizer@var619 $(@expr1073750483 $&@expr1073750484 $settings1@var123 $, $this@expr1073750485 $) $; $const $SymbolDatabase $* $db@var620 $; $db@var620 $=@expr1073750486 $getSymbolDB_inner $(@expr1073750487 $tokenizer@var619 $, "bool (A::*pFun)();" $, $"test.cpp" $) $; $if $(@expr1073750488 $!@expr1073750489 $assert_ $(@expr1073750490 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1801 $, $db@var620 $) $) { $return $; } $do ${ $} $while $(@expr1073750491 $false $) ;
1802:
1803: $if $(@expr1073750492 $!@expr1073750493 $assert_ $(@expr1073750494 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1803 $, db@var620 !=@expr1073750495 nullptr $) $) { $return ; }
1804:
1805: $if $(@expr1073750496 $!@expr1073750497 $assertEquals $(@expr1073750498 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1805 $, 1 $, db@var620 .@expr1073750499 variableList (@expr1073750500 ) .@expr1073750501 size (@expr1073750502 ) -@expr1073750503 1 $) $) { $return ; }
1806: $if $(@expr1073750504 $!@expr1073750505 $assertEquals $(@expr1073750506 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1806 $, true $, db@var620 .@expr8683 getVariableFromVarId (@expr8684 1 ) !=@expr1073750509 nullptr $) $) { $return ; }
1807:
1808: $if $(@expr1073750510 $!@expr1073750511 $assertEquals $(@expr1073750512 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1808 $, "pFun" $, db@var620 .@expr8683 getVariableFromVarId (@expr8684 1 ) .@expr1073750515 name (@expr1073750516 ) $) $) { $return ; }
1809: $if $(@expr1073750517 $!@expr1073750518 $assertEquals $(@expr1073750519 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1809 $, "" $, errout@var100 .@expr1073750520 str (@expr1073750521 ) $) $) { $return ; }
1810: }
1811:
1812: void hasSubClassConstructor ( ) {
1813: $Tokenizer $tokenizer@var621 $(@expr1073750523 $&@expr1073750524 $settings1@var123 $, $this@expr1073750525 $) $; $const $SymbolDatabase $* $db@var622 $; $db@var622 $=@expr1073750526 $getSymbolDB_inner $(@expr1073750527 $tokenizer@var621 $, "class Foo { class Sub; }; class Foo::Sub { Sub() {} };" $, $"test.cpp" $) $; $if $(@expr1073750528 $!@expr1073750529 $assert_ $(@expr1073750530 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1813 $, $db@var622 $) $) { $return $; } $do ${ $} $while $(@expr1073750531 $false $) ;
1814: $if $(@expr1073750532 $!@expr1073750533 $assert_ $(@expr1073750534 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1814 $, db@var622 !=@expr1073750535 nullptr $) $) { $return ; }
1815:
1816: bool seen_something@var623 ; seen_something@var623 =@expr1073750536 false ;
1817: for (@expr1073750537 const Scope &@expr1073750538 scope@var624 :@expr1073750539 db@var622 .@expr1073750540 scopeList@var625 ) {
1818: for (@expr1073750541 std ::@expr8718 list < Function > ::@expr8718 const_iterator func@var626 =@expr1073750544 scope@var624 .@expr8721 functionList@var627 .@expr1073750546 begin (@expr1073750547 ) ; func@var626 !=@expr1073750548 scope@var624 .@expr8721 functionList@var627 .@expr1073750550 end (@expr1073750551 ) ; ++@expr1073750552 func@var626 ) {
1819: $if $(@expr1073750553 $!@expr1073750554 $assertEquals $(@expr1073750555 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1819 $, "Sub" $, func@var626 .@expr1073750556 token@var628 .@expr1073750557 str (@expr1073750558 ) $) $) { $return ; }
1820: $if $(@expr1073750559 $!@expr1073750560 $assertEquals $(@expr1073750561 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1820 $, true $, func@var626 .@expr1073750562 hasBody (@expr1073750563 ) $) $) { $return ; }
1821: $if $(@expr1073750564 $!@expr1073750565 $assertEquals $(@expr1073750566 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1821 $, Function ::@expr1073750567 eConstructor@expr1073750522 $, func@var626 .@expr1073750568 type@var629 $) $) { $return ; }
1822: seen_something@var623 =@expr1073750569 true ;
1823: }
1824: }
1825: $if $(@expr1073750570 $!@expr1073750571 $assertEquals $(@expr1073750572 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1825 $, true $, seen_something@var623 $) $) { $return ; }
1826: }
1827:
1828: void testConstructors ( ) {
1829: {
1830: $Tokenizer $tokenizer@var630 $(@expr1073750576 $&@expr1073750577 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var631 $; $db@var631 $=@expr1073750579 $getSymbolDB_inner $(@expr1073750580 $tokenizer@var630 $, "class Foo { Foo(); };" $, $"test.cpp" $) $; $if $(@expr1073750581 $!@expr1073750582 $assert_ $(@expr1073750583 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1830 $, $db@var631 $) $) { $return $; } $do ${ $} $while $(@expr1073750584 $false $) ;
1831: const Function * ctor@var632 ; ctor@var632 =@expr1073750585 tokenizer@var630 .@expr1073750586 tokens (@expr1073750587 ) .@expr1073750588 tokAt (@expr1073750589 3 ) .@expr1073750590 function (@expr1073750591 ) ;
1832: $if $(@expr1073750592 $!@expr1073750593 $assert_ $(@expr1073750594 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1832 $, db@var631 &&@expr1073750595 ctor@var632 &&@expr1073750596 ctor@var632 .@expr1073750597 type@var633 ==@expr1073750598 Function ::@expr8775 eConstructor@expr8749 $) $) { $return ; }
1833: $if $(@expr1073750600 $!@expr1073750601 $assert_ $(@expr1073750602 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1833 $, ctor@var632 &&@expr1073750603 ctor@var632 .@expr1073750604 retDef@var634 ==@expr1073750605 nullptr $) $) { $return ; }
1834: }
1835: {
1836: $Tokenizer $tokenizer@var635 $(@expr1073750606 $&@expr1073750607 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var636 $; $db@var636 $=@expr1073750608 $getSymbolDB_inner $(@expr1073750609 $tokenizer@var635 $, "class Foo { Foo(Foo f); };" $, $"test.cpp" $) $; $if $(@expr1073750610 $!@expr1073750611 $assert_ $(@expr1073750612 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1836 $, $db@var636 $) $) { $return $; } $do ${ $} $while $(@expr1073750613 $false $) ;
1837: const Function * ctor@var637 ; ctor@var637 =@expr1073750614 tokenizer@var635 .@expr1073750615 tokens (@expr1073750616 ) .@expr1073750617 tokAt (@expr1073750618 3 ) .@expr1073750619 function (@expr1073750620 ) ;
1838: $if $(@expr1073750621 $!@expr1073750622 $assert_ $(@expr1073750623 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1838 $, db@var636 &&@expr1073750624 ctor@var637 &&@expr1073750625 ctor@var637 .@expr1073750626 type@var638 ==@expr1073750627 Function ::@expr8775 eConstructor@expr8749 &&@expr1073750629 !@expr1073750630 ctor@var637 .@expr1073750631 isExplicit (@expr1073750632 ) $) $) { $return ; }
1839: $if $(@expr1073750633 $!@expr1073750634 $assert_ $(@expr1073750635 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1839 $, ctor@var637 &&@expr1073750636 ctor@var637 .@expr1073750637 retDef@var639 ==@expr1073750638 nullptr $) $) { $return ; }
1840: }
1841: {
1842: $Tokenizer $tokenizer@var640 $(@expr1073750639 $&@expr1073750640 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var641 $; $db@var641 $=@expr1073750641 $getSymbolDB_inner $(@expr1073750642 $tokenizer@var640 $, "class Foo { explicit Foo(Foo f); };" $, $"test.cpp" $) $; $if $(@expr1073750643 $!@expr1073750644 $assert_ $(@expr1073750645 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1842 $, $db@var641 $) $) { $return $; } $do ${ $} $while $(@expr1073750646 $false $) ;
1843: const Function * ctor@var642 ; ctor@var642 =@expr1073750647 tokenizer@var640 .@expr1073750648 tokens (@expr1073750649 ) .@expr1073750650 tokAt (@expr1073750651 4 ) .@expr1073750652 function (@expr1073750653 ) ;
1844: $if $(@expr1073750654 $!@expr1073750655 $assert_ $(@expr1073750656 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1844 $, db@var641 &&@expr1073750657 ctor@var642 &&@expr1073750658 ctor@var642 .@expr1073750659 type@var643 ==@expr1073750660 Function ::@expr8775 eConstructor &&@expr1073750662 ctor@var642 .@expr1073750663 isExplicit (@expr1073750664 ) $) $) { $return ; }
1845: $if $(@expr1073750665 $!@expr1073750666 $assert_ $(@expr1073750667 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1845 $, ctor@var642 &&@expr1073750668 ctor@var642 .@expr1073750669 retDef@var644 ==@expr1073750670 nullptr $) $) { $return ; }
1846: }
1847: {
1848: $Tokenizer $tokenizer@var645 $(@expr1073750671 $&@expr1073750672 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var646 $; $db@var646 $=@expr1073750673 $getSymbolDB_inner $(@expr1073750674 $tokenizer@var645 $, "class Foo { Foo(Bar& f); };" $, $"test.cpp" $) $; $if $(@expr1073750675 $!@expr1073750676 $assert_ $(@expr1073750677 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1848 $, $db@var646 $) $) { $return $; } $do ${ $} $while $(@expr1073750678 $false $) ;
1849: const Function * ctor@var647 ; ctor@var647 =@expr1073750679 tokenizer@var645 .@expr1073750680 tokens (@expr1073750681 ) .@expr1073750682 tokAt (@expr1073750683 3 ) .@expr1073750684 function (@expr1073750685 ) ;
1850: $if $(@expr1073750686 $!@expr1073750687 $assert_ $(@expr1073750688 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1850 $, db@var646 &&@expr1073750689 ctor@var647 &&@expr1073750690 ctor@var647 .@expr1073750691 type@var648 ==@expr1073750692 Function ::@expr8775 eConstructor@expr8749 $) $) { $return ; }
1851: $if $(@expr1073750694 $!@expr1073750695 $assert_ $(@expr1073750696 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1851 $, ctor@var647 &&@expr1073750697 ctor@var647 .@expr1073750698 retDef@var649 ==@expr1073750699 nullptr $) $) { $return ; }
1852: }
1853: {
1854: $Tokenizer $tokenizer@var650 $(@expr1073750700 $&@expr1073750701 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var651 $; $db@var651 $=@expr1073750702 $getSymbolDB_inner $(@expr1073750703 $tokenizer@var650 $, "class Foo { Foo(Foo& f); };" $, $"test.cpp" $) $; $if $(@expr1073750704 $!@expr1073750705 $assert_ $(@expr1073750706 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1854 $, $db@var651 $) $) { $return $; } $do ${ $} $while $(@expr1073750707 $false $) ;
1855: const Function * ctor@var652 ; ctor@var652 =@expr1073750708 tokenizer@var650 .@expr1073750709 tokens (@expr1073750710 ) .@expr1073750711 tokAt (@expr1073750712 3 ) .@expr1073750713 function (@expr1073750714 ) ;
1856: $if $(@expr1073750715 $!@expr1073750716 $assert_ $(@expr1073750717 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1856 $, db@var651 &&@expr1073750718 ctor@var652 &&@expr1073750719 ctor@var652 .@expr1073750720 type@var653 ==@expr1073750721 Function ::@expr8898 eCopyConstructor@expr8750 $) $) { $return ; }
1857: $if $(@expr1073750723 $!@expr1073750724 $assert_ $(@expr1073750725 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1857 $, ctor@var652 &&@expr1073750726 ctor@var652 .@expr1073750727 retDef@var654 ==@expr1073750728 nullptr $) $) { $return ; }
1858: }
1859: {
1860: $Tokenizer $tokenizer@var655 $(@expr1073750729 $&@expr1073750730 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var656 $; $db@var656 $=@expr1073750731 $getSymbolDB_inner $(@expr1073750732 $tokenizer@var655 $, "class Foo { Foo(const Foo &f); };" $, $"test.cpp" $) $; $if $(@expr1073750733 $!@expr1073750734 $assert_ $(@expr1073750735 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1860 $, $db@var656 $) $) { $return $; } $do ${ $} $while $(@expr1073750736 $false $) ;
1861: const Function * ctor@var657 ; ctor@var657 =@expr1073750737 tokenizer@var655 .@expr1073750738 tokens (@expr1073750739 ) .@expr1073750740 tokAt (@expr1073750741 3 ) .@expr1073750742 function (@expr1073750743 ) ;
1862: $if $(@expr1073750744 $!@expr1073750745 $assert_ $(@expr1073750746 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1862 $, db@var656 &&@expr1073750747 ctor@var657 &&@expr1073750748 ctor@var657 .@expr1073750749 type@var658 ==@expr1073750750 Function ::@expr8898 eCopyConstructor@expr8750 $) $) { $return ; }
1863: $if $(@expr1073750752 $!@expr1073750753 $assert_ $(@expr1073750754 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1863 $, ctor@var657 &&@expr1073750755 ctor@var657 .@expr1073750756 retDef@var659 ==@expr1073750757 nullptr $) $) { $return ; }
1864: }
1865: {
1866: $Tokenizer $tokenizer@var660 $(@expr1073750758 $&@expr1073750759 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var661 $; $db@var661 $=@expr1073750760 $getSymbolDB_inner $(@expr1073750761 $tokenizer@var660 $, "template <T> class Foo { Foo(Foo<T>& f); };" $, $"test.cpp" $) $; $if $(@expr1073750762 $!@expr1073750763 $assert_ $(@expr1073750764 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1866 $, $db@var661 $) $) { $return $; } $do ${ $} $while $(@expr1073750765 $false $) ;
1867: const Function * ctor@var662 ; ctor@var662 =@expr1073750766 tokenizer@var660 .@expr1073750767 tokens (@expr1073750768 ) .@expr1073750769 tokAt (@expr1073750770 7 ) .@expr1073750771 function (@expr1073750772 ) ;
1868: $if $(@expr1073750773 $!@expr1073750774 $assert_ $(@expr1073750775 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1868 $, db@var661 &&@expr1073750776 ctor@var662 &&@expr1073750777 ctor@var662 .@expr1073750778 type@var663 ==@expr1073750779 Function ::@expr8898 eCopyConstructor@expr8750 $) $) { $return ; }
1869: $if $(@expr1073750781 $!@expr1073750782 $assert_ $(@expr1073750783 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1869 $, ctor@var662 &&@expr1073750784 ctor@var662 .@expr1073750785 retDef@var664 ==@expr1073750786 nullptr $) $) { $return ; }
1870: }
1871: {
1872: $Tokenizer $tokenizer@var665 $(@expr1073750787 $&@expr1073750788 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var666 $; $db@var666 $=@expr1073750789 $getSymbolDB_inner $(@expr1073750790 $tokenizer@var665 $, "class Foo { Foo(Foo& f, int default = 0); };" $, $"test.cpp" $) $; $if $(@expr1073750791 $!@expr1073750792 $assert_ $(@expr1073750793 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1872 $, $db@var666 $) $) { $return $; } $do ${ $} $while $(@expr1073750794 $false $) ;
1873: const Function * ctor@var667 ; ctor@var667 =@expr1073750795 tokenizer@var665 .@expr1073750796 tokens (@expr1073750797 ) .@expr1073750798 tokAt (@expr1073750799 3 ) .@expr1073750800 function (@expr1073750801 ) ;
1874: $if $(@expr1073750802 $!@expr1073750803 $assert_ $(@expr1073750804 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1874 $, db@var666 &&@expr1073750805 ctor@var667 &&@expr1073750806 ctor@var667 .@expr1073750807 type@var668 ==@expr1073750808 Function ::@expr8898 eCopyConstructor@expr8750 $) $) { $return ; }
1875: $if $(@expr1073750810 $!@expr1073750811 $assert_ $(@expr1073750812 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1875 $, ctor@var667 &&@expr1073750813 ctor@var667 .@expr1073750814 retDef@var669 ==@expr1073750815 nullptr $) $) { $return ; }
1876: }
1877: {
1878: $Tokenizer $tokenizer@var670 $(@expr1073750816 $&@expr1073750817 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var671 $; $db@var671 $=@expr1073750818 $getSymbolDB_inner $(@expr1073750819 $tokenizer@var670 $, "class Foo { Foo(Foo& f, char noDefault); };" $, $"test.cpp" $) $; $if $(@expr1073750820 $!@expr1073750821 $assert_ $(@expr1073750822 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1878 $, $db@var671 $) $) { $return $; } $do ${ $} $while $(@expr1073750823 $false $) ;
1879: const Function * ctor@var672 ; ctor@var672 =@expr1073750824 tokenizer@var670 .@expr1073750825 tokens (@expr1073750826 ) .@expr1073750827 tokAt (@expr1073750828 3 ) .@expr1073750829 function (@expr1073750830 ) ;
1880: $if $(@expr1073750831 $!@expr1073750832 $assert_ $(@expr1073750833 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1880 $, db@var671 &&@expr1073750834 ctor@var672 &&@expr1073750835 ctor@var672 .@expr1073750836 type@var673 ==@expr1073750837 Function ::@expr8775 eConstructor@expr8749 $) $) { $return ; }
1881: $if $(@expr1073750839 $!@expr1073750840 $assert_ $(@expr1073750841 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1881 $, ctor@var672 &&@expr1073750842 ctor@var672 .@expr1073750843 retDef@var674 ==@expr1073750844 nullptr $) $) { $return ; }
1882: }
1883: {
1884: $Tokenizer $tokenizer@var675 $(@expr1073750845 $&@expr1073750846 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var676 $; $db@var676 $=@expr1073750847 $getSymbolDB_inner $(@expr1073750848 $tokenizer@var675 $, "class Foo { Foo(Foo&& f); };" $, $"test.cpp" $) $; $if $(@expr1073750849 $!@expr1073750850 $assert_ $(@expr1073750851 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1884 $, $db@var676 $) $) { $return $; } $do ${ $} $while $(@expr1073750852 $false $) ;
1885: const Function * ctor@var677 ; ctor@var677 =@expr1073750853 tokenizer@var675 .@expr1073750854 tokens (@expr1073750855 ) .@expr1073750856 tokAt (@expr1073750857 3 ) .@expr1073750858 function (@expr1073750859 ) ;
1886: $if $(@expr1073750860 $!@expr1073750861 $assert_ $(@expr1073750862 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1886 $, db@var676 &&@expr1073750863 ctor@var677 &&@expr1073750864 ctor@var677 .@expr1073750865 type@var678 ==@expr1073750866 Function ::@expr9043 eMoveConstructor@expr8751 $) $) { $return ; }
1887: $if $(@expr1073750868 $!@expr1073750869 $assert_ $(@expr1073750870 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1887 $, ctor@var677 &&@expr1073750871 ctor@var677 .@expr1073750872 retDef@var679 ==@expr1073750873 nullptr $) $) { $return ; }
1888: }
1889: {
1890: $Tokenizer $tokenizer@var680 $(@expr1073750874 $&@expr1073750875 $settings1@var123 $, $this@expr8754 $) $; $const $SymbolDatabase $* $db@var681 $; $db@var681 $=@expr1073750876 $getSymbolDB_inner $(@expr1073750877 $tokenizer@var680 $, "class Foo { Foo(Foo&& f, int default = 1, bool defaultToo = true); };" $, $"test.cpp" $) $; $if $(@expr1073750878 $!@expr1073750879 $assert_ $(@expr1073750880 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1890 $, $db@var681 $) $) { $return $; } $do ${ $} $while $(@expr1073750881 $false $) ;
1891: const Function * ctor@var682 ; ctor@var682 =@expr1073750882 tokenizer@var680 .@expr1073750883 tokens (@expr1073750884 ) .@expr1073750885 tokAt (@expr1073750886 3 ) .@expr1073750887 function (@expr1073750888 ) ;
1892: $if $(@expr1073750889 $!@expr1073750890 $assert_ $(@expr1073750891 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1892 $, db@var681 &&@expr1073750892 ctor@var682 &&@expr1073750893 ctor@var682 .@expr1073750894 type@var683 ==@expr1073750895 Function ::@expr9043 eMoveConstructor@expr8751 $) $) { $return ; }
1893: $if $(@expr1073750897 $!@expr1073750898 $assert_ $(@expr1073750899 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1893 $, ctor@var682 &&@expr1073750900 ctor@var682 .@expr1073750901 retDef@var684 ==@expr1073750902 nullptr $) $) { $return ; }
1894: }
1895: }
1896:
1897: void functionDeclarationTemplate ( ) {
1898: $Tokenizer $tokenizer@var685 $(@expr1073750903 $&@expr1073750904 $settings1@var123 $, $this@expr1073750905 $) $; $const $SymbolDatabase $* $db@var686 $; $db@var686 $=@expr1073750906 $getSymbolDB_inner $(@expr1073750907 $tokenizer@var685 $, "std::map<int, string> foo() {}" $, $"test.cpp" $) $; $if $(@expr1073750908 $!@expr1073750909 $assert_ $(@expr1073750910 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1898 $, $db@var686 $) $) { $return $; } $do ${ $} $while $(@expr1073750911 $false $) ;
1899:
1900:
1901: $if $(@expr1073750912 $!@expr1073750913 $assert_ $(@expr1073750914 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1901 $, $(@expr1073750915 db@var686 &&@expr1073750916 db@var686 .@expr9093 scopeList@var687 .@expr1073750918 size (@expr1073750919 ) ==@expr1073750920 2 &&@expr1073750921 findFunctionByName (@expr1073750922 "foo" , &@expr1073750923 db@var686 .@expr9093 scopeList@var687 .@expr1073750925 back (@expr1073750926 ) ) $) $) $) { $return ; }
1902:
1903: const Scope * scope@var688 ; scope@var688 =@expr1073750927 &@expr1073750928 db@var686 .@expr9093 scopeList@var687 .@expr1073750930 front (@expr1073750931 ) ;
1904:
1905: $if $(@expr1073750932 $!@expr1073750933 $assert_ $(@expr1073750934 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1905 $, scope@var688 &&@expr1073750935 scope@var688 .@expr9112 functionList@var689 .@expr1073750937 size (@expr1073750938 ) ==@expr1073750939 1 $) $) { $return ; }
1906:
1907: const Function * foo@var690 ; foo@var690 =@expr1073750940 &@expr1073750941 scope@var688 .@expr9112 functionList@var689 .@expr1073750943 front (@expr1073750944 ) ;
1908:
1909: $if $(@expr1073750945 $!@expr1073750946 $assert_ $(@expr1073750947 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1909 $, foo@var690 &&@expr1073750948 foo@var690 .@expr1073750949 token@var691 .@expr1073750950 str (@expr1073750951 ) ==@expr1073750952 "foo" $) $) { $return ; }
1910: $if $(@expr1073750953 $!@expr1073750954 $assert_ $(@expr1073750955 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1910 $, foo@var690 &&@expr1073750956 foo@var690 .@expr1073750957 hasBody (@expr1073750958 ) $) $) { $return ; }
1911: }
1912:
1913: void functionDeclarations ( ) {
1914: $Tokenizer $tokenizer@var692 $(@expr1073750959 $&@expr1073750960 $settings1@var123 $, $this@expr1073750961 $) $; $const $SymbolDatabase $* $db@var693 $; $db@var693 $=@expr1073750962 $getSymbolDB_inner $(@expr1073750963 $tokenizer@var692 $, "void foo();\nvoid foo();\nint foo(int i);\nvoid foo() {}" $, $"test.cpp" $) $; $if $(@expr1073750964 $!@expr1073750965 $assert_ $(@expr1073750966 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1914 $, $db@var693 $) $) { $return $; } $do ${ $} $while $(@expr1073750967 $false $) ;
1915:
1916:
1917: $if $(@expr1073750968 $!@expr1073750969 $assert_ $(@expr1073750970 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1917 $, $(@expr1073750971 db@var693 &&@expr1073750972 db@var693 .@expr9149 scopeList@var694 .@expr1073750974 size (@expr1073750975 ) ==@expr1073750976 2 &&@expr1073750977 findFunctionByName (@expr1073750978 "foo" , &@expr1073750979 db@var693 .@expr9149 scopeList@var694 .@expr1073750981 back (@expr1073750982 ) ) $) $) $) { $return ; }
1918:
1919: const Scope * scope@var695 ; scope@var695 =@expr1073750983 &@expr1073750984 db@var693 .@expr9149 scopeList@var694 .@expr1073750986 front (@expr1073750987 ) ;
1920:
1921: $if $(@expr1073750988 $!@expr1073750989 $assert_ $(@expr1073750990 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1921 $, scope@var695 &&@expr1073750991 scope@var695 .@expr9168 functionList@var696 .@expr1073750993 size (@expr1073750994 ) ==@expr1073750995 2 $) $) { $return ; }
1922:
1923: const Function * foo@var697 ; foo@var697 =@expr1073750996 &@expr1073750997 scope@var695 .@expr9168 functionList@var696 .@expr1073750999 front (@expr1073751000 ) ;
1924: const Function * foo_int@var698 ; foo_int@var698 =@expr1073751001 &@expr1073751002 scope@var695 .@expr9168 functionList@var696 .@expr1073751004 back (@expr1073751005 ) ;
1925:
1926: $if $(@expr1073751006 $!@expr1073751007 $assert_ $(@expr1073751008 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1926 $, foo@var697 &&@expr1073751009 foo@var697 .@expr9186 token@var699 .@expr1073751011 str (@expr1073751012 ) ==@expr1073751013 "foo" $) $) { $return ; }
1927: $if $(@expr1073751014 $!@expr1073751015 $assert_ $(@expr1073751016 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1927 $, foo@var697 &&@expr1073751017 foo@var697 .@expr1073751018 hasBody (@expr1073751019 ) $) $) { $return ; }
1928: $if $(@expr1073751020 $!@expr1073751021 $assert_ $(@expr1073751022 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1928 $, foo@var697 &&@expr1073751023 foo@var697 .@expr9186 token@var699 .@expr1073751025 strAt (@expr1073751026 2 ) ==@expr1073751027 ")" $) $) { $return ; }
1929:
1930: $if $(@expr1073751028 $!@expr1073751029 $assert_ $(@expr1073751030 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1930 $, foo_int@var698 &&@expr1073751031 !@expr1073751032 foo_int@var698 .@expr1073751033 token@var700 $) $) { $return ; }
1931: $if $(@expr1073751034 $!@expr1073751035 $assert_ $(@expr1073751036 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1931 $, foo_int@var698 &&@expr1073751037 foo_int@var698 .@expr9214 tokenDef@var701 .@expr1073751039 str (@expr1073751040 ) ==@expr1073751041 "foo" $) $) { $return ; }
1932: $if $(@expr1073751042 $!@expr1073751043 $assert_ $(@expr1073751044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1932 $, foo_int@var698 &&@expr1073751045 !@expr1073751046 foo_int@var698 .@expr1073751047 hasBody (@expr1073751048 ) $) $) { $return ; }
1933: $if $(@expr1073751049 $!@expr1073751050 $assert_ $(@expr1073751051 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1933 $, foo_int@var698 &&@expr1073751052 foo_int@var698 .@expr9214 tokenDef@var701 .@expr1073751054 strAt (@expr1073751055 2 ) ==@expr1073751056 "int" $) $) { $return ; }
1934:
1935: $if $(@expr1073751057 $!@expr1073751058 $assert_ $(@expr1073751059 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1935 $, &@expr1073751060 foo_int@var698 .@expr1073751061 argumentList@var702 .@expr1073751062 front (@expr1073751063 ) ==@expr1073751064 db@var693 .@expr1073751065 getVariableFromVarId (@expr1073751066 1 ) $) $) { $return ; }
1936: }
1937:
1938: void functionDeclarations2 ( ) {
1939: $Tokenizer $tokenizer@var703 $(@expr1073751069 $&@expr1073751070 $settings1@var123 $, $this@expr1073751071 $) $; $do ${ $if $(@expr1073751072 $settings1@var123 $.@expr1073751073 $library@var143 $.@expr1073751074 $load $(@expr1073751075 $exename@var11 $.@expr1073751076 $c_str $(@expr1073751077 $) $, $"std.cfg" $) $.@expr1073751078 $errorcode $!=@expr1073751079 $Library $::@expr1073751080 $ErrorCode $::@expr1073751081 $OK $) ${ $complainMissingLib $(@expr1073751082 $"std.cfg" $) $; $return $; $} $} $while $(@expr1073751083 $false $) $; $const $SymbolDatabase $* $db@var704 $; $db@var704 $=@expr1073751084 $getSymbolDB_inner $(@expr1073751085 $tokenizer@var703 $, "std::array<int,2> foo(int x);" $, $"test.cpp" $) $; $if $(@expr1073751086 $!@expr1073751087 $assert_ $(@expr1073751088 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1939 $, $db@var704 $) $) { $return $; } $do ${ $} $while $(@expr1073751089 $false $) ;
1940:
1941:
1942: $if $(@expr1073751090 $!@expr1073751091 $assert_ $(@expr1073751092 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1942 $, db@var704 &&@expr1073751093 db@var704 .@expr9270 scopeList@var705 .@expr1073751095 size (@expr1073751096 ) ==@expr1073751097 1 $) $) { $return ; }
1943:
1944: const Scope * scope@var706 ; scope@var706 =@expr1073751098 &@expr1073751099 db@var704 .@expr9270 scopeList@var705 .@expr1073751101 front (@expr1073751102 ) ;
1945:
1946: $if $(@expr1073751103 $!@expr1073751104 $assert_ $(@expr1073751105 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1946 $, scope@var706 &&@expr1073751106 scope@var706 .@expr9283 functionList@var707 .@expr1073751108 size (@expr1073751109 ) ==@expr1073751110 1 $) $) { $return ; }
1947:
1948: const Function * foo@var708 ; foo@var708 =@expr1073751111 &@expr1073751112 scope@var706 .@expr9283 functionList@var707 .@expr1073751114 front (@expr1073751115 ) ;
1949:
1950: $if $(@expr1073751116 $!@expr1073751117 $assert_ $(@expr1073751118 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1950 $, foo@var708 $) $) { $return ; }
1951: $if $(@expr1073751119 $!@expr1073751120 $assert_ $(@expr1073751121 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1951 $, foo@var708 .@expr9298 tokenDef@var709 .@expr1073751123 str (@expr1073751124 ) ==@expr1073751125 "foo" $) $) { $return ; }
1952: $if $(@expr1073751126 $!@expr1073751127 $assert_ $(@expr1073751128 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1952 $, !@expr1073751129 foo@var708 .@expr1073751130 hasBody (@expr1073751131 ) $) $) { $return ; }
1953:
1954: const Token * parenthesis@var710 ; parenthesis@var710 =@expr1073751132 foo@var708 .@expr9298 tokenDef@var709 .@expr1073751134 next (@expr1073751135 ) ;
1955: $if $(@expr1073751136 $!@expr1073751137 $assert_ $(@expr1073751138 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1955 $, parenthesis@var710 .@expr1073751139 str (@expr1073751140 ) ==@expr1073751141 "(" &&@expr1073751142 parenthesis@var710 .@expr1073751143 previous (@expr1073751144 ) .@expr1073751145 str (@expr1073751146 ) ==@expr1073751147 "foo" $) $) { $return ; }
1956: $if $(@expr1073751148 $!@expr1073751149 $assert_ $(@expr1073751150 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1956 $, parenthesis@var710 .@expr1073751151 valueType (@expr1073751152 ) .@expr1073751153 type@expr1073751067 ==@expr1073751154 ValueType ::@expr1073751155 Type ::@expr1073751156 CONTAINER@expr1073751068 $) $) { $return ; }
1957: }
1958:
1959: void constexprFunction ( ) {
1960: $Tokenizer $tokenizer@var711 $(@expr1073751157 $&@expr1073751158 $settings1@var123 $, $this@expr1073751159 $) $; $do ${ $if $(@expr1073751160 $settings1@var123 $.@expr1073751161 $library@var143 $.@expr1073751162 $load $(@expr1073751163 $exename@var11 $.@expr1073751164 $c_str $(@expr1073751165 $) $, $"std.cfg" $) $.@expr1073751166 $errorcode $!=@expr1073751167 $Library $::@expr1073751168 $ErrorCode $::@expr1073751169 $OK $) ${ $complainMissingLib $(@expr1073751170 $"std.cfg" $) $; $return $; $} $} $while $(@expr1073751171 $false $) $; $const $SymbolDatabase $* $db@var712 $; $db@var712 $=@expr1073751172 $getSymbolDB_inner $(@expr1073751173 $tokenizer@var711 $, "constexpr int foo();" $, $"test.cpp" $) $; $if $(@expr1073751174 $!@expr1073751175 $assert_ $(@expr1073751176 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1960 $, $db@var712 $) $) { $return $; } $do ${ $} $while $(@expr1073751177 $false $) ;
1961:
1962:
1963: $if $(@expr1073751178 $!@expr1073751179 $assert_ $(@expr1073751180 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1963 $, db@var712 &&@expr1073751181 db@var712 .@expr9358 scopeList@var713 .@expr1073751183 size (@expr1073751184 ) ==@expr1073751185 1 $) $) { $return ; }
1964:
1965: const Scope * scope@var714 ; scope@var714 =@expr1073751186 &@expr1073751187 db@var712 .@expr9358 scopeList@var713 .@expr1073751189 front (@expr1073751190 ) ;
1966:
1967: $if $(@expr1073751191 $!@expr1073751192 $assert_ $(@expr1073751193 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1967 $, scope@var714 &&@expr1073751194 scope@var714 .@expr9371 functionList@var715 .@expr1073751196 size (@expr1073751197 ) ==@expr1073751198 1 $) $) { $return ; }
1968:
1969: const Function * foo@var716 ; foo@var716 =@expr1073751199 &@expr1073751200 scope@var714 .@expr9371 functionList@var715 .@expr1073751202 front (@expr1073751203 ) ;
1970:
1971: $if $(@expr1073751204 $!@expr1073751205 $assert_ $(@expr1073751206 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1971 $, foo@var716 $) $) { $return ; }
1972: $if $(@expr1073751207 $!@expr1073751208 $assert_ $(@expr1073751209 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1972 $, foo@var716 .@expr1073751210 tokenDef@var717 .@expr1073751211 str (@expr1073751212 ) ==@expr1073751213 "foo" $) $) { $return ; }
1973: $if $(@expr1073751214 $!@expr1073751215 $assert_ $(@expr1073751216 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1973 $, !@expr1073751217 foo@var716 .@expr1073751218 hasBody (@expr1073751219 ) $) $) { $return ; }
1974: $if $(@expr1073751220 $!@expr1073751221 $assert_ $(@expr1073751222 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1974 $, foo@var716 .@expr1073751223 isConstexpr (@expr1073751224 ) $) $) { $return ; }
1975: }
1976:
1977: void constructorInitialization ( ) {
1978: $Tokenizer $tokenizer@var718 $(@expr1073751225 $&@expr1073751226 $settings1@var123 $, $this@expr1073751227 $) $; $const $SymbolDatabase $* $db@var719 $; $db@var719 $=@expr1073751228 $getSymbolDB_inner $(@expr1073751229 $tokenizer@var718 $, "std::string logfile;\nstd::ofstream log(logfile.c_str(), std::ios::out);" $, $"test.cpp" $) $; $if $(@expr1073751230 $!@expr1073751231 $assert_ $(@expr1073751232 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1978 $, $db@var719 $) $) { $return $; } $do ${ $} $while $(@expr1073751233 $false $)
1979: ;
1980:
1981:
1982: $if $(@expr1073751234 $!@expr1073751235 $assert_ $(@expr1073751236 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1982 $, db@var719 &&@expr1073751237 db@var719 .@expr9414 scopeList@var720 .@expr1073751239 size (@expr1073751240 ) ==@expr1073751241 1 $) $) { $return ; }
1983:
1984:
1985: $if $(@expr1073751242 $!@expr1073751243 $assert_ $(@expr1073751244 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1985 $, db@var719 .@expr9414 scopeList@var720 .@expr1073751246 front (@expr1073751247 ) .@expr1073751248 functionList .@expr1073751249 empty (@expr1073751250 ) $) $) { $return ; }
1986: }
1987:
1988: void memberFunctionOfUnknownClassMacro1 ( ) {
1989: $Tokenizer $tokenizer@var721 $(@expr1073751251 $&@expr1073751252 $settings1@var123 $, $this@expr1073751253 $) $; $const $SymbolDatabase $* $db@var722 $; $db@var722 $=@expr1073751254 $getSymbolDB_inner $(@expr1073751255 $tokenizer@var721 $, "class ScVbaFormatCondition { OUString getServiceImplName() SAL_OVERRIDE; };\nvoid ScVbaValidation::getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}" $, $"test.cpp" $) $; $if $(@expr1073751256 $!@expr1073751257 $assert_ $(@expr1073751258 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1989 $, $db@var722 $) $) { $return $; } $do ${ $} $while $(@expr1073751259 $false $)
1990:
1991:
1992:
1993: ;
1994:
1995: $if $(@expr1073751260 $!@expr1073751261 $assert_ $(@expr1073751262 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1995 $, db@var722 &&@expr1073751263 errout@var100 .@expr1073751264 str (@expr1073751265 ) .@expr1073751266 empty (@expr1073751267 ) $) $) { $return ; }
1996:
1997: const Scope * scope@var723 ; scope@var723 =@expr1073751268 db@var722 .@expr1073751269 findScopeByName (@expr1073751270 "getFormula1" ) ;
1998: $if $(@expr1073751271 $!@expr1073751272 $assert_ $(@expr1073751273 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1998 $, scope@var723 !=@expr1073751274 nullptr $) $) { $return ; }
1999: $if $(@expr1073751275 $!@expr1073751276 $assert_ $(@expr1073751277 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 1999 $, scope@var723 &&@expr1073751278 scope@var723 .@expr1073751279 nestedIn@var724 ==@expr1073751280 &@expr1073751281 db@var722 .@expr1073751282 scopeList@var725 .@expr1073751283 front (@expr1073751284 ) $) $) { $return ; }
2000: }
2001:
2002: void memberFunctionOfUnknownClassMacro2 ( ) {
2003: $Tokenizer $tokenizer@var726 $(@expr1073751285 $&@expr1073751286 $settings1@var123 $, $this@expr1073751287 $) $; $const $SymbolDatabase $* $db@var727 $; $db@var727 $=@expr1073751288 $getSymbolDB_inner $(@expr1073751289 $tokenizer@var726 $, "class ScVbaFormatCondition { OUString getServiceImplName() SAL_OVERRIDE {} };\nvoid getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}" $, $"test.cpp" $) $; $if $(@expr1073751290 $!@expr1073751291 $assert_ $(@expr1073751292 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2003 $, $db@var727 $) $) { $return $; } $do ${ $} $while $(@expr1073751293 $false $)
2004:
2005:
2006:
2007: ;
2008:
2009: $if $(@expr1073751294 $!@expr1073751295 $assert_ $(@expr1073751296 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2009 $, db@var727 &&@expr1073751297 errout@var100 .@expr1073751298 str (@expr1073751299 ) .@expr1073751300 empty (@expr1073751301 ) $) $) { $return ; }
2010:
2011: const Scope * scope@var728 ; scope@var728 =@expr1073751302 db@var727 .@expr9479 findScopeByName (@expr1073751304 "getFormula1" ) ;
2012: $if $(@expr1073751305 $!@expr1073751306 $assert_ $(@expr1073751307 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2012 $, scope@var728 !=@expr9484 nullptr $) $) { $return ; }
2013: $if $(@expr1073751309 $!@expr1073751310 $assert_ $(@expr1073751311 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2013 $, scope@var728 &&@expr1073751312 scope@var728 .@expr9489 nestedIn@var729 ==@expr1073751314 &@expr1073751315 db@var727 .@expr1073751316 scopeList@var730 .@expr1073751317 front (@expr1073751318 ) $) $) { $return ; }
2014:
2015: scope@var728 =@expr1073751319 db@var727 .@expr9479 findScopeByName (@expr1073751321 "getServiceImplName" ) ;
2016: $if $(@expr1073751322 $!@expr1073751323 $assert_ $(@expr1073751324 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2016 $, scope@var728 !=@expr9484 nullptr $) $) { $return ; }
2017: $if $(@expr1073751326 $!@expr1073751327 $assert_ $(@expr1073751328 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2017 $, scope@var728 &&@expr1073751329 scope@var728 .@expr9489 nestedIn@var729 &&@expr1073751331 scope@var728 .@expr9489 nestedIn@var729 .@expr1073751333 className@var731 ==@expr1073751334 "ScVbaFormatCondition" $) $) { $return ; }
2018: }
2019:
2020: void memberFunctionOfUnknownClassMacro3 ( ) {
2021: $Tokenizer $tokenizer@var732 $(@expr1073751335 $&@expr1073751336 $settings1@var123 $, $this@expr1073751337 $) $; $const $SymbolDatabase $* $db@var733 $; $db@var733 $=@expr1073751338 $getSymbolDB_inner $(@expr1073751339 $tokenizer@var732 $, "class ScVbaFormatCondition { OUString getServiceImplName() THROW(whatever); };\nvoid ScVbaValidation::getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}" $, $"test.cpp" $) $; $if $(@expr1073751340 $!@expr1073751341 $assert_ $(@expr1073751342 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2021 $, $db@var733 $) $) { $return $; } $do ${ $} $while $(@expr1073751343 $false $)
2022:
2023:
2024:
2025: ;
2026:
2027: $if $(@expr1073751344 $!@expr1073751345 $assert_ $(@expr1073751346 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2027 $, db@var733 &&@expr1073751347 errout@var100 .@expr1073751348 str (@expr1073751349 ) .@expr1073751350 empty (@expr1073751351 ) $) $) { $return ; }
2028:
2029: const Scope * scope@var734 ; scope@var734 =@expr1073751352 db@var733 .@expr1073751353 findScopeByName (@expr1073751354 "getFormula1" ) ;
2030: $if $(@expr1073751355 $!@expr1073751356 $assert_ $(@expr1073751357 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2030 $, scope@var734 !=@expr1073751358 nullptr $) $) { $return ; }
2031: $if $(@expr1073751359 $!@expr1073751360 $assert_ $(@expr1073751361 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2031 $, scope@var734 &&@expr1073751362 scope@var734 .@expr1073751363 nestedIn@var735 ==@expr1073751364 &@expr1073751365 db@var733 .@expr1073751366 scopeList@var736 .@expr1073751367 front (@expr1073751368 ) $) $) { $return ; }
2032: }
2033:
2034: void functionLinkage ( ) {
2035: $Tokenizer $tokenizer@var737 $(@expr1073751369 $&@expr1073751370 $settings1@var123 $, $this@expr1073751371 $) $; $const $SymbolDatabase $* $db@var738 $; $db@var738 $=@expr1073751372 $getSymbolDB_inner $(@expr1073751373 $tokenizer@var737 $, "static void f1() { }\nvoid f2();\nextern void f3();\nvoid f4();\nextern void f5() { };\nvoid f6() { }" $, $"test.cpp" $) $; $if $(@expr1073751374 $!@expr1073751375 $assert_ $(@expr1073751376 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2035 $, $db@var738 $) $) { $return $; } $do ${ $} $while $(@expr1073751377 $false $)
2036:
|
2039:
2040: ;
2041:
2042: $if $(@expr1073751378 $!@expr1073751379 $assert_ $(@expr1073751380 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2042 $, db@var738 &&@expr1073751381 errout@var100 .@expr1073751382 str (@expr1073751383 ) .@expr1073751384 empty (@expr1073751385 ) $) $) { $return ; }
2043:
2044: const Token * f@var739 ; f@var739 =@expr1073751386 Token ::@expr9563 findsimplematch (@expr1073751388 tokenizer@var737 .@expr9565 tokens (@expr9566 ) , "f1" ) ;
2045: $if $(@expr1073751391 $!@expr1073751392 $assert_ $(@expr1073751393 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2045 $, f@var739 &&@expr9570 f@var739 .@expr9571 function (@expr9572 ) &&@expr1073751397 f@var739 .@expr9571 function (@expr9572 ) .@expr9576 isStaticLocal (@expr9577 ) &&@expr1073751402 f@var739 .@expr9571 function (@expr9572 ) .@expr9581 retDef .@expr9582 str (@expr9583 ) ==@expr9584 "void" $) $) { $return ; }
2046:
2047: f@var739 =@expr1073751409 Token ::@expr9563 findsimplematch (@expr1073751411 tokenizer@var737 .@expr9565 tokens (@expr9566 ) , "f2" ) ;
2048: $if $(@expr1073751414 $!@expr1073751415 $assert_ $(@expr1073751416 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2048 $, f@var739 &&@expr9570 f@var739 .@expr9571 function (@expr9572 ) &&@expr1073751420 !@expr1073751421 f@var739 .@expr9571 function (@expr9572 ) .@expr9576 isStaticLocal (@expr9577 ) &&@expr1073751426 f@var739 .@expr9571 function (@expr9572 ) .@expr9581 retDef .@expr9582 str (@expr9583 ) ==@expr9584 "void" $) $) { $return ; }
2049:
2050: f@var739 =@expr1073751433 Token ::@expr9563 findsimplematch (@expr1073751435 tokenizer@var737 .@expr9565 tokens (@expr9566 ) , "f3" ) ;
2051: $if $(@expr1073751438 $!@expr1073751439 $assert_ $(@expr1073751440 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2051 $, f@var739 &&@expr9570 f@var739 .@expr9571 function (@expr9572 ) &&@expr9620 f@var739 .@expr9571 function (@expr9572 ) .@expr9623 isExtern (@expr9624 ) &&@expr9625 f@var739 .@expr9571 function (@expr9572 ) .@expr9581 retDef .@expr9582 str (@expr9583 ) ==@expr9584 "void" $) $) { $return ; }
2052:
2053: f@var739 =@expr1073751456 Token ::@expr9563 findsimplematch (@expr1073751458 tokenizer@var737 .@expr9565 tokens (@expr9566 ) , "f4" ) ;
2054: $if $(@expr1073751461 $!@expr1073751462 $assert_ $(@expr1073751463 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2054 $, f@var739 &&@expr9570 f@var739 .@expr9571 function (@expr9572 ) &&@expr9643 !@expr9644 f@var739 .@expr9571 function (@expr9572 ) .@expr9623 isExtern (@expr9624 ) &&@expr9649 f@var739 .@expr9571 function (@expr9572 ) .@expr9581 retDef .@expr9582 str (@expr9583 ) ==@expr9584 "void" $) $) { $return ; }
2055:
2056: f@var739 =@expr1073751480 Token ::@expr9563 findsimplematch (@expr1073751482 tokenizer@var737 .@expr9565 tokens (@expr9566 ) , "f5" ) ;
2057: $if $(@expr1073751485 $!@expr1073751486 $assert_ $(@expr1073751487 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2057 $, f@var739 &&@expr9570 f@var739 .@expr9571 function (@expr9572 ) &&@expr9620 f@var739 .@expr9571 function (@expr9572 ) .@expr9623 isExtern (@expr9624 ) &&@expr9625 f@var739 .@expr9571 function (@expr9572 ) .@expr9581 retDef .@expr9582 str (@expr9583 ) ==@expr9584 "void" $) $) { $return ; }
2058:
2059: f@var739 =@expr1073751503 Token ::@expr9563 findsimplematch (@expr1073751505 tokenizer@var737 .@expr9565 tokens (@expr9566 ) , "f6" ) ;
2060: $if $(@expr1073751508 $!@expr1073751509 $assert_ $(@expr1073751510 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2060 $, f@var739 &&@expr9570 f@var739 .@expr9571 function (@expr9572 ) &&@expr9643 !@expr9644 f@var739 .@expr9571 function (@expr9572 ) .@expr9623 isExtern (@expr9624 ) &&@expr9649 f@var739 .@expr9571 function (@expr9572 ) .@expr9581 retDef .@expr9582 str (@expr9583 ) ==@expr9584 "void" $) $) { $return ; }
2061: }
2062:
2063: void classWithFriend ( ) {
2064: $Tokenizer $tokenizer@var740 $(@expr1073751529 $&@expr1073751530 $settings1@var123 $, $this@expr1073751531 $) $; $const $SymbolDatabase $* $db@var741 $; $db@var741 $=@expr1073751532 $getSymbolDB_inner $(@expr1073751533 $tokenizer@var740 $, "class Foo {}; class Bar1 { friend class Foo; }; class Bar2 { friend Foo; };" $, $"test.cpp" $) $; $if $(@expr1073751534 $!@expr1073751535 $assert_ $(@expr1073751536 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2064 $, $db@var741 $) $) { $return $; } $do ${ $} $while $(@expr1073751537 $false $) ;
2065:
2066: $if $(@expr1073751538 $!@expr1073751539 $assert_ $(@expr1073751540 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2066 $, db@var741 &&@expr1073751541 db@var741 .@expr1073751542 scopeList@var742 .@expr1073751543 size (@expr1073751544 ) ==@expr1073751545 4 $) $) { $return ; }
2067:
2068: const Scope * foo@var743 ; foo@var743 =@expr1073751546 db@var741 .@expr9723 findScopeByName (@expr1073751548 "Foo" ) ;
2069: $if $(@expr1073751549 $!@expr1073751550 $assert_ $(@expr1073751551 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2069 $, foo@var743 !=@expr1073751552 nullptr $) $) { $return ; }
2070: const Scope * bar1@var744 ; bar1@var744 =@expr1073751553 db@var741 .@expr9723 findScopeByName (@expr1073751555 "Bar1" ) ;
2071: $if $(@expr1073751556 $!@expr1073751557 $assert_ $(@expr1073751558 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2071 $, bar1@var744 !=@expr1073751559 nullptr $) $) { $return ; }
2072: const Scope * bar2@var745 ; bar2@var745 =@expr1073751560 db@var741 .@expr9723 findScopeByName (@expr1073751562 "Bar2" ) ;
2073: $if $(@expr1073751563 $!@expr1073751564 $assert_ $(@expr1073751565 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2073 $, bar2@var745 !=@expr1073751566 nullptr $) $) { $return ; }
2074:
2075: $if $(@expr1073751567 $!@expr1073751568 $assert_ $(@expr1073751569 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2075 $, bar1@var744 .@expr9746 definedType@var746 .@expr9747 friendList@var747 .@expr1073751572 size (@expr1073751573 ) ==@expr1073751574 1 &&@expr1073751575 bar1@var744 .@expr9746 definedType@var746 .@expr9747 friendList@var747 .@expr9754 front (@expr9755 ) .@expr1073751580 nameEnd .@expr1073751581 str (@expr1073751582 ) ==@expr1073751583 "Foo" &&@expr1073751584 bar1@var744 .@expr9746 definedType@var746 .@expr9747 friendList@var747 .@expr9754 front (@expr9755 ) .@expr1073751589 type@expr1073751527 ==@expr1073751590 foo@var743 .@expr9767 definedType@var748 $) $) { $return ; }
2076: $if $(@expr1073751592 $!@expr1073751593 $assert_ $(@expr1073751594 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2076 $, bar2@var745 .@expr9771 definedType@var749 .@expr9772 friendList@var750 .@expr1073751597 size (@expr1073751598 ) ==@expr1073751599 1 &&@expr1073751600 bar2@var745 .@expr9771 definedType@var749 .@expr9772 friendList@var750 .@expr9779 front (@expr9780 ) .@expr1073751605 nameEnd .@expr1073751606 str (@expr1073751607 ) ==@expr1073751608 "Foo" &&@expr1073751609 bar2@var745 .@expr9771 definedType@var749 .@expr9772 friendList@var750 .@expr9779 front (@expr9780 ) .@expr1073751614 type@expr1073751528 ==@expr1073751615 foo@var743 .@expr9767 definedType@var748 $) $) { $return ; }
2077: }
2078:
2079: void parseFunctionCorrect ( ) {
2080:
2081: $Tokenizer $tokenizer@var751 $(@expr1073751617 $&@expr1073751618 $settings1@var123 $, $this@expr1073751619 $) $; $const $SymbolDatabase $* $db@var752 $; $db@var752 $=@expr1073751620 $getSymbolDB_inner $(@expr1073751621 $tokenizer@var751 $, "void func(i) int i; { if (i == 1) return; }" $, $"test.cpp" $) $; $if $(@expr1073751622 $!@expr1073751623 $assert_ $(@expr1073751624 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2081 $, $db@var752 $) $) { $return $; } $do ${ $} $while $(@expr1073751625 $false $) ;
2082: $if $(@expr1073751626 $!@expr1073751627 $assert_ $(@expr1073751628 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2082 $, db@var752 !=@expr1073751629 nullptr $) $) { $return ; }
2083:
2084:
2085: $if $(@expr1073751630 $!@expr1073751631 $assertEquals $(@expr1073751632 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2085 $, 3 $, db@var752 .@expr9809 scopeList@var753 .@expr1073751634 size (@expr1073751635 ) $) $) { $return ; }
2086:
2087: $if $(@expr1073751636 $!@expr1073751637 $assert_ $(@expr1073751638 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2087 $, $(@expr1073751639 findFunctionByName (@expr1073751640 "func" , &@expr9817 db@var752 .@expr9809 scopeList@var753 .@expr9819 back (@expr9820 ) ) !=@expr1073751645 nullptr $) $) $) { $return ; }
2088: $if $(@expr1073751646 $!@expr1073751647 $assert_ $(@expr1073751648 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2088 $, $(@expr1073751649 findFunctionByName (@expr1073751650 "if" , &@expr9817 db@var752 .@expr9809 scopeList@var753 .@expr9819 back (@expr9820 ) ) ==@expr1073751655 nullptr $) $) $) { $return ; }
2089: }
2090:
2091: void parseFunctionDeclarationCorrect ( ) {
2092: $Tokenizer $tokenizer@var754 $(@expr1073751656 $&@expr1073751657 $settings1@var123 $, $this@expr1073751658 $) $; $const $SymbolDatabase $* $db@var755 $; $db@var755 $=@expr1073751659 $getSymbolDB_inner $(@expr1073751660 $tokenizer@var754 $, "void func();\nint bar() {}\nvoid func() {}" $, $"test.cpp" $) $; $if $(@expr1073751661 $!@expr1073751662 $assert_ $(@expr1073751663 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2092 $, $db@var755 $) $) { $return $; } $do ${ $} $while $(@expr1073751664 $false $)
2093:
2094: ;
2095: $if $(@expr1073751665 $!@expr1073751666 $assertEquals $(@expr1073751667 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2095 $, 3 $, db@var755 .@expr1073751668 findScopeByName (@expr1073751669 "func" ) .@expr1073751670 bodyStart .@expr1073751671 linenr (@expr1073751672 ) $) $) { $return ; }
2096: }
2097:
2098: void Cpp11InitInInitList ( ) {
2099: $Tokenizer $tokenizer@var756 $(@expr1073751673 $&@expr1073751674 $settings1@var123 $, $this@expr1073751675 $) $; $const $SymbolDatabase $* $db@var757 $; $db@var757 $=@expr1073751676 $getSymbolDB_inner $(@expr1073751677 $tokenizer@var756 $, "class Foo {\n    std::vector<std::string> bar;\n    Foo() : bar({\"a\", \"b\"})\n    {}\n};" $, $"test.cpp" $) $; $if $(@expr1073751678 $!@expr1073751679 $assert_ $(@expr1073751680 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2099 $, $db@var757 $) $) { $return $; } $do ${ $} $while $(@expr1073751681 $false $)
2100:
2101:
2102:
2103: ;
2104: $if $(@expr1073751682 $!@expr1073751683 $assertEquals $(@expr1073751684 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2104 $, 4 $, db@var757 .@expr1073751685 scopeList@var758 .@expr1073751686 front (@expr1073751687 ) .@expr1073751688 nestedList .@expr1073751689 front (@expr1073751690 ) .@expr1073751691 nestedList .@expr1073751692 front (@expr1073751693 ) .@expr1073751694 bodyStart .@expr1073751695 linenr (@expr1073751696 ) $) $) { $return ; }
2105: }
2106:
2107: void hasGlobalVariables1 ( ) {
2108: $Tokenizer $tokenizer@var759 $(@expr1073751697 $&@expr1073751698 $settings1@var123 $, $this@expr1073751699 $) $; $const $SymbolDatabase $* $db@var760 $; $db@var760 $=@expr1073751700 $getSymbolDB_inner $(@expr1073751701 $tokenizer@var759 $, "int i;" $, $"test.cpp" $) $; $if $(@expr1073751702 $!@expr1073751703 $assert_ $(@expr1073751704 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2108 $, $db@var760 $) $) { $return $; } $do ${ $} $while $(@expr1073751705 $false $) ;
2109:
2110: $if $(@expr1073751706 $!@expr1073751707 $assert_ $(@expr1073751708 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2110 $, db@var760 &&@expr1073751709 db@var760 .@expr9886 scopeList@var761 .@expr1073751711 size (@expr1073751712 ) ==@expr1073751713 1 $) $) { $return ; }
2111:
2112: std ::@expr1073751714 list < Scope > ::@expr1073751715 const_iterator it@var762 ; it@var762 =@expr1073751716 db@var760 .@expr9886 scopeList@var761 .@expr1073751718 begin (@expr1073751719 ) ;
2113: $if $(@expr1073751720 $!@expr1073751721 $assert_ $(@expr1073751722 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2113 $, it@var762 .@expr9899 varlist@var763 .@expr1073751724 size (@expr1073751725 ) ==@expr1073751726 1 $) $) { $return ; }
2114: std ::@expr1073751727 list < Variable > ::@expr1073751728 const_iterator var@var764 ; var@var764 =@expr1073751729 it@var762 .@expr9899 varlist@var763 .@expr1073751731 begin (@expr1073751732 ) ;
2115: $if $(@expr1073751733 $!@expr1073751734 $assert_ $(@expr1073751735 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2115 $, var@var764 .@expr1073751736 name (@expr1073751737 ) ==@expr1073751738 "i" $) $) { $return ; }
2116: $if $(@expr1073751739 $!@expr1073751740 $assert_ $(@expr1073751741 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2116 $, var@var764 .@expr1073751742 typeStartToken (@expr1073751743 ) .@expr1073751744 str (@expr1073751745 ) ==@expr1073751746 "int" $) $) { $return ; }
2117: }
2118:
2119: void hasGlobalVariables2 ( ) {
2120: $Tokenizer $tokenizer@var765 $(@expr1073751747 $&@expr1073751748 $settings1@var123 $, $this@expr1073751749 $) $; $const $SymbolDatabase $* $db@var766 $; $db@var766 $=@expr1073751750 $getSymbolDB_inner $(@expr1073751751 $tokenizer@var765 $, "int array[2][2];" $, $"test.cpp" $) $; $if $(@expr1073751752 $!@expr1073751753 $assert_ $(@expr1073751754 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2120 $, $db@var766 $) $) { $return $; } $do ${ $} $while $(@expr1073751755 $false $) ;
2121:
2122: $if $(@expr1073751756 $!@expr1073751757 $assert_ $(@expr1073751758 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2122 $, db@var766 &&@expr1073751759 db@var766 .@expr9936 scopeList@var767 .@expr1073751761 size (@expr1073751762 ) ==@expr1073751763 1 $) $) { $return ; }
2123:
2124: std ::@expr1073751764 list < Scope > ::@expr1073751765 const_iterator it@var768 ; it@var768 =@expr1073751766 db@var766 .@expr9936 scopeList@var767 .@expr1073751768 begin (@expr1073751769 ) ;
2125: $if $(@expr1073751770 $!@expr1073751771 $assert_ $(@expr1073751772 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2125 $, it@var768 .@expr9949 varlist@var769 .@expr1073751774 size (@expr1073751775 ) ==@expr1073751776 1 $) $) { $return ; }
2126:
2127: std ::@expr1073751777 list < Variable > ::@expr1073751778 const_iterator var@var770 ; var@var770 =@expr1073751779 it@var768 .@expr9949 varlist@var769 .@expr1073751781 begin (@expr1073751782 ) ;
2128: $if $(@expr1073751783 $!@expr1073751784 $assert_ $(@expr1073751785 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2128 $, var@var770 .@expr1073751786 name (@expr1073751787 ) ==@expr1073751788 "array" $) $) { $return ; }
2129: $if $(@expr1073751789 $!@expr1073751790 $assert_ $(@expr1073751791 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2129 $, var@var770 .@expr1073751792 typeStartToken (@expr1073751793 ) .@expr1073751794 str (@expr1073751795 ) ==@expr1073751796 "int" $) $) { $return ; }
2130: }
2131:
2132: void hasGlobalVariables3 ( ) {
2133: $Tokenizer $tokenizer@var771 $(@expr1073751797 $&@expr1073751798 $settings1@var123 $, $this@expr1073751799 $) $; $const $SymbolDatabase $* $db@var772 $; $db@var772 $=@expr1073751800 $getSymbolDB_inner $(@expr1073751801 $tokenizer@var771 $, "int array[2][2] = { { 0, 0 }, { 0, 0 } };" $, $"test.cpp" $) $; $if $(@expr1073751802 $!@expr1073751803 $assert_ $(@expr1073751804 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2133 $, $db@var772 $) $) { $return $; } $do ${ $} $while $(@expr1073751805 $false $) ;
2134:
2135: $if $(@expr1073751806 $!@expr1073751807 $assert_ $(@expr1073751808 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2135 $, db@var772 &&@expr1073751809 db@var772 .@expr9986 scopeList@var773 .@expr1073751811 size (@expr1073751812 ) ==@expr1073751813 1 $) $) { $return ; }
2136:
2137: std ::@expr1073751814 list < Scope > ::@expr1073751815 const_iterator it@var774 ; it@var774 =@expr1073751816 db@var772 .@expr9986 scopeList@var773 .@expr1073751818 begin (@expr1073751819 ) ;
2138: $if $(@expr1073751820 $!@expr1073751821 $assert_ $(@expr1073751822 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2138 $, it@var774 .@expr9999 varlist@var775 .@expr1073751824 size (@expr1073751825 ) ==@expr1073751826 1 $) $) { $return ; }
2139:
2140: std ::@expr1073751827 list < Variable > ::@expr1073751828 const_iterator var@var776 ; var@var776 =@expr1073751829 it@var774 .@expr9999 varlist@var775 .@expr1073751831 begin (@expr1073751832 ) ;
2141: $if $(@expr1073751833 $!@expr1073751834 $assert_ $(@expr1073751835 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2141 $, var@var776 .@expr1073751836 name (@expr1073751837 ) ==@expr1073751838 "array" $) $) { $return ; }
2142: $if $(@expr1073751839 $!@expr1073751840 $assert_ $(@expr1073751841 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2142 $, var@var776 .@expr1073751842 typeStartToken (@expr1073751843 ) .@expr1073751844 str (@expr1073751845 ) ==@expr1073751846 "int" $) $) { $return ; }
2143: }
2144:
2145: void checkTypeStartEndToken1 ( ) {
2146: $Tokenizer $tokenizer@var777 $(@expr1073751847 $&@expr1073751848 $settings1@var123 $, $this@expr1073751849 $) $; $const $SymbolDatabase $* $db@var778 $; $db@var778 $=@expr1073751850 $getSymbolDB_inner $(@expr1073751851 $tokenizer@var777 $, "static std::string i;\nstatic const std::string j;\nconst std::string* k;\nconst char m[];\nvoid f(const char* const l;) {}" $, $"test.cpp" $) $; $if $(@expr1073751852 $!@expr1073751853 $assert_ $(@expr1073751854 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2146 $, $db@var778 $) $) { $return $; } $do ${ $} $while $(@expr1073751855 $false $)
2147:
2148:
2149:
2150: ;
2151:
2152: $if $(@expr1073751856 $!@expr1073751857 $assert_ $(@expr1073751858 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2152 $, db@var778 &&@expr1073751859 db@var778 .@expr1073751860 variableList (@expr1073751861 ) .@expr1073751862 size (@expr1073751863 ) ==@expr1073751864 6 &&@expr1073751865 db@var778 .@expr10042 getVariableFromVarId (@expr10043 1 ) &&@expr1073751868 db@var778 .@expr10042 getVariableFromVarId (@expr10046 2 ) &&@expr1073751871 db@var778 .@expr10042 getVariableFromVarId (@expr10049 3 ) &&@expr1073751874 db@var778 .@expr10042 getVariableFromVarId (@expr10052 4 ) &&@expr1073751877 db@var778 .@expr10042 getVariableFromVarId (@expr10055 5 ) $) $) { $return ; }
2153:
2154: $if $(@expr1073751880 $!@expr1073751881 $assertEquals $(@expr1073751882 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2154 $, "std" $, db@var778 .@expr10042 getVariableFromVarId (@expr10043 1 ) .@expr1073751885 typeStartToken (@expr1073751886 ) .@expr1073751887 str (@expr1073751888 ) $) $) { $return ; }
2155: $if $(@expr1073751889 $!@expr1073751890 $assertEquals $(@expr1073751891 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2155 $, "std" $, db@var778 .@expr10042 getVariableFromVarId (@expr10046 2 ) .@expr1073751894 typeStartToken (@expr1073751895 ) .@expr1073751896 str (@expr1073751897 ) $) $) { $return ; }
2156: $if $(@expr1073751898 $!@expr1073751899 $assertEquals $(@expr1073751900 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2156 $, "std" $, db@var778 .@expr10042 getVariableFromVarId (@expr10049 3 ) .@expr1073751903 typeStartToken (@expr1073751904 ) .@expr1073751905 str (@expr1073751906 ) $) $) { $return ; }
2157: $if $(@expr1073751907 $!@expr1073751908 $assertEquals $(@expr1073751909 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2157 $, "char" $, db@var778 .@expr10042 getVariableFromVarId (@expr10052 4 ) .@expr1073751912 typeStartToken (@expr1073751913 ) .@expr1073751914 str (@expr1073751915 ) $) $) { $return ; }
2158: $if $(@expr1073751916 $!@expr1073751917 $assertEquals $(@expr1073751918 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2158 $, "char" $, db@var778 .@expr10042 getVariableFromVarId (@expr10055 5 ) .@expr1073751921 typeStartToken (@expr1073751922 ) .@expr1073751923 str (@expr1073751924 ) $) $) { $return ; }
2159:
2160: $if $(@expr1073751925 $!@expr1073751926 $assertEquals $(@expr1073751927 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2160 $, "string" $, db@var778 .@expr10042 getVariableFromVarId (@expr10043 1 ) .@expr1073751930 typeEndToken (@expr1073751931 ) .@expr1073751932 str (@expr1073751933 ) $) $) { $return ; }
2161: $if $(@expr1073751934 $!@expr1073751935 $assertEquals $(@expr1073751936 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2161 $, "string" $, db@var778 .@expr10042 getVariableFromVarId (@expr10046 2 ) .@expr1073751939 typeEndToken (@expr1073751940 ) .@expr1073751941 str (@expr1073751942 ) $) $) { $return ; }
2162: $if $(@expr1073751943 $!@expr1073751944 $assertEquals $(@expr1073751945 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2162 $, "*" $, db@var778 .@expr10042 getVariableFromVarId (@expr10049 3 ) .@expr1073751948 typeEndToken (@expr1073751949 ) .@expr1073751950 str (@expr1073751951 ) $) $) { $return ; }
2163: $if $(@expr1073751952 $!@expr1073751953 $assertEquals $(@expr1073751954 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2163 $, "char" $, db@var778 .@expr10042 getVariableFromVarId (@expr10052 4 ) .@expr1073751957 typeEndToken (@expr1073751958 ) .@expr1073751959 str (@expr1073751960 ) $) $) { $return ; }
2164: $if $(@expr1073751961 $!@expr1073751962 $assertEquals $(@expr1073751963 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2164 $, "*" $, db@var778 .@expr10042 getVariableFromVarId (@expr10055 5 ) .@expr1073751966 typeEndToken (@expr1073751967 ) .@expr1073751968 str (@expr1073751969 ) $) $) { $return ; }
2165: }
2166:
2167: void checkTypeStartEndToken2 ( ) {
2168: $Tokenizer $tokenizer@var779 $(@expr1073751970 $&@expr1073751971 $settings1@var123 $, $this@expr1073751972 $) $; $const $SymbolDatabase $* $db@var780 $; $db@var780 $=@expr1073751973 $getSymbolDB_inner $(@expr1073751974 $tokenizer@var779 $, "class CodeGenerator {\n  DiagnosticsEngine Diags;\npublic:\n  void Initialize() {\n    Builder.reset(Diags);\n  }\n\n  void HandleTagDeclRequiredDefinition() LLVM_OVERRIDE {\n    if (Diags.hasErrorOccurred())\n      return;\n  }\n};" $, $"test.cpp" $) $; $if $(@expr1073751975 $!@expr1073751976 $assert_ $(@expr1073751977 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2168 $, $db@var780 $) $) { $return $; } $do ${ $} $while $(@expr1073751978 $false $)
2169:
|
2178:
2179: ;
2180: $if $(@expr1073751979 $!@expr1073751980 $assertEquals $(@expr1073751981 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2180 $, "DiagnosticsEngine" $, db@var780 .@expr1073751982 getVariableFromVarId (@expr1073751983 1 ) .@expr1073751984 typeStartToken (@expr1073751985 ) .@expr1073751986 str (@expr1073751987 ) $) $) { $return ; }
2181: }
2182:
2183: void checkTypeStartEndToken3 ( ) {
2184: $Tokenizer $tokenizer@var781 $(@expr1073751989 $&@expr1073751990 $settings1@var123 $, $this@expr1073751991 $) $; $const $SymbolDatabase $* $db@var782 $; $db@var782 $=@expr1073751992 $getSymbolDB_inner $(@expr1073751993 $tokenizer@var781 $, "void f(const char) {}" $, $"test.cpp" $) $; $if $(@expr1073751994 $!@expr1073751995 $assert_ $(@expr1073751996 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2184 $, $db@var782 $) $) { $return $; } $do ${ $} $while $(@expr1073751997 $false $) ;
2185:
2186: $if $(@expr1073751998 $!@expr1073751999 $assert_ $(@expr1073752000 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2186 $, db@var782 &&@expr1073752001 db@var782 .@expr10178 functionScopes@var783 .@expr1073752003 size (@expr1073752004 ) ==@expr1073752005 1U $) $) { $return ; }
2187:
2188: const Function * const f@var784 ; f@var784 =@expr1073752006 db@var782 .@expr10178 functionScopes@var783 .@expr1073752008 front (@expr1073752009 ) .@expr1073752010 function@expr1073751988 ;
2189: $if $(@expr1073752011 $!@expr1073752012 $assertEquals $(@expr1073752013 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2189 $, 1U $, f@var784 .@expr1073752014 argCount (@expr1073752015 ) $) $) { $return ; }
2190: $if $(@expr1073752016 $!@expr1073752017 $assertEquals $(@expr1073752018 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2190 $, 0U $, f@var784 .@expr1073752019 initializedArgCount (@expr1073752020 ) $) $) { $return ; }
2191: $if $(@expr1073752021 $!@expr1073752022 $assertEquals $(@expr1073752023 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2191 $, 1U $, f@var784 .@expr1073752024 minArgCount (@expr1073752025 ) $) $) { $return ; }
2192: const Variable * const arg1@var785 ; arg1@var785 =@expr1073752026 f@var784 .@expr1073752027 getArgumentVar (@expr1073752028 0 ) ;
2193: $if $(@expr1073752029 $!@expr1073752030 $assertEquals $(@expr1073752031 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2193 $, "char" $, arg1@var785 .@expr1073752032 typeStartToken (@expr1073752033 ) .@expr1073752034 str (@expr1073752035 ) $) $) { $return ; }
2194: $if $(@expr1073752036 $!@expr1073752037 $assertEquals $(@expr1073752038 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2194 $, "char" $, arg1@var785 .@expr1073752039 typeEndToken (@expr1073752040 ) .@expr1073752041 str (@expr1073752042 ) $) $) { $return ; }
2195: }
2196:
2197:
2198: void check_ ( const char * file@var786 , int line@var787 , const char code@var788 [ ] , bool debug@var789 = true , const char filename@var790 [ 9 ] = "test.cpp" ) {
2199:
2200: errout@var100 .@expr1073752043 str (@expr1073752044 "" ) ;
2201:
2202:
2203: settings1@var123 .@expr10221 debugwarnings@var791 =@expr1073752046 debug@var789 ;
2204:
2205:
2206: Tokenizer tokenizer@var792 (@expr1073752047 &@expr1073752048 settings1@var123 , this@expr1073752049 ) ;
2207: std ::@expr1073752050 istringstream istr@var793 (@expr1073752051 code@var788 ) ;
2208: $assert_ $(@expr1073752052 file@var786 $, line@var787 $, $(@expr1073752053 tokenizer@var792 .@expr1073752054 tokenize (@expr1073752055 istr@var793 , filename@var790 ) $) $) ;
2209:
2210:
2211: tokenizer@var792 .@expr1073752056 createSymbolDatabase (@expr1073752057 ) ;
2212:
2213: settings1@var123 .@expr10221 debugwarnings@var791 =@expr1073752059 false ;
2214: }
2215:
2216: void functionArgs1 ( ) {
2217: {
2218: $Tokenizer $tokenizer@var794 $(@expr1073752060 $&@expr1073752061 $settings1@var123 $, $this@expr10238 $) $; $const $SymbolDatabase $* $db@var795 $; $db@var795 $=@expr1073752063 $getSymbolDB_inner $(@expr1073752064 $tokenizer@var794 $, "void f(std::vector<std::string>, const std::vector<int> & v) { }" $, $"test.cpp" $) $; $if $(@expr1073752065 $!@expr1073752066 $assert_ $(@expr1073752067 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2218 $, $db@var795 $) $) { $return $; } $do ${ $} $while $(@expr1073752068 $false $) ;
2219: $if $(@expr1073752069 $!@expr1073752070 $assertEquals $(@expr1073752071 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2219 $, 1 +@expr10248 1 $, db@var795 .@expr1073752073 variableList (@expr1073752074 ) .@expr1073752075 size (@expr1073752076 ) $) $) { $return ; }
2220: const Variable * v@var796 ; v@var796 =@expr1073752077 db@var795 .@expr1073752078 getVariableFromVarId (@expr1073752079 1 ) ;
2221: $if $(@expr1073752080 $!@expr1073752081 $assert_ $(@expr1073752082 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2221 $, v@var796 &&@expr1073752083 v@var796 .@expr1073752084 isReference (@expr1073752085 ) &&@expr1073752086 v@var796 .@expr1073752087 isConst (@expr1073752088 ) &&@expr1073752089 v@var796 .@expr1073752090 isArgument (@expr1073752091 ) $) $) { $return ; }
2222: const Scope * f@var797 ; f@var797 =@expr1073752092 db@var795 .@expr1073752093 findScopeByName (@expr1073752094 "f" ) ;
2223: $if $(@expr1073752095 $!@expr1073752096 $assert_ $(@expr1073752097 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2223 $, f@var797 &&@expr1073752098 f@var797 .@expr1073752099 type@var798 ==@expr1073752100 Scope ::@expr10277 eFunction &&@expr1073752102 f@var797 .@expr10279 function@var799 $) $) { $return ; }
2224:
2225: $if $(@expr1073752104 $!@expr1073752105 $assert_ $(@expr1073752106 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2225 $, f@var797 .@expr10279 function@var799 .@expr10284 argumentList@var800 .@expr1073752109 size (@expr1073752110 ) ==@expr1073752111 2 &&@expr1073752112 f@var797 .@expr10279 function@var799 .@expr10284 argumentList@var800 .@expr10291 front (@expr10292 ) .@expr1073752117 index (@expr1073752118 ) ==@expr1073752119 0 &&@expr1073752120 f@var797 .@expr10279 function@var799 .@expr10284 argumentList@var800 .@expr10291 front (@expr10292 ) .@expr1073752125 name (@expr1073752126 ) .@expr1073752127 empty (@expr1073752128 ) &&@expr1073752129 f@var797 .@expr10279 function@var799 .@expr10284 argumentList@var800 .@expr1073752132 back (@expr1073752133 ) .@expr1073752134 index (@expr1073752135 ) ==@expr1073752136 1 $) $) { $return ; }
2226: $if $(@expr1073752137 $!@expr1073752138 $assertEquals $(@expr1073752139 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2226 $, "" $, errout@var100 .@expr10316 str (@expr10317 ) $) $) { $return ; }
2227: }
2228: {
2229: $Tokenizer $tokenizer@var801 $(@expr1073752142 $&@expr1073752143 $settings1@var123 $, $this@expr10238 $) $; $const $SymbolDatabase $* $db@var802 $; $db@var802 $=@expr1073752144 $getSymbolDB_inner $(@expr1073752145 $tokenizer@var801 $, "void g(std::map<std::string, std::vector<int> > m) { }" $, $"test.cpp" $) $; $if $(@expr1073752146 $!@expr1073752147 $assert_ $(@expr1073752148 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2229 $, $db@var802 $) $) { $return $; } $do ${ $} $while $(@expr1073752149 $false $) ;
2230: $if $(@expr1073752150 $!@expr1073752151 $assertEquals $(@expr1073752152 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2230 $, 1 +@expr10248 1 $, db@var802 .@expr1073752154 variableList (@expr1073752155 ) .@expr1073752156 size (@expr1073752157 ) $) $) { $return ; }
2231: const Variable * m@var803 ; m@var803 =@expr1073752158 db@var802 .@expr1073752159 getVariableFromVarId (@expr1073752160 1 ) ;
2232: $if $(@expr1073752161 $!@expr1073752162 $assert_ $(@expr1073752163 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2232 $, m@var803 &&@expr1073752164 !@expr1073752165 m@var803 .@expr1073752166 isReference (@expr1073752167 ) &&@expr1073752168 !@expr1073752169 m@var803 .@expr1073752170 isConst (@expr1073752171 ) &&@expr1073752172 m@var803 .@expr1073752173 isArgument (@expr1073752174 ) &&@expr1073752175 m@var803 .@expr1073752176 isClass (@expr1073752177 ) $) $) { $return ; }
2233: const Scope * g@var804 ; g@var804 =@expr1073752178 db@var802 .@expr1073752179 findScopeByName (@expr1073752180 "g" ) ;
2234: $if $(@expr1073752181 $!@expr1073752182 $assert_ $(@expr1073752183 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2234 $, g@var804 &&@expr1073752184 g@var804 .@expr1073752185 type@var805 ==@expr1073752186 Scope ::@expr10277 eFunction &&@expr1073752188 g@var804 .@expr10365 function@var806 &&@expr1073752190 g@var804 .@expr10365 function@var806 .@expr10368 argumentList@var807 .@expr1073752193 size (@expr1073752194 ) ==@expr1073752195 1 &&@expr1073752196 g@var804 .@expr10365 function@var806 .@expr10368 argumentList@var807 .@expr1073752199 front (@expr1073752200 ) .@expr1073752201 index (@expr1073752202 ) ==@expr1073752203 0 $) $) { $return ; }
2235: $if $(@expr1073752204 $!@expr1073752205 $assertEquals $(@expr1073752206 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2235 $, "" $, errout@var100 .@expr10316 str (@expr10317 ) $) $) { $return ; }
2236: }
2237: {
2238: $Tokenizer $tokenizer@var808 $(@expr1073752209 $&@expr1073752210 $settings1@var123 $, $this@expr10238 $) $; $const $SymbolDatabase $* $db@var809 $; $db@var809 $=@expr1073752211 $getSymbolDB_inner $(@expr1073752212 $tokenizer@var808 $, "void g(std::map<int, int> m = std::map<int, int>()) { }" $, $"test.cpp" $) $; $if $(@expr1073752213 $!@expr1073752214 $assert_ $(@expr1073752215 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2238 $, $db@var809 $) $) { $return $; } $do ${ $} $while $(@expr1073752216 $false $) ;
2239: const Scope * g@var810 ; g@var810 =@expr1073752217 db@var809 .@expr1073752218 findScopeByName (@expr1073752219 "g" ) ;
2240: $if $(@expr1073752220 $!@expr1073752221 $assert_ $(@expr1073752222 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2240 $, g@var810 &&@expr1073752223 g@var810 .@expr1073752224 type@var811 ==@expr1073752225 Scope ::@expr10277 eFunction &&@expr1073752227 g@var810 .@expr10404 function@var812 &&@expr1073752229 g@var810 .@expr10404 function@var812 .@expr10407 argumentList@var813 .@expr1073752232 size (@expr1073752233 ) ==@expr1073752234 1 &&@expr1073752235 g@var810 .@expr10404 function@var812 .@expr10407 argumentList@var813 .@expr1073752238 front (@expr1073752239 ) .@expr1073752240 index (@expr1073752241 ) ==@expr1073752242 0 &&@expr1073752243 g@var810 .@expr10404 function@var812 .@expr1073752245 initializedArgCount (@expr1073752246 ) ==@expr1073752247 1 $) $) { $return ; }
2241: $if $(@expr1073752248 $!@expr1073752249 $assertEquals $(@expr1073752250 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2241 $, "" $, errout@var100 .@expr10316 str (@expr10317 ) $) $) { $return ; }
2242: }
2243: {
2244: $Tokenizer $tokenizer@var814 $(@expr1073752253 $&@expr1073752254 $settings1@var123 $, $this@expr10238 $) $; $const $SymbolDatabase $* $db@var815 $; $db@var815 $=@expr1073752255 $getSymbolDB_inner $(@expr1073752256 $tokenizer@var814 $, "void g(int = 0) { }" $, $"test.cpp" $) $; $if $(@expr1073752257 $!@expr1073752258 $assert_ $(@expr1073752259 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2244 $, $db@var815 $) $) { $return $; } $do ${ $} $while $(@expr1073752260 $false $) ;
2245: const Scope * g@var816 ; g@var816 =@expr1073752261 db@var815 .@expr1073752262 findScopeByName (@expr1073752263 "g" ) ;
2246: $if $(@expr1073752264 $!@expr1073752265 $assert_ $(@expr1073752266 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2246 $, g@var816 &&@expr1073752267 g@var816 .@expr1073752268 type@var817 ==@expr1073752269 Scope ::@expr10277 eFunction &&@expr1073752271 g@var816 .@expr10448 function@var818 &&@expr1073752273 g@var816 .@expr10448 function@var818 .@expr10451 argumentList@var819 .@expr1073752276 size (@expr1073752277 ) ==@expr1073752278 1 &&@expr1073752279 g@var816 .@expr10448 function@var818 .@expr10451 argumentList@var819 .@expr1073752282 front (@expr1073752283 ) .@expr1073752284 hasDefault (@expr1073752285 ) $) $) { $return ; }
2247: $if $(@expr1073752286 $!@expr1073752287 $assertEquals $(@expr1073752288 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2247 $, "" $, errout@var100 .@expr10316 str (@expr10317 ) $) $) { $return ; }
2248: }
2249: {
2250: $Tokenizer $tokenizer@var820 $(@expr1073752291 $&@expr1073752292 $settings1@var123 $, $this@expr10238 $) $; $const $SymbolDatabase $* $db@var821 $; $db@var821 $=@expr1073752293 $getSymbolDB_inner $(@expr1073752294 $tokenizer@var820 $, "void g(int*) { }" $, $"test.cpp" $) $; $if $(@expr1073752295 $!@expr1073752296 $assert_ $(@expr1073752297 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2250 $, $db@var821 $) $) { $return $; } $do ${ $} $while $(@expr1073752298 $false $) ;
2251: const Scope * g@var822 ; g@var822 =@expr1073752299 db@var821 .@expr1073752300 findScopeByName (@expr1073752301 "g" ) ;
2252: $if $(@expr1073752302 $!@expr1073752303 $assert_ $(@expr1073752304 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2252 $, g@var822 &&@expr1073752305 g@var822 .@expr1073752306 type@var823 ==@expr1073752307 Scope ::@expr10277 eFunction &&@expr1073752309 g@var822 .@expr10486 function@var824 &&@expr1073752311 g@var822 .@expr10486 function@var824 .@expr10489 argumentList@var825 .@expr1073752314 size (@expr1073752315 ) ==@expr1073752316 1 &&@expr1073752317 g@var822 .@expr10486 function@var824 .@expr10489 argumentList@var825 .@expr10496 front (@expr10497 ) .@expr1073752322 nameToken (@expr1073752323 ) ==@expr1073752324 nullptr &&@expr1073752325 g@var822 .@expr10486 function@var824 .@expr10489 argumentList@var825 .@expr10496 front (@expr10497 ) .@expr1073752330 isPointer (@expr1073752331 ) $) $) { $return ; }
2253: $if $(@expr1073752332 $!@expr1073752333 $assertEquals $(@expr1073752334 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2253 $, "" $, errout@var100 .@expr10316 str (@expr10317 ) $) $) { $return ; }
2254: }
2255: {
2256: $Tokenizer $tokenizer@var826 $(@expr1073752337 $&@expr1073752338 $settings1@var123 $, $this@expr10238 $) $; $const $SymbolDatabase $* $db@var827 $; $db@var827 $=@expr1073752339 $getSymbolDB_inner $(@expr1073752340 $tokenizer@var826 $, "void g(int* const) { }" $, $"test.cpp" $) $; $if $(@expr1073752341 $!@expr1073752342 $assert_ $(@expr1073752343 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2256 $, $db@var827 $) $) { $return $; } $do ${ $} $while $(@expr1073752344 $false $) ;
2257: const Scope * g@var828 ; g@var828 =@expr1073752345 db@var827 .@expr1073752346 findScopeByName (@expr1073752347 "g" ) ;
2258: $if $(@expr1073752348 $!@expr1073752349 $assert_ $(@expr1073752350 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2258 $, g@var828 &&@expr1073752351 g@var828 .@expr1073752352 type@var829 ==@expr1073752353 Scope ::@expr10277 eFunction &&@expr1073752355 g@var828 .@expr10532 function@var830 &&@expr1073752357 g@var828 .@expr10532 function@var830 .@expr10535 argumentList@var831 .@expr1073752360 size (@expr1073752361 ) ==@expr1073752362 1 &&@expr1073752363 g@var828 .@expr10532 function@var830 .@expr10535 argumentList@var831 .@expr1073752366 front (@expr1073752367 ) .@expr1073752368 nameToken (@expr1073752369 ) ==@expr1073752370 nullptr $) $) { $return ; }
2259: $if $(@expr1073752371 $!@expr1073752372 $assertEquals $(@expr1073752373 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2259 $, "" $, errout@var100 .@expr10316 str (@expr10317 ) $) $) { $return ; }
2260: }
2261: }
2262:
2263: void functionArgs2 ( ) {
2264: $Tokenizer $tokenizer@var832 $(@expr1073752378 $&@expr1073752379 $settings1@var123 $, $this@expr1073752380 $) $; $const $SymbolDatabase $* $db@var833 $; $db@var833 $=@expr1073752381 $getSymbolDB_inner $(@expr1073752382 $tokenizer@var832 $, "void f(int a[][4]) { }" $, $"test.cpp" $) $; $if $(@expr1073752383 $!@expr1073752384 $assert_ $(@expr1073752385 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2264 $, $db@var833 $) $) { $return $; } $do ${ $} $while $(@expr1073752386 $false $) ;
2265: const Variable * a@var834 ; a@var834 =@expr1073752387 db@var833 .@expr1073752388 getVariableFromVarId (@expr1073752389 1 ) ;
2266: $if $(@expr1073752390 $!@expr1073752391 $assertEquals $(@expr1073752392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2266 $, "a" $, a@var834 .@expr1073752393 nameToken (@expr1073752394 ) .@expr1073752395 str (@expr1073752396 ) $) $) { $return ; }
2267: $if $(@expr1073752397 $!@expr1073752398 $assertEquals $(@expr1073752399 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2267 $, 2UL $, a@var834 .@expr10576 dimensions (@expr10577 ) .@expr1073752402 size (@expr1073752403 ) $) $) { $return ; }
2268: $if $(@expr1073752404 $!@expr1073752405 $assertEquals $(@expr1073752406 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2268 $, 0UL $, a@var834 .@expr10583 dimension (@expr1073752408 0 ) $) $) { $return ; }
2269: $if $(@expr1073752409 $!@expr1073752410 $assertEquals $(@expr1073752411 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2269 $, false $, a@var834 .@expr10576 dimensions (@expr10577 ) [@expr1073752414 0 ] .@expr1073752415 known@expr1073752376 $) $) { $return ; }
2270: $if $(@expr1073752416 $!@expr1073752417 $assertEquals $(@expr1073752418 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2270 $, 4UL $, a@var834 .@expr10583 dimension (@expr1073752420 1 ) $) $) { $return ; }
2271: $if $(@expr1073752421 $!@expr1073752422 $assertEquals $(@expr1073752423 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2271 $, true $, a@var834 .@expr10576 dimensions (@expr10577 ) [@expr1073752426 1 ] .@expr1073752427 known@expr1073752377 $) $) { $return ; }
2272: }
2273:
2274: void functionArgs4 ( ) {
2275: $Tokenizer $tokenizer@var835 $(@expr1073752428 $&@expr1073752429 $settings1@var123 $, $this@expr1073752430 $) $; $const $SymbolDatabase $* $db@var836 $; $db@var836 $=@expr1073752431 $getSymbolDB_inner $(@expr1073752432 $tokenizer@var835 $, "void f1(char [10], struct foo [10]);" $, $"test.cpp" $) $; $if $(@expr1073752433 $!@expr1073752434 $assert_ $(@expr1073752435 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2275 $, $db@var836 $) $) { $return $; } $do ${ $} $while $(@expr1073752436 $false $) ;
2276: $if $(@expr1073752437 $!@expr1073752438 $assertEquals $(@expr1073752439 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2276 $, true $, db@var836 .@expr10616 scopeList@var837 .@expr10617 front (@expr10618 ) .@expr10619 functionList .@expr1073752444 size (@expr1073752445 ) ==@expr1073752446 1UL $) $) { $return ; }
2277: const Function * func@var838 ; func@var838 =@expr1073752447 &@expr1073752448 db@var836 .@expr10616 scopeList@var837 .@expr10617 front (@expr10618 ) .@expr10619 functionList .@expr1073752453 front (@expr1073752454 ) ;
2278: $if $(@expr1073752455 $!@expr1073752456 $assertEquals $(@expr1073752457 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2278 $, true $, func@var838 &&@expr1073752458 func@var838 .@expr10635 argumentList@var839 .@expr1073752460 size (@expr1073752461 ) ==@expr1073752462 2UL $) $) { $return ; }
2279:
2280: const Variable * first@var840 ; first@var840 =@expr1073752463 &@expr1073752464 func@var838 .@expr10635 argumentList@var839 .@expr1073752466 front (@expr1073752467 ) ;
2281: $if $(@expr1073752468 $!@expr1073752469 $assertEquals $(@expr1073752470 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2281 $, 0UL $, first@var840 .@expr1073752471 name (@expr1073752472 ) .@expr1073752473 size (@expr1073752474 ) $) $) { $return ; }
2282: $if $(@expr1073752475 $!@expr1073752476 $assertEquals $(@expr1073752477 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2282 $, 1UL $, first@var840 .@expr1073752478 dimensions (@expr1073752479 ) .@expr1073752480 size (@expr1073752481 ) $) $) { $return ; }
2283: $if $(@expr1073752482 $!@expr1073752483 $assertEquals $(@expr1073752484 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2283 $, 10UL $, first@var840 .@expr1073752485 dimension (@expr1073752486 0 ) $) $) { $return ; }
2284: const Variable * second@var841 ; second@var841 =@expr1073752487 &@expr1073752488 func@var838 .@expr10635 argumentList@var839 .@expr1073752490 back (@expr1073752491 ) ;
2285: $if $(@expr1073752492 $!@expr1073752493 $assertEquals $(@expr1073752494 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2285 $, 0UL $, second@var841 .@expr1073752495 name (@expr1073752496 ) .@expr1073752497 size (@expr1073752498 ) $) $) { $return ; }
2286: $if $(@expr1073752499 $!@expr1073752500 $assertEquals $(@expr1073752501 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2286 $, 1UL $, second@var841 .@expr1073752502 dimensions (@expr1073752503 ) .@expr1073752504 size (@expr1073752505 ) $) $) { $return ; }
2287: $if $(@expr1073752506 $!@expr1073752507 $assertEquals $(@expr1073752508 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2287 $, 10UL $, second@var841 .@expr1073752509 dimension (@expr1073752510 0 ) $) $) { $return ; }
2288: }
2289:
2290: void functionArgs5 ( ) {
2291: $Tokenizer $tokenizer@var842 $(@expr1073752511 $&@expr1073752512 $settings1@var123 $, $this@expr1073752513 $) $; $const $SymbolDatabase $* $db@var843 $; $db@var843 $=@expr1073752514 $getSymbolDB_inner $(@expr1073752515 $tokenizer@var842 $, "class ABC {};\nclass Y {\n  enum ABC {A,B,C};\n  void f(enum ABC abc) {}\n};" $, $"test.cpp" $) $; $if $(@expr1073752516 $!@expr1073752517 $assert_ $(@expr1073752518 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2291 $, $db@var843 $) $) { $return $; } $do ${ $} $while $(@expr1073752519 $false $)
2292:
2293:
2294:
2295: ;
2296: $if $(@expr1073752520 $!@expr1073752521 $assertEquals $(@expr1073752522 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2296 $, true $, db@var843 !=@expr1073752523 nullptr $) $) { $return ; }
2297: const Token * f@var844 ; f@var844 =@expr1073752524 Token ::@expr1073752525 findsimplematch (@expr1073752526 tokenizer@var842 .@expr1073752527 tokens (@expr1073752528 ) , "f ( enum" ) ;
2298: $if $(@expr1073752529 $!@expr1073752530 $assertEquals $(@expr1073752531 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2298 $, true $, f@var844 &&@expr1073752532 f@var844 .@expr10709 function (@expr10710 ) $) $) { $return ; }
2299: const Function * func@var845 ; func@var845 =@expr1073752535 f@var844 .@expr10709 function (@expr10710 ) ;
2300: $if $(@expr1073752538 $!@expr1073752539 $assertEquals $(@expr1073752540 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2300 $, true $, func@var845 .@expr10717 argumentList@var846 .@expr1073752542 size (@expr1073752543 ) ==@expr1073752544 1 &&@expr1073752545 func@var845 .@expr10717 argumentList@var846 .@expr10723 front (@expr10724 ) .@expr10725 type (@expr10726 ) $) $) { $return ; }
2301: const Type * type@var847 ; type@var847 =@expr1073752551 func@var845 .@expr10717 argumentList@var846 .@expr10723 front (@expr10724 ) .@expr10725 type (@expr10726 ) ;
2302: $if $(@expr1073752557 $!@expr1073752558 $assertEquals $(@expr1073752559 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2302 $, true $, type@var847 .@expr1073752560 isEnumType (@expr1073752561 ) $) $) { $return ; }
2303: }
2304:
2305: void functionArgs6 ( ) {
2306: $Tokenizer $tokenizer@var848 $(@expr1073752562 $&@expr1073752563 $settings1@var123 $, $this@expr1073752564 $) $; $const $SymbolDatabase $* $db@var849 $; $db@var849 $=@expr1073752565 $getSymbolDB_inner $(@expr1073752566 $tokenizer@var848 $, "class ABC {};\nclass Y {\n  enum ABC {A,B,C};\n  void f(ABC abc) {}\n};" $, $"test.cpp" $) $; $if $(@expr1073752567 $!@expr1073752568 $assert_ $(@expr1073752569 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2306 $, $db@var849 $) $) { $return $; } $do ${ $} $while $(@expr1073752570 $false $)
2307:
2308:
2309:
2310: ;
2311: $if $(@expr1073752571 $!@expr1073752572 $assertEquals $(@expr1073752573 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2311 $, true $, db@var849 !=@expr1073752574 nullptr $) $) { $return ; }
2312: const Token * f@var850 ; f@var850 =@expr1073752575 Token ::@expr1073752576 findsimplematch (@expr1073752577 tokenizer@var848 .@expr1073752578 tokens (@expr1073752579 ) , "f ( ABC" ) ;
2313: $if $(@expr1073752580 $!@expr1073752581 $assertEquals $(@expr1073752582 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2313 $, true $, f@var850 &&@expr1073752583 f@var850 .@expr10760 function (@expr10761 ) $) $) { $return ; }
2314: const Function * func@var851 ; func@var851 =@expr1073752586 f@var850 .@expr10760 function (@expr10761 ) ;
2315: $if $(@expr1073752589 $!@expr1073752590 $assertEquals $(@expr1073752591 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2315 $, true $, func@var851 .@expr10768 argumentList@var852 .@expr1073752593 size (@expr1073752594 ) ==@expr1073752595 1 &&@expr1073752596 func@var851 .@expr10768 argumentList@var852 .@expr10774 front (@expr10775 ) .@expr10776 type (@expr10777 ) $) $) { $return ; }
2316: const Type * type@var853 ; type@var853 =@expr1073752602 func@var851 .@expr10768 argumentList@var852 .@expr10774 front (@expr10775 ) .@expr10776 type (@expr10777 ) ;
2317: $if $(@expr1073752608 $!@expr1073752609 $assertEquals $(@expr1073752610 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2317 $, true $, type@var853 .@expr1073752611 isEnumType (@expr1073752612 ) $) $) { $return ; }
2318: }
2319:
2320: void functionArgs7 ( ) {
2321: {
2322: $Tokenizer $tokenizer@var854 $(@expr1073752613 $&@expr1073752614 $settings1@var123 $, $this@expr10791 $) $; $const $SymbolDatabase $* $db@var855 $; $db@var855 $=@expr1073752616 $getSymbolDB_inner $(@expr1073752617 $tokenizer@var854 $, "struct AB { int a; int b; };\nint foo(struct AB *ab);\nvoid bar() {\n  struct AB ab;\n  foo(&ab);\n};" $, $"test.cpp" $) $; $if $(@expr1073752618 $!@expr1073752619 $assert_ $(@expr1073752620 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2322 $, $db@var855 $) $) { $return $; } $do ${ $} $while $(@expr1073752621 $false $)
2323:
|
2326:
2327: ;
2328: $if $(@expr1073752622 $!@expr1073752623 $assertEquals $(@expr1073752624 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2328 $, true $, db@var855 !=@expr1073752625 nullptr $) $) { $return ; }
2329: const Token * f@var856 ; f@var856 =@expr1073752626 Token ::@expr10803 findsimplematch (@expr1073752628 tokenizer@var854 .@expr1073752629 tokens (@expr1073752630 ) , "foo ( & ab" ) ;
2330: $if $(@expr1073752631 $!@expr1073752632 $assertEquals $(@expr1073752633 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2330 $, true $, f@var856 &&@expr1073752634 f@var856 .@expr10811 function (@expr10812 ) $) $) { $return ; }
2331: const Function * func@var857 ; func@var857 =@expr1073752637 f@var856 .@expr10811 function (@expr10812 ) ;
2332: $if $(@expr1073752640 $!@expr1073752641 $assertEquals $(@expr1073752642 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2332 $, true $, func@var857 .@expr1073752643 tokenDef@var858 .@expr1073752644 linenr (@expr1073752645 ) ==@expr1073752646 2 &&@expr1073752647 func@var857 .@expr10824 argumentList@var859 .@expr1073752649 size (@expr1073752650 ) ==@expr1073752651 1 &&@expr1073752652 func@var857 .@expr10824 argumentList@var859 .@expr10830 front (@expr10831 ) .@expr10832 type (@expr10833 ) $) $) { $return ; }
2333: const Type * type@var860 ; type@var860 =@expr1073752658 func@var857 .@expr10824 argumentList@var859 .@expr10830 front (@expr10831 ) .@expr10832 type (@expr10833 ) ;
2334: $if $(@expr1073752664 $!@expr1073752665 $assertEquals $(@expr1073752666 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2334 $, true $, type@var860 .@expr1073752667 classDef@var861 .@expr1073752668 linenr (@expr1073752669 ) ==@expr1073752670 1 $) $) { $return ; }
2335: }
2336: {
2337: $Tokenizer $tokenizer@var862 $(@expr1073752671 $&@expr1073752672 $settings1@var123 $, $this@expr10791 $) $; $const $SymbolDatabase $* $db@var863 $; $db@var863 $=@expr1073752673 $getSymbolDB_inner $(@expr1073752674 $tokenizer@var862 $, "struct AB { int a; int b; };\nint foo(AB *ab);\nvoid bar() {\n  struct AB ab;\n  foo(&ab);\n};" $, $"test.cpp" $) $; $if $(@expr1073752675 $!@expr1073752676 $assert_ $(@expr1073752677 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2337 $, $db@var863 $) $) { $return $; } $do ${ $} $while $(@expr1073752678 $false $)
2338:
|
2341:
2342: ;
2343: $if $(@expr1073752679 $!@expr1073752680 $assertEquals $(@expr1073752681 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2343 $, true $, db@var863 !=@expr1073752682 nullptr $) $) { $return ; }
2344: const Token * f@var864 ; f@var864 =@expr1073752683 Token ::@expr10803 findsimplematch (@expr1073752685 tokenizer@var862 .@expr1073752686 tokens (@expr1073752687 ) , "foo ( & ab" ) ;
2345: $if $(@expr1073752688 $!@expr1073752689 $assertEquals $(@expr1073752690 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2345 $, true $, f@var864 &&@expr1073752691 f@var864 .@expr10868 function (@expr10869 ) $) $) { $return ; }
2346: const Function * func@var865 ; func@var865 =@expr1073752694 f@var864 .@expr10868 function (@expr10869 ) ;
2347: $if $(@expr1073752697 $!@expr1073752698 $assertEquals $(@expr1073752699 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2347 $, true $, func@var865 .@expr1073752700 tokenDef@var866 .@expr1073752701 linenr (@expr1073752702 ) ==@expr1073752703 2 &&@expr1073752704 func@var865 .@expr10881 argumentList@var867 .@expr1073752706 size (@expr1073752707 ) ==@expr1073752708 1 &&@expr1073752709 func@var865 .@expr10881 argumentList@var867 .@expr10887 front (@expr10888 ) .@expr10889 type (@expr10890 ) $) $) { $return ; }
2348: const Type * type@var868 ; type@var868 =@expr1073752715 func@var865 .@expr10881 argumentList@var867 .@expr10887 front (@expr10888 ) .@expr10889 type (@expr10890 ) ;
2349: $if $(@expr1073752721 $!@expr1073752722 $assertEquals $(@expr1073752723 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2349 $, true $, type@var868 .@expr1073752724 classDef@var869 .@expr1073752725 linenr (@expr1073752726 ) ==@expr1073752727 1 $) $) { $return ; }
2350: }
2351: {
2352: $Tokenizer $tokenizer@var870 $(@expr1073752728 $&@expr1073752729 $settings1@var123 $, $this@expr10791 $) $; $const $SymbolDatabase $* $db@var871 $; $db@var871 $=@expr1073752730 $getSymbolDB_inner $(@expr1073752731 $tokenizer@var870 $, "struct AB { int a; int b; };\nint foo(struct AB *ab);\nvoid bar() {\n  AB ab;\n  foo(&ab);\n};" $, $"test.cpp" $) $; $if $(@expr1073752732 $!@expr1073752733 $assert_ $(@expr1073752734 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2352 $, $db@var871 $) $) { $return $; } $do ${ $} $while $(@expr1073752735 $false $)
2353:
|
2356:
2357: ;
2358: $if $(@expr1073752736 $!@expr1073752737 $assertEquals $(@expr1073752738 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2358 $, true $, db@var871 !=@expr1073752739 nullptr $) $) { $return ; }
2359: const Token * f@var872 ; f@var872 =@expr1073752740 Token ::@expr10803 findsimplematch (@expr1073752742 tokenizer@var870 .@expr1073752743 tokens (@expr1073752744 ) , "foo ( & ab" ) ;
2360: $if $(@expr1073752745 $!@expr1073752746 $assertEquals $(@expr1073752747 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2360 $, true $, f@var872 &&@expr1073752748 f@var872 .@expr10925 function (@expr10926 ) $) $) { $return ; }
2361: const Function * func@var873 ; func@var873 =@expr1073752751 f@var872 .@expr10925 function (@expr10926 ) ;
2362: $if $(@expr1073752754 $!@expr1073752755 $assertEquals $(@expr1073752756 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2362 $, true $, func@var873 .@expr1073752757 tokenDef@var874 .@expr1073752758 linenr (@expr1073752759 ) ==@expr1073752760 2 &&@expr1073752761 func@var873 .@expr10938 argumentList@var875 .@expr1073752763 size (@expr1073752764 ) ==@expr1073752765 1 &&@expr1073752766 func@var873 .@expr10938 argumentList@var875 .@expr10944 front (@expr10945 ) .@expr10946 type (@expr10947 ) $) $) { $return ; }
2363: const Type * type@var876 ; type@var876 =@expr1073752772 func@var873 .@expr10938 argumentList@var875 .@expr10944 front (@expr10945 ) .@expr10946 type (@expr10947 ) ;
2364: $if $(@expr1073752778 $!@expr1073752779 $assertEquals $(@expr1073752780 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2364 $, true $, type@var876 .@expr1073752781 classDef@var877 .@expr1073752782 linenr (@expr1073752783 ) ==@expr1073752784 1 $) $) { $return ; }
2365: }
2366: {
2367: $Tokenizer $tokenizer@var878 $(@expr1073752785 $&@expr1073752786 $settings1@var123 $, $this@expr10791 $) $; $const $SymbolDatabase $* $db@var879 $; $db@var879 $=@expr1073752787 $getSymbolDB_inner $(@expr1073752788 $tokenizer@var878 $, "struct AB { int a; int b; };\nint foo(AB *ab);\nvoid bar() {\n  AB ab;\n  foo(&ab);\n};" $, $"test.cpp" $) $; $if $(@expr1073752789 $!@expr1073752790 $assert_ $(@expr1073752791 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2367 $, $db@var879 $) $) { $return $; } $do ${ $} $while $(@expr1073752792 $false $)
2368:
|
2371:
2372: ;
2373: $if $(@expr1073752793 $!@expr1073752794 $assertEquals $(@expr1073752795 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2373 $, true $, db@var879 !=@expr1073752796 nullptr $) $) { $return ; }
2374: const Token * f@var880 ; f@var880 =@expr1073752797 Token ::@expr10803 findsimplematch (@expr1073752799 tokenizer@var878 .@expr1073752800 tokens (@expr1073752801 ) , "foo ( & ab" ) ;
2375: $if $(@expr1073752802 $!@expr1073752803 $assertEquals $(@expr1073752804 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2375 $, true $, f@var880 &&@expr1073752805 f@var880 .@expr10982 function (@expr10983 ) $) $) { $return ; }
2376: const Function * func@var881 ; func@var881 =@expr1073752808 f@var880 .@expr10982 function (@expr10983 ) ;
2377: $if $(@expr1073752811 $!@expr1073752812 $assertEquals $(@expr1073752813 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2377 $, true $, func@var881 .@expr1073752814 tokenDef@var882 .@expr1073752815 linenr (@expr1073752816 ) ==@expr1073752817 2 &&@expr1073752818 func@var881 .@expr10995 argumentList@var883 .@expr1073752820 size (@expr1073752821 ) ==@expr1073752822 1 &&@expr1073752823 func@var881 .@expr10995 argumentList@var883 .@expr11001 front (@expr11002 ) .@expr11003 type (@expr11004 ) $) $) { $return ; }
2378: const Type * type@var884 ; type@var884 =@expr1073752829 func@var881 .@expr10995 argumentList@var883 .@expr11001 front (@expr11002 ) .@expr11003 type (@expr11004 ) ;
2379: $if $(@expr1073752835 $!@expr1073752836 $assertEquals $(@expr1073752837 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2379 $, true $, type@var884 .@expr1073752838 classDef@var885 .@expr1073752839 linenr (@expr1073752840 ) ==@expr1073752841 1 $) $) { $return ; }
2380: }
2381: }
2382:
2383: void functionArgs8 ( ) {
2384: $Tokenizer $tokenizer@var886 $(@expr1073752842 $&@expr1073752843 $settings1@var123 $, $this@expr1073752844 $) $; $const $SymbolDatabase $* $db@var887 $; $db@var887 $=@expr1073752845 $getSymbolDB_inner $(@expr1073752846 $tokenizer@var886 $, "struct A { int i; };\nstruct B { double d; };\nint    foo(struct A a);\ndouble foo(struct B b);\nvoid bar() {\n  struct B b;\n  foo(b);\n}" $, $"test.cpp" $) $; $if $(@expr1073752847 $!@expr1073752848 $assert_ $(@expr1073752849 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2384 $, $db@var887 $) $) { $return $; } $do ${ $} $while $(@expr1073752850 $false $)
2385:
|
2390:
2391: ;
2392: $if $(@expr1073752851 $!@expr1073752852 $assertEquals $(@expr1073752853 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2392 $, true $, db@var887 !=@expr1073752854 nullptr $) $) { $return ; }
2393: const Token * f@var888 ; f@var888 =@expr1073752855 Token ::@expr1073752856 findsimplematch (@expr1073752857 tokenizer@var886 .@expr1073752858 tokens (@expr1073752859 ) , "foo ( b" ) ;
2394: $if $(@expr1073752860 $!@expr1073752861 $assertEquals $(@expr1073752862 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2394 $, true $, f@var888 &&@expr1073752863 f@var888 .@expr11040 function (@expr11041 ) $) $) { $return ; }
2395: const Function * func@var889 ; func@var889 =@expr1073752866 f@var888 .@expr11040 function (@expr11041 ) ;
2396: $if $(@expr1073752869 $!@expr1073752870 $assertEquals $(@expr1073752871 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2396 $, true $, func@var889 .@expr1073752872 tokenDef@var890 .@expr1073752873 linenr (@expr1073752874 ) ==@expr1073752875 4 &&@expr1073752876 func@var889 .@expr11053 argumentList@var891 .@expr1073752878 size (@expr1073752879 ) ==@expr1073752880 1 &&@expr1073752881 func@var889 .@expr11053 argumentList@var891 .@expr11059 front (@expr11060 ) .@expr11061 type (@expr11062 ) $) $) { $return ; }
2397: const Type * type@var892 ; type@var892 =@expr1073752887 func@var889 .@expr11053 argumentList@var891 .@expr11059 front (@expr11060 ) .@expr11061 type (@expr11062 ) ;
2398: $if $(@expr1073752893 $!@expr1073752894 $assertEquals $(@expr1073752895 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2398 $, true $, type@var892 .@expr1073752896 isStructType (@expr1073752897 ) $) $) { $return ; }
2399: }
2400:
2401: void functionArgs9 ( ) {
2402: $Tokenizer $tokenizer@var893 $(@expr1073752898 $&@expr1073752899 $settings1@var123 $, $this@expr1073752900 $) $; $const $SymbolDatabase $* $db@var894 $; $db@var894 $=@expr1073752901 $getSymbolDB_inner $(@expr1073752902 $tokenizer@var893 $, "struct A {\n  struct B {\n    enum C { };\n  };\n};\nvoid foo(A::B::C c) { }" $, $"test.cpp" $) $; $if $(@expr1073752903 $!@expr1073752904 $assert_ $(@expr1073752905 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2402 $, $db@var894 $) $) { $return $; } $do ${ $} $while $(@expr1073752906 $false $)
2403:
|
2406:
2407: ;
2408: $if $(@expr1073752907 $!@expr1073752908 $assertEquals $(@expr1073752909 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2408 $, true $, db@var894 !=@expr1073752910 nullptr $) $) { $return ; }
2409: const Token * f@var895 ; f@var895 =@expr1073752911 Token ::@expr1073752912 findsimplematch (@expr1073752913 tokenizer@var893 .@expr1073752914 tokens (@expr1073752915 ) , "foo (" ) ;
2410: $if $(@expr1073752916 $!@expr1073752917 $assertEquals $(@expr1073752918 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2410 $, true $, f@var895 &&@expr1073752919 f@var895 .@expr11096 function (@expr11097 ) $) $) { $return ; }
2411: const Function * func@var896 ; func@var896 =@expr1073752922 f@var895 .@expr11096 function (@expr11097 ) ;
2412: $if $(@expr1073752925 $!@expr1073752926 $assertEquals $(@expr1073752927 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2412 $, true $, func@var896 .@expr11104 argumentList@var897 .@expr1073752929 size (@expr1073752930 ) ==@expr1073752931 1 &&@expr1073752932 func@var896 .@expr11104 argumentList@var897 .@expr11110 front (@expr11111 ) .@expr11112 type (@expr11113 ) $) $) { $return ; }
2413: const Type * type@var898 ; type@var898 =@expr1073752938 func@var896 .@expr11104 argumentList@var897 .@expr11110 front (@expr11111 ) .@expr11112 type (@expr11113 ) ;
2414: $if $(@expr1073752944 $!@expr1073752945 $assertEquals $(@expr1073752946 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2414 $, true $, type@var898 .@expr1073752947 isEnumType (@expr1073752948 ) $) $) { $return ; }
2415: }
2416:
2417: void functionArgs10 ( ) {
2418: $Tokenizer $tokenizer@var899 $(@expr1073752951 $&@expr1073752952 $settings1@var123 $, $this@expr1073752953 $) $; $const $SymbolDatabase $* $db@var900 $; $db@var900 $=@expr1073752954 $getSymbolDB_inner $(@expr1073752955 $tokenizer@var899 $, "class Fred {\npublic:\n  Fred(Whitespace = PRESERVE_WHITESPACE);\n};\nFred::Fred(Whitespace whitespace) { }" $, $"test.cpp" $) $; $if $(@expr1073752956 $!@expr1073752957 $assert_ $(@expr1073752958 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2418 $, $db@var900 $) $) { $return $; } $do ${ $} $while $(@expr1073752959 $false $)
2419:
2420:
2421:
2422: ;
2423: $if $(@expr1073752960 $!@expr1073752961 $assertEquals $(@expr1073752962 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2423 $, true $, db@var900 !=@expr1073752963 nullptr $) $) { $return ; }
2424: $if $(@expr1073752964 $!@expr1073752965 $assertEquals $(@expr1073752966 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2424 $, 3 $, db@var900 .@expr11143 scopeList@var901 .@expr1073752968 size (@expr1073752969 ) $) $) { $return ; }
2425: std ::@expr1073752970 list < Scope > ::@expr1073752971 const_iterator scope@var902 ; scope@var902 =@expr1073752972 db@var900 .@expr11143 scopeList@var901 .@expr1073752974 begin (@expr1073752975 ) ;
2426: ++@expr1073752976 scope@var902 ;
2427: $if $(@expr1073752977 $!@expr1073752978 $assertEquals $(@expr1073752979 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2427 $, (@expr1073752980 unsigned int ) Scope ::@expr1073752981 eClass@expr1073752949 $, (@expr1073752982 unsigned int ) scope@var902 .@expr1073752983 type@var903 $) $) { $return ; }
2428: $if $(@expr1073752984 $!@expr1073752985 $assertEquals $(@expr1073752986 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2428 $, 1 $, scope@var902 .@expr11163 functionList@var904 .@expr1073752988 size (@expr1073752989 ) $) $) { $return ; }
2429: $if $(@expr1073752990 $!@expr1073752991 $assert_ $(@expr1073752992 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2429 $, scope@var902 .@expr11163 functionList@var904 .@expr11170 begin (@expr11171 ) .@expr11172 functionScope@expr11126 !=@expr1073752997 nullptr $) $) { $return ; }
2430: const Scope * functionScope@var905 ; functionScope@var905 =@expr1073752998 scope@var902 .@expr11163 functionList@var904 .@expr11170 begin (@expr11171 ) .@expr11172 functionScope@expr11126 ;
2431: ++@expr1073753003 scope@var902 ;
2432: $if $(@expr1073753004 $!@expr1073753005 $assert_ $(@expr1073753006 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2432 $, functionScope@var905 ==@expr1073753007 &@expr1073753008 *@expr1073753009 scope@var902 $) $) { $return ; }
2433: }
2434:
2435: void functionArgs11 ( ) {
2436: $Tokenizer $tokenizer@var906 $(@expr1073753012 $&@expr1073753013 $settings1@var123 $, $this@expr1073753014 $) $; $const $SymbolDatabase $* $db@var907 $; $db@var907 $=@expr1073753015 $getSymbolDB_inner $(@expr1073753016 $tokenizer@var906 $, "class Fred {\npublic:\n  void foo(char a[16]);\n};\nvoid Fred::foo(char b[16]) { }" $, $"test.cpp" $) $; $if $(@expr1073753017 $!@expr1073753018 $assert_ $(@expr1073753019 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2436 $, $db@var907 $) $) { $return $; } $do ${ $} $while $(@expr1073753020 $false $)
2437:
2438:
2439:
2440: ;
2441: $if $(@expr1073753021 $!@expr1073753022 $assertEquals $(@expr1073753023 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2441 $, true $, db@var907 !=@expr1073753024 nullptr $) $) { $return ; }
2442: $if $(@expr1073753025 $!@expr1073753026 $assertEquals $(@expr1073753027 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2442 $, 3 $, db@var907 .@expr11204 scopeList@var908 .@expr1073753029 size (@expr1073753030 ) $) $) { $return ; }
2443: std ::@expr1073753031 list < Scope > ::@expr1073753032 const_iterator scope@var909 ; scope@var909 =@expr1073753033 db@var907 .@expr11204 scopeList@var908 .@expr1073753035 begin (@expr1073753036 ) ;
2444: ++@expr1073753037 scope@var909 ;
2445: $if $(@expr1073753038 $!@expr1073753039 $assertEquals $(@expr1073753040 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2445 $, (@expr1073753041 unsigned int ) Scope ::@expr1073753042 eClass@expr1073753010 $, (@expr1073753043 unsigned int ) scope@var909 .@expr1073753044 type@var910 $) $) { $return ; }
2446: $if $(@expr1073753045 $!@expr1073753046 $assertEquals $(@expr1073753047 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2446 $, 1 $, scope@var909 .@expr11224 functionList@var911 .@expr1073753049 size (@expr1073753050 ) $) $) { $return ; }
2447: $if $(@expr1073753051 $!@expr1073753052 $assert_ $(@expr1073753053 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2447 $, scope@var909 .@expr11224 functionList@var911 .@expr11231 begin (@expr11232 ) .@expr11233 functionScope@expr11187 !=@expr1073753058 nullptr $) $) { $return ; }
2448: const Scope * functionScope@var912 ; functionScope@var912 =@expr1073753059 scope@var909 .@expr11224 functionList@var911 .@expr11231 begin (@expr11232 ) .@expr11233 functionScope@expr11187 ;
2449: ++@expr1073753064 scope@var909 ;
2450: $if $(@expr1073753065 $!@expr1073753066 $assert_ $(@expr1073753067 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2450 $, functionScope@var912 ==@expr1073753068 &@expr1073753069 *@expr1073753070 scope@var909 $) $) { $return ; }
2451: }
2452:
2453: void functionArgs12 ( ) {
2454: $Tokenizer $tokenizer@var913 $(@expr1073753071 $&@expr1073753072 $settings1@var123 $, $this@expr1073753073 $) $; $const $SymbolDatabase $* $db@var914 $; $db@var914 $=@expr1073753074 $getSymbolDB_inner $(@expr1073753075 $tokenizer@var913 $, "struct A {\n    enum E { };\n    int a[10];\n};\nstruct B : public A {\n    void foo(B::E e) { }\n};" $, $"test.cpp" $) $; $if $(@expr1073753076 $!@expr1073753077 $assert_ $(@expr1073753078 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2454 $, $db@var914 $) $) { $return $; } $do ${ $} $while $(@expr1073753079 $false $)
2455:
|
2459:
2460: ;
2461:
2462: $if $(@expr1073753080 $!@expr1073753081 $assertEquals $(@expr1073753082 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2462 $, true $, db@var914 !=@expr1073753083 nullptr $) $) { $return ; }
2463: const Token * f@var915 ; f@var915 =@expr1073753084 Token ::@expr1073753085 findsimplematch (@expr1073753086 tokenizer@var913 .@expr1073753087 tokens (@expr1073753088 ) , "foo (" ) ;
2464: $if $(@expr1073753089 $!@expr1073753090 $assertEquals $(@expr1073753091 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2464 $, true $, f@var915 &&@expr1073753092 f@var915 .@expr11269 function (@expr11270 ) $) $) { $return ; }
2465: const Function * func@var916 ; func@var916 =@expr1073753095 f@var915 .@expr11269 function (@expr11270 ) ;
2466: $if $(@expr1073753098 $!@expr1073753099 $assertEquals $(@expr1073753100 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2466 $, true $, func@var916 .@expr11277 argumentList@var917 .@expr1073753102 size (@expr1073753103 ) ==@expr1073753104 1 &&@expr1073753105 func@var916 .@expr11277 argumentList@var917 .@expr11283 front (@expr11284 ) .@expr11285 type (@expr11286 ) $) $) { $return ; }
2467: const Type * type@var918 ; type@var918 =@expr1073753111 func@var916 .@expr11277 argumentList@var917 .@expr11283 front (@expr11284 ) .@expr11285 type (@expr11286 ) ;
2468: $if $(@expr1073753117 $!@expr1073753118 $assertEquals $(@expr1073753119 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2468 $, true $, type@var918 .@expr1073753120 isEnumType (@expr1073753121 ) $) $) { $return ; }
2469: }
2470:
2471: void functionArgs13 ( ) {
2472: $Tokenizer $tokenizer@var919 $(@expr1073753122 $&@expr1073753123 $settings1@var123 $, $this@expr1073753124 $) $; $const $SymbolDatabase $* $db@var920 $; $db@var920 $=@expr1073753125 $getSymbolDB_inner $(@expr1073753126 $tokenizer@var919 $, "struct A {\n    enum E { };\n    struct S { };\n};\nstruct B : public A {\n    B(E e);\n    B(S s);\n};\nB::B(A::E e) { }\nB::B(A::S s) { }" $, $"test.cpp" $) $; $if $(@expr1073753127 $!@expr1073753128 $assert_ $(@expr1073753129 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2472 $, $db@var920 $) $) { $return $; } $do ${ $} $while $(@expr1073753130 $false $)
2473:
|
2480:
2481: ;
2482:
2483: $if $(@expr1073753131 $!@expr1073753132 $assertEquals $(@expr1073753133 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2483 $, true $, db@var920 !=@expr1073753134 nullptr $) $) { $return ; }
2484: const Token * f@var921 ; f@var921 =@expr1073753135 Token ::@expr11312 findsimplematch (@expr1073753137 tokenizer@var919 .@expr11314 tokens (@expr11315 ) , "B ( A :: E" ) ;
2485: $if $(@expr1073753140 $!@expr1073753141 $assertEquals $(@expr1073753142 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2485 $, true $, f@var921 &&@expr11319 f@var921 .@expr11320 function (@expr11321 ) $) $) { $return ; }
2486: const Function * func@var922 ; func@var922 =@expr1073753146 f@var921 .@expr11320 function (@expr11321 ) ;
2487: $if $(@expr1073753149 $!@expr1073753150 $assertEquals $(@expr1073753151 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2487 $, true $, func@var922 .@expr11328 argumentList@var923 .@expr1073753153 size (@expr1073753154 ) ==@expr1073753155 1 &&@expr1073753156 func@var922 .@expr11328 argumentList@var923 .@expr11334 front (@expr11335 ) .@expr11336 type (@expr11337 ) $) $) { $return ; }
2488: const Type * type@var924 ; type@var924 =@expr1073753162 func@var922 .@expr11328 argumentList@var923 .@expr11334 front (@expr11335 ) .@expr11336 type (@expr11337 ) ;
2489: $if $(@expr1073753168 $!@expr1073753169 $assertEquals $(@expr1073753170 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2489 $, true $, type@var924 .@expr1073753171 isEnumType (@expr1073753172 ) &&@expr1073753173 type@var924 .@expr1073753174 name (@expr1073753175 ) ==@expr1073753176 "E" $) $) { $return ; }
2490:
2491: f@var921 =@expr1073753177 Token ::@expr11312 findsimplematch (@expr1073753179 tokenizer@var919 .@expr11314 tokens (@expr11315 ) , "B ( A :: S" ) ;
2492: $if $(@expr1073753182 $!@expr1073753183 $assertEquals $(@expr1073753184 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2492 $, true $, f@var921 &&@expr11319 f@var921 .@expr11320 function (@expr11321 ) $) $) { $return ; }
2493: const Function * func2@var925 ; func2@var925 =@expr1073753188 f@var921 .@expr11320 function (@expr11321 ) ;
2494: $if $(@expr1073753191 $!@expr1073753192 $assertEquals $(@expr1073753193 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2494 $, true $, func2@var925 .@expr11370 argumentList@var926 .@expr1073753195 size (@expr1073753196 ) ==@expr1073753197 1 &&@expr1073753198 func2@var925 .@expr11370 argumentList@var926 .@expr11376 front (@expr11377 ) .@expr11378 type (@expr11379 ) $) $) { $return ; }
2495: const Type * type2@var927 ; type2@var927 =@expr1073753204 func2@var925 .@expr11370 argumentList@var926 .@expr11376 front (@expr11377 ) .@expr11378 type (@expr11379 ) ;
2496: $if $(@expr1073753210 $!@expr1073753211 $assertEquals $(@expr1073753212 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2496 $, true $, type2@var927 .@expr1073753213 isStructType (@expr1073753214 ) &&@expr1073753215 type2@var927 .@expr1073753216 name (@expr1073753217 ) ==@expr1073753218 "S" $) $) { $return ; }
2497: }
2498:
2499: void functionArgs14 ( ) {
2500: $Tokenizer $tokenizer@var928 $(@expr1073753219 $&@expr1073753220 $settings1@var123 $, $this@expr1073753221 $) $; $const $SymbolDatabase $* $db@var929 $; $db@var929 $=@expr1073753222 $getSymbolDB_inner $(@expr1073753223 $tokenizer@var928 $, "void f(int (&a)[10], int (&b)[10]);" $, $"test.cpp" $) $; $if $(@expr1073753224 $!@expr1073753225 $assert_ $(@expr1073753226 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2500 $, $db@var929 $) $) { $return $; } $do ${ $} $while $(@expr1073753227 $false $) ;
2501: (@expr1073753228 void ) db@var929 ;
2502: const Function * func@var930 ; func@var930 =@expr1073753229 tokenizer@var928 .@expr1073753230 tokens (@expr1073753231 ) .@expr1073753232 next (@expr1073753233 ) .@expr1073753234 function (@expr1073753235 ) ;
2503: $if $(@expr1073753236 $!@expr1073753237 $assertEquals $(@expr1073753238 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2503 $, true $, func@var930 !=@expr1073753239 nullptr $) $) { $return ; }
2504: $if $(@expr1073753240 $!@expr1073753241 $assertEquals $(@expr1073753242 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2504 $, 2 $, func@var930 ?@expr1073753243 func@var930 .@expr1073753244 argCount (@expr1073753245 ) :@expr1073753246 0 $) $) { $return ; }
2505: $if $(@expr1073753247 $!@expr1073753248 $assertEquals $(@expr1073753249 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2505 $, 0 $, func@var930 ?@expr1073753250 func@var930 .@expr1073753251 initializedArgCount (@expr1073753252 ) :@expr1073753253 1 $) $) { $return ; }
2506: $if $(@expr1073753254 $!@expr1073753255 $assertEquals $(@expr1073753256 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2506 $, 2 $, func@var930 ?@expr1073753257 func@var930 .@expr1073753258 minArgCount (@expr1073753259 ) :@expr1073753260 0 $) $) { $return ; }
2507: }
2508:
2509: void functionArgs15 ( ) {
2510: const char code@var931 [@expr1073753262 134 ] =@expr1073753263
2511: "class Class {\n    void Method(\n        char c = []()->char {\n            int d = rand();\n            return d;\n        }()\n    );\n};\n"
2512:
|
2517:
2518: ;
2519: $Tokenizer $tokenizer@var932 $(@expr1073753264 $&@expr1073753265 $settings1@var123 $, $this@expr1073753266 $) $; $const $SymbolDatabase $* $db@var933 $; $db@var933 $=@expr1073753267 $getSymbolDB_inner $(@expr1073753268 $tokenizer@var932 $, code@var931 $, $"test.cpp" $) $; $if $(@expr1073753269 $!@expr1073753270 $assert_ $(@expr1073753271 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2519 $, $db@var933 $) $) { $return $; } $do ${ $} $while $(@expr1073753272 $false $) ;
2520: $if $(@expr1073753273 $!@expr1073753274 $assert_ $(@expr1073753275 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2520 $, db@var933 $) $) { $return ; }
2521: $if $(@expr1073753276 $!@expr1073753277 $assertEquals $(@expr1073753278 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2521 $, 2 $, db@var933 .@expr11455 scopeList@var934 .@expr1073753280 size (@expr1073753281 ) $) $) { $return ; }
2522: const Scope &@expr11458 classScope@var935 =@expr1073753283 db@var933 .@expr11455 scopeList@var934 .@expr1073753285 back (@expr1073753286 ) ;
2523: $if $(@expr1073753287 $!@expr1073753288 $assertEquals $(@expr1073753289 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2523 $, Scope ::@expr1073753290 eClass@expr1073753261 $, classScope@var935 .@expr1073753291 type@var936 $) $) { $return ; }
2524: $if $(@expr1073753292 $!@expr1073753293 $assertEquals $(@expr1073753294 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2524 $, "Class" $, classScope@var935 .@expr1073753295 className@var937 $) $) { $return ; }
2525: $if $(@expr1073753296 $!@expr1073753297 $assertEquals $(@expr1073753298 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2525 $, 1 $, classScope@var935 .@expr11475 functionList@var938 .@expr1073753300 size (@expr1073753301 ) $) $) { $return ; }
2526: const Function &@expr11458 method@var939 =@expr1073753303 classScope@var935 .@expr11475 functionList@var938 .@expr1073753305 front (@expr1073753306 ) ;
2527: $if $(@expr1073753307 $!@expr1073753308 $assertEquals $(@expr1073753309 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2527 $, "Method" $, method@var939 .@expr1073753310 name (@expr1073753311 ) $) $) { $return ; }
2528: $if $(@expr1073753312 $!@expr1073753313 $assertEquals $(@expr1073753314 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2528 $, 1 $, method@var939 .@expr1073753315 argCount (@expr1073753316 ) $) $) { $return ; }
2529: $if $(@expr1073753317 $!@expr1073753318 $assertEquals $(@expr1073753319 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2529 $, 1 $, method@var939 .@expr1073753320 initializedArgCount (@expr1073753321 ) $) $) { $return ; }
2530: $if $(@expr1073753322 $!@expr1073753323 $assertEquals $(@expr1073753324 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2530 $, 0 $, method@var939 .@expr1073753325 minArgCount (@expr1073753326 ) $) $) { $return ; }
2531: }
2532:
2533: void functionArgs16 ( ) {
2534: const char code@var940 [@expr1073753327 64 ] =@expr1073753328
2535: "struct A { int var; };\nvoid foo(int x, decltype(A::var) *&p) {}"
2536: ;
2537: $Tokenizer $tokenizer@var941 $(@expr1073753329 $&@expr1073753330 $settings1@var123 $, $this@expr1073753331 $) $; $const $SymbolDatabase $* $db@var942 $; $db@var942 $=@expr1073753332 $getSymbolDB_inner $(@expr1073753333 $tokenizer@var941 $, code@var940 $, $"test.cpp" $) $; $if $(@expr1073753334 $!@expr1073753335 $assert_ $(@expr1073753336 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2537 $, $db@var942 $) $) { $return $; } $do ${ $} $while $(@expr1073753337 $false $) ;
2538: $if $(@expr1073753338 $!@expr1073753339 $assert_ $(@expr1073753340 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2538 $, db@var942 $) $) { $return ; }
2539: const Scope * scope@var943 ; scope@var943 =@expr1073753341 db@var942 .@expr1073753342 functionScopes@var944 .@expr1073753343 front (@expr1073753344 ) ;
2540: const Function * func@var945 ; func@var945 =@expr1073753345 scope@var943 .@expr1073753346 function@var946 ;
2541: $if $(@expr1073753347 $!@expr1073753348 $assertEquals $(@expr1073753349 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2541 $, 2 $, func@var945 .@expr1073753350 argCount (@expr1073753351 ) $) $) { $return ; }
2542: const Variable * arg2@var947 ; arg2@var947 =@expr1073753352 func@var945 .@expr1073753353 getArgumentVar (@expr1073753354 1 ) ;
2543: $if $(@expr1073753355 $!@expr1073753356 $assertEquals $(@expr1073753357 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2543 $, "p" $, arg2@var947 .@expr1073753358 name (@expr1073753359 ) $) $) { $return ; }
2544: $if $(@expr1073753360 $!@expr1073753361 $assert_ $(@expr1073753362 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2544 $, arg2@var947 .@expr1073753363 isPointer (@expr1073753364 ) $) $) { $return ; }
2545: $if $(@expr1073753365 $!@expr1073753366 $assert_ $(@expr1073753367 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2545 $, arg2@var947 .@expr1073753368 isReference (@expr1073753369 ) $) $) { $return ; }
2546: }
2547:
2548: void functionArgs17 ( ) {
2549: const char code@var948 [@expr1073753370 37 ] =@expr1073753371 "void f(int (*fp)(), int x, int y) {}" ;
2550: $Tokenizer $tokenizer@var949 $(@expr1073753372 $&@expr1073753373 $settings1@var123 $, $this@expr1073753374 $) $; $const $SymbolDatabase $* $db@var950 $; $db@var950 $=@expr1073753375 $getSymbolDB_inner $(@expr1073753376 $tokenizer@var949 $, code@var948 $, $"test.cpp" $) $; $if $(@expr1073753377 $!@expr1073753378 $assert_ $(@expr1073753379 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2550 $, $db@var950 $) $) { $return $; } $do ${ $} $while $(@expr1073753380 $false $) ;
2551: $if $(@expr1073753381 $!@expr1073753382 $assert_ $(@expr1073753383 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2551 $, db@var950 !=@expr1073753384 nullptr $) $) { $return ; }
2552: const Scope * scope@var951 ; scope@var951 =@expr1073753385 db@var950 .@expr1073753386 functionScopes@var952 .@expr1073753387 front (@expr1073753388 ) ;
2553: const Function * func@var953 ; func@var953 =@expr1073753389 scope@var951 .@expr1073753390 function@var954 ;
2554: $if $(@expr1073753391 $!@expr1073753392 $assertEquals $(@expr1073753393 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2554 $, 3 $, func@var953 .@expr1073753394 argCount (@expr1073753395 ) $) $) { $return ; }
2555: }
2556:
2557: void functionArgs18 ( ) {
2558: const char code@var955 [@expr1073753396 40 ] =@expr1073753397 "void f(int (*param1)[2], int param2) {}" ;
2559: $Tokenizer $tokenizer@var956 $(@expr1073753398 $&@expr1073753399 $settings1@var123 $, $this@expr1073753400 $) $; $const $SymbolDatabase $* $db@var957 $; $db@var957 $=@expr1073753401 $getSymbolDB_inner $(@expr1073753402 $tokenizer@var956 $, code@var955 $, $"test.cpp" $) $; $if $(@expr1073753403 $!@expr1073753404 $assert_ $(@expr1073753405 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2559 $, $db@var957 $) $) { $return $; } $do ${ $} $while $(@expr1073753406 $false $) ;
2560: $if $(@expr1073753407 $!@expr1073753408 $assert_ $(@expr1073753409 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2560 $, db@var957 !=@expr1073753410 nullptr $) $) { $return ; }
2561: const Scope * scope@var958 ; scope@var958 =@expr1073753411 db@var957 .@expr1073753412 functionScopes@var959 .@expr1073753413 front (@expr1073753414 ) ;
2562: const Function * func@var960 ; func@var960 =@expr1073753415 scope@var958 .@expr1073753416 function@var961 ;
2563: $if $(@expr1073753417 $!@expr1073753418 $assertEquals $(@expr1073753419 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2563 $, 2 $, func@var960 .@expr1073753420 argCount (@expr1073753421 ) $) $) { $return ; }
2564: }
2565:
2566: void functionImplicitlyVirtual ( ) {
2567: $Tokenizer $tokenizer@var962 $(@expr1073753423 $&@expr1073753424 $settings1@var123 $, $this@expr1073753425 $) $; $const $SymbolDatabase $* $db@var963 $; $db@var963 $=@expr1073753426 $getSymbolDB_inner $(@expr1073753427 $tokenizer@var962 $, "class base { virtual void f(); };\nclass derived : base { void f(); };\nvoid derived::f() {}" $, $"test.cpp" $) $; $if $(@expr1073753428 $!@expr1073753429 $assert_ $(@expr1073753430 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2567 $, $db@var963 $) $) { $return $; } $do ${ $} $while $(@expr1073753431 $false $)
2568:
2569: ;
2570: $if $(@expr1073753432 $!@expr1073753433 $assert_ $(@expr1073753434 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2570 $, db@var963 !=@expr1073753435 nullptr $) $) { $return ; }
2571: $if $(@expr1073753436 $!@expr1073753437 $assertEquals $(@expr1073753438 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2571 $, 4 $, db@var963 .@expr11615 scopeList@var964 .@expr1073753440 size (@expr1073753441 ) $) $) { $return ; }
2572: const Function * function@var965 ; function@var965 =@expr1073753442 db@var963 .@expr11615 scopeList@var964 .@expr1073753444 back (@expr1073753445 ) .@expr1073753446 function@expr1073753422 ;
2573: $if $(@expr1073753447 $!@expr1073753448 $assertEquals $(@expr1073753449 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2573 $, true $, function@var965 &&@expr1073753450 function@var965 .@expr1073753451 isImplicitlyVirtual (@expr1073753452 false ) $) $) { $return ; }
2574: }
2575:
2576: void functionIsInlineKeyword ( ) {
2577: $Tokenizer $tokenizer@var966 $(@expr1073753454 $&@expr1073753455 $settings1@var123 $, $this@expr1073753456 $) $; $const $SymbolDatabase $* $db@var967 $; $db@var967 $=@expr1073753457 $getSymbolDB_inner $(@expr1073753458 $tokenizer@var966 $, "inline void fs() {}" $, $"test.cpp" $) $; $if $(@expr1073753459 $!@expr1073753460 $assert_ $(@expr1073753461 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2577 $, $db@var967 $) $) { $return $; } $do ${ $} $while $(@expr1073753462 $false $) ;
2578: (@expr1073753463 void ) db@var967 ;
2579: const Function * func@var968 ; func@var968 =@expr1073753464 db@var967 .@expr1073753465 scopeList@var969 .@expr1073753466 back (@expr1073753467 ) .@expr1073753468 function@expr1073753453 ;
2580: $if $(@expr1073753469 $!@expr1073753470 $assert_ $(@expr1073753471 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2580 $, func@var968 $) $) { $return ; }
2581: $if $(@expr1073753472 $!@expr1073753473 $assert_ $(@expr1073753474 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2581 $, func@var968 .@expr1073753475 isInlineKeyword (@expr1073753476 ) $) $) { $return ; }
2582: }
2583:
2584: void functionStatic ( ) {
2585: $Tokenizer $tokenizer@var970 $(@expr1073753478 $&@expr1073753479 $settings1@var123 $, $this@expr1073753480 $) $; $const $SymbolDatabase $* $db@var971 $; $db@var971 $=@expr1073753481 $getSymbolDB_inner $(@expr1073753482 $tokenizer@var970 $, "static void fs() {  }" $, $"test.cpp" $) $; $if $(@expr1073753483 $!@expr1073753484 $assert_ $(@expr1073753485 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2585 $, $db@var971 $) $) { $return $; } $do ${ $} $while $(@expr1073753486 $false $) ;
2586: (@expr1073753487 void ) db@var971 ;
2587: const Function * func@var972 ; func@var972 =@expr1073753488 db@var971 .@expr1073753489 scopeList@var973 .@expr1073753490 back (@expr1073753491 ) .@expr1073753492 function@expr1073753477 ;
2588: $if $(@expr1073753493 $!@expr1073753494 $assert_ $(@expr1073753495 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2588 $, func@var972 $) $) { $return ; }
2589: $if $(@expr1073753496 $!@expr1073753497 $assert_ $(@expr1073753498 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2589 $, func@var972 .@expr1073753499 isStatic (@expr1073753500 ) $) $) { $return ; }
2590: }
2591:
2592: void functionReturnsReference ( ) {
2593: $Tokenizer $tokenizer@var974 $(@expr1073753501 $&@expr1073753502 $settings1@var123 $, $this@expr1073753503 $) $; $const $SymbolDatabase $* $db@var975 $; $db@var975 $=@expr1073753504 $getSymbolDB_inner $(@expr1073753505 $tokenizer@var974 $, "Fred::Reference foo();" $, $"test.cpp" $) $; $if $(@expr1073753506 $!@expr1073753507 $assert_ $(@expr1073753508 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2593 $, $db@var975 $) $) { $return $; } $do ${ $} $while $(@expr1073753509 $false $) ;
2594: $if $(@expr1073753510 $!@expr1073753511 $assertEquals $(@expr1073753512 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2594 $, 1 $, db@var975 .@expr11689 scopeList@var976 .@expr11690 back (@expr11691 ) .@expr11692 functionList .@expr1073753517 size (@expr1073753518 ) $) $) { $return ; }
2595: const Function &@expr1073753519 func@var977 =@expr1073753520 *@expr1073753521 db@var975 .@expr11689 scopeList@var976 .@expr11690 back (@expr11691 ) .@expr11692 functionList .@expr1073753526 begin (@expr1073753527 ) ;
2596: $if $(@expr1073753528 $!@expr1073753529 $assert_ $(@expr1073753530 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2596 $, $(@expr1073753531 !@expr1073753532 Function ::@expr11709 returnsReference (@expr1073753534 &@expr11711 func@var977 , false ) $) $) $) { $return ; }
2597: $if $(@expr1073753536 $!@expr1073753537 $assert_ $(@expr1073753538 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2597 $, $(@expr1073753539 Function ::@expr11709 returnsReference (@expr1073753541 &@expr11711 func@var977 , true ) $) $) $) { $return ; }
2598: }
2599:
2600: void namespaces1 ( ) {
2601: $Tokenizer $tokenizer@var978 $(@expr1073753543 $&@expr1073753544 $settings1@var123 $, $this@expr1073753545 $) $; $const $SymbolDatabase $* $db@var979 $; $db@var979 $=@expr1073753546 $getSymbolDB_inner $(@expr1073753547 $tokenizer@var978 $, "namespace fred {\n    namespace barney {\n        class X { X(int); };\n    }\n}\nnamespace barney { X::X(int) { } }" $, $"test.cpp" $) $; $if $(@expr1073753548 $!@expr1073753549 $assert_ $(@expr1073753550 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2601 $, $db@var979 $) $) { $return $; } $do ${ $} $while $(@expr1073753551 $false $)
2602:
|
2605:
2606: ;
2607:
2608:
2609: const Scope * scope@var980 ; scope@var980 =@expr1073753552 nullptr ;
2610: for (@expr1073753553 const Scope &@expr1073753554 it@var981 :@expr1073753555 db@var979 .@expr1073753556 scopeList@var982 ) {
2611: if (@expr1073753557 it@var981 .@expr1073753558 isClassOrStruct (@expr1073753559 ) ) {
2612: scope@var980 =@expr1073753560 &@expr1073753561 it@var981 ;
2613: break ;
2614: }
2615: }
2616:
2617: $if $(@expr1073753562 $!@expr1073753563 $assert_ $(@expr1073753564 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2617 $, scope@var980 !=@expr1073753565 nullptr $) $) { $return ; }
2618: if (@expr1073753566 !@expr1073753567 scope@var980 ) {
2619: return ; }
2620:
2621: $if $(@expr1073753568 $!@expr1073753569 $assertEquals $(@expr1073753570 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2621 $, "X" $, scope@var980 .@expr1073753571 className@var983 $) $) { $return ; }
2622:
2623:
2624: $if $(@expr1073753572 $!@expr1073753573 $assertEquals $(@expr1073753574 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2624 $, 1U $, scope@var980 .@expr11751 functionList@var984 .@expr1073753576 size (@expr1073753577 ) $) $) { $return ; }
2625: const Function * function@var985 ; function@var985 =@expr1073753578 &@expr1073753579 (@expr1073753580 scope@var980 .@expr11751 functionList@var984 .@expr1073753582 front (@expr1073753583 ) ) ;
2626: $if $(@expr1073753584 $!@expr1073753585 $assertEquals $(@expr1073753586 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2626 $, false $, function@var985 .@expr1073753587 hasBody (@expr1073753588 ) $) $) { $return ; }
2627: }
2628:
2629:
2630: void namespaces2 ( ) {
2631: $Tokenizer $tokenizer@var986 $(@expr1073753589 $&@expr1073753590 $settings1@var123 $, $this@expr1073753591 $) $; $const $SymbolDatabase $* $db@var987 $; $db@var987 $=@expr1073753592 $getSymbolDB_inner $(@expr1073753593 $tokenizer@var986 $, "namespace fred {\n    namespace barney {\n        class X { X(int); };\n    }\n}\nnamespace fred {\n    namespace barney {\n        X::X(int) { }\n    }\n}" $, $"test.cpp" $) $; $if $(@expr1073753594 $!@expr1073753595 $assert_ $(@expr1073753596 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2631 $, $db@var987 $) $) { $return $; } $do ${ $} $while $(@expr1073753597 $false $)
2632:
|
2639:
2640: ;
2641:
2642:
2643: const Scope * scope@var988 ; scope@var988 =@expr1073753598 nullptr ;
2644: for (@expr1073753599 const Scope &@expr1073753600 it@var989 :@expr1073753601 db@var987 .@expr1073753602 scopeList@var990 ) {
2645: if (@expr1073753603 it@var989 .@expr1073753604 isClassOrStruct (@expr1073753605 ) ) {
2646: scope@var988 =@expr1073753606 &@expr1073753607 it@var989 ;
2647: break ;
2648: }
2649: }
2650:
2651: $if $(@expr1073753608 $!@expr1073753609 $assert_ $(@expr1073753610 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2651 $, scope@var988 !=@expr1073753611 nullptr $) $) { $return ; }
2652: if (@expr1073753612 !@expr1073753613 scope@var988 ) {
2653: return ; }
2654:
2655: $if $(@expr1073753614 $!@expr1073753615 $assertEquals $(@expr1073753616 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2655 $, "X" $, scope@var988 .@expr1073753617 className@var991 $) $) { $return ; }
2656:
2657:
2658: $if $(@expr1073753618 $!@expr1073753619 $assertEquals $(@expr1073753620 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2658 $, 1U $, scope@var988 .@expr11797 functionList@var992 .@expr1073753622 size (@expr1073753623 ) $) $) { $return ; }
2659: const Function * function@var993 ; function@var993 =@expr1073753624 &@expr1073753625 (@expr1073753626 scope@var988 .@expr11797 functionList@var992 .@expr1073753628 front (@expr1073753629 ) ) ;
2660: $if $(@expr1073753630 $!@expr1073753631 $assertEquals $(@expr1073753632 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2660 $, "X" $, function@var993 .@expr1073753633 tokenDef@var994 .@expr1073753634 str (@expr1073753635 ) $) $) { $return ; }
2661: $if $(@expr1073753636 $!@expr1073753637 $assertEquals $(@expr1073753638 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2661 $, true $, function@var993 .@expr1073753639 hasBody (@expr1073753640 ) $) $) { $return ; }
2662: }
2663:
2664: void namespaces3 ( ) {
2665: $Tokenizer $tokenizer@var995 $(@expr1073753645 $&@expr1073753646 $settings1@var123 $, $this@expr1073753647 $) $; $const $SymbolDatabase $* $db@var996 $; $db@var996 $=@expr1073753648 $getSymbolDB_inner $(@expr1073753649 $tokenizer@var995 $, "namespace fred UNKNOWN_MACRO(default) {\n}" $, $"test.cpp" $) $; $if $(@expr1073753650 $!@expr1073753651 $assert_ $(@expr1073753652 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2665 $, $db@var996 $) $) { $return $; } $do ${ $} $while $(@expr1073753653 $false $)
2666: ;
2667: $if $(@expr1073753654 $!@expr1073753655 $assertEquals $(@expr1073753656 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2667 $, 2U $, db@var996 .@expr11833 scopeList@var997 .@expr1073753658 size (@expr1073753659 ) $) $) { $return ; }
2668: $if $(@expr1073753660 $!@expr1073753661 $assertEquals $(@expr1073753662 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2668 $, Scope ::@expr1073753663 eGlobal@expr1073753641 $, db@var996 .@expr11833 scopeList@var997 .@expr1073753665 front (@expr1073753666 ) .@expr1073753667 type@expr1073753642 $) $) { $return ; }
2669: $if $(@expr1073753668 $!@expr1073753669 $assertEquals $(@expr1073753670 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2669 $, Scope ::@expr1073753671 eNamespace@expr1073753643 $, db@var996 .@expr11833 scopeList@var997 .@expr1073753673 back (@expr1073753674 ) .@expr1073753675 type@expr1073753644 $) $) { $return ; }
2670: }
2671:
2672: void namespaces4 ( ) {
2673: $Tokenizer $tokenizer@var998 $(@expr1073753676 $&@expr1073753677 $settings1@var123 $, $this@expr1073753678 $) $; $const $SymbolDatabase $* $db@var999 $; $db@var999 $=@expr1073753679 $getSymbolDB_inner $(@expr1073753680 $tokenizer@var998 $, "struct A { int a; };\nnamespace fred { struct A {}; }\nfred::A fredA;" $, $"test.cpp" $) $; $if $(@expr1073753681 $!@expr1073753682 $assert_ $(@expr1073753683 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2673 $, $db@var999 $) $) { $return $; } $do ${ $} $while $(@expr1073753684 $false $)
2674:
2675: ;
2676: const Variable * fredA@var1000 ; fredA@var1000 =@expr1073753685 db@var999 .@expr1073753686 getVariableFromVarId (@expr1073753687 2U ) ;
2677: $if $(@expr1073753688 $!@expr1073753689 $assertEquals $(@expr1073753690 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2677 $, "fredA" $, fredA@var1000 .@expr1073753691 name (@expr1073753692 ) $) $) { $return ; }
2678: const Type * fredAType@var1001 ; fredAType@var1001 =@expr1073753693 fredA@var1000 .@expr1073753694 type (@expr1073753695 ) ;
2679: $if $(@expr1073753696 $!@expr1073753697 $assertEquals $(@expr1073753698 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2679 $, 2U $, fredAType@var1001 .@expr1073753699 classDef@var1002 .@expr1073753700 linenr (@expr1073753701 ) $) $) { $return ; }
2680: }
2681:
2682: void tryCatch1 ( ) {
2683: const char str@var1003 [@expr1073753702 149 ] =@expr1073753703 "void foo() {\n    try { }\n    catch (const Error1 & x) { }\n    catch (const X::Error2 & x) { }\n    catch (Error3 x) { }\n    catch (X::Error4 x) { }\n}"
2684:
|
2688:
2689: ;
2690: $Tokenizer $tokenizer@var1004 $(@expr1073753704 $&@expr1073753705 $settings1@var123 $, $this@expr1073753706 $) $; $const $SymbolDatabase $* $db@var1005 $; $db@var1005 $=@expr1073753707 $getSymbolDB_inner $(@expr1073753708 $tokenizer@var1004 $, str@var1003 $, $"test.cpp" $) $; $if $(@expr1073753709 $!@expr1073753710 $assert_ $(@expr1073753711 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2690 $, $db@var1005 $) $) { $return $; } $do ${ $} $while $(@expr1073753712 $false $) ;
2691: $if $(@expr1073753713 $!@expr1073753714 $assertEquals $(@expr1073753715 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2691 $, "" $, errout@var100 .@expr1073753716 str (@expr1073753717 ) $) $) { $return ; }
2692: $if $(@expr1073753718 $!@expr1073753719 $assert_ $(@expr1073753720 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2692 $, db@var1005 &&@expr1073753721 db@var1005 .@expr1073753722 variableList (@expr1073753723 ) .@expr1073753724 size (@expr1073753725 ) ==@expr1073753726 5 $) $) { $return ; }
2693: $if $(@expr1073753727 $!@expr1073753728 $assert_ $(@expr1073753729 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2693 $, db@var1005 &&@expr1073753730 db@var1005 .@expr1073753731 scopeList@var1006 .@expr1073753732 size (@expr1073753733 ) ==@expr1073753734 7 $) $) { $return ; }
2694: }
2695:
2696:
2697: void symboldatabase1 ( ) {
2698: $check_ $(@expr1073753735 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2698 $, "namespace foo {\n    class bar;\n};" $)
2699:
2700: ;
2701: $if $(@expr1073753736 $!@expr1073753737 $assertEquals $(@expr1073753738 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2701 $, "" $, errout@var100 .@expr11915 str (@expr11916 ) $) $) { $return ; }
2702:
2703: $check_ $(@expr1073753741 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2703 $, "class foo : public bar < int, int> {\n};" $)
2704: ;
2705: $if $(@expr1073753742 $!@expr1073753743 $assertEquals $(@expr1073753744 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2705 $, "" $, errout@var100 .@expr11915 str (@expr11916 ) $) $) { $return ; }
2706: }
2707:
2708: void symboldatabase2 ( ) {
2709: $check_ $(@expr1073753747 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2709 $, "class foo {\npublic slots :\nfoo() { }\n};" $)
2710:
2711:
2712: ;
2713: $if $(@expr1073753748 $!@expr1073753749 $assertEquals $(@expr1073753750 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2713 $, "" $, errout@var100 .@expr11927 str (@expr11928 ) $) $) { $return ; }
2714:
2715: $check_ $(@expr1073753753 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2715 $, "class foo {\nclass bar;\nfoo() { }\n};" $)
2716:
2717:
2718: ;
2719: $if $(@expr1073753754 $!@expr1073753755 $assertEquals $(@expr1073753756 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2719 $, "" $, errout@var100 .@expr11927 str (@expr11928 ) $) $) { $return ; }
2720: }
2721:
2722: void symboldatabase3 ( ) {
2723: $check_ $(@expr1073753759 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2723 $, "typedef void (func_type)();\nstruct A {\n    friend func_type f : 2;\n};" $)
2724:
2725:
2726: ;
2727: $if $(@expr1073753760 $!@expr1073753761 $assertEquals $(@expr1073753762 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2727 $, "" $, errout@var100 .@expr1073753763 str (@expr1073753764 ) $) $) { $return ; }
2728: }
2729:
2730: void symboldatabase4 ( ) {
2731: $check_ $(@expr1073753765 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2731 $, "static void function_declaration_before(void) __attribute__((__used__));\nstatic void function_declaration_before(void) {}\nstatic void function_declaration_after(void) {}\nstatic void function_declaration_after(void) __attribute__((__used__));" $)
2732:
2733:
2734: ;
2735: $if $(@expr1073753766 $!@expr1073753767 $assertEquals $(@expr1073753768 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2735 $, "" $, errout@var100 .@expr11945 str (@expr11946 ) $) $) { $return ; }
2736:
2737: $check_ $(@expr1073753771 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2737 $, "main(int argc, char *argv[]) { }" , true , "test.c" $) ;
2738: $if $(@expr1073753772 $!@expr1073753773 $assertEquals $(@expr1073753774 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2738 $, "[test.c:1]: (debug) SymbolDatabase::isFunction found C function 'main' without a return type.\n" $, errout@var100 .@expr11945 str (@expr11946 ) $) $) { $return ; }
2739:
2740: $check_ $(@expr1073753777 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2740 $, "namespace boost {\n    std::locale generate_locale()\n    {\n        return std::locale();\n    }\n}" $)
2741:
|
2744:
2745: ;
2746: $if $(@expr1073753778 $!@expr1073753779 $assertEquals $(@expr1073753780 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2746 $, "" $, errout@var100 .@expr11945 str (@expr11946 ) $) $) { $return ; }
2747:
2748: $check_ $(@expr1073753783 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2748 $, "namespace X {\n    static void function_declaration_before(void) __attribute__((__used__));\n    static void function_declaration_before(void) {}\n    static void function_declaration_after(void) {}\n    static void function_declaration_after(void) __attribute__((__used__));\n}" $)
2749:
|
2752:
2753: ;
2754: $if $(@expr1073753784 $!@expr1073753785 $assertEquals $(@expr1073753786 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2754 $, "" $, errout@var100 .@expr11945 str (@expr11946 ) $) $) { $return ; }
2755:
2756: $check_ $(@expr1073753789 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2756 $, "testing::testing()\n{\n}" $)
2757:
2758: ;
2759: $if $(@expr1073753790 $!@expr1073753791 $assertEquals $(@expr1073753792 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2759 $, "[test.cpp:1]: (debug) Executable scope 'testing' with unknown function.\n" $, errout@var100 .@expr11945 str (@expr11946 ) $) $) { $return ; }
2760: }
2761:
2762: void symboldatabase5 ( ) {
2763:
2764: $do ${ $try ${ $check_ $(@expr1073753795 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2764 $, "int CL_INLINE_DECL(integer_decode_float) (int x) {\n    return (sign ? cl_I() : 0);\n}" $) $; $assertThrowFail $(@expr1073753796 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2764 $) $; $} $catch $(@expr1073753797 $const InternalError $&@expr1073753798 $) ${ $} $catch $(@expr1073753799 $... $) ${ $assertThrowFail $(@expr1073753800 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2764 $) $; $} $} $while $(@expr1073753801 $false $)
2765:
2766: ;
2767: }
2768:
2769: void symboldatabase6 ( ) {
2770:
2771: $check_ $(@expr1073753802 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2771 $, "template<int i> class X { };\nX< 1>2 > x1;\nX<(1>2)> x2;\ntemplate<class T> class Y { };\nY<X<1>> x3;\nY<X<6>>1>> x4;\nY<X<(6>>1)>> x5;\n" , false $)
2772:
|
2776:
2777: ;
2778: $if $(@expr1073753803 $!@expr1073753804 $assertEquals $(@expr1073753805 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2778 $, "" $, errout@var100 .@expr1073753806 str (@expr1073753807 ) $) $) { $return ; }
2779: }
2780:
2781: void symboldatabase7 ( ) {
2782:
2783: $check_ $(@expr1073753808 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2783 $, "template<template<class> class E,class D> class C : E<D>\n{\npublic:\n    int f();\n};\nclass E : C<D,int>\n{\npublic:\n    int f() { return C< ::D,int>::f(); }\n};" $)
2784:
|
2791:
2792: ;
2793: $if $(@expr1073753809 $!@expr1073753810 $assertEquals $(@expr1073753811 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2793 $, "" $, errout@var100 .@expr1073753812 str (@expr1073753813 ) $) $) { $return ; }
2794: }
2795:
2796: void symboldatabase8 ( ) {
2797:
2798: $check_ $(@expr1073753814 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2798 $, "struct PaletteColorSpaceHolder: public rtl::StaticWithInit<uno::Reference<rendering::XColorSpace>,\n                                                           PaletteColorSpaceHolder>\n{\n    uno::Reference<rendering::XColorSpace> operator()()\n    {\n        return vcl::unotools::createStandardColorSpace();\n    }\n};" $)
2799:
|
2804:
2805: ;
2806:
2807: $if $(@expr1073753815 $!@expr1073753816 $assertEquals $(@expr1073753817 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2807 $, "" $, errout@var100 .@expr1073753818 str (@expr1073753819 ) $) $) { $return ; }
2808: }
2809:
2810: void symboldatabase9 ( ) {
2811:
2812: $check_ $(@expr1073753820 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2812 $, "class CHyperlink : public CString\n{\npublic:\n    const CHyperlink& operator=(LPCTSTR lpsz) {\n        CString::operator=(lpsz);\n        return *this;\n    }\n};\n" , false $)
2813:
|
2818:
2819: ;
2820:
2821: $if $(@expr1073753821 $!@expr1073753822 $assertEquals $(@expr1073753823 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2821 $, "" $, errout@var100 .@expr1073753824 str (@expr1073753825 ) $) $) { $return ; }
2822: }
2823:
2824: void symboldatabase10 ( ) {
2825:
2826: $check_ $(@expr1073753826 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2826 $, "class A {\nprivate:\n  void f();\n};\nclass B {\n  friend void A::f();\n};" $)
2827:
|
2831:
2832: ;
2833:
2834: $if $(@expr1073753827 $!@expr1073753828 $assertEquals $(@expr1073753829 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2834 $, "" $, errout@var100 .@expr1073753830 str (@expr1073753831 ) $) $) { $return ; }
2835: }
2836:
2837: void symboldatabase11 ( ) {
2838:
2839: $check_ $(@expr1073753832 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2839 $, "int g ();\nstruct S {\n  int i : (false ? g () : 1);\n};" $)
2840:
2841:
2842: ;
2843:
2844: $if $(@expr1073753833 $!@expr1073753834 $assertEquals $(@expr1073753835 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2844 $, "" $, errout@var100 .@expr1073753836 str (@expr1073753837 ) $) $) { $return ; }
2845: }
2846:
2847: void symboldatabase12 ( ) {
2848:
2849: $check_ $(@expr1073753838 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2849 $, "class foo {\n    void bar2 () = __null;\n};" $)
2850:
2851: ;
2852:
2853: $if $(@expr1073753839 $!@expr1073753840 $assertEquals $(@expr1073753841 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2853 $, "" $, errout@var100 .@expr1073753842 str (@expr1073753843 ) $) $) { $return ; }
2854: }
2855:
2856: void symboldatabase13 ( ) {
2857:
2858: $check_ $(@expr1073753844 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2858 $, "class foo {\n    void bar2 () = A::f;\n};" $)
2859:
2860: ;
2861:
2862: $if $(@expr1073753845 $!@expr1073753846 $assertEquals $(@expr1073753847 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2862 $, "" $, errout@var100 .@expr1073753848 str (@expr1073753849 ) $) $) { $return ; }
2863: }
2864:
2865: void symboldatabase14 ( ) {
2866:
2867: $do ${ $try ${ $check_ $(@expr1073753850 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2867 $, "struct B : A\n" $) $; $assertThrowFail $(@expr1073753851 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2867 $) $; $} $catch $(@expr1073753852 $const InternalError $&@expr1073753853 $) ${ $} $catch $(@expr1073753854 $... $) ${ $assertThrowFail $(@expr1073753855 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2867 $) $; $} $} $while $(@expr1073753856 $false $) ;
2868: }
2869:
2870: void symboldatabase17 ( ) {
2871:
2872: $check_ $(@expr1073753857 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2872 $, "{return f(){}}" $) ;
2873:
2874: $if $(@expr1073753858 $!@expr1073753859 $assertEquals $(@expr1073753860 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2874 $, "" $, errout@var100 .@expr1073753861 str (@expr1073753862 ) $) $) { $return ; }
2875: }
2876:
2877: void symboldatabase19 ( ) {
2878:
2879: $check_ $(@expr1073753863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2879 $, "::y(){x}" $) ;
2880:
2881: $assertEqualsWithoutLineNumbers $(@expr1073753864 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2881 $, "[test.cpp:1]: (debug) Executable scope 'y' with unknown function.\n[test.cpp:1]: (debug) valueflow.cpp:1321:valueFlowConditionExpressions bailout: Skipping function due to incomplete variable x\n" $, errout@var100 .@expr1073753865 str (@expr1073753866 ) $)
2882: ;
2883: }
2884:
2885: void symboldatabase20 ( ) {
2886:
2887: $do ${ $try ${ $check_ $(@expr1073753867 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2887 $, "struct x : virtual y\n" $) $; $assertThrowFail $(@expr1073753868 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2887 $) $; $} $catch $(@expr1073753869 $const InternalError $&@expr1073753870 $) ${ $} $catch $(@expr1073753871 $... $) ${ $assertThrowFail $(@expr1073753872 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2887 $) $; $} $} $while $(@expr1073753873 $false $) ;
2888: }
2889:
2890: void symboldatabase21 ( ) {
2891: $check_ $(@expr1073753874 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2891 $, "class Fred {\n    class Foo { };\n    void func() const;\n};\nFred::func() const {\n    Foo foo;\n}" $)
2892:
|
2896:
2897: ;
2898:
2899: $if $(@expr1073753875 $!@expr1073753876 $assertEquals $(@expr1073753877 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2899 $, "" $, errout@var100 .@expr1073753878 str (@expr1073753879 ) $) $) { $return ; }
2900: }
2901:
2902:
2903: void symboldatabase22 ( ) {
2904: $check_ $(@expr1073753880 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2904 $, "template <class C> struct A {};\nA<int> a;" $)
2905: ;
2906: $if $(@expr1073753881 $!@expr1073753882 $assertEquals $(@expr1073753883 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2906 $, "" $, errout@var100 .@expr1073753884 str (@expr1073753885 ) $) $) { $return ; }
2907: }
2908:
2909:
2910: void symboldatabase23 ( ) {
2911: $Tokenizer $tokenizer@var1007 $(@expr1073753886 $&@expr1073753887 $settings1@var123 $, $this@expr1073753888 $) $; $const $SymbolDatabase $* $db@var1008 $; $db@var1008 $=@expr1073753889 $getSymbolDB_inner $(@expr1073753890 $tokenizer@var1007 $, "class A { std::vector<int*> ints; };" $, $"test.cpp" $) $; $if $(@expr1073753891 $!@expr1073753892 $assert_ $(@expr1073753893 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2911 $, $db@var1008 $) $) { $return $; } $do ${ $} $while $(@expr1073753894 $false $) ;
2912: $if $(@expr1073753895 $!@expr1073753896 $assertEquals $(@expr1073753897 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2912 $, 2U $, db@var1008 .@expr12074 scopeList@var1009 .@expr1073753899 size (@expr1073753900 ) $) $) { $return ; }
2913: const Scope &@expr12077 scope@var1010 =@expr1073753902 db@var1008 .@expr12074 scopeList@var1009 .@expr1073753904 back (@expr1073753905 ) ;
2914: $if $(@expr1073753906 $!@expr1073753907 $assertEquals $(@expr1073753908 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2914 $, 1U $, scope@var1010 .@expr12085 varlist@var1011 .@expr1073753910 size (@expr1073753911 ) $) $) { $return ; }
2915: const Variable &@expr12077 var@var1012 =@expr1073753913 scope@var1010 .@expr12085 varlist@var1011 .@expr1073753915 front (@expr1073753916 ) ;
2916: $if $(@expr1073753917 $!@expr1073753918 $assertEquals $(@expr1073753919 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2916 $, std ::@expr1073753920 string (@expr1073753921 "ints" ) $, var@var1012 .@expr1073753922 name (@expr1073753923 ) $) $) { $return ; }
2917: $if $(@expr1073753924 $!@expr1073753925 $assertEquals $(@expr1073753926 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2917 $, true $, var@var1012 .@expr1073753927 isClass (@expr1073753928 ) $) $) { $return ; }
2918: }
2919:
2920:
2921: void symboldatabase24 ( ) {
2922: $Tokenizer $tokenizer@var1013 $(@expr1073753931 $&@expr1073753932 $settings1@var123 $, $this@expr1073753933 $) $; $const $SymbolDatabase $* $db@var1014 $; $db@var1014 $=@expr1073753934 $getSymbolDB_inner $(@expr1073753935 $tokenizer@var1013 $, "struct Fred {\n    ~Fred();\n    Fred();\n};\nFred::Fred() { }\nFred::~Fred() { }" $, $"test.cpp" $) $; $if $(@expr1073753936 $!@expr1073753937 $assert_ $(@expr1073753938 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2922 $, $db@var1014 $) $) { $return $; } $do ${ $} $while $(@expr1073753939 $false $)
2923:
|
2926:
2927: ;
2928:
2929: $if $(@expr1073753940 $!@expr1073753941 $assertEquals $(@expr1073753942 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2929 $, 4U $, db@var1014 .@expr12119 scopeList@var1015 .@expr1073753944 size (@expr1073753945 ) $) $) { $return ; }
2930:
2931:
2932: const Scope * fredScope@var1016 ; fredScope@var1016 =@expr1073753946 nullptr ;
2933: for (@expr1073753947 const Scope &@expr12124 scope@var1017 :@expr1073753949 db@var1014 .@expr12119 scopeList@var1015 ) {
2934: if (@expr1073753951 scope@var1017 .@expr1073753952 isClassOrStruct (@expr1073753953 ) &&@expr1073753954 scope@var1017 .@expr1073753955 className@var1018 ==@expr1073753956 "Fred" ) {
2935: fredScope@var1016 =@expr1073753957 &@expr1073753958 scope@var1017 ; }
2936: }
2937: $if $(@expr1073753959 $!@expr1073753960 $assert_ $(@expr1073753961 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2937 $, fredScope@var1016 !=@expr1073753962 nullptr $) $) { $return ; }
2938:
2939:
2940: $if $(@expr1073753963 $!@expr1073753964 $assertEquals $(@expr1073753965 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2940 $, 2U $, fredScope@var1016 .@expr12142 functionList@var1019 .@expr1073753967 size (@expr1073753968 ) $) $) { $return ; }
2941:
2942:
2943: unsigned int constructor@var1020 ; constructor@var1020 =@expr1073753969 0 ;
2944: unsigned int destructor@var1021 ; destructor@var1021 =@expr1073753970 0 ;
2945: for (@expr1073753971 const Function &@expr12124 it@var1022 :@expr1073753973 fredScope@var1016 .@expr12142 functionList@var1019 ) {
2946: if (@expr1073753975 it@var1022 .@expr12152 type@var1023 ==@expr1073753977 Function ::@expr1073753978 eConstructor@expr1073753929 ) {
2947: constructor@var1020 =@expr1073753979 it@var1022 .@expr12156 token@var1024 .@expr12157 linenr (@expr12158 ) ; }
2948: if (@expr1073753983 it@var1022 .@expr12152 type@var1023 ==@expr1073753985 Function ::@expr1073753986 eDestructor@expr1073753930 ) {
2949: destructor@var1021 =@expr1073753987 it@var1022 .@expr12156 token@var1024 .@expr12157 linenr (@expr12158 ) ; }
2950: }
2951:
2952:
2953: $if $(@expr1073753991 $!@expr1073753992 $assertEquals $(@expr1073753993 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2953 $, 5U $, constructor@var1020 $) $) { $return ; }
2954:
2955:
2956: $if $(@expr1073753994 $!@expr1073753995 $assertEquals $(@expr1073753996 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2956 $, 6U $, destructor@var1021 $) $) { $return ; }
2957:
2958: }
2959:
2960:
2961: void symboldatabase25 ( ) {
2962: const char str@var1025 [@expr1073753997 43 ] =@expr1073753998 "int main() {\n    foo bar;\n    throw bar;\n}"
2963:
2964:
2965: ;
2966: $Tokenizer $tokenizer@var1026 $(@expr1073753999 $&@expr1073754000 $settings1@var123 $, $this@expr1073754001 $) $; $const $SymbolDatabase $* $db@var1027 $; $db@var1027 $=@expr1073754002 $getSymbolDB_inner $(@expr1073754003 $tokenizer@var1026 $, str@var1025 $, $"test.cpp" $) $; $if $(@expr1073754004 $!@expr1073754005 $assert_ $(@expr1073754006 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2966 $, $db@var1027 $) $) { $return $; } $do ${ $} $while $(@expr1073754007 $false $) ;
2967: $if $(@expr1073754008 $!@expr1073754009 $assertEquals $(@expr1073754010 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2967 $, "" $, errout@var100 .@expr1073754011 str (@expr1073754012 ) $) $) { $return ; }
2968: $if $(@expr1073754013 $!@expr1073754014 $assert_ $(@expr1073754015 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2968 $, db@var1027 &&@expr1073754016 db@var1027 .@expr1073754017 variableList (@expr1073754018 ) .@expr1073754019 size (@expr1073754020 ) ==@expr1073754021 2 $) $) { $return ; }
2969: }
2970:
2971:
2972: void symboldatabase26 ( ) {
2973: const char str@var1028 [@expr1073754022 30 ] =@expr1073754023 "int main() {\n    throw bar;\n}"
2974:
2975: ;
2976: $Tokenizer $tokenizer@var1029 $(@expr1073754024 $&@expr1073754025 $settings1@var123 $, $this@expr1073754026 $) $; $const $SymbolDatabase $* $db@var1030 $; $db@var1030 $=@expr1073754027 $getSymbolDB_inner $(@expr1073754028 $tokenizer@var1029 $, str@var1028 $, $"test.c" $) $; $do ${ $} $while $(@expr1073754029 $false $) ;
2977: $if $(@expr1073754030 $!@expr1073754031 $assertEquals $(@expr1073754032 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2977 $, "" $, errout@var100 .@expr1073754033 str (@expr1073754034 ) $) $) { $return ; }
2978: $if $(@expr1073754035 $!@expr1073754036 $assert_ $(@expr1073754037 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2978 $, db@var1030 &&@expr1073754038 db@var1030 .@expr1073754039 variableList (@expr1073754040 ) .@expr1073754041 size (@expr1073754042 ) ==@expr1073754043 2 $) $) { $return ; }
2979: }
2980:
2981:
2982: void symboldatabase27 ( ) {
2983: $check_ $(@expr1073754044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2983 $, "class C : public B1\n{\n    B1()\n    {} C(int) : B1() class\n};" $)
2984:
2985:
2986:
2987: ;
2988: $if $(@expr1073754045 $!@expr1073754046 $assertEquals $(@expr1073754047 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2988 $, "" $, errout@var100 .@expr1073754048 str (@expr1073754049 ) $) $) { $return ; }
2989: }
2990:
2991: void symboldatabase28 ( ) {
2992: $Tokenizer $tokenizer@var1031 $(@expr1073754051 $&@expr1073754052 $settings1@var123 $, $this@expr1073754053 $) $; $const $SymbolDatabase $* $db@var1032 $; $db@var1032 $=@expr1073754054 $getSymbolDB_inner $(@expr1073754055 $tokenizer@var1031 $, "struct S {};\nvoid foo(struct S s) {}" $, $"test.cpp" $) $; $if $(@expr1073754056 $!@expr1073754057 $assert_ $(@expr1073754058 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2992 $, $db@var1032 $) $) { $return $; } $do ${ $} $while $(@expr1073754059 $false $)
2993: ;
2994: $if $(@expr1073754060 $!@expr1073754061 $assert_ $(@expr1073754062 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2994 $, db@var1032 &&@expr1073754063 db@var1032 .@expr12240 getVariableFromVarId (@expr12241 1 ) &&@expr1073754066 db@var1032 .@expr12240 getVariableFromVarId (@expr12241 1 ) .@expr12245 typeScope (@expr12246 ) &&@expr1073754071 db@var1032 .@expr12240 getVariableFromVarId (@expr12241 1 ) .@expr12245 typeScope (@expr12246 ) .@expr1073754076 className@expr1073754050 ==@expr1073754077 "S" $) $) { $return ; }
2995: }
2996:
2997:
2998: void symboldatabase29 ( ) {
2999: $check_ $(@expr1073754078 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 2999 $, "struct B : A {\n    B() : A {}\n};" $)
3000:
3001: ;
3002: $if $(@expr1073754079 $!@expr1073754080 $assertEquals $(@expr1073754081 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3002 $, "" $, errout@var100 .@expr1073754082 str (@expr1073754083 ) $) $) { $return ; }
3003: }
3004:
3005: void symboldatabase30 ( ) {
3006: $Tokenizer $tokenizer@var1033 $(@expr1073754085 $&@expr1073754086 $settings1@var123 $, $this@expr1073754087 $) $; $const $SymbolDatabase $* $db@var1034 $; $db@var1034 $=@expr1073754088 $getSymbolDB_inner $(@expr1073754089 $tokenizer@var1033 $, "struct A { void foo(const int a); };\nvoid A::foo(int a) { }" $, $"test.cpp" $) $; $if $(@expr1073754090 $!@expr1073754091 $assert_ $(@expr1073754092 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3006 $, $db@var1034 $) $) { $return $; } $do ${ $} $while $(@expr1073754093 $false $)
3007: ;
3008: $if $(@expr1073754094 $!@expr1073754095 $assert_ $(@expr1073754096 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3008 $, db@var1034 &&@expr1073754097 db@var1034 .@expr12274 functionScopes@var1035 .@expr1073754099 size (@expr1073754100 ) ==@expr1073754101 1 &&@expr1073754102 db@var1034 .@expr12274 functionScopes@var1035 [@expr1073754104 0 ] .@expr1073754105 functionOf@expr1073754084 $) $) { $return ; }
3009: }
3010:
3011: void symboldatabase31 ( ) {
3012: $Tokenizer $tokenizer@var1036 $(@expr1073754106 $&@expr1073754107 $settings1@var123 $, $this@expr1073754108 $) $; $const $SymbolDatabase $* $db@var1037 $; $db@var1037 $=@expr1073754109 $getSymbolDB_inner $(@expr1073754110 $tokenizer@var1036 $, "class Foo;\nclass Bar;\nclass Sub;\nclass Foo { class Sub; };\nclass Bar { class Sub; };\nclass Bar::Sub {\n    int b;\npublic:\n    Sub() { }\n    Sub(int);\n};\nBar::Sub::Sub(int) { };\nclass ::Foo::Sub {\n    int f;\npublic:\n    ~Sub();\n    Sub();\n};\n::Foo::Sub::~Sub() { }\n::Foo::Sub::Sub() { }\nclass Foo;\nclass Bar;\nclass Sub;" $, $"test.cpp" $) $; $if $(@expr1073754111 $!@expr1073754112 $assert_ $(@expr1073754113 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3012 $, $db@var1037 $) $) { $return $; } $do ${ $} $while $(@expr1073754114 $false $)
3013:
|
3033:
3034: ;
3035: $if $(@expr1073754115 $!@expr1073754116 $assert_ $(@expr1073754117 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3035 $, db@var1037 &&@expr1073754118 db@var1037 .@expr12295 typeList@var1038 .@expr1073754120 size (@expr1073754121 ) ==@expr1073754122 5 $) $) { $return ; }
3036:
3037: std ::@expr1073754123 list < Type > ::@expr1073754124 const_iterator i@var1039 ; i@var1039 =@expr1073754125 db@var1037 .@expr12295 typeList@var1038 .@expr1073754127 begin (@expr1073754128 ) ;
3038: const Type * Foo@var1040 ; Foo@var1040 =@expr1073754129 &@expr1073754130 (@expr1073754131 *@expr1073754132 i@var1039 ++@expr1073754133 ) ;
3039: const Type * Bar@var1041 ; Bar@var1041 =@expr1073754134 &@expr1073754135 (@expr1073754136 *@expr1073754137 i@var1039 ++@expr1073754138 ) ;
3040: const Type * Sub@var1042 ; Sub@var1042 =@expr1073754139 &@expr1073754140 (@expr1073754141 *@expr1073754142 i@var1039 ++@expr1073754143 ) ;
3041: const Type * Foo_Sub@var1043 ; Foo_Sub@var1043 =@expr1073754144 &@expr1073754145 (@expr1073754146 *@expr1073754147 i@var1039 ++@expr1073754148 ) ;
3042: const Type * Bar_Sub@var1044 ; Bar_Sub@var1044 =@expr1073754149 &@expr1073754150 (@expr1073754151 *@expr1073754152 i@var1039 ) ;
3043: $if $(@expr1073754153 $!@expr1073754154 $assert_ $(@expr1073754155 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3043 $, Foo@var1040 &&@expr1073754156 Foo@var1040 .@expr1073754157 classDef@var1045 &&@expr1073754158 Foo@var1040 .@expr12335 classScope@var1046 &&@expr1073754160 Foo@var1040 .@expr1073754161 enclosingScope@var1047 &&@expr1073754162 Foo@var1040 .@expr1073754163 name (@expr1073754164 ) ==@expr1073754165 "Foo" $) $) { $return ; }
3044: $if $(@expr1073754166 $!@expr1073754167 $assert_ $(@expr1073754168 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3044 $, Bar@var1041 &&@expr1073754169 Bar@var1041 .@expr1073754170 classDef@var1048 &&@expr1073754171 Bar@var1041 .@expr12348 classScope@var1049 &&@expr1073754173 Bar@var1041 .@expr1073754174 enclosingScope@var1050 &&@expr1073754175 Bar@var1041 .@expr1073754176 name (@expr1073754177 ) ==@expr1073754178 "Bar" $) $) { $return ; }
3045: $if $(@expr1073754179 $!@expr1073754180 $assert_ $(@expr1073754181 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3045 $, Sub@var1042 &&@expr1073754182 Sub@var1042 .@expr1073754183 classDef@var1051 &&@expr1073754184 !@expr1073754185 Sub@var1042 .@expr1073754186 classScope@var1052 &&@expr1073754187 Sub@var1042 .@expr1073754188 enclosingScope@var1053 &&@expr1073754189 Sub@var1042 .@expr1073754190 name (@expr1073754191 ) ==@expr1073754192 "Sub" $) $) { $return ; }
3046: $if $(@expr1073754193 $!@expr1073754194 $assert_ $(@expr1073754195 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3046 $, Foo_Sub@var1043 &&@expr1073754196 Foo_Sub@var1043 .@expr1073754197 classDef@var1054 &&@expr1073754198 Foo_Sub@var1043 .@expr12375 classScope@var1055 &&@expr1073754200 Foo_Sub@var1043 .@expr1073754201 enclosingScope@var1056 ==@expr1073754202 Foo@var1040 .@expr12335 classScope@var1046 &&@expr1073754204 Foo_Sub@var1043 .@expr1073754205 name (@expr1073754206 ) ==@expr1073754207 "Sub" $) $) { $return ; }
3047: $if $(@expr1073754208 $!@expr1073754209 $assert_ $(@expr1073754210 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3047 $, Bar_Sub@var1044 &&@expr1073754211 Bar_Sub@var1044 .@expr1073754212 classDef@var1057 &&@expr1073754213 Bar_Sub@var1044 .@expr12390 classScope@var1058 &&@expr1073754215 Bar_Sub@var1044 .@expr1073754216 enclosingScope@var1059 ==@expr1073754217 Bar@var1041 .@expr12348 classScope@var1049 &&@expr1073754219 Bar_Sub@var1044 .@expr1073754220 name (@expr1073754221 ) ==@expr1073754222 "Sub" $) $) { $return ; }
3048: $if $(@expr1073754223 $!@expr1073754224 $assert_ $(@expr1073754225 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3048 $, Foo_Sub@var1043 &&@expr1073754226 Foo_Sub@var1043 .@expr12375 classScope@var1055 &&@expr1073754228 Foo_Sub@var1043 .@expr12375 classScope@var1055 .@expr1073754230 numConstructors@var1060 ==@expr1073754231 1 &&@expr1073754232 Foo_Sub@var1043 .@expr12375 classScope@var1055 .@expr1073754234 className@var1061 ==@expr1073754235 "Sub" $) $) { $return ; }
3049: $if $(@expr1073754236 $!@expr1073754237 $assert_ $(@expr1073754238 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3049 $, Bar_Sub@var1044 &&@expr1073754239 Bar_Sub@var1044 .@expr12390 classScope@var1058 &&@expr1073754241 Bar_Sub@var1044 .@expr12390 classScope@var1058 .@expr1073754243 numConstructors@var1062 ==@expr1073754244 2 &&@expr1073754245 Bar_Sub@var1044 .@expr12390 classScope@var1058 .@expr1073754247 className@var1063 ==@expr1073754248 "Sub" $) $) { $return ; }
3050: }
3051:
3052: void symboldatabase32 ( ) {
3053: $Tokenizer $tokenizer@var1064 $(@expr1073754249 $&@expr1073754250 $settings1@var123 $, $this@expr1073754251 $) $; $const $SymbolDatabase $* $db@var1065 $; $db@var1065 $=@expr1073754252 $getSymbolDB_inner $(@expr1073754253 $tokenizer@var1064 $, "struct Base {\n    void foo() {}\n};\nclass Deri : Base {\n};" $, $"test.cpp" $) $; $if $(@expr1073754254 $!@expr1073754255 $assert_ $(@expr1073754256 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3053 $, $db@var1065 $) $) { $return $; } $do ${ $} $while $(@expr1073754257 $false $)
3054:
3055:
3056:
3057: ;
3058: $if $(@expr1073754258 $!@expr1073754259 $assert_ $(@expr1073754260 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3058 $, db@var1065 &&@expr1073754261 db@var1065 .@expr12438 findScopeByName (@expr12439 "Deri" ) &&@expr1073754264 db@var1065 .@expr12438 findScopeByName (@expr12439 "Deri" ) .@expr1073754267 definedType .@expr1073754268 getFunction (@expr1073754269 "foo" ) $) $) { $return ; }
3059: }
3060:
3061: void symboldatabase33 ( ) {
3062: $Tokenizer $tokenizer@var1066 $(@expr1073754270 $&@expr1073754271 $settings1@var123 $, $this@expr1073754272 $) $; $const $SymbolDatabase $* $db@var1067 $; $db@var1067 $=@expr1073754273 $getSymbolDB_inner $(@expr1073754274 $tokenizer@var1066 $, "static struct A::B s;\nstatic struct A::B t = { 0 };\nstatic struct A::B u(0);\nstatic struct A::B v{0};\nstatic struct A::B w({0});\nvoid foo() { }" $, $"test.cpp" $) $; $if $(@expr1073754275 $!@expr1073754276 $assert_ $(@expr1073754277 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3062 $, $db@var1067 $) $) { $return $; } $do ${ $} $while $(@expr1073754278 $false $)
3063:
|
3066:
3067: ;
3068: $if $(@expr1073754279 $!@expr1073754280 $assert_ $(@expr1073754281 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3068 $, db@var1067 &&@expr1073754282 db@var1067 .@expr1073754283 functionScopes@var1068 .@expr1073754284 size (@expr1073754285 ) ==@expr1073754286 1 $) $) { $return ; }
3069: }
3070:
3071: void symboldatabase34 ( ) {
3072: $check_ $(@expr1073754287 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3072 $, "typedef _Atomic(int(A::*)) atomic_mem_ptr_to_int;\ntypedef _Atomic(int)&atomic_int_ref;\nstruct S {\n  _Atomic union { int n; };\n};" $)
3073:
3074:
3075:
3076: ;
3077: $if $(@expr1073754288 $!@expr1073754289 $assertEquals $(@expr1073754290 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3077 $, "[test.cpp:2]: (debug) Failed to parse 'typedef _Atomic ( int ) & atomic_int_ref ;'. The checking continues anyway.\n" $, errout@var100 .@expr1073754291 str (@expr1073754292 ) $) $) { $return ; }
3078: }
3079:
3080: void symboldatabase35 ( ) {
3081: $check_ $(@expr1073754293 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3081 $, "class FragmentQueue : public CL_NS(util)::PriorityQueue<CL_NS(util)::Deletor::Object<TextFragment> >\n{};" $)
3082: ;
3083: $if $(@expr1073754294 $!@expr1073754295 $assertEquals $(@expr1073754296 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3083 $, "" $, errout@var100 .@expr1073754297 str (@expr1073754298 ) $) $) { $return ; }
3084: }
3085:
3086: void symboldatabase36 ( ) {
3087: $check_ $(@expr1073754299 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3087 $, "void struct ( ) { if ( 1 ) } int main ( ) { }" $) ;
3088: $if $(@expr1073754300 $!@expr1073754301 $assertEquals $(@expr1073754302 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3088 $, "" $, errout@var100 .@expr1073754303 str (@expr1073754304 ) $) $) { $return ; }
3089: }
3090:
3091: void symboldatabase37 ( ) {
3092: $Tokenizer $tokenizer@var1069 $(@expr1073754305 $&@expr1073754306 $settings1@var123 $, $this@expr1073754307 $) $; $const $SymbolDatabase $* $db@var1070 $; $db@var1070 $=@expr1073754308 $getSymbolDB_inner $(@expr1073754309 $tokenizer@var1069 $, "class Fred {\npublic:\n    struct Wilma { };\n    struct Barney {\n        bool operator == (const struct Barney & b) const { return true; }\n        bool operator == (const struct Wilma & w) const { return true; }\n    };\n    Fred(const struct Barney & b) { barney = b; }\nprivate:\n    struct Barney barney;\n};" $, $"test.cpp" $) $; $if $(@expr1073754310 $!@expr1073754311 $assert_ $(@expr1073754312 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3092 $, $db@var1070 $) $) { $return $; } $do ${ $} $while $(@expr1073754313 $false $)
3093:
|
3101:
3102: ;
3103: $if $(@expr1073754314 $!@expr1073754315 $assert_ $(@expr1073754316 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3103 $, db@var1070 &&@expr1073754317 db@var1070 .@expr12494 typeList@var1071 .@expr1073754319 size (@expr1073754320 ) ==@expr1073754321 3 $) $) { $return ; }
3104:
3105: std ::@expr1073754322 list < Type > ::@expr1073754323 const_iterator i@var1072 ; i@var1072 =@expr1073754324 db@var1070 .@expr12494 typeList@var1071 .@expr1073754326 begin (@expr1073754327 ) ;
3106: const Type * Fred@var1073 ; Fred@var1073 =@expr1073754328 &@expr1073754329 (@expr1073754330 *@expr1073754331 i@var1072 ++@expr1073754332 ) ;
3107: const Type * Wilma@var1074 ; Wilma@var1074 =@expr1073754333 &@expr1073754334 (@expr1073754335 *@expr1073754336 i@var1072 ++@expr1073754337 ) ;
3108: const Type * Barney@var1075 ; Barney@var1075 =@expr1073754338 &@expr1073754339 (@expr1073754340 *@expr1073754341 i@var1072 ++@expr1073754342 ) ;
3109: $if $(@expr1073754343 $!@expr1073754344 $assert_ $(@expr1073754345 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3109 $, Fred@var1073 &&@expr1073754346 Fred@var1073 .@expr1073754347 classDef@var1076 &&@expr1073754348 Fred@var1073 .@expr1073754349 classScope@var1077 &&@expr1073754350 Fred@var1073 .@expr1073754351 enclosingScope@var1078 &&@expr1073754352 Fred@var1073 .@expr1073754353 name (@expr1073754354 ) ==@expr1073754355 "Fred" $) $) { $return ; }
3110: $if $(@expr1073754356 $!@expr1073754357 $assert_ $(@expr1073754358 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3110 $, Wilma@var1074 &&@expr1073754359 Wilma@var1074 .@expr1073754360 classDef@var1079 &&@expr1073754361 Wilma@var1074 .@expr1073754362 classScope@var1080 &&@expr1073754363 Wilma@var1074 .@expr1073754364 enclosingScope@var1081 &&@expr1073754365 Wilma@var1074 .@expr1073754366 name (@expr1073754367 ) ==@expr1073754368 "Wilma" $) $) { $return ; }
3111: $if $(@expr1073754369 $!@expr1073754370 $assert_ $(@expr1073754371 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3111 $, Barney@var1075 &&@expr1073754372 Barney@var1075 .@expr1073754373 classDef@var1082 &&@expr1073754374 Barney@var1075 .@expr1073754375 classScope@var1083 &&@expr1073754376 Barney@var1075 .@expr1073754377 enclosingScope@var1084 &&@expr1073754378 Barney@var1075 .@expr1073754379 name (@expr1073754380 ) ==@expr1073754381 "Barney" $) $) { $return ; }
3112: $if $(@expr1073754382 $!@expr1073754383 $assert_ $(@expr1073754384 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3112 $, db@var1070 .@expr1073754385 variableList (@expr1073754386 ) .@expr1073754387 size (@expr1073754388 ) ==@expr1073754389 5 $) $) { $return ; }
3113:
3114: $if $(@expr1073754390 $!@expr1073754391 $assert_ $(@expr1073754392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3114 $, db@var1070 .@expr12569 getVariableFromVarId (@expr12570 1 ) &&@expr1073754395 db@var1070 .@expr12569 getVariableFromVarId (@expr12570 1 ) .@expr12574 type (@expr12575 ) &&@expr1073754400 db@var1070 .@expr12569 getVariableFromVarId (@expr12570 1 ) .@expr12574 type (@expr12575 ) .@expr1073754405 name (@expr1073754406 ) ==@expr1073754407 "Barney" $) $) { $return ; }
3115: $if $(@expr1073754408 $!@expr1073754409 $assert_ $(@expr1073754410 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3115 $, db@var1070 .@expr12569 getVariableFromVarId (@expr12588 2 ) &&@expr1073754413 db@var1070 .@expr12569 getVariableFromVarId (@expr12588 2 ) .@expr12592 type (@expr12593 ) &&@expr1073754418 db@var1070 .@expr12569 getVariableFromVarId (@expr12588 2 ) .@expr12592 type (@expr12593 ) .@expr1073754423 name (@expr1073754424 ) ==@expr1073754425 "Wilma" $) $) { $return ; }
3116: $if $(@expr1073754426 $!@expr1073754427 $assert_ $(@expr1073754428 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3116 $, db@var1070 .@expr12569 getVariableFromVarId (@expr12606 3 ) &&@expr1073754431 db@var1070 .@expr12569 getVariableFromVarId (@expr12606 3 ) .@expr12610 type (@expr12611 ) &&@expr1073754436 db@var1070 .@expr12569 getVariableFromVarId (@expr12606 3 ) .@expr12610 type (@expr12611 ) .@expr1073754441 name (@expr1073754442 ) ==@expr1073754443 "Barney" $) $) { $return ; }
3117: }
3118:
3119: void symboldatabase38 ( ) {
3120: $check_ $(@expr1073754444 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3120 $, "template <typename T = class service> struct scoped_service;\nstruct service {};\ntemplate <> struct scoped_service<service> {};\ntemplate <typename T>\nstruct scoped_service : scoped_service<service>\n{\n  scoped_service( T* ptr ) : scoped_service<service>(ptr), m_ptr(ptr) {}\n  T* const m_ptr;\n};" $)
3121:
|
3127:
3128: ;
3129: }
3130:
3131: void symboldatabase40 ( ) {
3132: $check_ $(@expr1073754445 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3132 $, "void f() {\n    try {  }\n    catch (std::bad_alloc) {  }\n}" $)
3133:
3134:
3135: ;
3136: $if $(@expr1073754446 $!@expr1073754447 $assertEquals $(@expr1073754448 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3136 $, "" $, errout@var100 .@expr1073754449 str (@expr1073754450 ) $) $) { $return ; }
3137: }
3138:
3139: void symboldatabase41 ( ) {
3140: $Tokenizer $tokenizer@var1085 $(@expr1073754451 $&@expr1073754452 $settings1@var123 $, $this@expr1073754453 $) $; $const $SymbolDatabase $* $db@var1086 $; $db@var1086 $=@expr1073754454 $getSymbolDB_inner $(@expr1073754455 $tokenizer@var1085 $, "struct X1 { MACRO1 f(int spd) MACRO2; };" $, $"test.cpp" $) $; $if $(@expr1073754456 $!@expr1073754457 $assert_ $(@expr1073754458 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3140 $, $db@var1086 $) $) { $return $; } $do ${ $} $while $(@expr1073754459 $false $) ;
3141: $if $(@expr1073754460 $!@expr1073754461 $assert_ $(@expr1073754462 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3141 $, db@var1086 &&@expr1073754463 db@var1086 .@expr12640 findScopeByName (@expr12641 "X1" ) &&@expr1073754466 db@var1086 .@expr12640 findScopeByName (@expr12641 "X1" ) .@expr12645 functionList .@expr1073754470 size (@expr1073754471 ) ==@expr1073754472 1 &&@expr1073754473 !@expr1073754474 db@var1086 .@expr12640 findScopeByName (@expr12641 "X1" ) .@expr12645 functionList .@expr1073754478 front (@expr1073754479 ) .@expr1073754480 hasBody (@expr1073754481 ) $) $) { $return ; }
3142: }
3143:
3144: void symboldatabase42 ( ) {
3145: $Tokenizer $tokenizer@var1087 $(@expr1073754482 $&@expr1073754483 $settings1@var123 $, $this@expr1073754484 $) $; $const $SymbolDatabase $* $db@var1088 $; $db@var1088 $=@expr1073754485 $getSymbolDB_inner $(@expr1073754486 $tokenizer@var1087 $, "void f() { extern int x(); }" $, $"test.cpp" $) $; $if $(@expr1073754487 $!@expr1073754488 $assert_ $(@expr1073754489 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3145 $, $db@var1088 $) $) { $return $; } $do ${ $} $while $(@expr1073754490 $false $) ;
3146: $if $(@expr1073754491 $!@expr1073754492 $assert_ $(@expr1073754493 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3146 $, db@var1088 !=@expr1073754494 nullptr $) $) { $return ; }
3147: const Scope * const fscope@var1089 ; fscope@var1089 =@expr1073754495 db@var1088 ?@expr1073754496 db@var1088 .@expr1073754497 findScopeByName (@expr1073754498 "f" ) :@expr1073754499 nullptr ;
3148: $if $(@expr1073754500 $!@expr1073754501 $assert_ $(@expr1073754502 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3148 $, fscope@var1089 !=@expr1073754503 nullptr $) $) { $return ; }
3149: $if $(@expr1073754504 $!@expr1073754505 $assertEquals $(@expr1073754506 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3149 $, 0U $, fscope@var1089 ?@expr1073754507 fscope@var1089 .@expr1073754508 varlist@var1090 .@expr1073754509 size (@expr1073754510 ) :@expr1073754511 ~@expr1073754512 0U $) $) { $return ; }
3150: }
3151:
3152: void symboldatabase43 ( ) {
3153: $check_ $(@expr1073754513 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3153 $, "void f() {\n    new int;\n}" $)
3154:
3155: ;
3156: $if $(@expr1073754514 $!@expr1073754515 $assertEquals $(@expr1073754516 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3156 $, "" $, errout@var100 .@expr1073754517 str (@expr1073754518 ) $) $) { $return ; }
3157: }
3158:
3159: void symboldatabase44 ( ) {
3160: $Tokenizer $tokenizer@var1091 $(@expr1073754519 $&@expr1073754520 $settings1@var123 $, $this@expr1073754521 $) $; $const $SymbolDatabase $* $db@var1092 $; $db@var1092 $=@expr1073754522 $getSymbolDB_inner $(@expr1073754523 $tokenizer@var1091 $, "int i { 1 };\nint j ( i );\nvoid foo() {\n    int k { 1 };\n    int l ( 1 );\n}" $, $"test.cpp" $) $; $if $(@expr1073754524 $!@expr1073754525 $assert_ $(@expr1073754526 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3160 $, $db@var1092 $) $) { $return $; } $do ${ $} $while $(@expr1073754527 $false $)
3161:
|
3164:
3165: ;
3166: $if $(@expr1073754528 $!@expr1073754529 $assert_ $(@expr1073754530 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3166 $, db@var1092 !=@expr1073754531 nullptr $) $) { $return ; }
3167: $if $(@expr1073754532 $!@expr1073754533 $assertEquals $(@expr1073754534 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3167 $, 4U $, db@var1092 .@expr12711 variableList (@expr12712 ) .@expr12713 size (@expr12714 ) -@expr1073754539 1 $) $) { $return ; }
3168: $if $(@expr1073754540 $!@expr1073754541 $assertEquals $(@expr1073754542 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3168 $, 2U $, db@var1092 .@expr1073754543 scopeList@var1093 .@expr1073754544 size (@expr1073754545 ) $) $) { $return ; }
3169: for (@expr1073754546 unsigned long i@var1094 =@expr1073754547 1U ; i@var1094 <@expr1073754548 db@var1092 .@expr12711 variableList (@expr12712 ) .@expr12713 size (@expr12714 ) ; i@var1094 ++@expr1073754553 ) {
3170: $if $(@expr1073754554 $!@expr1073754555 $assert_ $(@expr1073754556 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3170 $, db@var1092 .@expr1073754557 getVariableFromVarId (@expr1073754558 i@var1094 ) !=@expr1073754559 nullptr $) $) { $return ; } }
3171: }
3172:
3173: void symboldatabase45 ( ) {
3174: $Tokenizer $tokenizer@var1095 $(@expr1073754563 $&@expr1073754564 $settings1@var123 $, $this@expr1073754565 $) $; $const $SymbolDatabase $* $db@var1096 $; $db@var1096 $=@expr1073754566 $getSymbolDB_inner $(@expr1073754567 $tokenizer@var1095 $, "typedef struct {\n    unsigned long bits;\n} S;\nstruct T {\n    S span;\n    int flags;\n};\nstruct T f(int x) {\n    return (struct T) {\n        .span = (S) { 0UL },\n        .flags = (x ? 256 : 0),\n    };\n}" $, $"test.cpp" $) $; $if $(@expr1073754568 $!@expr1073754569 $assert_ $(@expr1073754570 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3174 $, $db@var1096 $) $) { $return $; } $do ${ $} $while $(@expr1073754571 $false $)
3175:
|
3185:
3186: ;
3187:
3188: $if $(@expr1073754572 $!@expr1073754573 $assert_ $(@expr1073754574 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3188 $, db@var1096 !=@expr1073754575 nullptr $) $) { $return ; }
3189: $if $(@expr1073754576 $!@expr1073754577 $assertEquals $(@expr1073754578 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3189 $, 4U $, db@var1096 .@expr12755 variableList (@expr12756 ) .@expr12757 size (@expr12758 ) -@expr1073754583 1 $) $) { $return ; }
3190: for (@expr1073754584 unsigned long i@var1097 =@expr1073754585 1U ; i@var1097 <@expr1073754586 db@var1096 .@expr12755 variableList (@expr12756 ) .@expr12757 size (@expr12758 ) ; i@var1097 ++@expr1073754591 ) {
3191: $if $(@expr1073754592 $!@expr1073754593 $assert_ $(@expr1073754594 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3191 $, db@var1096 .@expr1073754595 getVariableFromVarId (@expr1073754596 i@var1097 ) !=@expr1073754597 nullptr $) $) { $return ; } }
3192:
3193: $if $(@expr1073754598 $!@expr1073754599 $assertEquals $(@expr1073754600 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3193 $, 4U $, db@var1096 .@expr12777 scopeList@var1098 .@expr1073754602 size (@expr1073754603 ) $) $) { $return ; }
3194: std ::@expr1073754604 list < Scope > ::@expr1073754605 const_iterator scope@var1099 ; scope@var1099 =@expr1073754606 db@var1096 .@expr12777 scopeList@var1098 .@expr1073754608 begin (@expr1073754609 ) ;
3195: $if $(@expr1073754610 $!@expr1073754611 $assertEquals $(@expr1073754612 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3195 $, Scope ::@expr1073754613 eGlobal@expr1073754560 $, scope@var1099 .@expr12790 type@var1100 $) $) { $return ; }
3196: ++@expr1073754615 scope@var1099 ;
3197: $if $(@expr1073754616 $!@expr1073754617 $assertEquals $(@expr1073754618 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3197 $, Scope ::@expr12795 eStruct@expr12737 $, scope@var1099 .@expr12790 type@var1100 $) $) { $return ; }
3198: ++@expr1073754621 scope@var1099 ;
3199: $if $(@expr1073754622 $!@expr1073754623 $assertEquals $(@expr1073754624 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3199 $, Scope ::@expr12795 eStruct@expr12737 $, scope@var1099 .@expr12790 type@var1100 $) $) { $return ; }
3200: ++@expr1073754627 scope@var1099 ;
3201: $if $(@expr1073754628 $!@expr1073754629 $assertEquals $(@expr1073754630 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3201 $, Scope ::@expr1073754631 eFunction@expr1073754562 $, scope@var1099 .@expr12790 type@var1100 $) $) { $return ; }
3202: }
3203:
3204: void symboldatabase46 ( ) {
3205: $Tokenizer $tokenizer@var1101 $(@expr1073754636 $&@expr1073754637 $settings1@var123 $, $this@expr1073754638 $) $; $const $SymbolDatabase $* $db@var1102 $; $db@var1102 $=@expr1073754639 $getSymbolDB_inner $(@expr1073754640 $tokenizer@var1101 $, "struct S { };\nnamespace {\n    struct S { };\n}" $, $"test.cpp" $) $; $if $(@expr1073754641 $!@expr1073754642 $assert_ $(@expr1073754643 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3205 $, $db@var1102 $) $) { $return $; } $do ${ $} $while $(@expr1073754644 $false $)
3206:
3207:
3208: ;
3209:
3210: $if $(@expr1073754645 $!@expr1073754646 $assert_ $(@expr1073754647 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3210 $, db@var1102 !=@expr1073754648 nullptr $) $) { $return ; }
3211: $if $(@expr1073754649 $!@expr1073754650 $assertEquals $(@expr1073754651 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3211 $, 4U $, db@var1102 .@expr12828 scopeList@var1103 .@expr1073754653 size (@expr1073754654 ) $) $) { $return ; }
3212: std ::@expr1073754655 list < Scope > ::@expr1073754656 const_iterator scope@var1104 ; scope@var1104 =@expr1073754657 db@var1102 .@expr12828 scopeList@var1103 .@expr1073754659 begin (@expr1073754660 ) ;
3213: $if $(@expr1073754661 $!@expr1073754662 $assertEquals $(@expr1073754663 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3213 $, Scope ::@expr1073754664 eGlobal@expr1073754633 $, scope@var1104 .@expr12841 type@var1105 $) $) { $return ; }
3214: ++@expr1073754666 scope@var1104 ;
3215: $if $(@expr1073754667 $!@expr1073754668 $assertEquals $(@expr1073754669 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3215 $, Scope ::@expr12846 eStruct@expr12810 $, scope@var1104 .@expr12841 type@var1105 $) $) { $return ; }
3216: $if $(@expr1073754672 $!@expr1073754673 $assertEquals $(@expr1073754674 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3216 $, scope@var1104 .@expr12851 className@var1106 $, "S" $) $) { $return ; }
3217: ++@expr1073754676 scope@var1104 ;
3218: $if $(@expr1073754677 $!@expr1073754678 $assertEquals $(@expr1073754679 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3218 $, Scope ::@expr1073754680 eNamespace@expr1073754635 $, scope@var1104 .@expr12841 type@var1105 $) $) { $return ; }
3219: $if $(@expr1073754682 $!@expr1073754683 $assertEquals $(@expr1073754684 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3219 $, scope@var1104 .@expr12851 className@var1106 $, "" $) $) { $return ; }
3220: ++@expr1073754686 scope@var1104 ;
3221: $if $(@expr1073754687 $!@expr1073754688 $assertEquals $(@expr1073754689 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3221 $, Scope ::@expr12846 eStruct@expr12810 $, scope@var1104 .@expr12841 type@var1105 $) $) { $return ; }
3222: $if $(@expr1073754692 $!@expr1073754693 $assertEquals $(@expr1073754694 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3222 $, scope@var1104 .@expr12851 className@var1106 $, "S" $) $) { $return ; }
3223: }
3224:
3225: void symboldatabase47 ( ) {
3226: $Tokenizer $tokenizer@var1107 $(@expr1073754697 $&@expr1073754698 $settings1@var123 $, $this@expr1073754699 $) $; $const $SymbolDatabase $* $db@var1108 $; $db@var1108 $=@expr1073754700 $getSymbolDB_inner $(@expr1073754701 $tokenizer@var1107 $, "namespace NS {\n    class MyClass {\n        ~MyClass();\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() {\n    delete Example;\n}" $, $"test.cpp" $) $; $if $(@expr1073754702 $!@expr1073754703 $assert_ $(@expr1073754704 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3226 $, $db@var1108 $) $) { $return $; } $do ${ $} $while $(@expr1073754705 $false $)
3227:
|
3233:
3234: ;
3235: $if $(@expr1073754706 $!@expr1073754707 $assert_ $(@expr1073754708 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3235 $, db@var1108 &&@expr1073754709 !@expr1073754710 db@var1108 .@expr12887 functionScopes@var1109 .@expr1073754712 empty (@expr1073754713 ) &&@expr1073754714 db@var1108 .@expr12887 functionScopes@var1109 .@expr12892 front (@expr12893 ) .@expr12894 function &&@expr1073754719 db@var1108 .@expr12887 functionScopes@var1109 .@expr12892 front (@expr12893 ) .@expr12894 function .@expr1073754724 functionScope@expr1073754696 ==@expr1073754725 db@var1108 .@expr12887 functionScopes@var1109 .@expr12892 front (@expr12893 ) $) $) { $return ; }
3236: }
3237:
3238: void symboldatabase48 ( ) {
3239: $Tokenizer $tokenizer@var1110 $(@expr1073754730 $&@expr1073754731 $settings1@var123 $, $this@expr1073754732 $) $; $const $SymbolDatabase $* $db@var1111 $; $db@var1111 $=@expr1073754733 $getSymbolDB_inner $(@expr1073754734 $tokenizer@var1110 $, "namespace NS {\n    class MyClass {\n        MyClass();\n        ~MyClass();\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() { }\nMyClass::MyClass() { }" $, $"test.cpp" $) $; $if $(@expr1073754735 $!@expr1073754736 $assert_ $(@expr1073754737 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3239 $, $db@var1111 $) $) { $return $; } $do ${ $} $while $(@expr1073754738 $false $)
3240:
|
3246:
3247: ;
3248: $if $(@expr1073754739 $!@expr1073754740 $assert_ $(@expr1073754741 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3248 $, db@var1111 &&@expr1073754742 !@expr1073754743 db@var1111 .@expr12920 functionScopes@var1112 .@expr1073754745 empty (@expr1073754746 ) &&@expr1073754747 db@var1111 .@expr12920 functionScopes@var1112 .@expr12925 front (@expr12926 ) .@expr12927 function &&@expr1073754752 db@var1111 .@expr12920 functionScopes@var1112 .@expr12925 front (@expr12926 ) .@expr12927 function .@expr1073754757 functionScope@expr1073754729 ==@expr1073754758 db@var1111 .@expr12920 functionScopes@var1112 .@expr12925 front (@expr12926 ) $) $) { $return ; }
3249:
3250: const Token * f@var1113 ; f@var1113 =@expr1073754762 Token ::@expr12939 findsimplematch (@expr1073754764 tokenizer@var1110 .@expr12941 tokens (@expr12942 ) , "MyClass ( ) ;" ) ;
3251: $if $(@expr1073754767 $!@expr1073754768 $assertEquals $(@expr1073754769 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3251 $, true $, db@var1111 &&@expr12946 f@var1113 &&@expr12947 f@var1113 .@expr12948 function (@expr12949 ) &&@expr1073754774 f@var1113 .@expr12948 function (@expr12949 ) .@expr12953 tokenDef .@expr12954 linenr (@expr12955 ) ==@expr1073754780 3 &&@expr1073754781 f@var1113 .@expr12948 function (@expr12949 ) .@expr12960 token .@expr12961 linenr (@expr12962 ) ==@expr1073754787 9 $) $) { $return ; }
3252:
3253: f@var1113 =@expr1073754788 Token ::@expr12939 findsimplematch (@expr1073754790 tokenizer@var1110 .@expr12941 tokens (@expr12942 ) , "~ MyClass ( ) ;" ) ;
3254: f@var1113 =@expr1073754793 f@var1113 .@expr1073754794 next (@expr1073754795 ) ;
3255: $if $(@expr1073754796 $!@expr1073754797 $assertEquals $(@expr1073754798 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3255 $, true $, db@var1111 &&@expr12946 f@var1113 &&@expr12947 f@var1113 .@expr12948 function (@expr12949 ) &&@expr1073754803 f@var1113 .@expr12948 function (@expr12949 ) .@expr12953 tokenDef .@expr12954 linenr (@expr12955 ) ==@expr1073754809 4 &&@expr1073754810 f@var1113 .@expr12948 function (@expr12949 ) .@expr12960 token .@expr12961 linenr (@expr12962 ) ==@expr1073754816 8 $) $) { $return ; }
3256: }
3257:
3258: void symboldatabase49 ( ) {
3259: $Tokenizer $tokenizer@var1114 $(@expr1073754817 $&@expr1073754818 $settings1@var123 $, $this@expr1073754819 $) $; $const $SymbolDatabase $* $db@var1115 $; $db@var1115 $=@expr1073754820 $getSymbolDB_inner $(@expr1073754821 $tokenizer@var1114 $, "namespace Ns { class C; }\nvoid f1() { char *p; *p = 0; }\nclass Ns::C* p;\nvoid f2() { char *p; *p = 0; }" $, $"test.cpp" $) $; $if $(@expr1073754822 $!@expr1073754823 $assert_ $(@expr1073754824 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3259 $, $db@var1115 $) $) { $return $; } $do ${ $} $while $(@expr1073754825 $false $)
3260:
3261:
3262: ;
3263: $if $(@expr1073754826 $!@expr1073754827 $assert_ $(@expr1073754828 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3263 $, db@var1115 !=@expr1073754829 nullptr $) $) { $return ; }
3264: const Token * f@var1116 ; f@var1116 =@expr1073754830 Token ::@expr13007 findsimplematch (@expr1073754832 tokenizer@var1114 .@expr13009 tokens (@expr13010 ) , "p ; void f2" ) ;
3265: $if $(@expr1073754835 $!@expr1073754836 $assertEquals $(@expr1073754837 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3265 $, true $, db@var1115 &&@expr13014 f@var1116 &&@expr1073754839 f@var1116 .@expr1073754840 variable (@expr1073754841 ) $) $) { $return ; }
3266: f@var1116 =@expr1073754842 Token ::@expr13007 findsimplematch (@expr1073754844 tokenizer@var1114 .@expr13009 tokens (@expr13010 ) , "f2" ) ;
3267: $if $(@expr1073754847 $!@expr1073754848 $assertEquals $(@expr1073754849 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3267 $, true $, db@var1115 &&@expr13014 f@var1116 &&@expr1073754851 f@var1116 .@expr1073754852 function (@expr1073754853 ) $) $) { $return ; }
3268: }
3269:
3270: void symboldatabase50 ( ) {
3271: $Tokenizer $tokenizer@var1117 $(@expr1073754854 $&@expr1073754855 $settings1@var123 $, $this@expr1073754856 $) $; $const $SymbolDatabase $* $db@var1118 $; $db@var1118 $=@expr1073754857 $getSymbolDB_inner $(@expr1073754858 $tokenizer@var1117 $, "template <bool del, class T>\nclass _ConstTessMemberResultCallback_0_0<del, void, T>\n   {\n public:\n  typedef void (T::*MemberSignature)() const;\n\n private:\n  const T* object_;\n  MemberSignature member_;\n\n public:\n  inline _ConstTessMemberResultCallback_0_0(\n      const T* object, MemberSignature member)\n    : object_(object),\n      member_(member) {\n  }\n};" $, $"test.cpp" $) $; $if $(@expr1073754859 $!@expr1073754860 $assert_ $(@expr1073754861 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3271 $, $db@var1118 $) $) { $return $; } $do ${ $} $while $(@expr1073754862 $false $)
3272:
|
3286:
3287: ;
3288: $if $(@expr1073754863 $!@expr1073754864 $assert_ $(@expr1073754865 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3288 $, db@var1118 !=@expr1073754866 nullptr $) $) { $return ; }
3289: const Token * f@var1119 ; f@var1119 =@expr1073754867 Token ::@expr1073754868 findsimplematch (@expr1073754869 tokenizer@var1117 .@expr1073754870 tokens (@expr1073754871 ) , "_ConstTessMemberResultCallback_0_0 (" ) ;
3290: $if $(@expr1073754872 $!@expr1073754873 $assertEquals $(@expr1073754874 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3290 $, true $, db@var1118 &&@expr1073754875 f@var1119 &&@expr1073754876 f@var1119 .@expr13053 function (@expr13054 ) &&@expr1073754879 f@var1119 .@expr13053 function (@expr13054 ) .@expr1073754882 isConstructor (@expr1073754883 ) $) $) { $return ; }
3291: }
3292:
3293: void symboldatabase51 ( ) {
3294: $Tokenizer $tokenizer@var1120 $(@expr1073754884 $&@expr1073754885 $settings1@var123 $, $this@expr1073754886 $) $; $const $SymbolDatabase $* $db@var1121 $; $db@var1121 $=@expr1073754887 $getSymbolDB_inner $(@expr1073754888 $tokenizer@var1120 $, "static const float f1 = 2 * foo1(a, b);\nstatic const float f2 = 2 * ::foo2(a, b);\nstatic const float f3 = 2 * std::foo3(a, b);\nstatic const float f4 = c * foo4(a, b);\nstatic const int i1 = 2 & foo5(a, b);\nstatic const bool b1 = 2 > foo6(a, b);" $, $"test.cpp" $) $; $if $(@expr1073754889 $!@expr1073754890 $assert_ $(@expr1073754891 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3294 $, $db@var1121 $) $) { $return $; } $do ${ $} $while $(@expr1073754892 $false $)
3295:
|
3298:
3299: ;
3300: $if $(@expr1073754893 $!@expr1073754894 $assert_ $(@expr1073754895 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3300 $, db@var1121 !=@expr1073754896 nullptr $) $) { $return ; }
3301: $if $(@expr1073754897 $!@expr1073754898 $assert_ $(@expr1073754899 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3301 $, $(@expr1073754900 findFunctionByName (@expr1073754901 "foo1" , &@expr13078 db@var1121 .@expr13079 scopeList@var1122 .@expr13080 front (@expr13081 ) ) ==@expr1073754906 nullptr $) $) $) { $return ; }
3302: $if $(@expr1073754907 $!@expr1073754908 $assert_ $(@expr1073754909 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3302 $, $(@expr1073754910 findFunctionByName (@expr1073754911 "foo2" , &@expr13078 db@var1121 .@expr13079 scopeList@var1122 .@expr13080 front (@expr13081 ) ) ==@expr1073754916 nullptr $) $) $) { $return ; }
3303: $if $(@expr1073754917 $!@expr1073754918 $assert_ $(@expr1073754919 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3303 $, $(@expr1073754920 findFunctionByName (@expr1073754921 "foo3" , &@expr13078 db@var1121 .@expr13079 scopeList@var1122 .@expr13080 front (@expr13081 ) ) ==@expr1073754926 nullptr $) $) $) { $return ; }
3304: $if $(@expr1073754927 $!@expr1073754928 $assert_ $(@expr1073754929 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3304 $, $(@expr1073754930 findFunctionByName (@expr1073754931 "foo4" , &@expr13078 db@var1121 .@expr13079 scopeList@var1122 .@expr13080 front (@expr13081 ) ) ==@expr1073754936 nullptr $) $) $) { $return ; }
3305: $if $(@expr1073754937 $!@expr1073754938 $assert_ $(@expr1073754939 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3305 $, $(@expr1073754940 findFunctionByName (@expr1073754941 "foo5" , &@expr13078 db@var1121 .@expr13079 scopeList@var1122 .@expr13080 front (@expr13081 ) ) ==@expr1073754946 nullptr $) $) $) { $return ; }
3306: $if $(@expr1073754947 $!@expr1073754948 $assert_ $(@expr1073754949 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3306 $, $(@expr1073754950 findFunctionByName (@expr1073754951 "foo6" , &@expr13078 db@var1121 .@expr13079 scopeList@var1122 .@expr13080 front (@expr13081 ) ) ==@expr1073754956 nullptr $) $) $) { $return ; }
3307: }
3308:
3309: void symboldatabase52 ( ) {
3310: $Tokenizer $tokenizer@var1123 $(@expr1073754957 $&@expr1073754958 $settings1@var123 $, $this@expr1073754959 $) $; $const $SymbolDatabase $* $db@var1124 $; $db@var1124 $=@expr1073754960 $getSymbolDB_inner $(@expr1073754961 $tokenizer@var1123 $, "void foo() {\n    int i = 0;\n    S s{ { i }, 0 };\n}" $, $"test.cpp" $) $; $if $(@expr1073754962 $!@expr1073754963 $assert_ $(@expr1073754964 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3310 $, $db@var1124 $) $) { $return $; } $do ${ $} $while $(@expr1073754965 $false $)
3311:
3312:
3313: ;
3314:
3315: $if $(@expr1073754966 $!@expr1073754967 $assert_ $(@expr1073754968 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3315 $, db@var1124 !=@expr1073754969 nullptr $) $) { $return ; }
3316: $if $(@expr1073754970 $!@expr1073754971 $assertEquals $(@expr1073754972 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3316 $, 2 $, db@var1124 .@expr1073754973 scopeList@var1125 .@expr1073754974 size (@expr1073754975 ) $) $) { $return ; }
3317: $if $(@expr1073754976 $!@expr1073754977 $assertEquals $(@expr1073754978 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3317 $, 2 $, db@var1124 .@expr1073754979 variableList (@expr1073754980 ) .@expr1073754981 size (@expr1073754982 ) -@expr1073754983 1 $) $) { $return ; }
3318: $if $(@expr1073754984 $!@expr1073754985 $assert_ $(@expr1073754986 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3318 $, db@var1124 .@expr13163 getVariableFromVarId (@expr1073754988 1 ) !=@expr1073754989 nullptr $) $) { $return ; }
3319: $if $(@expr1073754990 $!@expr1073754991 $assert_ $(@expr1073754992 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3319 $, db@var1124 .@expr13163 getVariableFromVarId (@expr1073754994 2 ) !=@expr1073754995 nullptr $) $) { $return ; }
3320: }
3321:
3322: void symboldatabase53 ( ) {
3323: $Tokenizer $tokenizer@var1126 $(@expr1073754996 $&@expr1073754997 $settings1@var123 $, $this@expr1073754998 $) $; $const $SymbolDatabase $* $db@var1127 $; $db@var1127 $=@expr1073754999 $getSymbolDB_inner $(@expr1073755000 $tokenizer@var1126 $, "int32_t x;std::int32_t y;" $, $"test.cpp" $) $; $if $(@expr1073755001 $!@expr1073755002 $assert_ $(@expr1073755003 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3323 $, $db@var1127 $) $) { $return $; } $do ${ $} $while $(@expr1073755004 $false $)
3324: ;
3325:
3326: $if $(@expr1073755005 $!@expr1073755006 $assert_ $(@expr1073755007 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3326 $, db@var1127 !=@expr1073755008 nullptr $) $) { $return ; }
3327: $if $(@expr1073755009 $!@expr1073755010 $assert_ $(@expr1073755011 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3327 $, db@var1127 .@expr13188 getVariableFromVarId (@expr13189 1 ) !=@expr1073755014 nullptr $) $) { $return ; }
3328: $if $(@expr1073755015 $!@expr1073755016 $assert_ $(@expr1073755017 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3328 $, db@var1127 .@expr13188 getVariableFromVarId (@expr13195 2 ) !=@expr1073755020 nullptr $) $) { $return ; }
3329: $if $(@expr1073755021 $!@expr1073755022 $assertEquals $(@expr1073755023 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3329 $, false $, db@var1127 .@expr13188 getVariableFromVarId (@expr13189 1 ) .@expr1073755026 isClass (@expr1073755027 ) $) $) { $return ; }
3330: $if $(@expr1073755028 $!@expr1073755029 $assertEquals $(@expr1073755030 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3330 $, false $, db@var1127 .@expr13188 getVariableFromVarId (@expr13195 2 ) .@expr1073755033 isClass (@expr1073755034 ) $) $) { $return ; }
3331: }
3332:
3333: void symboldatabase54 ( ) {
3334: $Tokenizer $tokenizer@var1128 $(@expr1073755036 $&@expr1073755037 $settings1@var123 $, $this@expr1073755038 $) $; $const $SymbolDatabase $* $db@var1129 $; $db@var1129 $=@expr1073755039 $getSymbolDB_inner $(@expr1073755040 $tokenizer@var1128 $, "class A {\n  void getReg() const override {\n    assert(Kind == k_ShiftExtend);\n  }\n};" $, $"test.cpp" $) $; $if $(@expr1073755041 $!@expr1073755042 $assert_ $(@expr1073755043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3334 $, $db@var1129 $) $) { $return $; } $do ${ $} $while $(@expr1073755044 $false $)
3335:
3336:
3337:
3338: ;
3339:
3340: $if $(@expr1073755045 $!@expr1073755046 $assert_ $(@expr1073755047 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3340 $, db@var1129 !=@expr1073755048 nullptr $) $) { $return ; }
3341: $if $(@expr1073755049 $!@expr1073755050 $assertEquals $(@expr1073755051 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3341 $, 1U $, db@var1129 .@expr13228 functionScopes@var1130 .@expr1073755053 size (@expr1073755054 ) $) $) { $return ; }
3342: $if $(@expr1073755055 $!@expr1073755056 $assertEquals $(@expr1073755057 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3342 $, "getReg" $, db@var1129 .@expr13228 functionScopes@var1130 .@expr13235 front (@expr13236 ) .@expr1073755061 className@expr1073755035 $) $) { $return ; }
3343: $if $(@expr1073755062 $!@expr1073755063 $assertEquals $(@expr1073755064 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3343 $, true $, db@var1129 .@expr13228 functionScopes@var1130 .@expr13235 front (@expr13236 ) .@expr1073755068 function .@expr1073755069 hasOverrideSpecifier (@expr1073755070 ) $) $) { $return ; }
3344: }
3345:
3346: void symboldatabase55 ( ) {
3347: $Tokenizer $tokenizer@var1131 $(@expr1073755072 $&@expr1073755073 $settings1@var123 $, $this@expr1073755074 $) $; $const $SymbolDatabase $* $db@var1132 $; $db@var1132 $=@expr1073755075 $getSymbolDB_inner $(@expr1073755076 $tokenizer@var1131 $, "PRIVATE S32 testfunc(void) {\n    return 0;\n}" $, $"test.cpp" $) $; $if $(@expr1073755077 $!@expr1073755078 $assert_ $(@expr1073755079 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3347 $, $db@var1132 $) $) { $return $; } $do ${ $} $while $(@expr1073755080 $false $)
3348:
3349: ;
3350:
3351: $if $(@expr1073755081 $!@expr1073755082 $assert_ $(@expr1073755083 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3351 $, db@var1132 !=@expr1073755084 nullptr $) $) { $return ; }
3352: $if $(@expr1073755085 $!@expr1073755086 $assertEquals $(@expr1073755087 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3352 $, 1U $, db@var1132 .@expr13264 functionScopes@var1133 .@expr1073755089 size (@expr1073755090 ) $) $) { $return ; }
3353: $if $(@expr1073755091 $!@expr1073755092 $assertEquals $(@expr1073755093 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3353 $, "testfunc" $, db@var1132 .@expr13264 functionScopes@var1133 .@expr1073755095 front (@expr1073755096 ) .@expr1073755097 className@expr1073755071 $) $) { $return ; }
3354: }
3355:
3356: void symboldatabase56 ( ) {
3357: {
3358: $Tokenizer $tokenizer@var1134 $(@expr1073755100 $&@expr1073755101 $settings1@var123 $, $this@expr13278 $) $; $const $SymbolDatabase $* $db@var1135 $; $db@var1135 $=@expr1073755103 $getSymbolDB_inner $(@expr1073755104 $tokenizer@var1134 $, "class Class {\n    class NestedClass {\n    public:\n        virtual void f();\n    };\n    friend void NestedClass::f();\n}" $, $"test.cpp" $) $; $if $(@expr1073755105 $!@expr1073755106 $assert_ $(@expr1073755107 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3358 $, $db@var1135 $) $) { $return $; } $do ${ $} $while $(@expr1073755108 $false $)
3359:
|
3363:
3364: ;
3365:
3366: $if $(@expr1073755109 $!@expr1073755110 $assert_ $(@expr1073755111 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3366 $, db@var1135 !=@expr1073755112 nullptr $) $) { $return ; }
3367: $if $(@expr1073755113 $!@expr1073755114 $assertEquals $(@expr1073755115 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3367 $, 0U $, db@var1135 .@expr1073755116 functionScopes@var1136 .@expr1073755117 size (@expr1073755118 ) $) $) { $return ; }
3368: $if $(@expr1073755119 $!@expr1073755120 $assert_ $(@expr1073755121 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3368 $, db@var1135 .@expr13298 scopeList@var1137 .@expr13299 back (@expr13300 ) .@expr1073755125 type@expr13274 ==@expr1073755126 Scope ::@expr1073755127 eClass &&@expr1073755128 db@var1135 .@expr13298 scopeList@var1137 .@expr13299 back (@expr13300 ) .@expr1073755132 className@expr13275 ==@expr1073755133 "NestedClass" $) $) { $return ; }
3369: $if $(@expr1073755134 $!@expr1073755135 $assert_ $(@expr1073755136 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3369 $, db@var1135 .@expr13298 scopeList@var1137 .@expr13299 back (@expr13300 ) .@expr13316 functionList .@expr1073755141 size (@expr1073755142 ) ==@expr1073755143 1U &&@expr1073755144 !@expr1073755145 db@var1135 .@expr13298 scopeList@var1137 .@expr13299 back (@expr13300 ) .@expr13316 functionList .@expr1073755150 front (@expr1073755151 ) .@expr1073755152 hasBody (@expr1073755153 ) $) $) { $return ; }
3370: }
3371: {
3372: $Tokenizer $tokenizer@var1138 $(@expr1073755154 $&@expr1073755155 $settings1@var123 $, $this@expr13278 $) $; $const $SymbolDatabase $* $db@var1139 $; $db@var1139 $=@expr1073755156 $getSymbolDB_inner $(@expr1073755157 $tokenizer@var1138 $, "class Class {\n    friend void f1();\n    friend void f2() { }\n}" $, $"test.cpp" $) $; $if $(@expr1073755158 $!@expr1073755159 $assert_ $(@expr1073755160 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3372 $, $db@var1139 $) $) { $return $; } $do ${ $} $while $(@expr1073755161 $false $)
3373:
3374:
3375: ;
3376:
3377: $if $(@expr1073755162 $!@expr1073755163 $assert_ $(@expr1073755164 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3377 $, db@var1139 !=@expr1073755165 nullptr $) $) { $return ; }
3378: $if $(@expr1073755166 $!@expr1073755167 $assertEquals $(@expr1073755168 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3378 $, 1U $, db@var1139 .@expr1073755169 functionScopes@var1140 .@expr1073755170 size (@expr1073755171 ) $) $) { $return ; }
3379: $if $(@expr1073755172 $!@expr1073755173 $assert_ $(@expr1073755174 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3379 $, db@var1139 .@expr13351 scopeList@var1141 .@expr13352 back (@expr13353 ) .@expr1073755178 type@expr13274 ==@expr1073755179 Scope ::@expr1073755180 eFunction &&@expr1073755181 db@var1139 .@expr13351 scopeList@var1141 .@expr13352 back (@expr13353 ) .@expr1073755185 className@expr13275 ==@expr1073755186 "f2" $) $) { $return ; }
3380: $if $(@expr1073755187 $!@expr1073755188 $assert_ $(@expr1073755189 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3380 $, db@var1139 .@expr13351 scopeList@var1141 .@expr13352 back (@expr13353 ) .@expr13369 function &&@expr1073755194 db@var1139 .@expr13351 scopeList@var1141 .@expr13352 back (@expr13353 ) .@expr13369 function .@expr1073755199 hasBody (@expr1073755200 ) $) $) { $return ; }
3381: }
3382: {
3383: $Tokenizer $tokenizer@var1142 $(@expr1073755201 $&@expr1073755202 $settings1@var123 $, $this@expr13278 $) $; $const $SymbolDatabase $* $db@var1143 $; $db@var1143 $=@expr1073755203 $getSymbolDB_inner $(@expr1073755204 $tokenizer@var1142 $, "friend f1();\nfriend f2() { }" $, $"test.c" $) $; $do ${ $} $while $(@expr1073755205 $false $)
3384: ;
3385:
3386: $if $(@expr1073755206 $!@expr1073755207 $assert_ $(@expr1073755208 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3386 $, db@var1143 !=@expr1073755209 nullptr $) $) { $return ; }
3387: $if $(@expr1073755210 $!@expr1073755211 $assertEquals $(@expr1073755212 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3387 $, 2U $, db@var1143 .@expr13389 scopeList@var1144 .@expr1073755214 size (@expr1073755215 ) $) $) { $return ; }
3388: $if $(@expr1073755216 $!@expr1073755217 $assertEquals $(@expr1073755218 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3388 $, 2U $, db@var1143 .@expr13389 scopeList@var1144 .@expr1073755220 begin (@expr1073755221 ) .@expr1073755222 functionList .@expr1073755223 size (@expr1073755224 ) $) $) { $return ; }
3389: }
3390: }
3391:
3392: void symboldatabase57 ( ) {
3393: $Tokenizer $tokenizer@var1145 $(@expr1073755229 $&@expr1073755230 $settings1@var123 $, $this@expr1073755231 $) $; $const $SymbolDatabase $* $db@var1146 $; $db@var1146 $=@expr1073755232 $getSymbolDB_inner $(@expr1073755233 $tokenizer@var1145 $, "int bar(bool b)\n{\n    if(b)\n         return 1;\n    else\n         return 1;\n}" $, $"test.cpp" $) $; $if $(@expr1073755234 $!@expr1073755235 $assert_ $(@expr1073755236 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3393 $, $db@var1146 $) $) { $return $; } $do ${ $} $while $(@expr1073755237 $false $)
3394:
|
3398:
3399: ;
3400: $if $(@expr1073755238 $!@expr1073755239 $assert_ $(@expr1073755240 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3400 $, db@var1146 !=@expr1073755241 nullptr $) $) { $return ; }
3401: $if $(@expr1073755242 $!@expr1073755243 $assert_ $(@expr1073755244 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3401 $, db@var1146 .@expr13421 scopeList@var1147 .@expr1073755246 size (@expr1073755247 ) ==@expr1073755248 4U $) $) { $return ; }
3402: std ::@expr1073755249 list < Scope > ::@expr1073755250 const_iterator it@var1148 ; it@var1148 =@expr1073755251 db@var1146 .@expr13421 scopeList@var1147 .@expr1073755253 begin (@expr1073755254 ) ;
3403: $if $(@expr1073755255 $!@expr1073755256 $assert_ $(@expr1073755257 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3403 $, it@var1148 .@expr1073755258 type@var1149 ==@expr1073755259 Scope ::@expr1073755260 eGlobal@expr1073755225 $) $) { $return ; }
3404: $if $(@expr1073755261 $!@expr1073755262 $assert_ $(@expr1073755263 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3404 $, (@expr1073755264 ++@expr1073755265 it@var1148 ) .@expr1073755266 type@var1149 ==@expr1073755267 Scope ::@expr1073755268 eFunction@expr1073755226 $) $) { $return ; }
3405: $if $(@expr1073755269 $!@expr1073755270 $assert_ $(@expr1073755271 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3405 $, (@expr1073755272 ++@expr1073755273 it@var1148 ) .@expr1073755274 type@var1149 ==@expr1073755275 Scope ::@expr1073755276 eIf@expr1073755227 $) $) { $return ; }
3406: $if $(@expr1073755277 $!@expr1073755278 $assert_ $(@expr1073755279 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3406 $, (@expr1073755280 ++@expr1073755281 it@var1148 ) .@expr1073755282 type@var1149 ==@expr1073755283 Scope ::@expr1073755284 eElse@expr1073755228 $) $) { $return ; }
3407: }
3408:
3409: void symboldatabase58 ( ) {
3410: $Tokenizer $tokenizer@var1150 $(@expr1073755286 $&@expr1073755287 $settings1@var123 $, $this@expr1073755288 $) $; $const $SymbolDatabase $* $db@var1151 $; $db@var1151 $=@expr1073755289 $getSymbolDB_inner $(@expr1073755290 $tokenizer@var1150 $, "namespace N2\n{\nclass B { };\n}\nusing namespace N2;\nclass C {\n    class A : public B\n    {\n    };\n};" $, $"test.cpp" $) $; $if $(@expr1073755291 $!@expr1073755292 $assert_ $(@expr1073755293 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3410 $, $db@var1151 $) $) { $return $; } $do ${ $} $while $(@expr1073755294 $false $)
3411:
|
3418:
3419: ;
3420: $if $(@expr1073755295 $!@expr1073755296 $assert_ $(@expr1073755297 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3420 $, db@var1151 !=@expr1073755298 nullptr $) $) { $return ; }
3421: $if $(@expr1073755299 $!@expr1073755300 $assert_ $(@expr1073755301 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3421 $, db@var1151 .@expr13478 typeList@var1152 .@expr1073755303 size (@expr1073755304 ) ==@expr1073755305 3U $) $) { $return ; }
3422: std ::@expr1073755306 list < Type > ::@expr1073755307 const_iterator it@var1153 ; it@var1153 =@expr1073755308 db@var1151 .@expr13478 typeList@var1152 .@expr1073755310 begin (@expr1073755311 ) ;
3423: const Type * classB@var1154 ; classB@var1154 =@expr1073755312 &@expr1073755313 (@expr1073755314 *@expr1073755315 it@var1153 ) ;
3424: const Type * classC@var1155 ; classC@var1155 =@expr1073755316 &@expr1073755317 (@expr1073755318 *@expr1073755319 (@expr1073755320 ++@expr1073755321 it@var1153 ) ) ;
3425: const Type * classA@var1156 ; classA@var1156 =@expr1073755322 &@expr1073755323 (@expr1073755324 *@expr1073755325 (@expr1073755326 ++@expr1073755327 it@var1153 ) ) ;
3426: $if $(@expr1073755328 $!@expr1073755329 $assert_ $(@expr1073755330 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3426 $, classA@var1156 .@expr1073755331 name (@expr1073755332 ) ==@expr1073755333 "A" &&@expr1073755334 classB@var1154 .@expr1073755335 name (@expr1073755336 ) ==@expr1073755337 "B" &&@expr1073755338 classC@var1155 .@expr1073755339 name (@expr1073755340 ) ==@expr1073755341 "C" $) $) { $return ; }
3427: $if $(@expr1073755342 $!@expr1073755343 $assert_ $(@expr1073755344 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3427 $, classA@var1156 .@expr13521 derivedFrom@var1157 .@expr1073755346 size (@expr1073755347 ) ==@expr1073755348 1U $) $) { $return ; }
3428: $if $(@expr1073755349 $!@expr1073755350 $assert_ $(@expr1073755351 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3428 $, classA@var1156 .@expr13521 derivedFrom@var1157 [@expr13529 0 ] .@expr13530 type@expr13461 !=@expr1073755355 nullptr $) $) { $return ; }
3429: $if $(@expr1073755356 $!@expr1073755357 $assert_ $(@expr1073755358 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3429 $, classA@var1156 .@expr13521 derivedFrom@var1157 [@expr13529 0 ] .@expr13530 type@expr13461 ==@expr1073755362 classB@var1154 $) $) { $return ; }
3430: }
3431:
3432: void symboldatabase59 ( ) {
3433: $Tokenizer $tokenizer@var1158 $(@expr1073755363 $&@expr1073755364 $settings1@var123 $, $this@expr1073755365 $) $; $const $SymbolDatabase $* $db@var1159 $; $db@var1159 $=@expr1073755366 $getSymbolDB_inner $(@expr1073755367 $tokenizer@var1158 $, "struct A::B ab[10];\nvoid f() {}" $, $"test.cpp" $) $; $if $(@expr1073755368 $!@expr1073755369 $assert_ $(@expr1073755370 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3433 $, $db@var1159 $) $) { $return $; } $do ${ $} $while $(@expr1073755371 $false $)
3434: ;
3435: $if $(@expr1073755372 $!@expr1073755373 $assert_ $(@expr1073755374 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3435 $, db@var1159 !=@expr1073755375 nullptr $) $) { $return ; }
3436: $if $(@expr1073755376 $!@expr1073755377 $assert_ $(@expr1073755378 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3436 $, db@var1159 &&@expr1073755379 db@var1159 .@expr1073755380 scopeList@var1160 .@expr1073755381 size (@expr1073755382 ) ==@expr1073755383 2 $) $) { $return ; }
3437: }
3438:
3439: void symboldatabase60 ( ) {
3440: $Tokenizer $tokenizer@var1161 $(@expr1073755384 $&@expr1073755385 $settings1@var123 $, $this@expr1073755386 $) $; $const $SymbolDatabase $* $db@var1162 $; $db@var1162 $=@expr1073755387 $getSymbolDB_inner $(@expr1073755388 $tokenizer@var1161 $, "struct A::someType A::bar() { return 0; }" $, $"test.cpp" $) $; $if $(@expr1073755389 $!@expr1073755390 $assert_ $(@expr1073755391 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3440 $, $db@var1162 $) $) { $return $; } $do ${ $} $while $(@expr1073755392 $false $) ;
3441: $if $(@expr1073755393 $!@expr1073755394 $assert_ $(@expr1073755395 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3441 $, db@var1162 !=@expr1073755396 nullptr $) $) { $return ; }
3442: $if $(@expr1073755397 $!@expr1073755398 $assert_ $(@expr1073755399 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3442 $, db@var1162 &&@expr1073755400 db@var1162 .@expr1073755401 scopeList@var1163 .@expr1073755402 size (@expr1073755403 ) ==@expr1073755404 2 $) $) { $return ; }
3443: }
3444:
3445: void symboldatabase61 ( ) {
3446: $Tokenizer $tokenizer@var1164 $(@expr1073755405 $&@expr1073755406 $settings1@var123 $, $this@expr1073755407 $) $; $const $SymbolDatabase $* $db@var1165 $; $db@var1165 $=@expr1073755408 $getSymbolDB_inner $(@expr1073755409 $tokenizer@var1164 $, "struct Fred {\n    struct Info { };\n};\nvoid foo() {\n    struct Fred::Info* info;\n    info = new (nothrow) struct Fred::Info();\n    info = new struct Fred::Info();\n    memset(info, 0, sizeof(struct Fred::Info));\n}" $, $"test.cpp" $) $; $if $(@expr1073755410 $!@expr1073755411 $assert_ $(@expr1073755412 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3446 $, $db@var1165 $) $) { $return $; } $do ${ $} $while $(@expr1073755413 $false $)
3447:
|
3453:
3454: ;
3455:
3456: $if $(@expr1073755414 $!@expr1073755415 $assert_ $(@expr1073755416 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3456 $, db@var1165 !=@expr1073755417 nullptr $) $) { $return ; }
3457: $if $(@expr1073755418 $!@expr1073755419 $assert_ $(@expr1073755420 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3457 $, db@var1165 &&@expr1073755421 db@var1165 .@expr1073755422 scopeList@var1166 .@expr1073755423 size (@expr1073755424 ) ==@expr1073755425 4 $) $) { $return ; }
3458: }
3459:
3460: void symboldatabase62 ( ) {
3461: {
3462: $Tokenizer $tokenizer@var1167 $(@expr1073755426 $&@expr1073755427 $settings1@var123 $, $this@expr13604 $) $; $const $SymbolDatabase $* $db@var1168 $; $db@var1168 $=@expr1073755429 $getSymbolDB_inner $(@expr1073755430 $tokenizer@var1167 $, "struct A {\npublic:\n    struct X { int a; };\n    void Foo(const std::vector<struct X> &includes);\n};\nvoid A::Foo(const std::vector<struct A::X> &includes) {\n    for (std::vector<struct A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const struct A::X currentIncList = *it;\n    }\n}" $, $"test.cpp" $) $; $if $(@expr1073755431 $!@expr1073755432 $assert_ $(@expr1073755433 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3462 $, $db@var1168 $) $) { $return $; } $do ${ $} $while $(@expr1073755434 $false $)
3463:
|
3470:
3471: ;
3472: $if $(@expr1073755435 $!@expr1073755436 $assert_ $(@expr1073755437 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3472 $, db@var1168 !=@expr1073755438 nullptr $) $) { $return ; }
3473: $if $(@expr1073755439 $!@expr1073755440 $assert_ $(@expr1073755441 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3473 $, db@var1168 &&@expr1073755442 db@var1168 .@expr1073755443 scopeList@var1169 .@expr1073755444 size (@expr1073755445 ) ==@expr1073755446 5 $) $) { $return ; }
3474: const Scope * scope@var1170 ; scope@var1170 =@expr1073755447 db@var1168 .@expr1073755448 findScopeByName (@expr1073755449 "A" ) ;
3475: $if $(@expr1073755450 $!@expr1073755451 $assert_ $(@expr1073755452 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3475 $, scope@var1170 !=@expr1073755453 nullptr $) $) { $return ; }
3476: const Function * function@var1171 ; function@var1171 =@expr1073755454 findFunctionByName (@expr1073755455 "Foo" , scope@var1170 ) ;
3477: $if $(@expr1073755456 $!@expr1073755457 $assert_ $(@expr1073755458 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3477 $, function@var1171 !=@expr1073755459 nullptr $) $) { $return ; }
3478: $if $(@expr1073755460 $!@expr1073755461 $assert_ $(@expr1073755462 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3478 $, function@var1171 .@expr1073755463 hasBody (@expr1073755464 ) $) $) { $return ; }
3479: }
3480: {
3481: $Tokenizer $tokenizer@var1172 $(@expr1073755465 $&@expr1073755466 $settings1@var123 $, $this@expr13604 $) $; $const $SymbolDatabase $* $db@var1173 $; $db@var1173 $=@expr1073755467 $getSymbolDB_inner $(@expr1073755468 $tokenizer@var1172 $, "class A {\npublic:\n    class X { public: int a; };\n    void Foo(const std::vector<class X> &includes);\n};\nvoid A::Foo(const std::vector<class A::X> &includes) {\n    for (std::vector<class A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const class A::X currentIncList = *it;\n    }\n}" $, $"test.cpp" $) $; $if $(@expr1073755469 $!@expr1073755470 $assert_ $(@expr1073755471 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3481 $, $db@var1173 $) $) { $return $; } $do ${ $} $while $(@expr1073755472 $false $)
3482:
|
3489:
3490: ;
3491: $if $(@expr1073755473 $!@expr1073755474 $assert_ $(@expr1073755475 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3491 $, db@var1173 !=@expr1073755476 nullptr $) $) { $return ; }
3492: $if $(@expr1073755477 $!@expr1073755478 $assert_ $(@expr1073755479 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3492 $, db@var1173 &&@expr1073755480 db@var1173 .@expr1073755481 scopeList@var1174 .@expr1073755482 size (@expr1073755483 ) ==@expr1073755484 5 $) $) { $return ; }
3493: const Scope * scope@var1175 ; scope@var1175 =@expr1073755485 db@var1173 .@expr1073755486 findScopeByName (@expr1073755487 "A" ) ;
3494: $if $(@expr1073755488 $!@expr1073755489 $assert_ $(@expr1073755490 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3494 $, scope@var1175 !=@expr1073755491 nullptr $) $) { $return ; }
3495: const Function * function@var1176 ; function@var1176 =@expr1073755492 findFunctionByName (@expr1073755493 "Foo" , scope@var1175 ) ;
3496: $if $(@expr1073755494 $!@expr1073755495 $assert_ $(@expr1073755496 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3496 $, function@var1176 !=@expr1073755497 nullptr $) $) { $return ; }
3497: $if $(@expr1073755498 $!@expr1073755499 $assert_ $(@expr1073755500 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3497 $, function@var1176 .@expr1073755501 hasBody (@expr1073755502 ) $) $) { $return ; }
3498: }
3499: {
3500: $Tokenizer $tokenizer@var1177 $(@expr1073755503 $&@expr1073755504 $settings1@var123 $, $this@expr13604 $) $; $const $SymbolDatabase $* $db@var1178 $; $db@var1178 $=@expr1073755505 $getSymbolDB_inner $(@expr1073755506 $tokenizer@var1177 $, "struct A {\npublic:\n    union X { int a; float b; };\n    void Foo(const std::vector<union X> &includes);\n};\nvoid A::Foo(const std::vector<union A::X> &includes) {\n    for (std::vector<union A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const union A::X currentIncList = *it;\n    }\n}" $, $"test.cpp" $) $; $if $(@expr1073755507 $!@expr1073755508 $assert_ $(@expr1073755509 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3500 $, $db@var1178 $) $) { $return $; } $do ${ $} $while $(@expr1073755510 $false $)
3501:
|
3508:
3509: ;
3510: $if $(@expr1073755511 $!@expr1073755512 $assert_ $(@expr1073755513 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3510 $, db@var1178 !=@expr1073755514 nullptr $) $) { $return ; }
3511: $if $(@expr1073755515 $!@expr1073755516 $assert_ $(@expr1073755517 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3511 $, db@var1178 &&@expr1073755518 db@var1178 .@expr1073755519 scopeList@var1179 .@expr1073755520 size (@expr1073755521 ) ==@expr1073755522 5 $) $) { $return ; }
3512: const Scope * scope@var1180 ; scope@var1180 =@expr1073755523 db@var1178 .@expr1073755524 findScopeByName (@expr1073755525 "A" ) ;
3513: $if $(@expr1073755526 $!@expr1073755527 $assert_ $(@expr1073755528 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3513 $, scope@var1180 !=@expr1073755529 nullptr $) $) { $return ; }
3514: const Function * function@var1181 ; function@var1181 =@expr1073755530 findFunctionByName (@expr1073755531 "Foo" , scope@var1180 ) ;
3515: $if $(@expr1073755532 $!@expr1073755533 $assert_ $(@expr1073755534 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3515 $, function@var1181 !=@expr1073755535 nullptr $) $) { $return ; }
3516: $if $(@expr1073755536 $!@expr1073755537 $assert_ $(@expr1073755538 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3516 $, function@var1181 .@expr1073755539 hasBody (@expr1073755540 ) $) $) { $return ; }
3517: }
3518: {
3519: $Tokenizer $tokenizer@var1182 $(@expr1073755541 $&@expr1073755542 $settings1@var123 $, $this@expr13604 $) $; $const $SymbolDatabase $* $db@var1183 $; $db@var1183 $=@expr1073755543 $getSymbolDB_inner $(@expr1073755544 $tokenizer@var1182 $, "struct A {\npublic:\n    enum X { a, b };\n    void Foo(const std::vector<enum X> &includes);\n};\nvoid A::Foo(const std::vector<enum A::X> &includes) {\n    for (std::vector<enum A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const enum A::X currentIncList = *it;\n    }\n}" $, $"test.cpp" $) $; $if $(@expr1073755545 $!@expr1073755546 $assert_ $(@expr1073755547 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3519 $, $db@var1183 $) $) { $return $; } $do ${ $} $while $(@expr1073755548 $false $)
3520:
|
3527:
3528: ;
3529: $if $(@expr1073755549 $!@expr1073755550 $assert_ $(@expr1073755551 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3529 $, db@var1183 !=@expr1073755552 nullptr $) $) { $return ; }
3530: $if $(@expr1073755553 $!@expr1073755554 $assert_ $(@expr1073755555 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3530 $, db@var1183 &&@expr1073755556 db@var1183 .@expr1073755557 scopeList@var1184 .@expr1073755558 size (@expr1073755559 ) ==@expr1073755560 5 $) $) { $return ; }
3531: const Scope * scope@var1185 ; scope@var1185 =@expr1073755561 db@var1183 .@expr1073755562 findScopeByName (@expr1073755563 "A" ) ;
3532: $if $(@expr1073755564 $!@expr1073755565 $assert_ $(@expr1073755566 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3532 $, scope@var1185 !=@expr1073755567 nullptr $) $) { $return ; }
3533: const Function * function@var1186 ; function@var1186 =@expr1073755568 findFunctionByName (@expr1073755569 "Foo" , scope@var1185 ) ;
3534: $if $(@expr1073755570 $!@expr1073755571 $assert_ $(@expr1073755572 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3534 $, function@var1186 !=@expr1073755573 nullptr $) $) { $return ; }
3535: $if $(@expr1073755574 $!@expr1073755575 $assert_ $(@expr1073755576 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3535 $, function@var1186 .@expr1073755577 hasBody (@expr1073755578 ) $) $) { $return ; }
3536: }
3537: }
3538:
3539: void symboldatabase63 ( ) {
3540: {
3541: $Tokenizer $tokenizer@var1187 $(@expr1073755579 $&@expr1073755580 $settings1@var123 $, $this@expr13757 $) $; $const $SymbolDatabase $* $db@var1188 $; $db@var1188 $=@expr1073755582 $getSymbolDB_inner $(@expr1073755583 $tokenizer@var1187 $, "template class T<int> ; void foo() { }" $, $"test.cpp" $) $; $if $(@expr1073755584 $!@expr1073755585 $assert_ $(@expr1073755586 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3541 $, $db@var1188 $) $) { $return $; } $do ${ $} $while $(@expr1073755587 $false $) ;
3542: $if $(@expr1073755588 $!@expr1073755589 $assert_ $(@expr1073755590 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3542 $, db@var1188 !=@expr1073755591 nullptr $) $) { $return ; }
3543: $if $(@expr1073755592 $!@expr1073755593 $assert_ $(@expr1073755594 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3543 $, db@var1188 &&@expr1073755595 db@var1188 .@expr1073755596 scopeList@var1189 .@expr1073755597 size (@expr1073755598 ) ==@expr1073755599 2 $) $) { $return ; }
3544: }
3545: {
3546: $Tokenizer $tokenizer@var1190 $(@expr1073755600 $&@expr1073755601 $settings1@var123 $, $this@expr13757 $) $; $const $SymbolDatabase $* $db@var1191 $; $db@var1191 $=@expr1073755602 $getSymbolDB_inner $(@expr1073755603 $tokenizer@var1190 $, "template struct T<int> ; void foo() { }" $, $"test.cpp" $) $; $if $(@expr1073755604 $!@expr1073755605 $assert_ $(@expr1073755606 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3546 $, $db@var1191 $) $) { $return $; } $do ${ $} $while $(@expr1073755607 $false $) ;
3547: $if $(@expr1073755608 $!@expr1073755609 $assert_ $(@expr1073755610 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3547 $, db@var1191 !=@expr1073755611 nullptr $) $) { $return ; }
3548: $if $(@expr1073755612 $!@expr1073755613 $assert_ $(@expr1073755614 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3548 $, db@var1191 &&@expr1073755615 db@var1191 .@expr1073755616 scopeList@var1192 .@expr1073755617 size (@expr1073755618 ) ==@expr1073755619 2 $) $) { $return ; }
3549: }
3550: }
3551:
3552: void symboldatabase64 ( ) {
3553: {
3554: $Tokenizer $tokenizer@var1193 $(@expr1073755620 $&@expr1073755621 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1194 $; $db@var1194 $=@expr1073755623 $getSymbolDB_inner $(@expr1073755624 $tokenizer@var1193 $, "class Fred { struct impl; };\nstruct Fred::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};" $, $"test.cpp" $) $; $if $(@expr1073755625 $!@expr1073755626 $assert_ $(@expr1073755627 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3554 $, $db@var1194 $) $) { $return $; } $do ${ $} $while $(@expr1073755628 $false $)
3555:
|
3559:
3560: ;
3561:
3562: $if $(@expr1073755629 $!@expr1073755630 $assert_ $(@expr1073755631 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3562 $, db@var1194 !=@expr1073755632 nullptr $) $) { $return ; }
3563: $if $(@expr1073755633 $!@expr1073755634 $assert_ $(@expr1073755635 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3563 $, db@var1194 &&@expr1073755636 db@var1194 .@expr1073755637 scopeList@var1195 .@expr1073755638 size (@expr1073755639 ) ==@expr1073755640 7 $) $) { $return ; }
3564: $if $(@expr1073755641 $!@expr1073755642 $assert_ $(@expr1073755643 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3564 $, db@var1194 &&@expr1073755644 db@var1194 .@expr1073755645 classAndStructScopes@var1196 .@expr1073755646 size (@expr1073755647 ) ==@expr1073755648 2 $) $) { $return ; }
3565: $if $(@expr1073755649 $!@expr1073755650 $assert_ $(@expr1073755651 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3565 $, db@var1194 &&@expr1073755652 db@var1194 .@expr1073755653 typeList@var1197 .@expr1073755654 size (@expr1073755655 ) ==@expr1073755656 2 $) $) { $return ; }
3566: $if $(@expr1073755657 $!@expr1073755658 $assert_ $(@expr1073755659 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3566 $, db@var1194 &&@expr1073755660 db@var1194 .@expr1073755661 functionScopes@var1198 .@expr1073755662 size (@expr1073755663 ) ==@expr1073755664 4 $) $) { $return ; }
3567:
3568: const Token * functionToken@var1199 ; functionToken@var1199 =@expr1073755665 Token ::@expr13842 findsimplematch (@expr1073755667 tokenizer@var1193 .@expr13844 tokens (@expr13845 ) , "impl ( ) { }" ) ;
3569: $if $(@expr1073755670 $!@expr1073755671 $assert_ $(@expr1073755672 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3569 $, db@var1194 &&@expr13849 functionToken@var1199 &&@expr13850 functionToken@var1199 .@expr13851 function (@expr13852 ) &&@expr13853 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13856 functionScope &&@expr1073755681 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13860 tokenDef .@expr13861 linenr (@expr13862 ) ==@expr1073755687 3 &&@expr1073755688 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13867 token .@expr13868 linenr (@expr13869 ) ==@expr1073755694 3 $) $) { $return
3570:
3571:
3572: ; }
3573:
3574: functionToken@var1199 =@expr1073755695 Token ::@expr13842 findsimplematch (@expr1073755697 tokenizer@var1193 .@expr13844 tokens (@expr13845 ) , "~ impl ( ) { }" ) ;
3575: $if $(@expr1073755700 $!@expr1073755701 $assert_ $(@expr1073755702 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3575 $, db@var1194 &&@expr13849 functionToken@var1199 &&@expr1073755704 functionToken@var1199 .@expr13881 next (@expr13882 ) .@expr13883 function (@expr13884 ) &&@expr1073755709 functionToken@var1199 .@expr13881 next (@expr13882 ) .@expr13883 function (@expr13884 ) .@expr1073755714 functionScope &&@expr1073755715 functionToken@var1199 .@expr13881 next (@expr13882 ) .@expr13883 function (@expr13884 ) .@expr1073755720 tokenDef .@expr1073755721 linenr (@expr1073755722 ) ==@expr1073755723 4 &&@expr1073755724 functionToken@var1199 .@expr13881 next (@expr13882 ) .@expr13883 function (@expr13884 ) .@expr1073755729 token .@expr1073755730 linenr (@expr1073755731 ) ==@expr1073755732 4 $) $) { $return
3576:
3577:
3578: ; }
3579:
3580: functionToken@var1199 =@expr1073755733 Token ::@expr13842 findsimplematch (@expr1073755735 tokenizer@var1193 .@expr13844 tokens (@expr13845 ) , "impl ( const impl & ) { }" ) ;
3581: $if $(@expr1073755738 $!@expr1073755739 $assert_ $(@expr1073755740 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3581 $, db@var1194 &&@expr13849 functionToken@var1199 &&@expr13850 functionToken@var1199 .@expr13851 function (@expr13852 ) &&@expr13853 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13856 functionScope &&@expr1073755749 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13860 tokenDef .@expr13861 linenr (@expr13862 ) ==@expr1073755755 5 &&@expr1073755756 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13867 token .@expr13868 linenr (@expr13869 ) ==@expr1073755762 5 $) $) { $return
3582:
3583:
3584: ; }
3585:
3586: functionToken@var1199 =@expr1073755763 Token ::@expr13842 findsimplematch (@expr1073755765 tokenizer@var1193 .@expr13844 tokens (@expr13845 ) , "foo ( const impl & , const impl & ) const { }" ) ;
3587: $if $(@expr1073755768 $!@expr1073755769 $assert_ $(@expr1073755770 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3587 $, db@var1194 &&@expr13849 functionToken@var1199 &&@expr13850 functionToken@var1199 .@expr13851 function (@expr13852 ) &&@expr13853 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13856 functionScope &&@expr1073755779 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13860 tokenDef .@expr13861 linenr (@expr13862 ) ==@expr1073755785 6 &&@expr1073755786 functionToken@var1199 .@expr13851 function (@expr13852 ) .@expr13867 token .@expr13868 linenr (@expr13869 ) ==@expr1073755792 6 $) $) { $return
3588:
3589:
3590: ; }
3591: }
3592: {
3593: $Tokenizer $tokenizer@var1200 $(@expr1073755793 $&@expr1073755794 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1201 $; $db@var1201 $=@expr1073755795 $getSymbolDB_inner $(@expr1073755796 $tokenizer@var1200 $, "class Fred { struct impl; };\nstruct Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nFred::impl::impl() { }\nFred::impl::~impl() { }\nFred::impl::impl(const Fred::impl &) { }\nvoid Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }" $, $"test.cpp" $) $; $if $(@expr1073755797 $!@expr1073755798 $assert_ $(@expr1073755799 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3593 $, $db@var1201 $) $) { $return $; } $do ${ $} $while $(@expr1073755800 $false $)
3594:
|
3602:
3603: ;
3604:
3605: $if $(@expr1073755801 $!@expr1073755802 $assert_ $(@expr1073755803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3605 $, db@var1201 !=@expr1073755804 nullptr $) $) { $return ; }
3606: $if $(@expr1073755805 $!@expr1073755806 $assert_ $(@expr1073755807 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3606 $, db@var1201 &&@expr1073755808 db@var1201 .@expr1073755809 scopeList@var1202 .@expr1073755810 size (@expr1073755811 ) ==@expr1073755812 7 $) $) { $return ; }
3607: $if $(@expr1073755813 $!@expr1073755814 $assert_ $(@expr1073755815 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3607 $, db@var1201 &&@expr1073755816 db@var1201 .@expr1073755817 classAndStructScopes@var1203 .@expr1073755818 size (@expr1073755819 ) ==@expr1073755820 2 $) $) { $return ; }
3608: $if $(@expr1073755821 $!@expr1073755822 $assert_ $(@expr1073755823 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3608 $, db@var1201 &&@expr1073755824 db@var1201 .@expr1073755825 typeList@var1204 .@expr1073755826 size (@expr1073755827 ) ==@expr1073755828 2 $) $) { $return ; }
3609: $if $(@expr1073755829 $!@expr1073755830 $assert_ $(@expr1073755831 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3609 $, db@var1201 &&@expr1073755832 db@var1201 .@expr1073755833 functionScopes@var1205 .@expr1073755834 size (@expr1073755835 ) ==@expr1073755836 4 $) $) { $return ; }
3610:
3611: const Token * functionToken@var1206 ; functionToken@var1206 =@expr1073755837 Token ::@expr13842 findsimplematch (@expr1073755839 tokenizer@var1200 .@expr14016 tokens (@expr14017 ) , "impl ( ) { }" ) ;
3612: $if $(@expr1073755842 $!@expr1073755843 $assert_ $(@expr1073755844 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3612 $, db@var1201 &&@expr14021 functionToken@var1206 &&@expr14022 functionToken@var1206 .@expr14023 function (@expr14024 ) &&@expr14025 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14028 functionScope &&@expr1073755853 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14032 tokenDef .@expr14033 linenr (@expr14034 ) ==@expr1073755859 3 &&@expr1073755860 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14039 token .@expr14040 linenr (@expr14041 ) ==@expr1073755866 8 $) $) { $return
3613:
3614:
3615: ; }
3616:
3617: functionToken@var1206 =@expr1073755867 Token ::@expr13842 findsimplematch (@expr1073755869 tokenizer@var1200 .@expr14016 tokens (@expr14017 ) , "~ impl ( ) { }" ) ;
3618: $if $(@expr1073755872 $!@expr1073755873 $assert_ $(@expr1073755874 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3618 $, db@var1201 &&@expr14021 functionToken@var1206 &&@expr1073755876 functionToken@var1206 .@expr14053 next (@expr14054 ) .@expr14055 function (@expr14056 ) &&@expr1073755881 functionToken@var1206 .@expr14053 next (@expr14054 ) .@expr14055 function (@expr14056 ) .@expr1073755886 functionScope &&@expr1073755887 functionToken@var1206 .@expr14053 next (@expr14054 ) .@expr14055 function (@expr14056 ) .@expr1073755892 tokenDef .@expr1073755893 linenr (@expr1073755894 ) ==@expr1073755895 4 &&@expr1073755896 functionToken@var1206 .@expr14053 next (@expr14054 ) .@expr14055 function (@expr14056 ) .@expr1073755901 token .@expr1073755902 linenr (@expr1073755903 ) ==@expr1073755904 9 $) $) { $return
3619:
3620:
3621: ; }
3622:
3623: functionToken@var1206 =@expr1073755905 Token ::@expr13842 findsimplematch (@expr1073755907 tokenizer@var1200 .@expr14016 tokens (@expr14017 ) , "impl ( const Fred :: impl & ) { }" ) ;
3624: $if $(@expr1073755910 $!@expr1073755911 $assert_ $(@expr1073755912 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3624 $, db@var1201 &&@expr14021 functionToken@var1206 &&@expr14022 functionToken@var1206 .@expr14023 function (@expr14024 ) &&@expr14025 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14028 functionScope &&@expr1073755921 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14032 tokenDef .@expr14033 linenr (@expr14034 ) ==@expr1073755927 5 &&@expr1073755928 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14039 token .@expr14040 linenr (@expr14041 ) ==@expr1073755934 10 $) $) { $return
3625:
3626:
3627: ; }
3628:
3629: functionToken@var1206 =@expr1073755935 Token ::@expr13842 findsimplematch (@expr1073755937 tokenizer@var1200 .@expr14016 tokens (@expr14017 ) , "foo ( const Fred :: impl & , const Fred :: impl & ) const { }" ) ;
3630: $if $(@expr1073755940 $!@expr1073755941 $assert_ $(@expr1073755942 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3630 $, db@var1201 &&@expr14021 functionToken@var1206 &&@expr14022 functionToken@var1206 .@expr14023 function (@expr14024 ) &&@expr14025 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14028 functionScope &&@expr1073755951 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14032 tokenDef .@expr14033 linenr (@expr14034 ) ==@expr1073755957 6 &&@expr1073755958 functionToken@var1206 .@expr14023 function (@expr14024 ) .@expr14039 token .@expr14040 linenr (@expr14041 ) ==@expr1073755964 11 $) $) { $return
3631:
3632:
3633: ; }
3634: }
3635: {
3636: $Tokenizer $tokenizer@var1207 $(@expr1073755965 $&@expr1073755966 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1208 $; $db@var1208 $=@expr1073755967 $getSymbolDB_inner $(@expr1073755968 $tokenizer@var1207 $, "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl() { }\n        ~impl() { }\n        impl(const impl &) { }\n        void foo(const impl &, const impl &) const { }\n    };\n}" $, $"test.cpp" $) $; $if $(@expr1073755969 $!@expr1073755970 $assert_ $(@expr1073755971 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3636 $, $db@var1208 $) $) { $return $; } $do ${ $} $while $(@expr1073755972 $false $)
3637:
|
3643:
3644: ;
3645:
3646: $if $(@expr1073755973 $!@expr1073755974 $assert_ $(@expr1073755975 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3646 $, db@var1208 !=@expr1073755976 nullptr $) $) { $return ; }
3647: $if $(@expr1073755977 $!@expr1073755978 $assert_ $(@expr1073755979 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3647 $, db@var1208 &&@expr1073755980 db@var1208 .@expr1073755981 scopeList@var1209 .@expr1073755982 size (@expr1073755983 ) ==@expr1073755984 8 $) $) { $return ; }
3648: $if $(@expr1073755985 $!@expr1073755986 $assert_ $(@expr1073755987 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3648 $, db@var1208 &&@expr1073755988 db@var1208 .@expr1073755989 classAndStructScopes@var1210 .@expr1073755990 size (@expr1073755991 ) ==@expr1073755992 2 $) $) { $return ; }
3649: $if $(@expr1073755993 $!@expr1073755994 $assert_ $(@expr1073755995 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3649 $, db@var1208 &&@expr1073755996 db@var1208 .@expr1073755997 typeList@var1211 .@expr1073755998 size (@expr1073755999 ) ==@expr1073756000 2 $) $) { $return ; }
3650: $if $(@expr1073756001 $!@expr1073756002 $assert_ $(@expr1073756003 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3650 $, db@var1208 &&@expr1073756004 db@var1208 .@expr1073756005 functionScopes@var1212 .@expr1073756006 size (@expr1073756007 ) ==@expr1073756008 4 $) $) { $return ; }
3651:
3652: const Token * functionToken@var1213 ; functionToken@var1213 =@expr1073756009 Token ::@expr13842 findsimplematch (@expr1073756011 tokenizer@var1207 .@expr14188 tokens (@expr14189 ) , "impl ( ) { }" ) ;
3653: $if $(@expr1073756014 $!@expr1073756015 $assert_ $(@expr1073756016 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3653 $, db@var1208 &&@expr14193 functionToken@var1213 &&@expr14194 functionToken@var1213 .@expr14195 function (@expr14196 ) &&@expr14197 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14200 functionScope &&@expr1073756025 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14204 tokenDef .@expr14205 linenr (@expr14206 ) ==@expr1073756031 4 &&@expr1073756032 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14211 token .@expr14212 linenr (@expr14213 ) ==@expr1073756038 4 $) $) { $return
3654:
3655:
3656: ; }
3657:
3658: functionToken@var1213 =@expr1073756039 Token ::@expr13842 findsimplematch (@expr1073756041 tokenizer@var1207 .@expr14188 tokens (@expr14189 ) , "~ impl ( ) { }" ) ;
3659: $if $(@expr1073756044 $!@expr1073756045 $assert_ $(@expr1073756046 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3659 $, db@var1208 &&@expr14193 functionToken@var1213 &&@expr1073756048 functionToken@var1213 .@expr14225 next (@expr14226 ) .@expr14227 function (@expr14228 ) &&@expr1073756053 functionToken@var1213 .@expr14225 next (@expr14226 ) .@expr14227 function (@expr14228 ) .@expr1073756058 functionScope &&@expr1073756059 functionToken@var1213 .@expr14225 next (@expr14226 ) .@expr14227 function (@expr14228 ) .@expr1073756064 tokenDef .@expr1073756065 linenr (@expr1073756066 ) ==@expr1073756067 5 &&@expr1073756068 functionToken@var1213 .@expr14225 next (@expr14226 ) .@expr14227 function (@expr14228 ) .@expr1073756073 token .@expr1073756074 linenr (@expr1073756075 ) ==@expr1073756076 5 $) $) { $return
3660:
3661:
3662: ; }
3663:
3664: functionToken@var1213 =@expr1073756077 Token ::@expr13842 findsimplematch (@expr1073756079 tokenizer@var1207 .@expr14188 tokens (@expr14189 ) , "impl ( const impl & ) { }" ) ;
3665: $if $(@expr1073756082 $!@expr1073756083 $assert_ $(@expr1073756084 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3665 $, db@var1208 &&@expr14193 functionToken@var1213 &&@expr14194 functionToken@var1213 .@expr14195 function (@expr14196 ) &&@expr14197 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14200 functionScope &&@expr1073756093 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14204 tokenDef .@expr14205 linenr (@expr14206 ) ==@expr1073756099 6 &&@expr1073756100 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14211 token .@expr14212 linenr (@expr14213 ) ==@expr1073756106 6 $) $) { $return
3666:
3667:
3668: ; }
3669:
3670: functionToken@var1213 =@expr1073756107 Token ::@expr13842 findsimplematch (@expr1073756109 tokenizer@var1207 .@expr14188 tokens (@expr14189 ) , "foo ( const impl & , const impl & ) const { }" ) ;
3671: $if $(@expr1073756112 $!@expr1073756113 $assert_ $(@expr1073756114 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3671 $, db@var1208 &&@expr14193 functionToken@var1213 &&@expr14194 functionToken@var1213 .@expr14195 function (@expr14196 ) &&@expr14197 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14200 functionScope &&@expr1073756123 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14204 tokenDef .@expr14205 linenr (@expr14206 ) ==@expr1073756129 7 &&@expr1073756130 functionToken@var1213 .@expr14195 function (@expr14196 ) .@expr14211 token .@expr14212 linenr (@expr14213 ) ==@expr1073756136 7 $) $) { $return
3672:
3673:
3674: ; }
3675: }
3676: {
3677: $Tokenizer $tokenizer@var1214 $(@expr1073756137 $&@expr1073756138 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1215 $; $db@var1215 $=@expr1073756139 $getSymbolDB_inner $(@expr1073756140 $tokenizer@var1214 $, "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n    Fred::impl::impl() { }\n    Fred::impl::~impl() { }\n    Fred::impl::impl(const Fred::impl &) { }\n    void Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }\n}" $, $"test.cpp" $) $; $if $(@expr1073756141 $!@expr1073756142 $assert_ $(@expr1073756143 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3677 $, $db@var1215 $) $) { $return $; } $do ${ $} $while $(@expr1073756144 $false $)
3678:
|
3688:
3689: ;
3690:
3691: $if $(@expr1073756145 $!@expr1073756146 $assert_ $(@expr1073756147 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3691 $, db@var1215 !=@expr1073756148 nullptr $) $) { $return ; }
3692: $if $(@expr1073756149 $!@expr1073756150 $assert_ $(@expr1073756151 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3692 $, db@var1215 &&@expr1073756152 db@var1215 .@expr1073756153 scopeList@var1216 .@expr1073756154 size (@expr1073756155 ) ==@expr1073756156 8 $) $) { $return ; }
3693: $if $(@expr1073756157 $!@expr1073756158 $assert_ $(@expr1073756159 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3693 $, db@var1215 &&@expr1073756160 db@var1215 .@expr1073756161 classAndStructScopes@var1217 .@expr1073756162 size (@expr1073756163 ) ==@expr1073756164 2 $) $) { $return ; }
3694: $if $(@expr1073756165 $!@expr1073756166 $assert_ $(@expr1073756167 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3694 $, db@var1215 &&@expr1073756168 db@var1215 .@expr1073756169 typeList@var1218 .@expr1073756170 size (@expr1073756171 ) ==@expr1073756172 2 $) $) { $return ; }
3695: $if $(@expr1073756173 $!@expr1073756174 $assert_ $(@expr1073756175 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3695 $, db@var1215 &&@expr1073756176 db@var1215 .@expr1073756177 functionScopes@var1219 .@expr1073756178 size (@expr1073756179 ) ==@expr1073756180 4 $) $) { $return ; }
3696:
3697: const Token * functionToken@var1220 ; functionToken@var1220 =@expr1073756181 Token ::@expr13842 findsimplematch (@expr1073756183 tokenizer@var1214 .@expr14360 tokens (@expr14361 ) , "impl ( ) { }" ) ;
3698: $if $(@expr1073756186 $!@expr1073756187 $assert_ $(@expr1073756188 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3698 $, db@var1215 &&@expr14365 functionToken@var1220 &&@expr14366 functionToken@var1220 .@expr14367 function (@expr14368 ) &&@expr14369 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14372 functionScope &&@expr1073756197 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14376 tokenDef .@expr14377 linenr (@expr14378 ) ==@expr1073756203 4 &&@expr1073756204 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14383 token .@expr14384 linenr (@expr14385 ) ==@expr1073756210 9 $) $) { $return
3699:
3700:
3701: ; }
3702:
3703: functionToken@var1220 =@expr1073756211 Token ::@expr13842 findsimplematch (@expr1073756213 tokenizer@var1214 .@expr14360 tokens (@expr14361 ) , "~ impl ( ) { }" ) ;
3704: $if $(@expr1073756216 $!@expr1073756217 $assert_ $(@expr1073756218 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3704 $, db@var1215 &&@expr14365 functionToken@var1220 &&@expr1073756220 functionToken@var1220 .@expr14397 next (@expr14398 ) .@expr14399 function (@expr14400 ) &&@expr1073756225 functionToken@var1220 .@expr14397 next (@expr14398 ) .@expr14399 function (@expr14400 ) .@expr1073756230 functionScope &&@expr1073756231 functionToken@var1220 .@expr14397 next (@expr14398 ) .@expr14399 function (@expr14400 ) .@expr1073756236 tokenDef .@expr1073756237 linenr (@expr1073756238 ) ==@expr1073756239 5 &&@expr1073756240 functionToken@var1220 .@expr14397 next (@expr14398 ) .@expr14399 function (@expr14400 ) .@expr1073756245 token .@expr1073756246 linenr (@expr1073756247 ) ==@expr1073756248 10 $) $) { $return
3705:
3706:
3707: ; }
3708:
3709: functionToken@var1220 =@expr1073756249 Token ::@expr13842 findsimplematch (@expr1073756251 tokenizer@var1214 .@expr14360 tokens (@expr14361 ) , "impl ( const Fred :: impl & ) { }" ) ;
3710: $if $(@expr1073756254 $!@expr1073756255 $assert_ $(@expr1073756256 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3710 $, db@var1215 &&@expr14365 functionToken@var1220 &&@expr14366 functionToken@var1220 .@expr14367 function (@expr14368 ) &&@expr14369 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14372 functionScope &&@expr1073756265 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14376 tokenDef .@expr14377 linenr (@expr14378 ) ==@expr1073756271 6 &&@expr1073756272 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14383 token .@expr14384 linenr (@expr14385 ) ==@expr1073756278 11 $) $) { $return
3711:
3712:
3713: ; }
3714:
3715: functionToken@var1220 =@expr1073756279 Token ::@expr13842 findsimplematch (@expr1073756281 tokenizer@var1214 .@expr14360 tokens (@expr14361 ) , "foo ( const Fred :: impl & , const Fred :: impl & ) const { }" ) ;
3716: $if $(@expr1073756284 $!@expr1073756285 $assert_ $(@expr1073756286 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3716 $, db@var1215 &&@expr14365 functionToken@var1220 &&@expr14366 functionToken@var1220 .@expr14367 function (@expr14368 ) &&@expr14369 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14372 functionScope &&@expr1073756295 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14376 tokenDef .@expr14377 linenr (@expr14378 ) ==@expr1073756301 7 &&@expr1073756302 functionToken@var1220 .@expr14367 function (@expr14368 ) .@expr14383 token .@expr14384 linenr (@expr14385 ) ==@expr1073756308 12 $) $) { $return
3717:
3718:
3719: ; }
3720: }
3721: {
3722: $Tokenizer $tokenizer@var1221 $(@expr1073756309 $&@expr1073756310 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1222 $; $db@var1222 $=@expr1073756311 $getSymbolDB_inner $(@expr1073756312 $tokenizer@var1221 $, "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n}\nNS::Fred::impl::impl() { }\nNS::Fred::impl::~impl() { }\nNS::Fred::impl::impl(const NS::Fred::impl &) { }\nvoid NS::Fred::impl::foo(const NS::Fred::impl &, const NS::Fred::impl &) const { }" $, $"test.cpp" $) $; $if $(@expr1073756313 $!@expr1073756314 $assert_ $(@expr1073756315 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3722 $, $db@var1222 $) $) { $return $; } $do ${ $} $while $(@expr1073756316 $false $)
3723:
|
3733:
3734: ;
3735:
3736: $if $(@expr1073756317 $!@expr1073756318 $assert_ $(@expr1073756319 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3736 $, db@var1222 !=@expr1073756320 nullptr $) $) { $return ; }
3737: $if $(@expr1073756321 $!@expr1073756322 $assert_ $(@expr1073756323 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3737 $, db@var1222 &&@expr1073756324 db@var1222 .@expr1073756325 scopeList@var1223 .@expr1073756326 size (@expr1073756327 ) ==@expr1073756328 8 $) $) { $return ; }
3738: $if $(@expr1073756329 $!@expr1073756330 $assert_ $(@expr1073756331 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3738 $, db@var1222 &&@expr1073756332 db@var1222 .@expr1073756333 classAndStructScopes@var1224 .@expr1073756334 size (@expr1073756335 ) ==@expr1073756336 2 $) $) { $return ; }
3739: $if $(@expr1073756337 $!@expr1073756338 $assert_ $(@expr1073756339 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3739 $, db@var1222 &&@expr1073756340 db@var1222 .@expr1073756341 typeList@var1225 .@expr1073756342 size (@expr1073756343 ) ==@expr1073756344 2 $) $) { $return ; }
3740: $if $(@expr1073756345 $!@expr1073756346 $assert_ $(@expr1073756347 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3740 $, db@var1222 &&@expr1073756348 db@var1222 .@expr1073756349 functionScopes@var1226 .@expr1073756350 size (@expr1073756351 ) ==@expr1073756352 4 $) $) { $return ; }
3741:
3742: const Token * functionToken@var1227 ; functionToken@var1227 =@expr1073756353 Token ::@expr13842 findsimplematch (@expr1073756355 tokenizer@var1221 .@expr14532 tokens (@expr14533 ) , "impl ( ) { }" ) ;
3743: $if $(@expr1073756358 $!@expr1073756359 $assert_ $(@expr1073756360 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3743 $, db@var1222 &&@expr14537 functionToken@var1227 &&@expr14538 functionToken@var1227 .@expr14539 function (@expr14540 ) &&@expr14541 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14544 functionScope &&@expr1073756369 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14548 tokenDef .@expr14549 linenr (@expr14550 ) ==@expr1073756375 4 &&@expr1073756376 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14555 token .@expr14556 linenr (@expr14557 ) ==@expr1073756382 10 $) $) { $return
3744:
3745:
3746: ; }
3747:
3748: functionToken@var1227 =@expr1073756383 Token ::@expr13842 findsimplematch (@expr1073756385 tokenizer@var1221 .@expr14532 tokens (@expr14533 ) , "~ impl ( ) { }" ) ;
3749: $if $(@expr1073756388 $!@expr1073756389 $assert_ $(@expr1073756390 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3749 $, db@var1222 &&@expr14537 functionToken@var1227 &&@expr1073756392 functionToken@var1227 .@expr14569 next (@expr14570 ) .@expr14571 function (@expr14572 ) &&@expr1073756397 functionToken@var1227 .@expr14569 next (@expr14570 ) .@expr14571 function (@expr14572 ) .@expr1073756402 functionScope &&@expr1073756403 functionToken@var1227 .@expr14569 next (@expr14570 ) .@expr14571 function (@expr14572 ) .@expr1073756408 tokenDef .@expr1073756409 linenr (@expr1073756410 ) ==@expr1073756411 5 &&@expr1073756412 functionToken@var1227 .@expr14569 next (@expr14570 ) .@expr14571 function (@expr14572 ) .@expr1073756417 token .@expr1073756418 linenr (@expr1073756419 ) ==@expr1073756420 11 $) $) { $return
3750:
3751:
3752: ; }
3753:
3754: functionToken@var1227 =@expr1073756421 Token ::@expr13842 findsimplematch (@expr1073756423 tokenizer@var1221 .@expr14532 tokens (@expr14533 ) , "impl ( const NS :: Fred :: impl & ) { }" ) ;
3755: $if $(@expr1073756426 $!@expr1073756427 $assert_ $(@expr1073756428 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3755 $, db@var1222 &&@expr14537 functionToken@var1227 &&@expr14538 functionToken@var1227 .@expr14539 function (@expr14540 ) &&@expr14541 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14544 functionScope &&@expr1073756437 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14548 tokenDef .@expr14549 linenr (@expr14550 ) ==@expr1073756443 6 &&@expr1073756444 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14555 token .@expr14556 linenr (@expr14557 ) ==@expr1073756450 12 $) $) { $return
3756:
3757:
3758: ; }
3759:
3760: functionToken@var1227 =@expr1073756451 Token ::@expr13842 findsimplematch (@expr1073756453 tokenizer@var1221 .@expr14532 tokens (@expr14533 ) , "foo ( const NS :: Fred :: impl & , const NS :: Fred :: impl & ) const { }" ) ;
3761: $if $(@expr1073756456 $!@expr1073756457 $assert_ $(@expr1073756458 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3761 $, db@var1222 &&@expr14537 functionToken@var1227 &&@expr14538 functionToken@var1227 .@expr14539 function (@expr14540 ) &&@expr14541 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14544 functionScope &&@expr1073756467 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14548 tokenDef .@expr14549 linenr (@expr14550 ) ==@expr1073756473 7 &&@expr1073756474 functionToken@var1227 .@expr14539 function (@expr14540 ) .@expr14555 token .@expr14556 linenr (@expr14557 ) ==@expr1073756480 13 $) $) { $return
3762:
3763:
3764: ; }
3765: }
3766: {
3767: $Tokenizer $tokenizer@var1228 $(@expr1073756481 $&@expr1073756482 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1229 $; $db@var1229 $=@expr1073756483 $getSymbolDB_inner $(@expr1073756484 $tokenizer@var1228 $, "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};" $, $"test.cpp" $) $; $if $(@expr1073756485 $!@expr1073756486 $assert_ $(@expr1073756487 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3767 $, $db@var1229 $) $) { $return $; } $do ${ $} $while $(@expr1073756488 $false $)
3768:
|
3774:
3775: ;
3776:
3777: $if $(@expr1073756489 $!@expr1073756490 $assert_ $(@expr1073756491 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3777 $, db@var1229 !=@expr1073756492 nullptr $) $) { $return ; }
3778: $if $(@expr1073756493 $!@expr1073756494 $assert_ $(@expr1073756495 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3778 $, db@var1229 &&@expr1073756496 db@var1229 .@expr1073756497 scopeList@var1230 .@expr1073756498 size (@expr1073756499 ) ==@expr1073756500 8 $) $) { $return ; }
3779: $if $(@expr1073756501 $!@expr1073756502 $assert_ $(@expr1073756503 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3779 $, db@var1229 &&@expr1073756504 db@var1229 .@expr1073756505 classAndStructScopes@var1231 .@expr1073756506 size (@expr1073756507 ) ==@expr1073756508 2 $) $) { $return ; }
3780: $if $(@expr1073756509 $!@expr1073756510 $assert_ $(@expr1073756511 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3780 $, db@var1229 &&@expr1073756512 db@var1229 .@expr1073756513 typeList@var1232 .@expr1073756514 size (@expr1073756515 ) ==@expr1073756516 2 $) $) { $return ; }
3781: $if $(@expr1073756517 $!@expr1073756518 $assert_ $(@expr1073756519 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3781 $, db@var1229 &&@expr1073756520 db@var1229 .@expr1073756521 functionScopes@var1233 .@expr1073756522 size (@expr1073756523 ) ==@expr1073756524 4 $) $) { $return ; }
3782:
3783: const Token * functionToken@var1234 ; functionToken@var1234 =@expr1073756525 Token ::@expr13842 findsimplematch (@expr1073756527 tokenizer@var1228 .@expr14704 tokens (@expr14705 ) , "impl ( ) { }" ) ;
3784: $if $(@expr1073756530 $!@expr1073756531 $assert_ $(@expr1073756532 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3784 $, db@var1229 &&@expr14709 functionToken@var1234 &&@expr14710 functionToken@var1234 .@expr14711 function (@expr14712 ) &&@expr14713 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14716 functionScope &&@expr1073756541 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14720 tokenDef .@expr14721 linenr (@expr14722 ) ==@expr1073756547 5 &&@expr1073756548 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14727 token .@expr14728 linenr (@expr14729 ) ==@expr1073756554 5 $) $) { $return
3785:
3786:
3787: ; }
3788:
3789: functionToken@var1234 =@expr1073756555 Token ::@expr13842 findsimplematch (@expr1073756557 tokenizer@var1228 .@expr14704 tokens (@expr14705 ) , "~ impl ( ) { }" ) ;
3790: $if $(@expr1073756560 $!@expr1073756561 $assert_ $(@expr1073756562 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3790 $, db@var1229 &&@expr14709 functionToken@var1234 &&@expr1073756564 functionToken@var1234 .@expr14741 next (@expr14742 ) .@expr14743 function (@expr14744 ) &&@expr1073756569 functionToken@var1234 .@expr14741 next (@expr14742 ) .@expr14743 function (@expr14744 ) .@expr1073756574 functionScope &&@expr1073756575 functionToken@var1234 .@expr14741 next (@expr14742 ) .@expr14743 function (@expr14744 ) .@expr1073756580 tokenDef .@expr1073756581 linenr (@expr1073756582 ) ==@expr1073756583 6 &&@expr1073756584 functionToken@var1234 .@expr14741 next (@expr14742 ) .@expr14743 function (@expr14744 ) .@expr1073756589 token .@expr1073756590 linenr (@expr1073756591 ) ==@expr1073756592 6 $) $) { $return
3791:
3792:
3793: ; }
3794:
3795: functionToken@var1234 =@expr1073756593 Token ::@expr13842 findsimplematch (@expr1073756595 tokenizer@var1228 .@expr14704 tokens (@expr14705 ) , "impl ( const impl & ) { }" ) ;
3796: $if $(@expr1073756598 $!@expr1073756599 $assert_ $(@expr1073756600 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3796 $, db@var1229 &&@expr14709 functionToken@var1234 &&@expr14710 functionToken@var1234 .@expr14711 function (@expr14712 ) &&@expr14713 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14716 functionScope &&@expr1073756609 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14720 tokenDef .@expr14721 linenr (@expr14722 ) ==@expr1073756615 7 &&@expr1073756616 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14727 token .@expr14728 linenr (@expr14729 ) ==@expr1073756622 7 $) $) { $return
3797:
3798:
3799: ; }
3800:
3801: functionToken@var1234 =@expr1073756623 Token ::@expr13842 findsimplematch (@expr1073756625 tokenizer@var1228 .@expr14704 tokens (@expr14705 ) , "foo ( const impl & , const impl & ) const { }" ) ;
3802: $if $(@expr1073756628 $!@expr1073756629 $assert_ $(@expr1073756630 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3802 $, db@var1229 &&@expr14709 functionToken@var1234 &&@expr14710 functionToken@var1234 .@expr14711 function (@expr14712 ) &&@expr14713 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14716 functionScope &&@expr1073756639 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14720 tokenDef .@expr14721 linenr (@expr14722 ) ==@expr1073756645 8 &&@expr1073756646 functionToken@var1234 .@expr14711 function (@expr14712 ) .@expr14727 token .@expr14728 linenr (@expr14729 ) ==@expr1073756652 8 $) $) { $return
3803:
3804:
3805: ; }
3806: }
3807: {
3808: $Tokenizer $tokenizer@var1235 $(@expr1073756653 $&@expr1073756654 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1236 $; $db@var1236 $=@expr1073756655 $getSymbolDB_inner $(@expr1073756656 $tokenizer@var1235 $, "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nNS::Fred::impl::impl() { }\nNS::Fred::impl::~impl() { }\nNS::Fred::impl::impl(const NS::Fred::impl &) { }\nvoid NS::Fred::impl::foo(const NS::Fred::impl &, const NS::Fred::impl &) const { }" $, $"test.cpp" $) $; $if $(@expr1073756657 $!@expr1073756658 $assert_ $(@expr1073756659 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3808 $, $db@var1236 $) $) { $return $; } $do ${ $} $while $(@expr1073756660 $false $)
3809:
|
3819:
3820: ;
3821:
3822: $if $(@expr1073756661 $!@expr1073756662 $assert_ $(@expr1073756663 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3822 $, db@var1236 !=@expr1073756664 nullptr $) $) { $return ; }
3823: $if $(@expr1073756665 $!@expr1073756666 $assert_ $(@expr1073756667 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3823 $, db@var1236 &&@expr1073756668 db@var1236 .@expr1073756669 scopeList@var1237 .@expr1073756670 size (@expr1073756671 ) ==@expr1073756672 8 $) $) { $return ; }
3824: $if $(@expr1073756673 $!@expr1073756674 $assert_ $(@expr1073756675 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3824 $, db@var1236 &&@expr1073756676 db@var1236 .@expr1073756677 classAndStructScopes@var1238 .@expr1073756678 size (@expr1073756679 ) ==@expr1073756680 2 $) $) { $return ; }
3825: $if $(@expr1073756681 $!@expr1073756682 $assert_ $(@expr1073756683 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3825 $, db@var1236 &&@expr1073756684 db@var1236 .@expr1073756685 typeList@var1239 .@expr1073756686 size (@expr1073756687 ) ==@expr1073756688 2 $) $) { $return ; }
3826: $if $(@expr1073756689 $!@expr1073756690 $assert_ $(@expr1073756691 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3826 $, db@var1236 &&@expr1073756692 db@var1236 .@expr1073756693 functionScopes@var1240 .@expr1073756694 size (@expr1073756695 ) ==@expr1073756696 4 $) $) { $return ; }
3827:
3828: const Token * functionToken@var1241 ; functionToken@var1241 =@expr1073756697 Token ::@expr13842 findsimplematch (@expr1073756699 tokenizer@var1235 .@expr14876 tokens (@expr14877 ) , "impl ( ) { }" ) ;
3829: $if $(@expr1073756702 $!@expr1073756703 $assert_ $(@expr1073756704 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3829 $, db@var1236 &&@expr14881 functionToken@var1241 &&@expr14882 functionToken@var1241 .@expr14883 function (@expr14884 ) &&@expr14885 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14888 functionScope &&@expr1073756713 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14892 tokenDef .@expr14893 linenr (@expr14894 ) ==@expr1073756719 5 &&@expr1073756720 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14899 token .@expr14900 linenr (@expr14901 ) ==@expr1073756726 10 $) $) { $return
3830:
3831:
3832: ; }
3833:
3834: functionToken@var1241 =@expr1073756727 Token ::@expr13842 findsimplematch (@expr1073756729 tokenizer@var1235 .@expr14876 tokens (@expr14877 ) , "~ impl ( ) { }" ) ;
3835: $if $(@expr1073756732 $!@expr1073756733 $assert_ $(@expr1073756734 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3835 $, db@var1236 &&@expr14881 functionToken@var1241 &&@expr1073756736 functionToken@var1241 .@expr14913 next (@expr14914 ) .@expr14915 function (@expr14916 ) &&@expr1073756741 functionToken@var1241 .@expr14913 next (@expr14914 ) .@expr14915 function (@expr14916 ) .@expr1073756746 functionScope &&@expr1073756747 functionToken@var1241 .@expr14913 next (@expr14914 ) .@expr14915 function (@expr14916 ) .@expr1073756752 tokenDef .@expr1073756753 linenr (@expr1073756754 ) ==@expr1073756755 6 &&@expr1073756756 functionToken@var1241 .@expr14913 next (@expr14914 ) .@expr14915 function (@expr14916 ) .@expr1073756761 token .@expr1073756762 linenr (@expr1073756763 ) ==@expr1073756764 11 $) $) { $return
3836:
3837:
3838: ; }
3839:
3840: functionToken@var1241 =@expr1073756765 Token ::@expr13842 findsimplematch (@expr1073756767 tokenizer@var1235 .@expr14876 tokens (@expr14877 ) , "impl ( const NS :: Fred :: impl & ) { }" ) ;
3841: $if $(@expr1073756770 $!@expr1073756771 $assert_ $(@expr1073756772 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3841 $, db@var1236 &&@expr14881 functionToken@var1241 &&@expr14882 functionToken@var1241 .@expr14883 function (@expr14884 ) &&@expr14885 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14888 functionScope &&@expr1073756781 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14892 tokenDef .@expr14893 linenr (@expr14894 ) ==@expr1073756787 7 &&@expr1073756788 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14899 token .@expr14900 linenr (@expr14901 ) ==@expr1073756794 12 $) $) { $return
3842:
3843:
3844: ; }
3845:
3846: functionToken@var1241 =@expr1073756795 Token ::@expr13842 findsimplematch (@expr1073756797 tokenizer@var1235 .@expr14876 tokens (@expr14877 ) , "foo ( const NS :: Fred :: impl & , const NS :: Fred :: impl & ) const { }" ) ;
3847: $if $(@expr1073756800 $!@expr1073756801 $assert_ $(@expr1073756802 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3847 $, db@var1236 &&@expr14881 functionToken@var1241 &&@expr14882 functionToken@var1241 .@expr14883 function (@expr14884 ) &&@expr14885 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14888 functionScope &&@expr1073756811 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14892 tokenDef .@expr14893 linenr (@expr14894 ) ==@expr1073756817 8 &&@expr1073756818 functionToken@var1241 .@expr14883 function (@expr14884 ) .@expr14899 token .@expr14900 linenr (@expr14901 ) ==@expr1073756824 13 $) $) { $return
3848:
3849:
3850: ; }
3851: }
3852: {
3853: $Tokenizer $tokenizer@var1242 $(@expr1073756825 $&@expr1073756826 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1243 $; $db@var1243 $=@expr1073756827 $getSymbolDB_inner $(@expr1073756828 $tokenizer@var1242 $, "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nnamespace NS {\n    Fred::impl::impl() { }\n    Fred::impl::~impl() { }\n    Fred::impl::impl(const Fred::impl &) { }\n    void Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }\n}" $, $"test.cpp" $) $; $if $(@expr1073756829 $!@expr1073756830 $assert_ $(@expr1073756831 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3853 $, $db@var1243 $) $) { $return $; } $do ${ $} $while $(@expr1073756832 $false $)
3854:
|
3866:
3867: ;
3868:
3869: $if $(@expr1073756833 $!@expr1073756834 $assert_ $(@expr1073756835 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3869 $, db@var1243 !=@expr1073756836 nullptr $) $) { $return ; }
3870: $if $(@expr1073756837 $!@expr1073756838 $assert_ $(@expr1073756839 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3870 $, db@var1243 &&@expr1073756840 db@var1243 .@expr1073756841 scopeList@var1244 .@expr1073756842 size (@expr1073756843 ) ==@expr1073756844 8 $) $) { $return ; }
3871: $if $(@expr1073756845 $!@expr1073756846 $assert_ $(@expr1073756847 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3871 $, db@var1243 &&@expr1073756848 db@var1243 .@expr1073756849 classAndStructScopes@var1245 .@expr1073756850 size (@expr1073756851 ) ==@expr1073756852 2 $) $) { $return ; }
3872: $if $(@expr1073756853 $!@expr1073756854 $assert_ $(@expr1073756855 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3872 $, db@var1243 &&@expr1073756856 db@var1243 .@expr1073756857 typeList@var1246 .@expr1073756858 size (@expr1073756859 ) ==@expr1073756860 2 $) $) { $return ; }
3873: $if $(@expr1073756861 $!@expr1073756862 $assert_ $(@expr1073756863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3873 $, db@var1243 &&@expr1073756864 db@var1243 .@expr1073756865 functionScopes@var1247 .@expr1073756866 size (@expr1073756867 ) ==@expr1073756868 4 $) $) { $return ; }
3874:
3875: const Token * functionToken@var1248 ; functionToken@var1248 =@expr1073756869 Token ::@expr13842 findsimplematch (@expr1073756871 tokenizer@var1242 .@expr15048 tokens (@expr15049 ) , "impl ( ) { }" ) ;
3876: $if $(@expr1073756874 $!@expr1073756875 $assert_ $(@expr1073756876 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3876 $, db@var1243 &&@expr15053 functionToken@var1248 &&@expr15054 functionToken@var1248 .@expr15055 function (@expr15056 ) &&@expr15057 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15060 functionScope &&@expr1073756885 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15064 tokenDef .@expr15065 linenr (@expr15066 ) ==@expr1073756891 5 &&@expr1073756892 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15071 token .@expr15072 linenr (@expr15073 ) ==@expr1073756898 11 $) $) { $return
3877:
3878:
3879: ; }
3880:
3881: functionToken@var1248 =@expr1073756899 Token ::@expr13842 findsimplematch (@expr1073756901 tokenizer@var1242 .@expr15048 tokens (@expr15049 ) , "~ impl ( ) { }" ) ;
3882: $if $(@expr1073756904 $!@expr1073756905 $assert_ $(@expr1073756906 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3882 $, db@var1243 &&@expr15053 functionToken@var1248 &&@expr1073756908 functionToken@var1248 .@expr15085 next (@expr15086 ) .@expr15087 function (@expr15088 ) &&@expr1073756913 functionToken@var1248 .@expr15085 next (@expr15086 ) .@expr15087 function (@expr15088 ) .@expr1073756918 functionScope &&@expr1073756919 functionToken@var1248 .@expr15085 next (@expr15086 ) .@expr15087 function (@expr15088 ) .@expr1073756924 tokenDef .@expr1073756925 linenr (@expr1073756926 ) ==@expr1073756927 6 &&@expr1073756928 functionToken@var1248 .@expr15085 next (@expr15086 ) .@expr15087 function (@expr15088 ) .@expr1073756933 token .@expr1073756934 linenr (@expr1073756935 ) ==@expr1073756936 12 $) $) { $return
3883:
3884:
3885: ; }
3886:
3887: functionToken@var1248 =@expr1073756937 Token ::@expr13842 findsimplematch (@expr1073756939 tokenizer@var1242 .@expr15048 tokens (@expr15049 ) , "impl ( const Fred :: impl & ) { }" ) ;
3888: $if $(@expr1073756942 $!@expr1073756943 $assert_ $(@expr1073756944 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3888 $, db@var1243 &&@expr15053 functionToken@var1248 &&@expr15054 functionToken@var1248 .@expr15055 function (@expr15056 ) &&@expr15057 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15060 functionScope &&@expr1073756953 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15064 tokenDef .@expr15065 linenr (@expr15066 ) ==@expr1073756959 7 &&@expr1073756960 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15071 token .@expr15072 linenr (@expr15073 ) ==@expr1073756966 13 $) $) { $return
3889:
3890:
3891: ; }
3892:
3893: functionToken@var1248 =@expr1073756967 Token ::@expr13842 findsimplematch (@expr1073756969 tokenizer@var1242 .@expr15048 tokens (@expr15049 ) , "foo ( const Fred :: impl & , const Fred :: impl & ) const { }" ) ;
3894: $if $(@expr1073756972 $!@expr1073756973 $assert_ $(@expr1073756974 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3894 $, db@var1243 &&@expr15053 functionToken@var1248 &&@expr15054 functionToken@var1248 .@expr15055 function (@expr15056 ) &&@expr15057 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15060 functionScope &&@expr1073756983 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15064 tokenDef .@expr15065 linenr (@expr15066 ) ==@expr1073756989 8 &&@expr1073756990 functionToken@var1248 .@expr15055 function (@expr15056 ) .@expr15071 token .@expr15072 linenr (@expr15073 ) ==@expr1073756996 14 $) $) { $return
3895:
3896:
3897: ; }
3898: }
3899: {
3900: $Tokenizer $tokenizer@var1249 $(@expr1073756997 $&@expr1073756998 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1250 $; $db@var1250 $=@expr1073756999 $getSymbolDB_inner $(@expr1073757000 $tokenizer@var1249 $, "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nusing namespace NS;\nFred::impl::impl() { }\nFred::impl::~impl() { }\nFred::impl::impl(const Fred::impl &) { }\nvoid Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }" $, $"test.cpp" $) $; $if $(@expr1073757001 $!@expr1073757002 $assert_ $(@expr1073757003 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3900 $, $db@var1250 $) $) { $return $; } $do ${ $} $while $(@expr1073757004 $false $)
3901:
|
3912:
3913: ;
3914:
3915: $if $(@expr1073757005 $!@expr1073757006 $assert_ $(@expr1073757007 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3915 $, db@var1250 !=@expr1073757008 nullptr $) $) { $return ; }
3916: $if $(@expr1073757009 $!@expr1073757010 $assert_ $(@expr1073757011 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3916 $, db@var1250 &&@expr1073757012 db@var1250 .@expr1073757013 scopeList@var1251 .@expr1073757014 size (@expr1073757015 ) ==@expr1073757016 8 $) $) { $return ; }
3917: $if $(@expr1073757017 $!@expr1073757018 $assert_ $(@expr1073757019 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3917 $, db@var1250 &&@expr1073757020 db@var1250 .@expr1073757021 classAndStructScopes@var1252 .@expr1073757022 size (@expr1073757023 ) ==@expr1073757024 2 $) $) { $return ; }
3918: $if $(@expr1073757025 $!@expr1073757026 $assert_ $(@expr1073757027 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3918 $, db@var1250 &&@expr1073757028 db@var1250 .@expr1073757029 typeList@var1253 .@expr1073757030 size (@expr1073757031 ) ==@expr1073757032 2 $) $) { $return ; }
3919: $if $(@expr1073757033 $!@expr1073757034 $assert_ $(@expr1073757035 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3919 $, db@var1250 &&@expr1073757036 db@var1250 .@expr1073757037 functionScopes@var1254 .@expr1073757038 size (@expr1073757039 ) ==@expr1073757040 4 $) $) { $return ; }
3920:
3921: const Token * functionToken@var1255 ; functionToken@var1255 =@expr1073757041 Token ::@expr13842 findsimplematch (@expr1073757043 tokenizer@var1249 .@expr15220 tokens (@expr15221 ) , "impl ( ) { }" ) ;
3922: $if $(@expr1073757046 $!@expr1073757047 $assert_ $(@expr1073757048 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3922 $, db@var1250 &&@expr15225 functionToken@var1255 &&@expr15226 functionToken@var1255 .@expr15227 function (@expr15228 ) &&@expr15229 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15232 functionScope &&@expr1073757057 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15236 tokenDef .@expr15237 linenr (@expr15238 ) ==@expr1073757063 5 &&@expr1073757064 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15243 token .@expr15244 linenr (@expr15245 ) ==@expr1073757070 11 $) $) { $return
3923:
3924:
3925: ; }
3926:
3927: functionToken@var1255 =@expr1073757071 Token ::@expr13842 findsimplematch (@expr1073757073 tokenizer@var1249 .@expr15220 tokens (@expr15221 ) , "~ impl ( ) { }" ) ;
3928: $if $(@expr1073757076 $!@expr1073757077 $assert_ $(@expr1073757078 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3928 $, db@var1250 &&@expr15225 functionToken@var1255 &&@expr1073757080 functionToken@var1255 .@expr15257 next (@expr15258 ) .@expr15259 function (@expr15260 ) &&@expr1073757085 functionToken@var1255 .@expr15257 next (@expr15258 ) .@expr15259 function (@expr15260 ) .@expr1073757090 functionScope &&@expr1073757091 functionToken@var1255 .@expr15257 next (@expr15258 ) .@expr15259 function (@expr15260 ) .@expr1073757096 tokenDef .@expr1073757097 linenr (@expr1073757098 ) ==@expr1073757099 6 &&@expr1073757100 functionToken@var1255 .@expr15257 next (@expr15258 ) .@expr15259 function (@expr15260 ) .@expr1073757105 token .@expr1073757106 linenr (@expr1073757107 ) ==@expr1073757108 12 $) $) { $return
3929:
3930:
3931: ; }
3932:
3933: functionToken@var1255 =@expr1073757109 Token ::@expr13842 findsimplematch (@expr1073757111 tokenizer@var1249 .@expr15220 tokens (@expr15221 ) , "impl ( const Fred :: impl & ) { }" ) ;
3934: $if $(@expr1073757114 $!@expr1073757115 $assert_ $(@expr1073757116 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3934 $, db@var1250 &&@expr15225 functionToken@var1255 &&@expr15226 functionToken@var1255 .@expr15227 function (@expr15228 ) &&@expr15229 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15232 functionScope &&@expr1073757125 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15236 tokenDef .@expr15237 linenr (@expr15238 ) ==@expr1073757131 7 &&@expr1073757132 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15243 token .@expr15244 linenr (@expr15245 ) ==@expr1073757138 13 $) $) { $return
3935:
3936:
3937: ; }
3938:
3939: functionToken@var1255 =@expr1073757139 Token ::@expr13842 findsimplematch (@expr1073757141 tokenizer@var1249 .@expr15220 tokens (@expr15221 ) , "foo ( const Fred :: impl & , const Fred :: impl & ) const { }" ) ;
3940: $if $(@expr1073757144 $!@expr1073757145 $assert_ $(@expr1073757146 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3940 $, db@var1250 &&@expr15225 functionToken@var1255 &&@expr15226 functionToken@var1255 .@expr15227 function (@expr15228 ) &&@expr15229 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15232 functionScope &&@expr1073757155 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15236 tokenDef .@expr15237 linenr (@expr15238 ) ==@expr1073757161 8 &&@expr1073757162 functionToken@var1255 .@expr15227 function (@expr15228 ) .@expr15243 token .@expr15244 linenr (@expr15245 ) ==@expr1073757168 14 $) $) { $return
3941:
3942:
3943: ; }
3944: }
3945: {
3946: $Tokenizer $tokenizer@var1256 $(@expr1073757169 $&@expr1073757170 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1257 $; $db@var1257 $=@expr1073757171 $getSymbolDB_inner $(@expr1073757172 $tokenizer@var1256 $, "template <typename A> class Fred { struct impl; };\ntemplate <typename A> struct Fred<A>::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};" $, $"test.cpp" $) $; $if $(@expr1073757173 $!@expr1073757174 $assert_ $(@expr1073757175 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3946 $, $db@var1257 $) $) { $return $; } $do ${ $} $while $(@expr1073757176 $false $)
3947:
|
3951:
3952: ;
3953:
3954: $if $(@expr1073757177 $!@expr1073757178 $assert_ $(@expr1073757179 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3954 $, db@var1257 !=@expr1073757180 nullptr $) $) { $return ; }
3955: $if $(@expr1073757181 $!@expr1073757182 $assert_ $(@expr1073757183 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3955 $, db@var1257 &&@expr1073757184 db@var1257 .@expr1073757185 scopeList@var1258 .@expr1073757186 size (@expr1073757187 ) ==@expr1073757188 7 $) $) { $return ; }
3956: $if $(@expr1073757189 $!@expr1073757190 $assert_ $(@expr1073757191 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3956 $, db@var1257 &&@expr1073757192 db@var1257 .@expr1073757193 classAndStructScopes@var1259 .@expr1073757194 size (@expr1073757195 ) ==@expr1073757196 2 $) $) { $return ; }
3957: $if $(@expr1073757197 $!@expr1073757198 $assert_ $(@expr1073757199 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3957 $, db@var1257 &&@expr1073757200 db@var1257 .@expr1073757201 typeList@var1260 .@expr1073757202 size (@expr1073757203 ) ==@expr1073757204 2 $) $) { $return ; }
3958: $if $(@expr1073757205 $!@expr1073757206 $assert_ $(@expr1073757207 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3958 $, db@var1257 &&@expr1073757208 db@var1257 .@expr1073757209 functionScopes@var1261 .@expr1073757210 size (@expr1073757211 ) ==@expr1073757212 4 $) $) { $return ; }
3959:
3960: const Token * functionToken@var1262 ; functionToken@var1262 =@expr1073757213 Token ::@expr13842 findsimplematch (@expr1073757215 tokenizer@var1256 .@expr15392 tokens (@expr15393 ) , "impl ( ) { }" ) ;
3961: $if $(@expr1073757218 $!@expr1073757219 $assert_ $(@expr1073757220 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3961 $, db@var1257 &&@expr15397 functionToken@var1262 &&@expr15398 functionToken@var1262 .@expr15399 function (@expr15400 ) &&@expr15401 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15404 functionScope &&@expr1073757229 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15408 tokenDef .@expr15409 linenr (@expr15410 ) ==@expr1073757235 3 &&@expr1073757236 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15415 token .@expr15416 linenr (@expr15417 ) ==@expr1073757242 3 $) $) { $return
3962:
3963:
3964: ; }
3965:
3966: functionToken@var1262 =@expr1073757243 Token ::@expr13842 findsimplematch (@expr1073757245 tokenizer@var1256 .@expr15392 tokens (@expr15393 ) , "~ impl ( ) { }" ) ;
3967: $if $(@expr1073757248 $!@expr1073757249 $assert_ $(@expr1073757250 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3967 $, db@var1257 &&@expr15397 functionToken@var1262 &&@expr1073757252 functionToken@var1262 .@expr15429 next (@expr15430 ) .@expr15431 function (@expr15432 ) &&@expr1073757257 functionToken@var1262 .@expr15429 next (@expr15430 ) .@expr15431 function (@expr15432 ) .@expr1073757262 functionScope &&@expr1073757263 functionToken@var1262 .@expr15429 next (@expr15430 ) .@expr15431 function (@expr15432 ) .@expr1073757268 tokenDef .@expr1073757269 linenr (@expr1073757270 ) ==@expr1073757271 4 &&@expr1073757272 functionToken@var1262 .@expr15429 next (@expr15430 ) .@expr15431 function (@expr15432 ) .@expr1073757277 token .@expr1073757278 linenr (@expr1073757279 ) ==@expr1073757280 4 $) $) { $return
3968:
3969:
3970: ; }
3971:
3972: functionToken@var1262 =@expr1073757281 Token ::@expr13842 findsimplematch (@expr1073757283 tokenizer@var1256 .@expr15392 tokens (@expr15393 ) , "impl ( const impl & ) { }" ) ;
3973: $if $(@expr1073757286 $!@expr1073757287 $assert_ $(@expr1073757288 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3973 $, db@var1257 &&@expr15397 functionToken@var1262 &&@expr15398 functionToken@var1262 .@expr15399 function (@expr15400 ) &&@expr15401 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15404 functionScope &&@expr1073757297 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15408 tokenDef .@expr15409 linenr (@expr15410 ) ==@expr1073757303 5 &&@expr1073757304 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15415 token .@expr15416 linenr (@expr15417 ) ==@expr1073757310 5 $) $) { $return
3974:
3975:
3976: ; }
3977:
3978: functionToken@var1262 =@expr1073757311 Token ::@expr13842 findsimplematch (@expr1073757313 tokenizer@var1256 .@expr15392 tokens (@expr15393 ) , "foo ( const impl & , const impl & ) const { }" ) ;
3979: $if $(@expr1073757316 $!@expr1073757317 $assert_ $(@expr1073757318 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3979 $, db@var1257 &&@expr15397 functionToken@var1262 &&@expr15398 functionToken@var1262 .@expr15399 function (@expr15400 ) &&@expr15401 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15404 functionScope &&@expr1073757327 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15408 tokenDef .@expr15409 linenr (@expr15410 ) ==@expr1073757333 6 &&@expr1073757334 functionToken@var1262 .@expr15399 function (@expr15400 ) .@expr15415 token .@expr15416 linenr (@expr15417 ) ==@expr1073757340 6 $) $) { $return
3980:
3981:
3982: ; }
3983: }
3984: {
3985: $Tokenizer $tokenizer@var1263 $(@expr1073757341 $&@expr1073757342 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1264 $; $db@var1264 $=@expr1073757343 $getSymbolDB_inner $(@expr1073757344 $tokenizer@var1263 $, "template <typename A> class Fred { struct impl; };\ntemplate <typename A> struct Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\ntemplate <typename A> Fred<A>::impl::impl() { }\ntemplate <typename A> Fred<A>::impl::~impl() { }\ntemplate <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\ntemplate <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }" $, $"test.cpp" $) $; $if $(@expr1073757345 $!@expr1073757346 $assert_ $(@expr1073757347 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3985 $, $db@var1264 $) $) { $return $; } $do ${ $} $while $(@expr1073757348 $false $)
3986:
|
3994:
3995: ;
3996:
3997: $if $(@expr1073757349 $!@expr1073757350 $assert_ $(@expr1073757351 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3997 $, db@var1264 !=@expr1073757352 nullptr $) $) { $return ; }
3998: $if $(@expr1073757353 $!@expr1073757354 $assert_ $(@expr1073757355 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3998 $, db@var1264 &&@expr1073757356 db@var1264 .@expr1073757357 scopeList@var1265 .@expr1073757358 size (@expr1073757359 ) ==@expr1073757360 7 $) $) { $return ; }
3999: $if $(@expr1073757361 $!@expr1073757362 $assert_ $(@expr1073757363 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 3999 $, db@var1264 &&@expr1073757364 db@var1264 .@expr1073757365 classAndStructScopes@var1266 .@expr1073757366 size (@expr1073757367 ) ==@expr1073757368 2 $) $) { $return ; }
4000: $if $(@expr1073757369 $!@expr1073757370 $assert_ $(@expr1073757371 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4000 $, db@var1264 &&@expr1073757372 db@var1264 .@expr1073757373 typeList@var1267 .@expr1073757374 size (@expr1073757375 ) ==@expr1073757376 2 $) $) { $return ; }
4001: $if $(@expr1073757377 $!@expr1073757378 $assert_ $(@expr1073757379 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4001 $, db@var1264 &&@expr1073757380 db@var1264 .@expr1073757381 functionScopes@var1268 .@expr1073757382 size (@expr1073757383 ) ==@expr1073757384 4 $) $) { $return ; }
4002:
4003: const Token * functionToken@var1269 ; functionToken@var1269 =@expr1073757385 Token ::@expr13842 findsimplematch (@expr1073757387 tokenizer@var1263 .@expr15564 tokens (@expr15565 ) , "impl ( ) { }" ) ;
4004: $if $(@expr1073757390 $!@expr1073757391 $assert_ $(@expr1073757392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4004 $, db@var1264 &&@expr15569 functionToken@var1269 &&@expr15570 functionToken@var1269 .@expr15571 function (@expr15572 ) &&@expr15573 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15576 functionScope &&@expr1073757401 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15580 tokenDef .@expr15581 linenr (@expr15582 ) ==@expr1073757407 3 &&@expr1073757408 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15587 token .@expr15588 linenr (@expr15589 ) ==@expr1073757414 8 $) $) { $return
4005:
4006:
4007: ; }
4008:
4009: functionToken@var1269 =@expr1073757415 Token ::@expr13842 findsimplematch (@expr1073757417 tokenizer@var1263 .@expr15564 tokens (@expr15565 ) , "~ impl ( ) { }" ) ;
4010: $if $(@expr1073757420 $!@expr1073757421 $assert_ $(@expr1073757422 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4010 $, db@var1264 &&@expr15569 functionToken@var1269 &&@expr1073757424 functionToken@var1269 .@expr15601 next (@expr15602 ) .@expr15603 function (@expr15604 ) &&@expr1073757429 functionToken@var1269 .@expr15601 next (@expr15602 ) .@expr15603 function (@expr15604 ) .@expr1073757434 functionScope &&@expr1073757435 functionToken@var1269 .@expr15601 next (@expr15602 ) .@expr15603 function (@expr15604 ) .@expr1073757440 tokenDef .@expr1073757441 linenr (@expr1073757442 ) ==@expr1073757443 4 &&@expr1073757444 functionToken@var1269 .@expr15601 next (@expr15602 ) .@expr15603 function (@expr15604 ) .@expr1073757449 token .@expr1073757450 linenr (@expr1073757451 ) ==@expr1073757452 9 $) $) { $return
4011:
4012:
4013: ; }
4014:
4015: functionToken@var1269 =@expr1073757453 Token ::@expr13842 findsimplematch (@expr1073757455 tokenizer@var1263 .@expr15564 tokens (@expr15565 ) , "impl ( const Fred < A > :: impl & ) { }" ) ;
4016: $if $(@expr1073757458 $!@expr1073757459 $assert_ $(@expr1073757460 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4016 $, db@var1264 &&@expr15569 functionToken@var1269 &&@expr15570 functionToken@var1269 .@expr15571 function (@expr15572 ) &&@expr15573 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15576 functionScope &&@expr1073757469 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15580 tokenDef .@expr15581 linenr (@expr15582 ) ==@expr1073757475 5 &&@expr1073757476 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15587 token .@expr15588 linenr (@expr15589 ) ==@expr1073757482 10 $) $) { $return
4017:
4018:
4019: ; }
4020:
4021: functionToken@var1269 =@expr1073757483 Token ::@expr13842 findsimplematch (@expr1073757485 tokenizer@var1263 .@expr15564 tokens (@expr15565 ) , "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }" ) ;
4022: $if $(@expr1073757488 $!@expr1073757489 $assert_ $(@expr1073757490 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4022 $, db@var1264 &&@expr15569 functionToken@var1269 &&@expr15570 functionToken@var1269 .@expr15571 function (@expr15572 ) &&@expr15573 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15576 functionScope &&@expr1073757499 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15580 tokenDef .@expr15581 linenr (@expr15582 ) ==@expr1073757505 6 &&@expr1073757506 functionToken@var1269 .@expr15571 function (@expr15572 ) .@expr15587 token .@expr15588 linenr (@expr15589 ) ==@expr1073757512 11 $) $) { $return
4023:
4024:
4025: ; }
4026: }
4027: {
4028: $Tokenizer $tokenizer@var1270 $(@expr1073757513 $&@expr1073757514 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1271 $; $db@var1271 $=@expr1073757515 $getSymbolDB_inner $(@expr1073757516 $tokenizer@var1270 $, "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl() { }\n        ~impl() { }\n        impl(const impl &) { }\n        void foo(const impl &, const impl &) const { }\n    };\n}" $, $"test.cpp" $) $; $if $(@expr1073757517 $!@expr1073757518 $assert_ $(@expr1073757519 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4028 $, $db@var1271 $) $) { $return $; } $do ${ $} $while $(@expr1073757520 $false $)
4029:
|
4035:
4036: ;
4037:
4038: $if $(@expr1073757521 $!@expr1073757522 $assert_ $(@expr1073757523 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4038 $, db@var1271 !=@expr1073757524 nullptr $) $) { $return ; }
4039: $if $(@expr1073757525 $!@expr1073757526 $assert_ $(@expr1073757527 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4039 $, db@var1271 &&@expr1073757528 db@var1271 .@expr1073757529 scopeList@var1272 .@expr1073757530 size (@expr1073757531 ) ==@expr1073757532 8 $) $) { $return ; }
4040: $if $(@expr1073757533 $!@expr1073757534 $assert_ $(@expr1073757535 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4040 $, db@var1271 &&@expr1073757536 db@var1271 .@expr1073757537 classAndStructScopes@var1273 .@expr1073757538 size (@expr1073757539 ) ==@expr1073757540 2 $) $) { $return ; }
4041: $if $(@expr1073757541 $!@expr1073757542 $assert_ $(@expr1073757543 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4041 $, db@var1271 &&@expr1073757544 db@var1271 .@expr1073757545 typeList@var1274 .@expr1073757546 size (@expr1073757547 ) ==@expr1073757548 2 $) $) { $return ; }
4042: $if $(@expr1073757549 $!@expr1073757550 $assert_ $(@expr1073757551 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4042 $, db@var1271 &&@expr1073757552 db@var1271 .@expr1073757553 functionScopes@var1275 .@expr1073757554 size (@expr1073757555 ) ==@expr1073757556 4 $) $) { $return ; }
4043:
4044: const Token * functionToken@var1276 ; functionToken@var1276 =@expr1073757557 Token ::@expr13842 findsimplematch (@expr1073757559 tokenizer@var1270 .@expr15736 tokens (@expr15737 ) , "impl ( ) { }" ) ;
4045: $if $(@expr1073757562 $!@expr1073757563 $assert_ $(@expr1073757564 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4045 $, db@var1271 &&@expr15741 functionToken@var1276 &&@expr15742 functionToken@var1276 .@expr15743 function (@expr15744 ) &&@expr15745 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15748 functionScope &&@expr1073757573 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15752 tokenDef .@expr15753 linenr (@expr15754 ) ==@expr1073757579 4 &&@expr1073757580 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15759 token .@expr15760 linenr (@expr15761 ) ==@expr1073757586 4 $) $) { $return
4046:
4047:
4048: ; }
4049:
4050: functionToken@var1276 =@expr1073757587 Token ::@expr13842 findsimplematch (@expr1073757589 tokenizer@var1270 .@expr15736 tokens (@expr15737 ) , "~ impl ( ) { }" ) ;
4051: $if $(@expr1073757592 $!@expr1073757593 $assert_ $(@expr1073757594 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4051 $, db@var1271 &&@expr15741 functionToken@var1276 &&@expr1073757596 functionToken@var1276 .@expr15773 next (@expr15774 ) .@expr15775 function (@expr15776 ) &&@expr1073757601 functionToken@var1276 .@expr15773 next (@expr15774 ) .@expr15775 function (@expr15776 ) .@expr1073757606 functionScope &&@expr1073757607 functionToken@var1276 .@expr15773 next (@expr15774 ) .@expr15775 function (@expr15776 ) .@expr1073757612 tokenDef .@expr1073757613 linenr (@expr1073757614 ) ==@expr1073757615 5 &&@expr1073757616 functionToken@var1276 .@expr15773 next (@expr15774 ) .@expr15775 function (@expr15776 ) .@expr1073757621 token .@expr1073757622 linenr (@expr1073757623 ) ==@expr1073757624 5 $) $) { $return
4052:
4053:
4054: ; }
4055:
4056: functionToken@var1276 =@expr1073757625 Token ::@expr13842 findsimplematch (@expr1073757627 tokenizer@var1270 .@expr15736 tokens (@expr15737 ) , "impl ( const impl & ) { }" ) ;
4057: $if $(@expr1073757630 $!@expr1073757631 $assert_ $(@expr1073757632 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4057 $, db@var1271 &&@expr15741 functionToken@var1276 &&@expr15742 functionToken@var1276 .@expr15743 function (@expr15744 ) &&@expr15745 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15748 functionScope &&@expr1073757641 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15752 tokenDef .@expr15753 linenr (@expr15754 ) ==@expr1073757647 6 &&@expr1073757648 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15759 token .@expr15760 linenr (@expr15761 ) ==@expr1073757654 6 $) $) { $return
4058:
4059:
4060: ; }
4061:
4062: functionToken@var1276 =@expr1073757655 Token ::@expr13842 findsimplematch (@expr1073757657 tokenizer@var1270 .@expr15736 tokens (@expr15737 ) , "foo ( const impl & , const impl & ) const { }" ) ;
4063: $if $(@expr1073757660 $!@expr1073757661 $assert_ $(@expr1073757662 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4063 $, db@var1271 &&@expr15741 functionToken@var1276 &&@expr15742 functionToken@var1276 .@expr15743 function (@expr15744 ) &&@expr15745 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15748 functionScope &&@expr1073757671 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15752 tokenDef .@expr15753 linenr (@expr15754 ) ==@expr1073757677 7 &&@expr1073757678 functionToken@var1276 .@expr15743 function (@expr15744 ) .@expr15759 token .@expr15760 linenr (@expr15761 ) ==@expr1073757684 7 $) $) { $return
4064:
4065:
4066: ; }
4067: }
4068: {
4069: $Tokenizer $tokenizer@var1277 $(@expr1073757685 $&@expr1073757686 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1278 $; $db@var1278 $=@expr1073757687 $getSymbolDB_inner $(@expr1073757688 $tokenizer@var1277 $, "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n    template <typename A> Fred<A>::impl::impl() { }\n    template <typename A> Fred<A>::impl::~impl() { }\n    template <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\n    template <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }\n}" $, $"test.cpp" $) $; $if $(@expr1073757689 $!@expr1073757690 $assert_ $(@expr1073757691 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4069 $, $db@var1278 $) $) { $return $; } $do ${ $} $while $(@expr1073757692 $false $)
4070:
|
4080:
4081: ;
4082:
4083: $if $(@expr1073757693 $!@expr1073757694 $assert_ $(@expr1073757695 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4083 $, db@var1278 !=@expr1073757696 nullptr $) $) { $return ; }
4084: $if $(@expr1073757697 $!@expr1073757698 $assert_ $(@expr1073757699 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4084 $, db@var1278 &&@expr1073757700 db@var1278 .@expr1073757701 scopeList@var1279 .@expr1073757702 size (@expr1073757703 ) ==@expr1073757704 8 $) $) { $return ; }
4085: $if $(@expr1073757705 $!@expr1073757706 $assert_ $(@expr1073757707 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4085 $, db@var1278 &&@expr1073757708 db@var1278 .@expr1073757709 classAndStructScopes@var1280 .@expr1073757710 size (@expr1073757711 ) ==@expr1073757712 2 $) $) { $return ; }
4086: $if $(@expr1073757713 $!@expr1073757714 $assert_ $(@expr1073757715 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4086 $, db@var1278 &&@expr1073757716 db@var1278 .@expr1073757717 typeList@var1281 .@expr1073757718 size (@expr1073757719 ) ==@expr1073757720 2 $) $) { $return ; }
4087: $if $(@expr1073757721 $!@expr1073757722 $assert_ $(@expr1073757723 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4087 $, db@var1278 &&@expr1073757724 db@var1278 .@expr1073757725 functionScopes@var1282 .@expr1073757726 size (@expr1073757727 ) ==@expr1073757728 4 $) $) { $return ; }
4088:
4089: const Token * functionToken@var1283 ; functionToken@var1283 =@expr1073757729 Token ::@expr13842 findsimplematch (@expr1073757731 tokenizer@var1277 .@expr15908 tokens (@expr15909 ) , "impl ( ) { }" ) ;
4090: $if $(@expr1073757734 $!@expr1073757735 $assert_ $(@expr1073757736 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4090 $, db@var1278 &&@expr15913 functionToken@var1283 &&@expr15914 functionToken@var1283 .@expr15915 function (@expr15916 ) &&@expr15917 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15920 functionScope &&@expr1073757745 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15924 tokenDef .@expr15925 linenr (@expr15926 ) ==@expr1073757751 4 &&@expr1073757752 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15931 token .@expr15932 linenr (@expr15933 ) ==@expr1073757758 9 $) $) { $return
4091:
4092:
4093: ; }
4094:
4095: functionToken@var1283 =@expr1073757759 Token ::@expr13842 findsimplematch (@expr1073757761 tokenizer@var1277 .@expr15908 tokens (@expr15909 ) , "~ impl ( ) { }" ) ;
4096: $if $(@expr1073757764 $!@expr1073757765 $assert_ $(@expr1073757766 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4096 $, db@var1278 &&@expr15913 functionToken@var1283 &&@expr1073757768 functionToken@var1283 .@expr15945 next (@expr15946 ) .@expr15947 function (@expr15948 ) &&@expr1073757773 functionToken@var1283 .@expr15945 next (@expr15946 ) .@expr15947 function (@expr15948 ) .@expr1073757778 functionScope &&@expr1073757779 functionToken@var1283 .@expr15945 next (@expr15946 ) .@expr15947 function (@expr15948 ) .@expr1073757784 tokenDef .@expr1073757785 linenr (@expr1073757786 ) ==@expr1073757787 5 &&@expr1073757788 functionToken@var1283 .@expr15945 next (@expr15946 ) .@expr15947 function (@expr15948 ) .@expr1073757793 token .@expr1073757794 linenr (@expr1073757795 ) ==@expr1073757796 10 $) $) { $return
4097:
4098:
4099: ; }
4100:
4101: functionToken@var1283 =@expr1073757797 Token ::@expr13842 findsimplematch (@expr1073757799 tokenizer@var1277 .@expr15908 tokens (@expr15909 ) , "impl ( const Fred < A > :: impl & ) { }" ) ;
4102: $if $(@expr1073757802 $!@expr1073757803 $assert_ $(@expr1073757804 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4102 $, db@var1278 &&@expr15913 functionToken@var1283 &&@expr15914 functionToken@var1283 .@expr15915 function (@expr15916 ) &&@expr15917 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15920 functionScope &&@expr1073757813 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15924 tokenDef .@expr15925 linenr (@expr15926 ) ==@expr1073757819 6 &&@expr1073757820 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15931 token .@expr15932 linenr (@expr15933 ) ==@expr1073757826 11 $) $) { $return
4103:
4104:
4105: ; }
4106:
4107: functionToken@var1283 =@expr1073757827 Token ::@expr13842 findsimplematch (@expr1073757829 tokenizer@var1277 .@expr15908 tokens (@expr15909 ) , "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }" ) ;
4108: $if $(@expr1073757832 $!@expr1073757833 $assert_ $(@expr1073757834 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4108 $, db@var1278 &&@expr15913 functionToken@var1283 &&@expr15914 functionToken@var1283 .@expr15915 function (@expr15916 ) &&@expr15917 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15920 functionScope &&@expr1073757843 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15924 tokenDef .@expr15925 linenr (@expr15926 ) ==@expr1073757849 7 &&@expr1073757850 functionToken@var1283 .@expr15915 function (@expr15916 ) .@expr15931 token .@expr15932 linenr (@expr15933 ) ==@expr1073757856 12 $) $) { $return
4109:
4110:
4111: ; }
4112: }
4113: {
4114: $Tokenizer $tokenizer@var1284 $(@expr1073757857 $&@expr1073757858 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1285 $; $db@var1285 $=@expr1073757859 $getSymbolDB_inner $(@expr1073757860 $tokenizer@var1284 $, "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n}\ntemplate <typename A> NS::Fred<A>::impl::impl() { }\ntemplate <typename A> NS::Fred<A>::impl::~impl() { }\ntemplate <typename A> NS::Fred<A>::impl::impl(const NS::Fred<A>::impl &) { }\ntemplate <typename A> void NS::Fred<A>::impl::foo(const NS::Fred<A>::impl &, const NS::Fred<A>::impl &) const { }" $, $"test.cpp" $) $; $if $(@expr1073757861 $!@expr1073757862 $assert_ $(@expr1073757863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4114 $, $db@var1285 $) $) { $return $; } $do ${ $} $while $(@expr1073757864 $false $)
4115:
|
4125:
4126: ;
4127:
4128: $if $(@expr1073757865 $!@expr1073757866 $assert_ $(@expr1073757867 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4128 $, db@var1285 !=@expr1073757868 nullptr $) $) { $return ; }
4129: $if $(@expr1073757869 $!@expr1073757870 $assert_ $(@expr1073757871 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4129 $, db@var1285 &&@expr1073757872 db@var1285 .@expr1073757873 scopeList@var1286 .@expr1073757874 size (@expr1073757875 ) ==@expr1073757876 8 $) $) { $return ; }
4130: $if $(@expr1073757877 $!@expr1073757878 $assert_ $(@expr1073757879 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4130 $, db@var1285 &&@expr1073757880 db@var1285 .@expr1073757881 classAndStructScopes@var1287 .@expr1073757882 size (@expr1073757883 ) ==@expr1073757884 2 $) $) { $return ; }
4131: $if $(@expr1073757885 $!@expr1073757886 $assert_ $(@expr1073757887 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4131 $, db@var1285 &&@expr1073757888 db@var1285 .@expr1073757889 typeList@var1288 .@expr1073757890 size (@expr1073757891 ) ==@expr1073757892 2 $) $) { $return ; }
4132: $if $(@expr1073757893 $!@expr1073757894 $assert_ $(@expr1073757895 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4132 $, db@var1285 &&@expr1073757896 db@var1285 .@expr1073757897 functionScopes@var1289 .@expr1073757898 size (@expr1073757899 ) ==@expr1073757900 4 $) $) { $return ; }
4133:
4134: const Token * functionToken@var1290 ; functionToken@var1290 =@expr1073757901 Token ::@expr13842 findsimplematch (@expr1073757903 tokenizer@var1284 .@expr16080 tokens (@expr16081 ) , "impl ( ) { }" ) ;
4135: $if $(@expr1073757906 $!@expr1073757907 $assert_ $(@expr1073757908 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4135 $, db@var1285 &&@expr16085 functionToken@var1290 &&@expr16086 functionToken@var1290 .@expr16087 function (@expr16088 ) &&@expr16089 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16092 functionScope &&@expr1073757917 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16096 tokenDef .@expr16097 linenr (@expr16098 ) ==@expr1073757923 4 &&@expr1073757924 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16103 token .@expr16104 linenr (@expr16105 ) ==@expr1073757930 10 $) $) { $return
4136:
4137:
4138: ; }
4139:
4140: functionToken@var1290 =@expr1073757931 Token ::@expr13842 findsimplematch (@expr1073757933 tokenizer@var1284 .@expr16080 tokens (@expr16081 ) , "~ impl ( ) { }" ) ;
4141: $if $(@expr1073757936 $!@expr1073757937 $assert_ $(@expr1073757938 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4141 $, db@var1285 &&@expr16085 functionToken@var1290 &&@expr1073757940 functionToken@var1290 .@expr16117 next (@expr16118 ) .@expr16119 function (@expr16120 ) &&@expr1073757945 functionToken@var1290 .@expr16117 next (@expr16118 ) .@expr16119 function (@expr16120 ) .@expr1073757950 functionScope &&@expr1073757951 functionToken@var1290 .@expr16117 next (@expr16118 ) .@expr16119 function (@expr16120 ) .@expr1073757956 tokenDef .@expr1073757957 linenr (@expr1073757958 ) ==@expr1073757959 5 &&@expr1073757960 functionToken@var1290 .@expr16117 next (@expr16118 ) .@expr16119 function (@expr16120 ) .@expr1073757965 token .@expr1073757966 linenr (@expr1073757967 ) ==@expr1073757968 11 $) $) { $return
4142:
4143:
4144: ; }
4145:
4146: functionToken@var1290 =@expr1073757969 Token ::@expr13842 findsimplematch (@expr1073757971 tokenizer@var1284 .@expr16080 tokens (@expr16081 ) , "impl ( const NS :: Fred < A > :: impl & ) { }" ) ;
4147: $if $(@expr1073757974 $!@expr1073757975 $assert_ $(@expr1073757976 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4147 $, db@var1285 &&@expr16085 functionToken@var1290 &&@expr16086 functionToken@var1290 .@expr16087 function (@expr16088 ) &&@expr16089 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16092 functionScope &&@expr1073757985 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16096 tokenDef .@expr16097 linenr (@expr16098 ) ==@expr1073757991 6 &&@expr1073757992 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16103 token .@expr16104 linenr (@expr16105 ) ==@expr1073757998 12 $) $) { $return
4148:
4149:
4150: ; }
4151:
4152: functionToken@var1290 =@expr1073757999 Token ::@expr13842 findsimplematch (@expr1073758001 tokenizer@var1284 .@expr16080 tokens (@expr16081 ) , "foo ( const NS :: Fred < A > :: impl & , const NS :: Fred < A > :: impl & ) const { }" ) ;
4153: $if $(@expr1073758004 $!@expr1073758005 $assert_ $(@expr1073758006 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4153 $, db@var1285 &&@expr16085 functionToken@var1290 &&@expr16086 functionToken@var1290 .@expr16087 function (@expr16088 ) &&@expr16089 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16092 functionScope &&@expr1073758015 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16096 tokenDef .@expr16097 linenr (@expr16098 ) ==@expr1073758021 7 &&@expr1073758022 functionToken@var1290 .@expr16087 function (@expr16088 ) .@expr16103 token .@expr16104 linenr (@expr16105 ) ==@expr1073758028 13 $) $) { $return
4154:
4155:
4156: ; }
4157: }
4158: {
4159: $Tokenizer $tokenizer@var1291 $(@expr1073758029 $&@expr1073758030 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1292 $; $db@var1292 $=@expr1073758031 $getSymbolDB_inner $(@expr1073758032 $tokenizer@var1291 $, "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};" $, $"test.cpp" $) $; $if $(@expr1073758033 $!@expr1073758034 $assert_ $(@expr1073758035 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4159 $, $db@var1292 $) $) { $return $; } $do ${ $} $while $(@expr1073758036 $false $)
4160:
|
4166:
4167: ;
4168:
4169: $if $(@expr1073758037 $!@expr1073758038 $assert_ $(@expr1073758039 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4169 $, db@var1292 !=@expr1073758040 nullptr $) $) { $return ; }
4170: $if $(@expr1073758041 $!@expr1073758042 $assert_ $(@expr1073758043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4170 $, db@var1292 &&@expr1073758044 db@var1292 .@expr1073758045 scopeList@var1293 .@expr1073758046 size (@expr1073758047 ) ==@expr1073758048 8 $) $) { $return ; }
4171: $if $(@expr1073758049 $!@expr1073758050 $assert_ $(@expr1073758051 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4171 $, db@var1292 &&@expr1073758052 db@var1292 .@expr1073758053 classAndStructScopes@var1294 .@expr1073758054 size (@expr1073758055 ) ==@expr1073758056 2 $) $) { $return ; }
4172: $if $(@expr1073758057 $!@expr1073758058 $assert_ $(@expr1073758059 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4172 $, db@var1292 &&@expr1073758060 db@var1292 .@expr1073758061 typeList@var1295 .@expr1073758062 size (@expr1073758063 ) ==@expr1073758064 2 $) $) { $return ; }
4173: $if $(@expr1073758065 $!@expr1073758066 $assert_ $(@expr1073758067 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4173 $, db@var1292 &&@expr1073758068 db@var1292 .@expr1073758069 functionScopes@var1296 .@expr1073758070 size (@expr1073758071 ) ==@expr1073758072 4 $) $) { $return ; }
4174:
4175: const Token * functionToken@var1297 ; functionToken@var1297 =@expr1073758073 Token ::@expr13842 findsimplematch (@expr1073758075 tokenizer@var1291 .@expr16252 tokens (@expr16253 ) , "impl ( ) { }" ) ;
4176: $if $(@expr1073758078 $!@expr1073758079 $assert_ $(@expr1073758080 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4176 $, db@var1292 &&@expr16257 functionToken@var1297 &&@expr16258 functionToken@var1297 .@expr16259 function (@expr16260 ) &&@expr16261 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16264 functionScope &&@expr1073758089 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16268 tokenDef .@expr16269 linenr (@expr16270 ) ==@expr1073758095 5 &&@expr1073758096 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16275 token .@expr16276 linenr (@expr16277 ) ==@expr1073758102 5 $) $) { $return
4177:
4178:
4179: ; }
4180:
4181: functionToken@var1297 =@expr1073758103 Token ::@expr13842 findsimplematch (@expr1073758105 tokenizer@var1291 .@expr16252 tokens (@expr16253 ) , "~ impl ( ) { }" ) ;
4182: $if $(@expr1073758108 $!@expr1073758109 $assert_ $(@expr1073758110 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4182 $, db@var1292 &&@expr16257 functionToken@var1297 &&@expr1073758112 functionToken@var1297 .@expr16289 next (@expr16290 ) .@expr16291 function (@expr16292 ) &&@expr1073758117 functionToken@var1297 .@expr16289 next (@expr16290 ) .@expr16291 function (@expr16292 ) .@expr1073758122 functionScope &&@expr1073758123 functionToken@var1297 .@expr16289 next (@expr16290 ) .@expr16291 function (@expr16292 ) .@expr1073758128 tokenDef .@expr1073758129 linenr (@expr1073758130 ) ==@expr1073758131 6 &&@expr1073758132 functionToken@var1297 .@expr16289 next (@expr16290 ) .@expr16291 function (@expr16292 ) .@expr1073758137 token .@expr1073758138 linenr (@expr1073758139 ) ==@expr1073758140 6 $) $) { $return
4183:
4184:
4185: ; }
4186:
4187: functionToken@var1297 =@expr1073758141 Token ::@expr13842 findsimplematch (@expr1073758143 tokenizer@var1291 .@expr16252 tokens (@expr16253 ) , "impl ( const impl & ) { }" ) ;
4188: $if $(@expr1073758146 $!@expr1073758147 $assert_ $(@expr1073758148 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4188 $, db@var1292 &&@expr16257 functionToken@var1297 &&@expr16258 functionToken@var1297 .@expr16259 function (@expr16260 ) &&@expr16261 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16264 functionScope &&@expr1073758157 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16268 tokenDef .@expr16269 linenr (@expr16270 ) ==@expr1073758163 7 &&@expr1073758164 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16275 token .@expr16276 linenr (@expr16277 ) ==@expr1073758170 7 $) $) { $return
4189:
4190:
4191: ; }
4192:
4193: functionToken@var1297 =@expr1073758171 Token ::@expr13842 findsimplematch (@expr1073758173 tokenizer@var1291 .@expr16252 tokens (@expr16253 ) , "foo ( const impl & , const impl & ) const { }" ) ;
4194: $if $(@expr1073758176 $!@expr1073758177 $assert_ $(@expr1073758178 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4194 $, db@var1292 &&@expr16257 functionToken@var1297 &&@expr16258 functionToken@var1297 .@expr16259 function (@expr16260 ) &&@expr16261 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16264 functionScope &&@expr1073758187 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16268 tokenDef .@expr16269 linenr (@expr16270 ) ==@expr1073758193 8 &&@expr1073758194 functionToken@var1297 .@expr16259 function (@expr16260 ) .@expr16275 token .@expr16276 linenr (@expr16277 ) ==@expr1073758200 8 $) $) { $return
4195:
4196:
4197: ; }
4198: }
4199: {
4200: $Tokenizer $tokenizer@var1298 $(@expr1073758201 $&@expr1073758202 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1299 $; $db@var1299 $=@expr1073758203 $getSymbolDB_inner $(@expr1073758204 $tokenizer@var1298 $, "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\ntemplate <typename A> NS::Fred<A>::impl::impl() { }\ntemplate <typename A> NS::Fred<A>::impl::~impl() { }\ntemplate <typename A> NS::Fred<A>::impl::impl(const NS::Fred<A>::impl &) { }\ntemplate <typename A> void NS::Fred<A>::impl::foo(const NS::Fred<A>::impl &, const NS::Fred<A>::impl &) const { }" $, $"test.cpp" $) $; $if $(@expr1073758205 $!@expr1073758206 $assert_ $(@expr1073758207 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4200 $, $db@var1299 $) $) { $return $; } $do ${ $} $while $(@expr1073758208 $false $)
4201:
|
4211:
4212: ;
4213:
4214: $if $(@expr1073758209 $!@expr1073758210 $assert_ $(@expr1073758211 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4214 $, db@var1299 !=@expr1073758212 nullptr $) $) { $return ; }
4215: $if $(@expr1073758213 $!@expr1073758214 $assert_ $(@expr1073758215 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4215 $, db@var1299 &&@expr1073758216 db@var1299 .@expr1073758217 scopeList@var1300 .@expr1073758218 size (@expr1073758219 ) ==@expr1073758220 8 $) $) { $return ; }
4216: $if $(@expr1073758221 $!@expr1073758222 $assert_ $(@expr1073758223 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4216 $, db@var1299 &&@expr1073758224 db@var1299 .@expr1073758225 classAndStructScopes@var1301 .@expr1073758226 size (@expr1073758227 ) ==@expr1073758228 2 $) $) { $return ; }
4217: $if $(@expr1073758229 $!@expr1073758230 $assert_ $(@expr1073758231 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4217 $, db@var1299 &&@expr1073758232 db@var1299 .@expr1073758233 typeList@var1302 .@expr1073758234 size (@expr1073758235 ) ==@expr1073758236 2 $) $) { $return ; }
4218: $if $(@expr1073758237 $!@expr1073758238 $assert_ $(@expr1073758239 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4218 $, db@var1299 &&@expr1073758240 db@var1299 .@expr1073758241 functionScopes@var1303 .@expr1073758242 size (@expr1073758243 ) ==@expr1073758244 4 $) $) { $return ; }
4219:
4220: const Token * functionToken@var1304 ; functionToken@var1304 =@expr1073758245 Token ::@expr13842 findsimplematch (@expr1073758247 tokenizer@var1298 .@expr16424 tokens (@expr16425 ) , "impl ( ) { }" ) ;
4221: $if $(@expr1073758250 $!@expr1073758251 $assert_ $(@expr1073758252 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4221 $, db@var1299 &&@expr16429 functionToken@var1304 &&@expr16430 functionToken@var1304 .@expr16431 function (@expr16432 ) &&@expr16433 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16436 functionScope &&@expr1073758261 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16440 tokenDef .@expr16441 linenr (@expr16442 ) ==@expr1073758267 5 &&@expr1073758268 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16447 token .@expr16448 linenr (@expr16449 ) ==@expr1073758274 10 $) $) { $return
4222:
4223:
4224: ; }
4225:
4226: functionToken@var1304 =@expr1073758275 Token ::@expr13842 findsimplematch (@expr1073758277 tokenizer@var1298 .@expr16424 tokens (@expr16425 ) , "~ impl ( ) { }" ) ;
4227: $if $(@expr1073758280 $!@expr1073758281 $assert_ $(@expr1073758282 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4227 $, db@var1299 &&@expr16429 functionToken@var1304 &&@expr1073758284 functionToken@var1304 .@expr16461 next (@expr16462 ) .@expr16463 function (@expr16464 ) &&@expr1073758289 functionToken@var1304 .@expr16461 next (@expr16462 ) .@expr16463 function (@expr16464 ) .@expr1073758294 functionScope &&@expr1073758295 functionToken@var1304 .@expr16461 next (@expr16462 ) .@expr16463 function (@expr16464 ) .@expr1073758300 tokenDef .@expr1073758301 linenr (@expr1073758302 ) ==@expr1073758303 6 &&@expr1073758304 functionToken@var1304 .@expr16461 next (@expr16462 ) .@expr16463 function (@expr16464 ) .@expr1073758309 token .@expr1073758310 linenr (@expr1073758311 ) ==@expr1073758312 11 $) $) { $return
4228:
4229:
4230: ; }
4231:
4232: functionToken@var1304 =@expr1073758313 Token ::@expr13842 findsimplematch (@expr1073758315 tokenizer@var1298 .@expr16424 tokens (@expr16425 ) , "impl ( const NS :: Fred < A > :: impl & ) { }" ) ;
4233: $if $(@expr1073758318 $!@expr1073758319 $assert_ $(@expr1073758320 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4233 $, db@var1299 &&@expr16429 functionToken@var1304 &&@expr16430 functionToken@var1304 .@expr16431 function (@expr16432 ) &&@expr16433 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16436 functionScope &&@expr1073758329 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16440 tokenDef .@expr16441 linenr (@expr16442 ) ==@expr1073758335 7 &&@expr1073758336 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16447 token .@expr16448 linenr (@expr16449 ) ==@expr1073758342 12 $) $) { $return
4234:
4235:
4236: ; }
4237:
4238: functionToken@var1304 =@expr1073758343 Token ::@expr13842 findsimplematch (@expr1073758345 tokenizer@var1298 .@expr16424 tokens (@expr16425 ) , "foo ( const NS :: Fred < A > :: impl & , const NS :: Fred < A > :: impl & ) const { }" ) ;
4239: $if $(@expr1073758348 $!@expr1073758349 $assert_ $(@expr1073758350 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4239 $, db@var1299 &&@expr16429 functionToken@var1304 &&@expr16430 functionToken@var1304 .@expr16431 function (@expr16432 ) &&@expr16433 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16436 functionScope &&@expr1073758359 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16440 tokenDef .@expr16441 linenr (@expr16442 ) ==@expr1073758365 8 &&@expr1073758366 functionToken@var1304 .@expr16431 function (@expr16432 ) .@expr16447 token .@expr16448 linenr (@expr16449 ) ==@expr1073758372 13 $) $) { $return
4240:
4241:
4242: ; }
4243: }
4244: {
4245: $Tokenizer $tokenizer@var1305 $(@expr1073758373 $&@expr1073758374 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1306 $; $db@var1306 $=@expr1073758375 $getSymbolDB_inner $(@expr1073758376 $tokenizer@var1305 $, "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nnamespace NS {\n    template <typename A> Fred<A>::impl::impl() { }\n    template <typename A> Fred<A>::impl::~impl() { }\n    template <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\n    template <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }\n}" $, $"test.cpp" $) $; $if $(@expr1073758377 $!@expr1073758378 $assert_ $(@expr1073758379 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4245 $, $db@var1306 $) $) { $return $; } $do ${ $} $while $(@expr1073758380 $false $)
4246:
|
4258:
4259: ;
4260:
4261: $if $(@expr1073758381 $!@expr1073758382 $assert_ $(@expr1073758383 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4261 $, db@var1306 !=@expr1073758384 nullptr $) $) { $return ; }
4262: $if $(@expr1073758385 $!@expr1073758386 $assert_ $(@expr1073758387 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4262 $, db@var1306 &&@expr1073758388 db@var1306 .@expr1073758389 scopeList@var1307 .@expr1073758390 size (@expr1073758391 ) ==@expr1073758392 8 $) $) { $return ; }
4263: $if $(@expr1073758393 $!@expr1073758394 $assert_ $(@expr1073758395 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4263 $, db@var1306 &&@expr1073758396 db@var1306 .@expr1073758397 classAndStructScopes@var1308 .@expr1073758398 size (@expr1073758399 ) ==@expr1073758400 2 $) $) { $return ; }
4264: $if $(@expr1073758401 $!@expr1073758402 $assert_ $(@expr1073758403 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4264 $, db@var1306 &&@expr1073758404 db@var1306 .@expr1073758405 typeList@var1309 .@expr1073758406 size (@expr1073758407 ) ==@expr1073758408 2 $) $) { $return ; }
4265: $if $(@expr1073758409 $!@expr1073758410 $assert_ $(@expr1073758411 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4265 $, db@var1306 &&@expr1073758412 db@var1306 .@expr1073758413 functionScopes@var1310 .@expr1073758414 size (@expr1073758415 ) ==@expr1073758416 4 $) $) { $return ; }
4266:
4267: const Token * functionToken@var1311 ; functionToken@var1311 =@expr1073758417 Token ::@expr13842 findsimplematch (@expr1073758419 tokenizer@var1305 .@expr16596 tokens (@expr16597 ) , "impl ( ) { }" ) ;
4268: $if $(@expr1073758422 $!@expr1073758423 $assert_ $(@expr1073758424 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4268 $, db@var1306 &&@expr16601 functionToken@var1311 &&@expr16602 functionToken@var1311 .@expr16603 function (@expr16604 ) &&@expr16605 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16608 functionScope &&@expr1073758433 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16612 tokenDef .@expr16613 linenr (@expr16614 ) ==@expr1073758439 5 &&@expr1073758440 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16619 token .@expr16620 linenr (@expr16621 ) ==@expr1073758446 11 $) $) { $return
4269:
4270:
4271: ; }
4272:
4273: functionToken@var1311 =@expr1073758447 Token ::@expr13842 findsimplematch (@expr1073758449 tokenizer@var1305 .@expr16596 tokens (@expr16597 ) , "~ impl ( ) { }" ) ;
4274: $if $(@expr1073758452 $!@expr1073758453 $assert_ $(@expr1073758454 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4274 $, db@var1306 &&@expr16601 functionToken@var1311 &&@expr1073758456 functionToken@var1311 .@expr16633 next (@expr16634 ) .@expr16635 function (@expr16636 ) &&@expr1073758461 functionToken@var1311 .@expr16633 next (@expr16634 ) .@expr16635 function (@expr16636 ) .@expr1073758466 functionScope &&@expr1073758467 functionToken@var1311 .@expr16633 next (@expr16634 ) .@expr16635 function (@expr16636 ) .@expr1073758472 tokenDef .@expr1073758473 linenr (@expr1073758474 ) ==@expr1073758475 6 &&@expr1073758476 functionToken@var1311 .@expr16633 next (@expr16634 ) .@expr16635 function (@expr16636 ) .@expr1073758481 token .@expr1073758482 linenr (@expr1073758483 ) ==@expr1073758484 12 $) $) { $return
4275:
4276:
4277: ; }
4278:
4279: functionToken@var1311 =@expr1073758485 Token ::@expr13842 findsimplematch (@expr1073758487 tokenizer@var1305 .@expr16596 tokens (@expr16597 ) , "impl ( const Fred < A > :: impl & ) { }" ) ;
4280: $if $(@expr1073758490 $!@expr1073758491 $assert_ $(@expr1073758492 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4280 $, db@var1306 &&@expr16601 functionToken@var1311 &&@expr16602 functionToken@var1311 .@expr16603 function (@expr16604 ) &&@expr16605 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16608 functionScope &&@expr1073758501 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16612 tokenDef .@expr16613 linenr (@expr16614 ) ==@expr1073758507 7 &&@expr1073758508 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16619 token .@expr16620 linenr (@expr16621 ) ==@expr1073758514 13 $) $) { $return
4281:
4282:
4283: ; }
4284:
4285: functionToken@var1311 =@expr1073758515 Token ::@expr13842 findsimplematch (@expr1073758517 tokenizer@var1305 .@expr16596 tokens (@expr16597 ) , "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }" ) ;
4286: $if $(@expr1073758520 $!@expr1073758521 $assert_ $(@expr1073758522 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4286 $, db@var1306 &&@expr16601 functionToken@var1311 &&@expr16602 functionToken@var1311 .@expr16603 function (@expr16604 ) &&@expr16605 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16608 functionScope &&@expr1073758531 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16612 tokenDef .@expr16613 linenr (@expr16614 ) ==@expr1073758537 8 &&@expr1073758538 functionToken@var1311 .@expr16603 function (@expr16604 ) .@expr16619 token .@expr16620 linenr (@expr16621 ) ==@expr1073758544 14 $) $) { $return
4287:
4288:
4289: ; }
4290: }
4291: {
4292: $Tokenizer $tokenizer@var1312 $(@expr1073758545 $&@expr1073758546 $settings1@var123 $, $this@expr13798 $) $; $const $SymbolDatabase $* $db@var1313 $; $db@var1313 $=@expr1073758547 $getSymbolDB_inner $(@expr1073758548 $tokenizer@var1312 $, "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nusing namespace NS;\ntemplate <typename A> Fred<A>::impl::impl() { }\ntemplate <typename A> Fred<A>::impl::~impl() { }\ntemplate <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\ntemplate <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }" $, $"test.cpp" $) $; $if $(@expr1073758549 $!@expr1073758550 $assert_ $(@expr1073758551 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4292 $, $db@var1313 $) $) { $return $; } $do ${ $} $while $(@expr1073758552 $false $)
4293:
|
4304:
4305: ;
4306:
4307: $if $(@expr1073758553 $!@expr1073758554 $assert_ $(@expr1073758555 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4307 $, db@var1313 !=@expr1073758556 nullptr $) $) { $return ; }
4308: $if $(@expr1073758557 $!@expr1073758558 $assert_ $(@expr1073758559 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4308 $, db@var1313 &&@expr1073758560 db@var1313 .@expr1073758561 scopeList@var1314 .@expr1073758562 size (@expr1073758563 ) ==@expr1073758564 8 $) $) { $return ; }
4309: $if $(@expr1073758565 $!@expr1073758566 $assert_ $(@expr1073758567 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4309 $, db@var1313 &&@expr1073758568 db@var1313 .@expr1073758569 classAndStructScopes@var1315 .@expr1073758570 size (@expr1073758571 ) ==@expr1073758572 2 $) $) { $return ; }
4310: $if $(@expr1073758573 $!@expr1073758574 $assert_ $(@expr1073758575 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4310 $, db@var1313 &&@expr1073758576 db@var1313 .@expr1073758577 typeList@var1316 .@expr1073758578 size (@expr1073758579 ) ==@expr1073758580 2 $) $) { $return ; }
4311: $if $(@expr1073758581 $!@expr1073758582 $assert_ $(@expr1073758583 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4311 $, db@var1313 &&@expr1073758584 db@var1313 .@expr1073758585 functionScopes@var1317 .@expr1073758586 size (@expr1073758587 ) ==@expr1073758588 4 $) $) { $return ; }
4312:
4313: const Token * functionToken@var1318 ; functionToken@var1318 =@expr1073758589 Token ::@expr13842 findsimplematch (@expr1073758591 tokenizer@var1312 .@expr16768 tokens (@expr16769 ) , "impl ( ) { }" ) ;
4314: $if $(@expr1073758594 $!@expr1073758595 $assert_ $(@expr1073758596 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4314 $, db@var1313 &&@expr16773 functionToken@var1318 &&@expr16774 functionToken@var1318 .@expr16775 function (@expr16776 ) &&@expr16777 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16780 functionScope &&@expr1073758605 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16784 tokenDef .@expr16785 linenr (@expr16786 ) ==@expr1073758611 5 &&@expr1073758612 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16791 token .@expr16792 linenr (@expr16793 ) ==@expr1073758618 11 $) $) { $return
4315:
4316:
4317: ; }
4318:
4319: functionToken@var1318 =@expr1073758619 Token ::@expr13842 findsimplematch (@expr1073758621 tokenizer@var1312 .@expr16768 tokens (@expr16769 ) , "~ impl ( ) { }" ) ;
4320: $if $(@expr1073758624 $!@expr1073758625 $assert_ $(@expr1073758626 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4320 $, db@var1313 &&@expr16773 functionToken@var1318 &&@expr1073758628 functionToken@var1318 .@expr16805 next (@expr16806 ) .@expr16807 function (@expr16808 ) &&@expr1073758633 functionToken@var1318 .@expr16805 next (@expr16806 ) .@expr16807 function (@expr16808 ) .@expr1073758638 functionScope &&@expr1073758639 functionToken@var1318 .@expr16805 next (@expr16806 ) .@expr16807 function (@expr16808 ) .@expr1073758644 tokenDef .@expr1073758645 linenr (@expr1073758646 ) ==@expr1073758647 6 &&@expr1073758648 functionToken@var1318 .@expr16805 next (@expr16806 ) .@expr16807 function (@expr16808 ) .@expr1073758653 token .@expr1073758654 linenr (@expr1073758655 ) ==@expr1073758656 12 $) $) { $return
4321:
4322:
4323: ; }
4324:
4325: functionToken@var1318 =@expr1073758657 Token ::@expr13842 findsimplematch (@expr1073758659 tokenizer@var1312 .@expr16768 tokens (@expr16769 ) , "impl ( const Fred < A > :: impl & ) { }" ) ;
4326: $if $(@expr1073758662 $!@expr1073758663 $assert_ $(@expr1073758664 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4326 $, db@var1313 &&@expr16773 functionToken@var1318 &&@expr16774 functionToken@var1318 .@expr16775 function (@expr16776 ) &&@expr16777 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16780 functionScope &&@expr1073758673 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16784 tokenDef .@expr16785 linenr (@expr16786 ) ==@expr1073758679 7 &&@expr1073758680 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16791 token .@expr16792 linenr (@expr16793 ) ==@expr1073758686 13 $) $) { $return
4327:
4328:
4329: ; }
4330:
4331: functionToken@var1318 =@expr1073758687 Token ::@expr13842 findsimplematch (@expr1073758689 tokenizer@var1312 .@expr16768 tokens (@expr16769 ) , "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }" ) ;
4332: $if $(@expr1073758692 $!@expr1073758693 $assert_ $(@expr1073758694 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4332 $, db@var1313 &&@expr16773 functionToken@var1318 &&@expr16774 functionToken@var1318 .@expr16775 function (@expr16776 ) &&@expr16777 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16780 functionScope &&@expr1073758703 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16784 tokenDef .@expr16785 linenr (@expr16786 ) ==@expr1073758709 8 &&@expr1073758710 functionToken@var1318 .@expr16775 function (@expr16776 ) .@expr16791 token .@expr16792 linenr (@expr16793 ) ==@expr1073758716 14 $) $) { $return
4333:
4334:
4335: ; }
4336: }
4337: }
4338:
4339: void symboldatabase65 ( ) {
4340:
4341: $check_ $(@expr1073758717 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4341 $, "int ( * X0 ) ( long ) < int ( ) ( long ) > :: f0 ( int * ) { return 0 ; }" $) ;
4342: $if $(@expr1073758718 $!@expr1073758719 $assertEquals $(@expr1073758720 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4342 $, "[test.cpp:1]: (debug) SymbolDatabase::findFunction found '>' without link.\n" $, errout@var100 .@expr1073758721 str (@expr1073758722 ) $) $) { $return ; }
4343: }
4344:
4345: void symboldatabase66 ( ) {
4346: $Tokenizer $tokenizer@var1319 $(@expr1073758723 $&@expr1073758724 $settings1@var123 $, $this@expr1073758725 $) $; $const $SymbolDatabase $* $db@var1320 $; $db@var1320 $=@expr1073758726 $getSymbolDB_inner $(@expr1073758727 $tokenizer@var1319 $, "enum class ENUM1;\nenum class ENUM2 { MEMBER2 };\nenum class ENUM3 : int { MEMBER1, };" $, $"test.cpp" $) $; $if $(@expr1073758728 $!@expr1073758729 $assert_ $(@expr1073758730 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4346 $, $db@var1320 $) $) { $return $; } $do ${ $} $while $(@expr1073758731 $false $)
4347:
4348: ;
4349: $if $(@expr1073758732 $!@expr1073758733 $assert_ $(@expr1073758734 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4349 $, db@var1320 !=@expr1073758735 nullptr $) $) { $return ; }
4350: $if $(@expr1073758736 $!@expr1073758737 $assert_ $(@expr1073758738 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4350 $, db@var1320 &&@expr1073758739 db@var1320 .@expr1073758740 scopeList@var1321 .@expr1073758741 size (@expr1073758742 ) ==@expr1073758743 3 $) $) { $return ; }
4351: $if $(@expr1073758744 $!@expr1073758745 $assert_ $(@expr1073758746 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4351 $, db@var1320 &&@expr1073758747 db@var1320 .@expr1073758748 typeList@var1322 .@expr1073758749 size (@expr1073758750 ) ==@expr1073758751 3 $) $) { $return ; }
4352: }
4353:
4354: void symboldatabase67 ( ) {
4355: $Tokenizer $tokenizer@var1323 $(@expr1073758752 $&@expr1073758753 $settings1@var123 $, $this@expr1073758754 $) $; $const $SymbolDatabase $* $db@var1324 $; $db@var1324 $=@expr1073758755 $getSymbolDB_inner $(@expr1073758756 $tokenizer@var1323 $, "std::string get_endpoint_url() const noexcept override;" $, $"test.cpp" $) $; $if $(@expr1073758757 $!@expr1073758758 $assert_ $(@expr1073758759 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4355 $, $db@var1324 $) $) { $return $; } $do ${ $} $while $(@expr1073758760 $false $) ;
4356: const Function * f@var1325 ; f@var1325 =@expr1073758761 db@var1324 ?@expr1073758762 &@expr1073758763 db@var1324 .@expr1073758764 scopeList@var1326 .@expr1073758765 front (@expr1073758766 ) .@expr1073758767 functionList .@expr1073758768 front (@expr1073758769 ) :@expr1073758770 nullptr ;
4357: $if $(@expr1073758771 $!@expr1073758772 $assert_ $(@expr1073758773 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4357 $, f@var1325 !=@expr1073758774 nullptr $) $) { $return ; }
4358: $if $(@expr1073758775 $!@expr1073758776 $assert_ $(@expr1073758777 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4358 $, f@var1325 &&@expr1073758778 f@var1325 .@expr1073758779 hasOverrideSpecifier (@expr1073758780 ) $) $) { $return ; }
4359: $if $(@expr1073758781 $!@expr1073758782 $assert_ $(@expr1073758783 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4359 $, f@var1325 &&@expr1073758784 f@var1325 .@expr1073758785 isConst (@expr1073758786 ) $) $) { $return ; }
4360: $if $(@expr1073758787 $!@expr1073758788 $assert_ $(@expr1073758789 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4360 $, f@var1325 &&@expr1073758790 f@var1325 .@expr1073758791 isNoExcept (@expr1073758792 ) $) $) { $return ; }
4361: }
4362:
4363: void symboldatabase68 ( ) {
4364: $Tokenizer $tokenizer@var1327 $(@expr1073758793 $&@expr1073758794 $settings1@var123 $, $this@expr1073758795 $) $; $const $SymbolDatabase $* $db@var1328 $; $db@var1328 $=@expr1073758796 $getSymbolDB_inner $(@expr1073758797 $tokenizer@var1327 $, "struct Bar {\n    virtual std::string get_endpoint_url() const noexcept;\n};\nstruct Foo : Bar {\n    virtual std::string get_endpoint_url() const noexcept override final;\n};" $, $"test.cpp" $) $; $if $(@expr1073758798 $!@expr1073758799 $assert_ $(@expr1073758800 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4364 $, $db@var1328 $) $) { $return $; } $do ${ $} $while $(@expr1073758801 $false $)
4365:
|
4368:
4369: ;
4370: const Token * f@var1329 ; f@var1329 =@expr1073758802 db@var1328 ?@expr1073758803 Token ::@expr16980 findsimplematch (@expr1073758805 tokenizer@var1327 .@expr16982 tokens (@expr16983 ) , "get_endpoint_url ( ) const noexcept ;" ) :@expr1073758808 nullptr ;
4371: $if $(@expr1073758809 $!@expr1073758810 $assert_ $(@expr1073758811 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4371 $, f@var1329 !=@expr16988 nullptr $) $) { $return ; }
4372: $if $(@expr1073758813 $!@expr1073758814 $assert_ $(@expr1073758815 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4372 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr1073758819 f@var1329 .@expr16993 function (@expr16994 ) .@expr16998 token .@expr16999 linenr (@expr17000 ) ==@expr1073758825 2 $) $) { $return ; }
4373: $if $(@expr1073758826 $!@expr1073758827 $assert_ $(@expr1073758828 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4373 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr17008 f@var1329 .@expr16993 function (@expr16994 ) .@expr17011 hasVirtualSpecifier (@expr17012 ) $) $) { $return ; }
4374: $if $(@expr1073758837 $!@expr1073758838 $assert_ $(@expr1073758839 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4374 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr1073758843 !@expr1073758844 f@var1329 .@expr16993 function (@expr16994 ) .@expr17023 hasOverrideSpecifier (@expr17024 ) $) $) { $return ; }
4375: $if $(@expr1073758849 $!@expr1073758850 $assert_ $(@expr1073758851 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4375 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr1073758855 !@expr1073758856 f@var1329 .@expr16993 function (@expr16994 ) .@expr17035 hasFinalSpecifier (@expr17036 ) $) $) { $return ; }
4376: $if $(@expr1073758861 $!@expr1073758862 $assert_ $(@expr1073758863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4376 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr17043 f@var1329 .@expr16993 function (@expr16994 ) .@expr17046 isConst (@expr17047 ) $) $) { $return ; }
4377: $if $(@expr1073758872 $!@expr1073758873 $assert_ $(@expr1073758874 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4377 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr17054 f@var1329 .@expr16993 function (@expr16994 ) .@expr17057 isNoExcept (@expr17058 ) $) $) { $return ; }
4378: f@var1329 =@expr1073758883 db@var1328 ?@expr1073758884 Token ::@expr16980 findsimplematch (@expr1073758886 tokenizer@var1327 .@expr16982 tokens (@expr16983 ) , "get_endpoint_url ( ) const noexcept override final ;" ) :@expr1073758889 nullptr ;
4379: $if $(@expr1073758890 $!@expr1073758891 $assert_ $(@expr1073758892 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4379 $, f@var1329 !=@expr16988 nullptr $) $) { $return ; }
4380: $if $(@expr1073758894 $!@expr1073758895 $assert_ $(@expr1073758896 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4380 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr1073758900 f@var1329 .@expr16993 function (@expr16994 ) .@expr16998 token .@expr16999 linenr (@expr17000 ) ==@expr1073758906 5 $) $) { $return ; }
4381: $if $(@expr1073758907 $!@expr1073758908 $assert_ $(@expr1073758909 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4381 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr17008 f@var1329 .@expr16993 function (@expr16994 ) .@expr17011 hasVirtualSpecifier (@expr17012 ) $) $) { $return ; }
4382: $if $(@expr1073758918 $!@expr1073758919 $assert_ $(@expr1073758920 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4382 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr1073758924 f@var1329 .@expr16993 function (@expr16994 ) .@expr17023 hasOverrideSpecifier (@expr17024 ) $) $) { $return ; }
4383: $if $(@expr1073758929 $!@expr1073758930 $assert_ $(@expr1073758931 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4383 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr1073758935 f@var1329 .@expr16993 function (@expr16994 ) .@expr17035 hasFinalSpecifier (@expr17036 ) $) $) { $return ; }
4384: $if $(@expr1073758940 $!@expr1073758941 $assert_ $(@expr1073758942 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4384 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr17043 f@var1329 .@expr16993 function (@expr16994 ) .@expr17046 isConst (@expr17047 ) $) $) { $return ; }
4385: $if $(@expr1073758951 $!@expr1073758952 $assert_ $(@expr1073758953 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4385 $, f@var1329 &&@expr16992 f@var1329 .@expr16993 function (@expr16994 ) &&@expr17054 f@var1329 .@expr16993 function (@expr16994 ) .@expr17057 isNoExcept (@expr17058 ) $) $) { $return ; }
4386: }
4387:
4388: void symboldatabase69 ( ) {
4389: $Tokenizer $tokenizer@var1330 $(@expr1073758962 $&@expr1073758963 $settings1@var123 $, $this@expr1073758964 $) $; $const $SymbolDatabase $* $db@var1331 $; $db@var1331 $=@expr1073758965 $getSymbolDB_inner $(@expr1073758966 $tokenizer@var1330 $, "struct Fred {\n    int x, y;\n    void foo() const volatile { }\n    void foo() volatile { }\n    void foo() const { }\n    void foo() { }\n};" $, $"test.cpp" $) $; $if $(@expr1073758967 $!@expr1073758968 $assert_ $(@expr1073758969 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4389 $, $db@var1331 $) $) { $return $; } $do ${ $} $while $(@expr1073758970 $false $)
4390:
|
4394:
4395: ;
4396: const Token * f@var1332 ; f@var1332 =@expr1073758971 db@var1331 ?@expr1073758972 Token ::@expr17149 findsimplematch (@expr1073758974 tokenizer@var1330 .@expr17151 tokens (@expr17152 ) , "foo ( ) const volatile {" ) :@expr1073758977 nullptr ;
4397: $if $(@expr1073758978 $!@expr1073758979 $assert_ $(@expr1073758980 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4397 $, f@var1332 !=@expr17157 nullptr $) $) { $return ; }
4398: $if $(@expr1073758982 $!@expr1073758983 $assert_ $(@expr1073758984 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4398 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr1073758988 f@var1332 .@expr17162 function (@expr17163 ) .@expr17167 token .@expr17168 linenr (@expr17169 ) ==@expr1073758994 3 $) $) { $return ; }
4399: $if $(@expr1073758995 $!@expr1073758996 $assert_ $(@expr1073758997 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4399 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr17177 f@var1332 .@expr17162 function (@expr17163 ) .@expr17180 isConst (@expr17181 ) $) $) { $return ; }
4400: $if $(@expr1073759006 $!@expr1073759007 $assert_ $(@expr1073759008 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4400 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr17188 f@var1332 .@expr17162 function (@expr17163 ) .@expr17191 isVolatile (@expr17192 ) $) $) { $return ; }
4401: f@var1332 =@expr1073759017 db@var1331 ?@expr1073759018 Token ::@expr17149 findsimplematch (@expr1073759020 tokenizer@var1330 .@expr17151 tokens (@expr17152 ) , "foo ( ) volatile {" ) :@expr1073759023 nullptr ;
4402: $if $(@expr1073759024 $!@expr1073759025 $assert_ $(@expr1073759026 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4402 $, f@var1332 !=@expr17157 nullptr $) $) { $return ; }
4403: $if $(@expr1073759028 $!@expr1073759029 $assert_ $(@expr1073759030 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4403 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr1073759034 f@var1332 .@expr17162 function (@expr17163 ) .@expr17167 token .@expr17168 linenr (@expr17169 ) ==@expr1073759040 4 $) $) { $return ; }
4404: $if $(@expr1073759041 $!@expr1073759042 $assert_ $(@expr1073759043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4404 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr17223 !@expr17224 f@var1332 .@expr17162 function (@expr17163 ) .@expr17180 isConst (@expr17181 ) $) $) { $return ; }
4405: $if $(@expr1073759053 $!@expr1073759054 $assert_ $(@expr1073759055 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4405 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr17188 f@var1332 .@expr17162 function (@expr17163 ) .@expr17191 isVolatile (@expr17192 ) $) $) { $return ; }
4406: f@var1332 =@expr1073759064 db@var1331 ?@expr1073759065 Token ::@expr17149 findsimplematch (@expr1073759067 tokenizer@var1330 .@expr17151 tokens (@expr17152 ) , "foo ( ) const {" ) :@expr1073759070 nullptr ;
4407: $if $(@expr1073759071 $!@expr1073759072 $assert_ $(@expr1073759073 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4407 $, f@var1332 !=@expr17157 nullptr $) $) { $return ; }
4408: $if $(@expr1073759075 $!@expr1073759076 $assert_ $(@expr1073759077 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4408 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr1073759081 f@var1332 .@expr17162 function (@expr17163 ) .@expr17167 token .@expr17168 linenr (@expr17169 ) ==@expr1073759087 5 $) $) { $return ; }
4409: $if $(@expr1073759088 $!@expr1073759089 $assert_ $(@expr1073759090 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4409 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr17177 f@var1332 .@expr17162 function (@expr17163 ) .@expr17180 isConst (@expr17181 ) $) $) { $return ; }
4410: $if $(@expr1073759099 $!@expr1073759100 $assert_ $(@expr1073759101 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4410 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr17281 !@expr17282 f@var1332 .@expr17162 function (@expr17163 ) .@expr17191 isVolatile (@expr17192 ) $) $) { $return ; }
4411: f@var1332 =@expr1073759111 db@var1331 ?@expr1073759112 Token ::@expr17149 findsimplematch (@expr1073759114 tokenizer@var1330 .@expr17151 tokens (@expr17152 ) , "foo ( ) {" ) :@expr1073759117 nullptr ;
4412: $if $(@expr1073759118 $!@expr1073759119 $assert_ $(@expr1073759120 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4412 $, f@var1332 !=@expr17157 nullptr $) $) { $return ; }
4413: $if $(@expr1073759122 $!@expr1073759123 $assert_ $(@expr1073759124 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4413 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr1073759128 f@var1332 .@expr17162 function (@expr17163 ) .@expr17167 token .@expr17168 linenr (@expr17169 ) ==@expr1073759134 6 $) $) { $return ; }
4414: $if $(@expr1073759135 $!@expr1073759136 $assert_ $(@expr1073759137 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4414 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr17281 !@expr17282 f@var1332 .@expr17162 function (@expr17163 ) .@expr17191 isVolatile (@expr17192 ) $) $) { $return ; }
4415: $if $(@expr1073759147 $!@expr1073759148 $assert_ $(@expr1073759149 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4415 $, f@var1332 &&@expr17161 f@var1332 .@expr17162 function (@expr17163 ) &&@expr17223 !@expr17224 f@var1332 .@expr17162 function (@expr17163 ) .@expr17180 isConst (@expr17181 ) $) $) { $return ; }
4416: }
4417:
4418: void symboldatabase70 ( ) {
4419: {
4420: $Tokenizer $tokenizer@var1333 $(@expr1073759159 $&@expr1073759160 $settings1@var123 $, $this@expr17337 $) $; $const $SymbolDatabase $* $db@var1334 $; $db@var1334 $=@expr1073759162 $getSymbolDB_inner $(@expr1073759163 $tokenizer@var1333 $, "class Map<String,Entry>::Entry* e;" $, $"test.cpp" $) $; $if $(@expr1073759164 $!@expr1073759165 $assert_ $(@expr1073759166 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4420 $, $db@var1334 $) $) { $return $; } $do ${ $} $while $(@expr1073759167 $false $) ;
4421: $if $(@expr1073759168 $!@expr1073759169 $assert_ $(@expr1073759170 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4421 $, db@var1334 !=@expr1073759171 nullptr $) $) { $return ; }
4422: $if $(@expr1073759172 $!@expr1073759173 $assert_ $(@expr1073759174 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4422 $, db@var1334 &&@expr1073759175 db@var1334 .@expr1073759176 scopeList@var1335 .@expr1073759177 size (@expr1073759178 ) ==@expr1073759179 1 $) $) { $return ; }
4423: $if $(@expr1073759180 $!@expr1073759181 $assert_ $(@expr1073759182 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4423 $, db@var1334 &&@expr1073759183 db@var1334 .@expr1073759184 variableList (@expr1073759185 ) .@expr1073759186 size (@expr1073759187 ) ==@expr1073759188 2 $) $) { $return ; }
4424: }
4425: {
4426: $Tokenizer $tokenizer@var1336 $(@expr1073759189 $&@expr1073759190 $settings1@var123 $, $this@expr17337 $) $; $const $SymbolDatabase $* $db@var1337 $; $db@var1337 $=@expr1073759191 $getSymbolDB_inner $(@expr1073759192 $tokenizer@var1336 $, "template class boost::token_iterator_generator<boost::offset_separator>::type; void foo() { }" $, $"test.cpp" $) $; $if $(@expr1073759193 $!@expr1073759194 $assert_ $(@expr1073759195 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4426 $, $db@var1337 $) $) { $return $; } $do ${ $} $while $(@expr1073759196 $false $) ;
4427: $if $(@expr1073759197 $!@expr1073759198 $assert_ $(@expr1073759199 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4427 $, db@var1337 !=@expr1073759200 nullptr $) $) { $return ; }
4428: $if $(@expr1073759201 $!@expr1073759202 $assert_ $(@expr1073759203 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4428 $, db@var1337 &&@expr1073759204 db@var1337 .@expr1073759205 scopeList@var1338 .@expr1073759206 size (@expr1073759207 ) ==@expr1073759208 2 $) $) { $return ; }
4429: }
4430: {
4431: $Tokenizer $tokenizer@var1339 $(@expr1073759209 $&@expr1073759210 $settings1@var123 $, $this@expr17337 $) $; $const $SymbolDatabase $* $db@var1340 $; $db@var1340 $=@expr1073759211 $getSymbolDB_inner $(@expr1073759212 $tokenizer@var1339 $, "void foo() {\n    return class Arm_relocate_functions<big_endian>::thumb32_branch_offset(upper_insn, lower_insn);\n}" $, $"test.cpp" $) $; $if $(@expr1073759213 $!@expr1073759214 $assert_ $(@expr1073759215 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4431 $, $db@var1340 $) $) { $return $; } $do ${ $} $while $(@expr1073759216 $false $)
4432:
4433: ;
4434: $if $(@expr1073759217 $!@expr1073759218 $assert_ $(@expr1073759219 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4434 $, db@var1340 !=@expr1073759220 nullptr $) $) { $return ; }
4435: $if $(@expr1073759221 $!@expr1073759222 $assert_ $(@expr1073759223 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4435 $, db@var1340 &&@expr1073759224 db@var1340 .@expr1073759225 scopeList@var1341 .@expr1073759226 size (@expr1073759227 ) ==@expr1073759228 2 $) $) { $return ; }
4436: }
4437: }
4438:
4439: void symboldatabase71 ( ) {
4440: $Tokenizer $tokenizer@var1342 $(@expr1073759229 $&@expr1073759230 $settings1@var123 $, $this@expr1073759231 $) $; $const $SymbolDatabase $* $db@var1343 $; $db@var1343 $=@expr1073759232 $getSymbolDB_inner $(@expr1073759233 $tokenizer@var1342 $, "class A { };\nclass B final : public A { };" $, $"test.cpp" $) $; $if $(@expr1073759234 $!@expr1073759235 $assert_ $(@expr1073759236 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4440 $, $db@var1343 $) $) { $return $; } $do ${ $} $while $(@expr1073759237 $false $)
4441: ;
4442: $if $(@expr1073759238 $!@expr1073759239 $assert_ $(@expr1073759240 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4442 $, db@var1343 &&@expr1073759241 db@var1343 .@expr1073759242 scopeList@var1344 .@expr1073759243 size (@expr1073759244 ) ==@expr1073759245 3 $) $) { $return ; }
4443: $if $(@expr1073759246 $!@expr1073759247 $assert_ $(@expr1073759248 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4443 $, db@var1343 &&@expr1073759249 db@var1343 .@expr1073759250 typeList@var1345 .@expr1073759251 size (@expr1073759252 ) ==@expr1073759253 2 $) $) { $return ; }
4444: }
4445:
4446: void symboldatabase72 ( ) {
4447: $Tokenizer $tokenizer@var1346 $(@expr1073759256 $&@expr1073759257 $settings1@var123 $, $this@expr1073759258 $) $; $const $SymbolDatabase $* $db@var1347 $; $db@var1347 $=@expr1073759259 $getSymbolDB_inner $(@expr1073759260 $tokenizer@var1346 $, "struct A { struct B; };\nstruct A::B {\n    B() = default;\n    B(const B&) {}\n};" $, $"test.cpp" $) $; $if $(@expr1073759261 $!@expr1073759262 $assert_ $(@expr1073759263 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4447 $, $db@var1347 $) $) { $return $; } $do ${ $} $while $(@expr1073759264 $false $)
4448:
4449:
4450:
4451: ;
4452:
4453: $if $(@expr1073759265 $!@expr1073759266 $assert_ $(@expr1073759267 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4453 $, db@var1347 &&@expr1073759268 db@var1347 .@expr1073759269 scopeList@var1348 .@expr1073759270 size (@expr1073759271 ) ==@expr1073759272 4 $) $) { $return ; }
4454: $if $(@expr1073759273 $!@expr1073759274 $assert_ $(@expr1073759275 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4454 $, db@var1347 &&@expr1073759276 db@var1347 .@expr1073759277 typeList@var1349 .@expr1073759278 size (@expr1073759279 ) ==@expr1073759280 2 $) $) { $return ; }
4455: const Token * f@var1350 ; f@var1350 =@expr1073759281 db@var1347 ?@expr1073759282 Token ::@expr1073759283 findsimplematch (@expr1073759284 tokenizer@var1346 .@expr1073759285 tokens (@expr1073759286 ) , "B ( const B & ) { }" ) :@expr1073759287 nullptr ;
4456: $if $(@expr1073759288 $!@expr1073759289 $assert_ $(@expr1073759290 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4456 $, f@var1350 !=@expr1073759291 nullptr $) $) { $return ; }
4457: $if $(@expr1073759292 $!@expr1073759293 $assert_ $(@expr1073759294 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4457 $, f@var1350 &&@expr17471 f@var1350 .@expr17472 function (@expr17473 ) &&@expr1073759298 f@var1350 .@expr17472 function (@expr17473 ) .@expr1073759301 token .@expr1073759302 linenr (@expr1073759303 ) ==@expr1073759304 4 $) $) { $return ; }
4458: $if $(@expr1073759305 $!@expr1073759306 $assert_ $(@expr1073759307 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4458 $, f@var1350 &&@expr17471 f@var1350 .@expr17472 function (@expr17473 ) &&@expr1073759311 f@var1350 .@expr17472 function (@expr17473 ) .@expr1073759314 type@expr1073759254 ==@expr1073759315 Function ::@expr1073759316 eCopyConstructor@expr1073759255 $) $) { $return ; }
4459: }
4460:
4461: void symboldatabase74 ( ) {
4462: $Tokenizer $tokenizer@var1351 $(@expr1073759317 $&@expr1073759318 $settings1@var123 $, $this@expr1073759319 $) $; $const $SymbolDatabase $* $db@var1352 $; $db@var1352 $=@expr1073759320 $getSymbolDB_inner $(@expr1073759321 $tokenizer@var1351 $, "class Base { virtual int f() const = 0; };\nclass Derived : Base { virtual int f() const final { return 6; } };" $, $"test.cpp" $) $; $if $(@expr1073759322 $!@expr1073759323 $assert_ $(@expr1073759324 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4462 $, $db@var1352 $) $) { $return $; } $do ${ $} $while $(@expr1073759325 $false $)
4463: ;
4464:
4465: $if $(@expr1073759326 $!@expr1073759327 $assertEquals $(@expr1073759328 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4465 $, 4 $, db@var1352 .@expr1073759329 scopeList@var1353 .@expr1073759330 size (@expr1073759331 ) $) $) { $return ; }
4466: $if $(@expr1073759332 $!@expr1073759333 $assertEquals $(@expr1073759334 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4466 $, 1 $, db@var1352 .@expr17511 functionScopes@var1354 .@expr1073759336 size (@expr1073759337 ) $) $) { $return ; }
4467:
4468: const Scope * f1@var1355 ; f1@var1355 =@expr1073759338 db@var1352 .@expr17511 functionScopes@var1354 [@expr1073759340 0 ] ;
4469: $if $(@expr1073759341 $!@expr1073759342 $assert_ $(@expr1073759343 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4469 $, f1@var1355 .@expr1073759344 function@var1356 .@expr1073759345 hasFinalSpecifier (@expr1073759346 ) $) $) { $return ; }
4470: }
4471:
4472: void symboldatabase75 ( ) {
4473: $Tokenizer $tokenizer@var1357 $(@expr1073759347 $&@expr1073759348 $settings1@var123 $, $this@expr1073759349 $) $; $const $SymbolDatabase $* $db@var1358 $; $db@var1358 $=@expr1073759350 $getSymbolDB_inner $(@expr1073759351 $tokenizer@var1357 $, "template <typename T>\nclass optional {\n  auto     value() & -> T &;\n  auto     value() && -> T &&;\n  auto     value() const& -> T const &;\n};\ntemplate <typename T>\nauto optional<T>::value() & -> T & {}\ntemplate <typename T>\nauto optional<T>::value() && -> T && {}\ntemplate <typename T>\nauto optional<T>::value() const & -> T const & {}\noptional<int> i;" $, $"test.cpp" $) $; $if $(@expr1073759352 $!@expr1073759353 $assert_ $(@expr1073759354 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4473 $, $db@var1358 $) $) { $return $; } $do ${ $} $while $(@expr1073759355 $false $)
4474:
|
4484:
4485: ;
4486:
4487: $if $(@expr1073759356 $!@expr1073759357 $assertEquals $(@expr1073759358 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4487 $, 5 $, db@var1358 .@expr1073759359 scopeList@var1359 .@expr1073759360 size (@expr1073759361 ) $) $) { $return ; }
4488: $if $(@expr1073759362 $!@expr1073759363 $assertEquals $(@expr1073759364 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4488 $, 3 $, db@var1358 .@expr17541 functionScopes@var1360 .@expr1073759366 size (@expr1073759367 ) $) $) { $return ; }
4489:
4490: const Scope * f@var1361 ; f@var1361 =@expr1073759368 db@var1358 .@expr17541 functionScopes@var1360 [@expr1073759370 0 ] ;
4491: $if $(@expr1073759371 $!@expr1073759372 $assert_ $(@expr1073759373 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4491 $, f@var1361 .@expr17550 function@var1362 .@expr17551 hasBody (@expr17552 ) $) $) { $return ; }
4492: $if $(@expr1073759377 $!@expr1073759378 $assert_ $(@expr1073759379 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4492 $, !@expr17556 f@var1361 .@expr17550 function@var1362 .@expr17558 isConst (@expr17559 ) $) $) { $return ; }
4493: $if $(@expr1073759384 $!@expr1073759385 $assert_ $(@expr1073759386 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4493 $, f@var1361 .@expr17550 function@var1362 .@expr17564 hasTrailingReturnType (@expr17565 ) $) $) { $return ; }
4494: $if $(@expr1073759390 $!@expr1073759391 $assert_ $(@expr1073759392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4494 $, f@var1361 .@expr17550 function@var1362 .@expr17570 hasLvalRefQualifier (@expr17571 ) $) $) { $return ; }
4495:
4496: f@var1361 =@expr1073759396 db@var1358 .@expr17541 functionScopes@var1360 [@expr1073759398 1 ] ;
4497: $if $(@expr1073759399 $!@expr1073759400 $assert_ $(@expr1073759401 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4497 $, f@var1361 .@expr17550 function@var1362 .@expr17551 hasBody (@expr17552 ) $) $) { $return ; }
4498: $if $(@expr1073759405 $!@expr1073759406 $assert_ $(@expr1073759407 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4498 $, !@expr17556 f@var1361 .@expr17550 function@var1362 .@expr17558 isConst (@expr17559 ) $) $) { $return ; }
4499: $if $(@expr1073759412 $!@expr1073759413 $assert_ $(@expr1073759414 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4499 $, f@var1361 .@expr17550 function@var1362 .@expr17564 hasTrailingReturnType (@expr17565 ) $) $) { $return ; }
4500: $if $(@expr1073759418 $!@expr1073759419 $assert_ $(@expr1073759420 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4500 $, f@var1361 .@expr17550 function@var1362 .@expr1073759422 hasRvalRefQualifier (@expr1073759423 ) $) $) { $return ; }
4501:
4502: f@var1361 =@expr1073759424 db@var1358 .@expr17541 functionScopes@var1360 [@expr1073759426 2 ] ;
4503: $if $(@expr1073759427 $!@expr1073759428 $assert_ $(@expr1073759429 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4503 $, f@var1361 .@expr17550 function@var1362 .@expr17551 hasBody (@expr17552 ) $) $) { $return ; }
4504: $if $(@expr1073759433 $!@expr1073759434 $assert_ $(@expr1073759435 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4504 $, f@var1361 .@expr17550 function@var1362 .@expr17558 isConst (@expr17559 ) $) $) { $return ; }
4505: $if $(@expr1073759439 $!@expr1073759440 $assert_ $(@expr1073759441 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4505 $, f@var1361 .@expr17550 function@var1362 .@expr17564 hasTrailingReturnType (@expr17565 ) $) $) { $return ; }
4506: $if $(@expr1073759445 $!@expr1073759446 $assert_ $(@expr1073759447 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4506 $, f@var1361 .@expr17550 function@var1362 .@expr17570 hasLvalRefQualifier (@expr17571 ) $) $) { $return ; }
4507: }
4508:
4509: void symboldatabase76 ( ) {
4510: $Tokenizer $tokenizer@var1363 $(@expr1073759451 $&@expr1073759452 $settings1@var123 $, $this@expr1073759453 $) $; $const $SymbolDatabase $* $db@var1364 $; $db@var1364 $=@expr1073759454 $getSymbolDB_inner $(@expr1073759455 $tokenizer@var1363 $, "namespace foo {\n  using namespace bar::baz;\n  auto func(int arg) -> bar::quux {}\n}" $, $"test.cpp" $) $; $if $(@expr1073759456 $!@expr1073759457 $assert_ $(@expr1073759458 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4510 $, $db@var1364 $) $) { $return $; } $do ${ $} $while $(@expr1073759459 $false $)
4511:
4512:
4513: ;
4514: $if $(@expr1073759460 $!@expr1073759461 $assertEquals $(@expr1073759462 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4514 $, 2 $, db@var1364 .@expr1073759463 mVariableList@var1365 .@expr1073759464 size (@expr1073759465 ) $) $) { $return ; }
4515: }
4516:
4517: void symboldatabase77 ( ) {
4518: $Tokenizer $tokenizer@var1366 $(@expr1073759466 $&@expr1073759467 $settings1@var123 $, $this@expr1073759468 $) $; $const $SymbolDatabase $* $db@var1367 $; $db@var1367 $=@expr1073759469 $getSymbolDB_inner $(@expr1073759470 $tokenizer@var1366 $, "template <class T1, class T2>\nvoid f() {\n  using T3 = typename T1::template T3<T2>;\n  T3 t;\n}" $, $"test.cpp" $) $; $if $(@expr1073759471 $!@expr1073759472 $assert_ $(@expr1073759473 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4518 $, $db@var1367 $) $) { $return $; } $do ${ $} $while $(@expr1073759474 $false $)
4519:
4520:
4521:
4522: ;
4523: $if $(@expr1073759475 $!@expr1073759476 $assertEquals $(@expr1073759477 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4523 $, 2 $, db@var1367 .@expr1073759478 mVariableList@var1368 .@expr1073759479 size (@expr1073759480 ) $) $) { $return ; }
4524: }
4525:
4526: void symboldatabase78 ( ) {
4527: $Tokenizer $tokenizer@var1369 $(@expr1073759481 $&@expr1073759482 $settings1@var123 $, $this@expr1073759483 $) $; $const $SymbolDatabase $* $db@var1370 $; $db@var1370 $=@expr1073759484 $getSymbolDB_inner $(@expr1073759485 $tokenizer@var1369 $, "template <class...> struct a;\nnamespace {\ntemplate <class, class> struct b;\ntemplate <template <class> class c, class... f, template <class...> class d>\nstruct b<c<f...>, d<>>;\n}\nvoid e() { using c = a<>; }" $, $"test.cpp" $) $; $if $(@expr1073759486 $!@expr1073759487 $assert_ $(@expr1073759488 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4527 $, $db@var1370 $) $) { $return $; } $do ${ $} $while $(@expr1073759489 $false $)
4528:
|
4532:
4533: ;
4534: $if $(@expr1073759490 $!@expr1073759491 $assert_ $(@expr1073759492 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4534 $, db@var1370 !=@expr1073759493 nullptr $) $) { $return ; }
4535: $if $(@expr1073759494 $!@expr1073759495 $assertEquals $(@expr1073759496 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4535 $, "" $, errout@var100 .@expr1073759497 str (@expr1073759498 ) $) $) { $return ; }
4536: }
4537:
4538: void symboldatabase79 ( ) {
4539: {
4540: $Tokenizer $tokenizer@var1371 $(@expr1073759499 $&@expr1073759500 $settings1@var123 $, $this@expr17677 $) $; $const $SymbolDatabase $* $db@var1372 $; $db@var1372 $=@expr1073759502 $getSymbolDB_inner $(@expr1073759503 $tokenizer@var1371 $, "class C { C(); };\nC::C() = default;" $, $"test.cpp" $) $; $if $(@expr1073759504 $!@expr1073759505 $assert_ $(@expr1073759506 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4540 $, $db@var1372 $) $) { $return $; } $do ${ $} $while $(@expr1073759507 $false $)
4541: ;
4542: $if $(@expr1073759508 $!@expr1073759509 $assert_ $(@expr1073759510 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4542 $, db@var1372 .@expr17687 scopeList@var1373 .@expr1073759512 size (@expr1073759513 ) ==@expr1073759514 2 $) $) { $return ; }
4543: $if $(@expr1073759515 $!@expr1073759516 $assert_ $(@expr1073759517 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4543 $, db@var1372 .@expr17687 scopeList@var1373 .@expr17695 back (@expr17696 ) .@expr17697 functionList .@expr1073759522 size (@expr1073759523 ) ==@expr1073759524 1 $) $) { $return ; }
4544: $if $(@expr1073759525 $!@expr1073759526 $assert_ $(@expr1073759527 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4544 $, db@var1372 .@expr17687 scopeList@var1373 .@expr17695 back (@expr17696 ) .@expr17697 functionList .@expr1073759532 front (@expr1073759533 ) .@expr1073759534 isDefault (@expr1073759535 ) ==@expr1073759536 true $) $) { $return ; }
4545: }
4546: {
4547: $Tokenizer $tokenizer@var1374 $(@expr1073759537 $&@expr1073759538 $settings1@var123 $, $this@expr17677 $) $; $const $SymbolDatabase $* $db@var1375 $; $db@var1375 $=@expr1073759539 $getSymbolDB_inner $(@expr1073759540 $tokenizer@var1374 $, "namespace ns {\nclass C { C(); };\n}\nusing namespace ns;\nC::C() = default;" $, $"test.cpp" $) $; $if $(@expr1073759541 $!@expr1073759542 $assert_ $(@expr1073759543 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4547 $, $db@var1375 $) $) { $return $; } $do ${ $} $while $(@expr1073759544 $false $)
4548:
4549:
4550:
4551: ;
4552: $if $(@expr1073759545 $!@expr1073759546 $assert_ $(@expr1073759547 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4552 $, db@var1375 .@expr17724 scopeList@var1376 .@expr1073759549 size (@expr1073759550 ) ==@expr1073759551 3 $) $) { $return ; }
4553: $if $(@expr1073759552 $!@expr1073759553 $assert_ $(@expr1073759554 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4553 $, db@var1375 .@expr17724 scopeList@var1376 .@expr17732 back (@expr17733 ) .@expr17734 functionList .@expr1073759559 size (@expr1073759560 ) ==@expr1073759561 1 $) $) { $return ; }
4554: $if $(@expr1073759562 $!@expr1073759563 $assert_ $(@expr1073759564 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4554 $, db@var1375 .@expr17724 scopeList@var1376 .@expr17732 back (@expr17733 ) .@expr17734 functionList .@expr1073759569 front (@expr1073759570 ) .@expr1073759571 isDefault (@expr1073759572 ) ==@expr1073759573 true $) $) { $return ; }
4555: }
4556: }
4557:
4558: void symboldatabase80 ( ) {
4559: {
4560: $Tokenizer $tokenizer@var1377 $(@expr1073759574 $&@expr1073759575 $settings1@var123 $, $this@expr17752 $) $; $const $SymbolDatabase $* $db@var1378 $; $db@var1378 $=@expr1073759577 $getSymbolDB_inner $(@expr1073759578 $tokenizer@var1377 $, "namespace ns {\nclass A {};\n}\nclass AA {\nprivate:\n    void f(const ns::A&);\n};\nusing namespace ns;\nvoid AA::f(const A&) { }" $, $"test.cpp" $) $; $if $(@expr1073759579 $!@expr1073759580 $assert_ $(@expr1073759581 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4560 $, $db@var1378 $) $) { $return $; } $do ${ $} $while $(@expr1073759582 $false $)
4561:
|
4567:
4568: ;
4569: $if $(@expr1073759583 $!@expr1073759584 $assert_ $(@expr1073759585 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4569 $, db@var1378 .@expr1073759586 scopeList@var1379 .@expr1073759587 size (@expr1073759588 ) ==@expr1073759589 5 $) $) { $return ; }
4570: $if $(@expr1073759590 $!@expr1073759591 $assert_ $(@expr1073759592 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4570 $, db@var1378 .@expr1073759593 functionScopes@var1380 .@expr1073759594 size (@expr1073759595 ) ==@expr1073759596 1 $) $) { $return ; }
4571: const Scope * scope@var1381 ; scope@var1381 =@expr1073759597 db@var1378 .@expr1073759598 findScopeByName (@expr1073759599 "AA" ) ;
4572: $if $(@expr1073759600 $!@expr1073759601 $assert_ $(@expr1073759602 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4572 $, scope@var1381 $) $) { $return ; }
4573: $if $(@expr1073759603 $!@expr1073759604 $assert_ $(@expr1073759605 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4573 $, scope@var1381 .@expr17782 functionList@var1382 .@expr1073759607 size (@expr1073759608 ) ==@expr1073759609 1 $) $) { $return ; }
4574: $if $(@expr1073759610 $!@expr1073759611 $assert_ $(@expr1073759612 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4574 $, scope@var1381 .@expr17782 functionList@var1382 .@expr17790 front (@expr17791 ) .@expr1073759616 name (@expr1073759617 ) ==@expr1073759618 "f" $) $) { $return ; }
4575: $if $(@expr1073759619 $!@expr1073759620 $assert_ $(@expr1073759621 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4575 $, scope@var1381 .@expr17782 functionList@var1382 .@expr17790 front (@expr17791 ) .@expr1073759625 hasBody (@expr1073759626 ) ==@expr1073759627 true $) $) { $return ; }
4576: }
4577: {
4578: $Tokenizer $tokenizer@var1383 $(@expr1073759628 $&@expr1073759629 $settings1@var123 $, $this@expr17752 $) $; $const $SymbolDatabase $* $db@var1384 $; $db@var1384 $=@expr1073759630 $getSymbolDB_inner $(@expr1073759631 $tokenizer@var1383 $, "namespace ns {\nnamespace ns1 {\nclass A {};\n}\n}\nclass AA {\nprivate:\n    void f(const ns::ns1::A&);\n};\nusing namespace ns::ns1;\nvoid AA::f(const A&) { }" $, $"test.cpp" $) $; $if $(@expr1073759632 $!@expr1073759633 $assert_ $(@expr1073759634 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4578 $, $db@var1384 $) $) { $return $; } $do ${ $} $while $(@expr1073759635 $false $)
4579:
|
4587:
4588: ;
4589: $if $(@expr1073759636 $!@expr1073759637 $assert_ $(@expr1073759638 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4589 $, db@var1384 .@expr1073759639 scopeList@var1385 .@expr1073759640 size (@expr1073759641 ) ==@expr1073759642 6 $) $) { $return ; }
4590: $if $(@expr1073759643 $!@expr1073759644 $assert_ $(@expr1073759645 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4590 $, db@var1384 .@expr1073759646 functionScopes@var1386 .@expr1073759647 size (@expr1073759648 ) ==@expr1073759649 1 $) $) { $return ; }
4591: const Scope * scope@var1387 ; scope@var1387 =@expr1073759650 db@var1384 .@expr1073759651 findScopeByName (@expr1073759652 "AA" ) ;
4592: $if $(@expr1073759653 $!@expr1073759654 $assert_ $(@expr1073759655 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4592 $, scope@var1387 $) $) { $return ; }
4593: $if $(@expr1073759656 $!@expr1073759657 $assert_ $(@expr1073759658 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4593 $, scope@var1387 .@expr17835 functionList@var1388 .@expr1073759660 size (@expr1073759661 ) ==@expr1073759662 1 $) $) { $return ; }
4594: $if $(@expr1073759663 $!@expr1073759664 $assert_ $(@expr1073759665 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4594 $, scope@var1387 .@expr17835 functionList@var1388 .@expr17843 front (@expr17844 ) .@expr1073759669 name (@expr1073759670 ) ==@expr1073759671 "f" $) $) { $return ; }
4595: $if $(@expr1073759672 $!@expr1073759673 $assert_ $(@expr1073759674 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4595 $, scope@var1387 .@expr17835 functionList@var1388 .@expr17843 front (@expr17844 ) .@expr1073759678 hasBody (@expr1073759679 ) ==@expr1073759680 true $) $) { $return ; }
4596: }
4597: {
4598: $Tokenizer $tokenizer@var1389 $(@expr1073759681 $&@expr1073759682 $settings1@var123 $, $this@expr17752 $) $; $const $SymbolDatabase $* $db@var1390 $; $db@var1390 $=@expr1073759683 $getSymbolDB_inner $(@expr1073759684 $tokenizer@var1389 $, "namespace ns {\nnamespace ns1 {\nclass A {};\n}\n}\nclass AA {\nprivate:\n    void f(const ns::ns1::A&);\n};\nusing namespace ns;\nvoid AA::f(const ns1::A&) { }" $, $"test.cpp" $) $; $if $(@expr1073759685 $!@expr1073759686 $assert_ $(@expr1073759687 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4598 $, $db@var1390 $) $) { $return $; } $do ${ $} $while $(@expr1073759688 $false $)
4599:
|
4607:
4608: ;
4609: $if $(@expr1073759689 $!@expr1073759690 $assert_ $(@expr1073759691 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4609 $, db@var1390 .@expr1073759692 scopeList@var1391 .@expr1073759693 size (@expr1073759694 ) ==@expr1073759695 6 $) $) { $return ; }
4610: $if $(@expr1073759696 $!@expr1073759697 $assert_ $(@expr1073759698 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4610 $, db@var1390 .@expr1073759699 functionScopes@var1392 .@expr1073759700 size (@expr1073759701 ) ==@expr1073759702 1 $) $) { $return ; }
4611: const Scope * scope@var1393 ; scope@var1393 =@expr1073759703 db@var1390 .@expr1073759704 findScopeByName (@expr1073759705 "AA" ) ;
4612: $if $(@expr1073759706 $!@expr1073759707 $assert_ $(@expr1073759708 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4612 $, scope@var1393 $) $) { $return ; }
4613: $if $(@expr1073759709 $!@expr1073759710 $assert_ $(@expr1073759711 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4613 $, scope@var1393 .@expr17888 functionList@var1394 .@expr1073759713 size (@expr1073759714 ) ==@expr1073759715 1 $) $) { $return ; }
4614: $if $(@expr1073759716 $!@expr1073759717 $assert_ $(@expr1073759718 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4614 $, scope@var1393 .@expr17888 functionList@var1394 .@expr17896 front (@expr17897 ) .@expr1073759722 name (@expr1073759723 ) ==@expr1073759724 "f" $) $) { $return ; }
4615: $if $(@expr1073759725 $!@expr1073759726 $assert_ $(@expr1073759727 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4615 $, scope@var1393 .@expr17888 functionList@var1394 .@expr17896 front (@expr17897 ) .@expr1073759731 hasBody (@expr1073759732 ) ==@expr1073759733 true $) $) { $return ; }
4616: }
4617: }
4618:
4619: void symboldatabase81 ( ) {
4620: {
4621: $Tokenizer $tokenizer@var1395 $(@expr1073759734 $&@expr1073759735 $settings1@var123 $, $this@expr17912 $) $; $const $SymbolDatabase $* $db@var1396 $; $db@var1396 $=@expr1073759737 $getSymbolDB_inner $(@expr1073759738 $tokenizer@var1395 $, "namespace Terminal {\n    class Complete {\n    public:\n        std::string act(const Parser::Action *act);\n    };\n}\nusing namespace std;\nusing namespace Parser;\nusing namespace Terminal;\nstring Complete::act(const Action *act) { }" $, $"test.cpp" $) $; $if $(@expr1073759739 $!@expr1073759740 $assert_ $(@expr1073759741 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4621 $, $db@var1396 $) $) { $return $; } $do ${ $} $while $(@expr1073759742 $false $)
4622:
|
4629:
4630: ;
4631: $if $(@expr1073759743 $!@expr1073759744 $assert_ $(@expr1073759745 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4631 $, db@var1396 .@expr1073759746 scopeList@var1397 .@expr1073759747 size (@expr1073759748 ) ==@expr1073759749 4 $) $) { $return ; }
4632: $if $(@expr1073759750 $!@expr1073759751 $assert_ $(@expr1073759752 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4632 $, db@var1396 .@expr1073759753 functionScopes@var1398 .@expr1073759754 size (@expr1073759755 ) ==@expr1073759756 1 $) $) { $return ; }
4633: const Scope * scope@var1399 ; scope@var1399 =@expr1073759757 db@var1396 .@expr1073759758 findScopeByName (@expr1073759759 "Complete" ) ;
4634: $if $(@expr1073759760 $!@expr1073759761 $assert_ $(@expr1073759762 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4634 $, scope@var1399 $) $) { $return ; }
4635: $if $(@expr1073759763 $!@expr1073759764 $assert_ $(@expr1073759765 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4635 $, scope@var1399 .@expr17942 functionList@var1400 .@expr1073759767 size (@expr1073759768 ) ==@expr1073759769 1 $) $) { $return ; }
4636: $if $(@expr1073759770 $!@expr1073759771 $assert_ $(@expr1073759772 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4636 $, scope@var1399 .@expr17942 functionList@var1400 .@expr17950 front (@expr17951 ) .@expr1073759776 name (@expr1073759777 ) ==@expr1073759778 "act" $) $) { $return ; }
4637: $if $(@expr1073759779 $!@expr1073759780 $assert_ $(@expr1073759781 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4637 $, scope@var1399 .@expr17942 functionList@var1400 .@expr17950 front (@expr17951 ) .@expr1073759785 hasBody (@expr1073759786 ) ==@expr1073759787 true $) $) { $return ; }
4638: }
4639: {
4640: $Tokenizer $tokenizer@var1401 $(@expr1073759788 $&@expr1073759789 $settings1@var123 $, $this@expr17912 $) $; $const $SymbolDatabase $* $db@var1402 $; $db@var1402 $=@expr1073759790 $getSymbolDB_inner $(@expr1073759791 $tokenizer@var1401 $, "namespace Terminal {\n    class Complete {\n    public:\n        std::string act(const Foo::Parser::Action *act);\n    };\n}\nusing namespace std;\nusing namespace Foo::Parser;\nusing namespace Terminal;\nstring Complete::act(const Action *act) { }" $, $"test.cpp" $) $; $if $(@expr1073759792 $!@expr1073759793 $assert_ $(@expr1073759794 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4640 $, $db@var1402 $) $) { $return $; } $do ${ $} $while $(@expr1073759795 $false $)
4641:
|
4648:
4649: ;
4650: $if $(@expr1073759796 $!@expr1073759797 $assert_ $(@expr1073759798 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4650 $, db@var1402 .@expr1073759799 scopeList@var1403 .@expr1073759800 size (@expr1073759801 ) ==@expr1073759802 4 $) $) { $return ; }
4651: $if $(@expr1073759803 $!@expr1073759804 $assert_ $(@expr1073759805 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4651 $, db@var1402 .@expr1073759806 functionScopes@var1404 .@expr1073759807 size (@expr1073759808 ) ==@expr1073759809 1 $) $) { $return ; }
4652: const Scope * scope@var1405 ; scope@var1405 =@expr1073759810 db@var1402 .@expr1073759811 findScopeByName (@expr1073759812 "Complete" ) ;
4653: $if $(@expr1073759813 $!@expr1073759814 $assert_ $(@expr1073759815 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4653 $, scope@var1405 $) $) { $return ; }
4654: $if $(@expr1073759816 $!@expr1073759817 $assert_ $(@expr1073759818 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4654 $, scope@var1405 .@expr17995 functionList@var1406 .@expr1073759820 size (@expr1073759821 ) ==@expr1073759822 1 $) $) { $return ; }
4655: $if $(@expr1073759823 $!@expr1073759824 $assert_ $(@expr1073759825 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4655 $, scope@var1405 .@expr17995 functionList@var1406 .@expr18003 front (@expr18004 ) .@expr1073759829 name (@expr1073759830 ) ==@expr1073759831 "act" $) $) { $return ; }
4656: $if $(@expr1073759832 $!@expr1073759833 $assert_ $(@expr1073759834 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4656 $, scope@var1405 .@expr17995 functionList@var1406 .@expr18003 front (@expr18004 ) .@expr1073759838 hasBody (@expr1073759839 ) ==@expr1073759840 true $) $) { $return ; }
4657: }
4658: }
4659:
4660: void symboldatabase82 ( ) {
4661: $Tokenizer $tokenizer@var1407 $(@expr1073759841 $&@expr1073759842 $settings1@var123 $, $this@expr1073759843 $) $; $const $SymbolDatabase $* $db@var1408 $; $db@var1408 $=@expr1073759844 $getSymbolDB_inner $(@expr1073759845 $tokenizer@var1407 $, "namespace foo { void foo() {} }" $, $"test.cpp" $) $; $if $(@expr1073759846 $!@expr1073759847 $assert_ $(@expr1073759848 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4661 $, $db@var1408 $) $) { $return $; } $do ${ $} $while $(@expr1073759849 $false $) ;
4662: $if $(@expr1073759850 $!@expr1073759851 $assert_ $(@expr1073759852 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4662 $, db@var1408 .@expr18029 functionScopes@var1409 .@expr1073759854 size (@expr1073759855 ) ==@expr1073759856 1 $) $) { $return ; }
4663: $if $(@expr1073759857 $!@expr1073759858 $assertEquals $(@expr1073759859 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4663 $, false $, db@var1408 .@expr18029 functionScopes@var1409 [@expr1073759861 0 ] .@expr1073759862 function .@expr1073759863 isConstructor (@expr1073759864 ) $) $) { $return ; }
4664: }
4665:
4666: void symboldatabase83 ( ) {
4667: const bool old@var1410 =@expr1073759865 settings1@var123 .@expr18042 debugwarnings@var791 ;
4668: settings1@var123 .@expr18042 debugwarnings@var791 =@expr1073759868 true ;
4669: $Tokenizer $tokenizer@var1411 $(@expr1073759869 $&@expr1073759870 $settings1@var123 $, $this@expr1073759871 $) $; $const $SymbolDatabase $* $db@var1412 $; $db@var1412 $=@expr1073759872 $getSymbolDB_inner $(@expr1073759873 $tokenizer@var1411 $, "struct a { a() noexcept; };\na::a() noexcept = default;" $, $"test.cpp" $) $; $if $(@expr1073759874 $!@expr1073759875 $assert_ $(@expr1073759876 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4669 $, $db@var1412 $) $) { $return $; } $do ${ $} $while $(@expr1073759877 $false $)
4670: ;
4671: settings1@var123 .@expr18042 debugwarnings@var791 =@expr1073759879 old@var1410 ;
4672: const Scope * scope@var1413 ; scope@var1413 =@expr1073759880 db@var1412 .@expr1073759881 findScopeByName (@expr1073759882 "a" ) ;
4673: $if $(@expr1073759883 $!@expr1073759884 $assert_ $(@expr1073759885 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4673 $, scope@var1413 $) $) { $return ; }
4674: $if $(@expr1073759886 $!@expr1073759887 $assert_ $(@expr1073759888 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4674 $, scope@var1413 .@expr18065 functionList@var1414 .@expr1073759890 size (@expr1073759891 ) ==@expr1073759892 1 $) $) { $return ; }
4675: $if $(@expr1073759893 $!@expr1073759894 $assert_ $(@expr1073759895 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4675 $, scope@var1413 .@expr18065 functionList@var1414 .@expr18073 front (@expr18074 ) .@expr1073759899 name (@expr1073759900 ) ==@expr1073759901 "a" $) $) { $return ; }
4676: $if $(@expr1073759902 $!@expr1073759903 $assert_ $(@expr1073759904 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4676 $, scope@var1413 .@expr18065 functionList@var1414 .@expr18073 front (@expr18074 ) .@expr1073759908 hasBody (@expr1073759909 ) ==@expr1073759910 false $) $) { $return ; }
4677: $if $(@expr1073759911 $!@expr1073759912 $assert_ $(@expr1073759913 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4677 $, scope@var1413 .@expr18065 functionList@var1414 .@expr18073 front (@expr18074 ) .@expr1073759917 isConstructor (@expr1073759918 ) ==@expr1073759919 true $) $) { $return ; }
4678: $if $(@expr1073759920 $!@expr1073759921 $assert_ $(@expr1073759922 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4678 $, scope@var1413 .@expr18065 functionList@var1414 .@expr18073 front (@expr18074 ) .@expr1073759926 isDefault (@expr1073759927 ) ==@expr1073759928 true $) $) { $return ; }
4679: $if $(@expr1073759929 $!@expr1073759930 $assert_ $(@expr1073759931 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4679 $, scope@var1413 .@expr18065 functionList@var1414 .@expr18073 front (@expr18074 ) .@expr1073759935 isNoExcept (@expr1073759936 ) ==@expr1073759937 true $) $) { $return ; }
4680: $if $(@expr1073759938 $!@expr1073759939 $assertEquals $(@expr1073759940 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4680 $, "" $, errout@var100 .@expr1073759941 str (@expr1073759942 ) $) $) { $return ; }
4681: }
4682:
4683: void symboldatabase84 ( ) {
4684: {
4685: const bool old@var1415 =@expr1073759943 settings1@var123 .@expr18120 debugwarnings@var791 ;
4686: settings1@var123 .@expr18120 debugwarnings@var791 =@expr1073759946 true ;
4687: $Tokenizer $tokenizer@var1416 $(@expr1073759947 $&@expr1073759948 $settings1@var123 $, $this@expr18125 $) $; $const $SymbolDatabase $* $db@var1417 $; $db@var1417 $=@expr1073759950 $getSymbolDB_inner $(@expr1073759951 $tokenizer@var1416 $, "struct a { a() noexcept(false); };\na::a() noexcept(false) = default;" $, $"test.cpp" $) $; $if $(@expr1073759952 $!@expr1073759953 $assert_ $(@expr1073759954 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4687 $, $db@var1417 $) $) { $return $; } $do ${ $} $while $(@expr1073759955 $false $)
4688: ;
4689: settings1@var123 .@expr18120 debugwarnings@var791 =@expr1073759957 old@var1415 ;
4690: const Scope * scope@var1418 ; scope@var1418 =@expr1073759958 db@var1417 .@expr1073759959 findScopeByName (@expr1073759960 "a" ) ;
4691: $if $(@expr1073759961 $!@expr1073759962 $assert_ $(@expr1073759963 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4691 $, scope@var1418 $) $) { $return ; }
4692: $if $(@expr1073759964 $!@expr1073759965 $assert_ $(@expr1073759966 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4692 $, scope@var1418 .@expr18143 functionList@var1419 .@expr1073759968 size (@expr1073759969 ) ==@expr1073759970 1 $) $) { $return ; }
4693: $if $(@expr1073759971 $!@expr1073759972 $assert_ $(@expr1073759973 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4693 $, scope@var1418 .@expr18143 functionList@var1419 .@expr18151 front (@expr18152 ) .@expr1073759977 name (@expr1073759978 ) ==@expr1073759979 "a" $) $) { $return ; }
4694: $if $(@expr1073759980 $!@expr1073759981 $assert_ $(@expr1073759982 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4694 $, scope@var1418 .@expr18143 functionList@var1419 .@expr18151 front (@expr18152 ) .@expr1073759986 hasBody (@expr1073759987 ) ==@expr1073759988 false $) $) { $return ; }
4695: $if $(@expr1073759989 $!@expr1073759990 $assert_ $(@expr1073759991 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4695 $, scope@var1418 .@expr18143 functionList@var1419 .@expr18151 front (@expr18152 ) .@expr1073759995 isConstructor (@expr1073759996 ) ==@expr1073759997 true $) $) { $return ; }
4696: $if $(@expr1073759998 $!@expr1073759999 $assert_ $(@expr1073760000 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4696 $, scope@var1418 .@expr18143 functionList@var1419 .@expr18151 front (@expr18152 ) .@expr1073760004 isDefault (@expr1073760005 ) ==@expr1073760006 true $) $) { $return ; }
4697: $if $(@expr1073760007 $!@expr1073760008 $assert_ $(@expr1073760009 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4697 $, scope@var1418 .@expr18143 functionList@var1419 .@expr18151 front (@expr18152 ) .@expr1073760013 isNoExcept (@expr1073760014 ) ==@expr1073760015 false $) $) { $return ; }
4698: $if $(@expr1073760016 $!@expr1073760017 $assertEquals $(@expr1073760018 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4698 $, "" $, errout@var100 .@expr18195 str (@expr18196 ) $) $) { $return ; }
4699: }
4700: {
4701: const bool old@var1420 =@expr1073760021 settings1@var123 .@expr18120 debugwarnings@var791 ;
4702: settings1@var123 .@expr18120 debugwarnings@var791 =@expr1073760024 true ;
4703: $Tokenizer $tokenizer@var1421 $(@expr1073760025 $&@expr1073760026 $settings1@var123 $, $this@expr18125 $) $; $const $SymbolDatabase $* $db@var1422 $; $db@var1422 $=@expr1073760027 $getSymbolDB_inner $(@expr1073760028 $tokenizer@var1421 $, "struct a { a() noexcept(true); };\na::a() noexcept(true) = default;" $, $"test.cpp" $) $; $if $(@expr1073760029 $!@expr1073760030 $assert_ $(@expr1073760031 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4703 $, $db@var1422 $) $) { $return $; } $do ${ $} $while $(@expr1073760032 $false $)
4704: ;
4705: settings1@var123 .@expr18120 debugwarnings@var791 =@expr1073760034 old@var1420 ;
4706: const Scope * scope@var1423 ; scope@var1423 =@expr1073760035 db@var1422 .@expr1073760036 findScopeByName (@expr1073760037 "a" ) ;
4707: $if $(@expr1073760038 $!@expr1073760039 $assert_ $(@expr1073760040 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4707 $, scope@var1423 $) $) { $return ; }
4708: $if $(@expr1073760041 $!@expr1073760042 $assert_ $(@expr1073760043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4708 $, scope@var1423 .@expr18220 functionList@var1424 .@expr1073760045 size (@expr1073760046 ) ==@expr1073760047 1 $) $) { $return ; }
4709: $if $(@expr1073760048 $!@expr1073760049 $assert_ $(@expr1073760050 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4709 $, scope@var1423 .@expr18220 functionList@var1424 .@expr18228 front (@expr18229 ) .@expr1073760054 name (@expr1073760055 ) ==@expr1073760056 "a" $) $) { $return ; }
4710: $if $(@expr1073760057 $!@expr1073760058 $assert_ $(@expr1073760059 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4710 $, scope@var1423 .@expr18220 functionList@var1424 .@expr18228 front (@expr18229 ) .@expr1073760063 hasBody (@expr1073760064 ) ==@expr1073760065 false $) $) { $return ; }
4711: $if $(@expr1073760066 $!@expr1073760067 $assert_ $(@expr1073760068 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4711 $, scope@var1423 .@expr18220 functionList@var1424 .@expr18228 front (@expr18229 ) .@expr1073760072 isConstructor (@expr1073760073 ) ==@expr1073760074 true $) $) { $return ; }
4712: $if $(@expr1073760075 $!@expr1073760076 $assert_ $(@expr1073760077 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4712 $, scope@var1423 .@expr18220 functionList@var1424 .@expr18228 front (@expr18229 ) .@expr1073760081 isDefault (@expr1073760082 ) ==@expr1073760083 true $) $) { $return ; }
4713: $if $(@expr1073760084 $!@expr1073760085 $assert_ $(@expr1073760086 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4713 $, scope@var1423 .@expr18220 functionList@var1424 .@expr18228 front (@expr18229 ) .@expr1073760090 isNoExcept (@expr1073760091 ) ==@expr1073760092 true $) $) { $return ; }
4714: $if $(@expr1073760093 $!@expr1073760094 $assertEquals $(@expr1073760095 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4714 $, "" $, errout@var100 .@expr18195 str (@expr18196 ) $) $) { $return ; }
4715: }
4716: }
4717:
4718: void symboldatabase85 ( ) {
4719: $Tokenizer $tokenizer@var1425 $(@expr1073760098 $&@expr1073760099 $settings1@var123 $, $this@expr1073760100 $) $; $const $SymbolDatabase $* $db@var1426 $; $db@var1426 $=@expr1073760101 $getSymbolDB_inner $(@expr1073760102 $tokenizer@var1425 $, "class Fred {\n  enum Mode { Mode1, Mode2, Mode3 };\n  void f() { _mode = x; }\n  Mode _mode;\n  DECLARE_PROPERTY_FIELD(_mode);\n};" $, $"test.cpp" $) $; $if $(@expr1073760103 $!@expr1073760104 $assert_ $(@expr1073760105 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4719 $, $db@var1426 $) $) { $return $; } $do ${ $} $while $(@expr1073760106 $false $)
4720:
|
4723:
4724: ;
4725: const Token * vartok1@var1427 ; vartok1@var1427 =@expr1073760107 Token ::@expr18284 findsimplematch (@expr1073760109 tokenizer@var1425 .@expr18286 tokens (@expr18287 ) , "_mode =" ) ;
4726: $if $(@expr1073760112 $!@expr1073760113 $assert_ $(@expr1073760114 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4726 $, vartok1@var1427 $) $) { $return ; }
4727: $if $(@expr1073760115 $!@expr1073760116 $assert_ $(@expr1073760117 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4727 $, vartok1@var1427 .@expr18294 variable (@expr18295 ) $) $) { $return ; }
4728: $if $(@expr1073760120 $!@expr1073760121 $assert_ $(@expr1073760122 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4728 $, vartok1@var1427 .@expr18294 variable (@expr18295 ) .@expr1073760125 scope (@expr1073760126 ) $) $) { $return ; }
4729:
4730: const Token * vartok2@var1428 ; vartok2@var1428 =@expr1073760127 Token ::@expr18284 findsimplematch (@expr1073760129 tokenizer@var1425 .@expr18286 tokens (@expr18287 ) , "( _mode ) ;" ) .@expr1073760132 next (@expr1073760133 ) ;
4731: $if $(@expr1073760134 $!@expr1073760135 $assertEquals $(@expr1073760136 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4731 $, long (@expr1073760137 vartok1@var1427 .@expr18294 variable (@expr18295 ) ) $, long (@expr1073760140 vartok2@var1428 .@expr1073760141 variable (@expr1073760142 ) ) $) $) { $return ; }
4732: }
4733:
4734: void symboldatabase86 ( ) {
4735: $Tokenizer $tokenizer@var1429 $(@expr1073760143 $&@expr1073760144 $settings1@var123 $, $this@expr1073760145 $) $; $const $SymbolDatabase $* $db@var1430 $; $db@var1430 $=@expr1073760146 $getSymbolDB_inner $(@expr1073760147 $tokenizer@var1429 $, "class C { auto operator=(const C&) -> C&; };\nauto C::operator=(const C&) -> C& = default;" $, $"test.cpp" $) $; $if $(@expr1073760148 $!@expr1073760149 $assert_ $(@expr1073760150 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4735 $, $db@var1430 $) $) { $return $; } $do ${ $} $while $(@expr1073760151 $false $)
4736: ;
4737: $if $(@expr1073760152 $!@expr1073760153 $assert_ $(@expr1073760154 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4737 $, db@var1430 .@expr18331 scopeList@var1431 .@expr1073760156 size (@expr1073760157 ) ==@expr1073760158 2 $) $) { $return ; }
4738: $if $(@expr1073760159 $!@expr1073760160 $assert_ $(@expr1073760161 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4738 $, db@var1430 .@expr18331 scopeList@var1431 .@expr18339 back (@expr18340 ) .@expr18341 functionList .@expr1073760166 size (@expr1073760167 ) ==@expr1073760168 1 $) $) { $return ; }
4739: $if $(@expr1073760169 $!@expr1073760170 $assert_ $(@expr1073760171 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4739 $, db@var1430 .@expr18331 scopeList@var1431 .@expr18339 back (@expr18340 ) .@expr18341 functionList .@expr18352 front (@expr18353 ) .@expr1073760178 isDefault (@expr1073760179 ) ==@expr1073760180 true $) $) { $return ; }
4740: $if $(@expr1073760181 $!@expr1073760182 $assert_ $(@expr1073760183 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4740 $, db@var1430 .@expr18331 scopeList@var1431 .@expr18339 back (@expr18340 ) .@expr18341 functionList .@expr18352 front (@expr18353 ) .@expr1073760190 hasBody (@expr1073760191 ) ==@expr1073760192 false $) $) { $return ; }
4741: }
4742:
4743: void symboldatabase87 ( ) {
4744: $Tokenizer $tokenizer@var1432 $(@expr1073760193 $&@expr1073760194 $settings1@var123 $, $this@expr1073760195 $) $; $const $SymbolDatabase $* $db@var1433 $; $db@var1433 $=@expr1073760196 $getSymbolDB_inner $(@expr1073760197 $tokenizer@var1432 $, "extern const char ( * x [ 256 ] ) ;" $, $"test.cpp" $) $; $if $(@expr1073760198 $!@expr1073760199 $assert_ $(@expr1073760200 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4744 $, $db@var1433 $) $) { $return $; } $do ${ $} $while $(@expr1073760201 $false $) ;
4745: const Token * xtok@var1434 ; xtok@var1434 =@expr1073760202 Token ::@expr1073760203 findsimplematch (@expr1073760204 tokenizer@var1432 .@expr1073760205 tokens (@expr1073760206 ) , "x" ) ;
4746: $if $(@expr1073760207 $!@expr1073760208 $assert_ $(@expr1073760209 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4746 $, xtok@var1434 .@expr1073760210 variable (@expr1073760211 ) $) $) { $return ; }
4747: }
4748:
4749: void symboldatabase88 ( ) {
4750: $check_ $(@expr1073760212 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4750 $, "namespace external {\nnamespace ns {\nenum class s { O };\n}\n}\nnamespace internal {\nnamespace ns1 {\ntemplate <typename T>\nvoid make(external::ns::s) {\n}\n}\n}\nusing namespace external::ns;\nstruct A { };\nstatic void make(external::ns::s ss) {\n  internal::ns1::make<A>(ss);\n}\n" , true $)
4751:
|
4765:
4766: ;
4767: $if $(@expr1073760213 $!@expr1073760214 $assertEquals $(@expr1073760215 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4767 $, "" $, errout@var100 .@expr1073760216 str (@expr1073760217 ) $) $) { $return ; }
4768: }
4769:
4770: void symboldatabase89 ( ) {
4771: $Tokenizer $tokenizer@var1435 $(@expr1073760218 $&@expr1073760219 $settings1@var123 $, $this@expr1073760220 $) $; $const $SymbolDatabase $* $db@var1436 $; $db@var1436 $=@expr1073760221 $getSymbolDB_inner $(@expr1073760222 $tokenizer@var1435 $, "namespace external {\nnamespace ns1 {\nclass A {\npublic:\n  struct S { };\n  A(const S&) { }\n};\nstatic const A::S AS = A::S();\n}\n}\nusing namespace external::ns1;\nA a{AS};" $, $"test.cpp" $) $; $if $(@expr1073760223 $!@expr1073760224 $assert_ $(@expr1073760225 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4771 $, $db@var1436 $) $) { $return $; } $do ${ $} $while $(@expr1073760226 $false $)
4772:
|
4781:
4782: ;
4783: const Token * vartok1@var1437 ; vartok1@var1437 =@expr1073760227 Token ::@expr1073760228 findsimplematch (@expr1073760229 tokenizer@var1435 .@expr1073760230 tokens (@expr1073760231 ) , "A a" ) ;
4784: $if $(@expr1073760232 $!@expr1073760233 $assert_ $(@expr1073760234 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4784 $, vartok1@var1437 $) $) { $return ; }
4785: $if $(@expr1073760235 $!@expr1073760236 $assert_ $(@expr1073760237 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4785 $, vartok1@var1437 .@expr18414 next (@expr18415 ) $) $) { $return ; }
4786: $if $(@expr1073760240 $!@expr1073760241 $assert_ $(@expr1073760242 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4786 $, vartok1@var1437 .@expr18414 next (@expr18415 ) .@expr18421 variable (@expr18422 ) $) $) { $return ; }
4787: $if $(@expr1073760247 $!@expr1073760248 $assert_ $(@expr1073760249 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4787 $, vartok1@var1437 .@expr18414 next (@expr18415 ) .@expr18421 variable (@expr18422 ) .@expr18430 valueType (@expr18431 ) $) $) { $return ; }
4788: $if $(@expr1073760256 $!@expr1073760257 $assert_ $(@expr1073760258 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4788 $, vartok1@var1437 .@expr18414 next (@expr18415 ) .@expr18421 variable (@expr18422 ) .@expr18430 valueType (@expr18431 ) .@expr1073760265 str (@expr1073760266 ) ==@expr1073760267 "external::ns1::A" $) $) { $return ; }
4789: }
4790:
4791: void symboldatabase90 ( ) {
4792: $Tokenizer $tokenizer@var1438 $(@expr1073760268 $&@expr1073760269 $settings1@var123 $, $this@expr1073760270 $) $; $const $SymbolDatabase $* $db@var1439 $; $db@var1439 $=@expr1073760271 $getSymbolDB_inner $(@expr1073760272 $tokenizer@var1438 $, "struct Fred {\n    void foo(const int * const x);\n};\nvoid Fred::foo(const int * x) { }" $, $"test.cpp" $) $; $if $(@expr1073760273 $!@expr1073760274 $assert_ $(@expr1073760275 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4792 $, $db@var1439 $) $) { $return $; } $do ${ $} $while $(@expr1073760276 $false $)
4793:
4794:
4795: ;
4796: $if $(@expr1073760277 $!@expr1073760278 $assertEquals $(@expr1073760279 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4796 $, "" $, errout@var100 .@expr1073760280 str (@expr1073760281 ) $) $) { $return ; }
4797: const Token * functok@var1440 ; functok@var1440 =@expr1073760282 Token ::@expr1073760283 findsimplematch (@expr1073760284 tokenizer@var1438 .@expr1073760285 tokens (@expr1073760286 ) , "foo ( const int * x )" ) ;
4798: $if $(@expr1073760287 $!@expr1073760288 $assert_ $(@expr1073760289 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4798 $, functok@var1440 $) $) { $return ; }
4799: $if $(@expr1073760290 $!@expr1073760291 $assert_ $(@expr1073760292 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4799 $, functok@var1440 .@expr18469 function (@expr18470 ) $) $) { $return ; }
4800: $if $(@expr1073760295 $!@expr1073760296 $assert_ $(@expr1073760297 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4800 $, functok@var1440 .@expr18469 function (@expr18470 ) .@expr1073760300 name (@expr1073760301 ) ==@expr1073760302 "foo" $) $) { $return ; }
4801: }
4802:
4803: void symboldatabase91 ( ) {
4804: $Tokenizer $tokenizer@var1441 $(@expr1073760303 $&@expr1073760304 $settings1@var123 $, $this@expr1073760305 $) $; $const $SymbolDatabase $* $db@var1442 $; $db@var1442 $=@expr1073760306 $getSymbolDB_inner $(@expr1073760307 $tokenizer@var1441 $, "namespace Fred {\n    struct Value {};\n    void foo(const std::vector<std::function<void(const Fred::Value &)>> &callbacks);\n}\nvoid Fred::foo(const std::vector<std::function<void(const Fred::Value &)>> &callbacks) { }" $, $"test.cpp" $) $; $if $(@expr1073760308 $!@expr1073760309 $assert_ $(@expr1073760310 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4804 $, $db@var1442 $) $) { $return $; } $do ${ $} $while $(@expr1073760311 $false $)
4805:
4806:
4807:
4808: ;
4809: $if $(@expr1073760312 $!@expr1073760313 $assertEquals $(@expr1073760314 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4809 $, "" $, errout@var100 .@expr1073760315 str (@expr1073760316 ) $) $) { $return ; }
4810: const Token * functok@var1443 ; functok@var1443 =@expr1073760317 Token ::@expr1073760318 findsimplematch (@expr1073760319 tokenizer@var1441 .@expr1073760320 tokens (@expr1073760321 ) ,
4811: "foo ( const std :: vector < std :: function < void ( const Fred :: Value & ) > > & callbacks ) { }" ) ;
4812: $if $(@expr1073760322 $!@expr1073760323 $assert_ $(@expr1073760324 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4812 $, functok@var1443 $) $) { $return ; }
4813: $if $(@expr1073760325 $!@expr1073760326 $assert_ $(@expr1073760327 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4813 $, functok@var1443 .@expr18504 function (@expr18505 ) $) $) { $return ; }
4814: $if $(@expr1073760330 $!@expr1073760331 $assert_ $(@expr1073760332 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4814 $, functok@var1443 .@expr18504 function (@expr18505 ) .@expr1073760335 name (@expr1073760336 ) ==@expr1073760337 "foo" $) $) { $return ; }
4815: }
4816:
4817: void symboldatabase92 ( ) {
4818: $Tokenizer $tokenizer@var1444 $(@expr1073760338 $&@expr1073760339 $settings1@var123 $, $this@expr1073760340 $) $; $const $SymbolDatabase $* $db@var1445 $; $db@var1445 $=@expr1073760341 $getSymbolDB_inner $(@expr1073760342 $tokenizer@var1444 $, "template <size_t, typename...> struct a;\ntemplate <size_t b, typename c, typename... d>\nstruct a<b, c, d...> : a<1, d...> {};\ntemplate <typename... e> struct f : a<0, e...> {};" $, $"test.cpp" $) $; $if $(@expr1073760343 $!@expr1073760344 $assert_ $(@expr1073760345 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4818 $, $db@var1445 $) $) { $return $; } $do ${ $} $while $(@expr1073760346 $false $)
4819:
4820:
4821: ;
4822: $if $(@expr1073760347 $!@expr1073760348 $assertEquals $(@expr1073760349 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4822 $, "" $, errout@var100 .@expr1073760350 str (@expr1073760351 ) $) $) { $return ; }
4823: }
4824:
4825: void symboldatabase93 ( ) {
4826: $Tokenizer $tokenizer@var1446 $(@expr1073760352 $&@expr1073760353 $settings1@var123 $, $this@expr1073760354 $) $; $const $SymbolDatabase $* $db@var1447 $; $db@var1447 $=@expr1073760355 $getSymbolDB_inner $(@expr1073760356 $tokenizer@var1446 $, "struct alignas(int) A{\n};\n" $, $"test.cpp" $) $; $if $(@expr1073760357 $!@expr1073760358 $assert_ $(@expr1073760359 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4826 $, $db@var1447 $) $) { $return $; } $do ${ $} $while $(@expr1073760360 $false $)
4827:
4828: ;
4829: $if $(@expr1073760361 $!@expr1073760362 $assert_ $(@expr1073760363 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4829 $, db@var1447 !=@expr1073760364 nullptr $) $) { $return ; }
4830: const Scope * scope@var1448 ; scope@var1448 =@expr1073760365 db@var1447 .@expr1073760366 findScopeByName (@expr1073760367 "A" ) ;
4831: $if $(@expr1073760368 $!@expr1073760369 $assert_ $(@expr1073760370 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4831 $, scope@var1448 $) $) { $return ; }
4832: }
4833:
4834: void symboldatabase94 ( ) {
4835: $Tokenizer $tokenizer@var1449 $(@expr1073760371 $&@expr1073760372 $settings1@var123 $, $this@expr1073760373 $) $; $const $SymbolDatabase $* $db@var1450 $; $db@var1450 $=@expr1073760374 $getSymbolDB_inner $(@expr1073760375 $tokenizer@var1449 $, "int foo() { auto [x,y] = xy(); return x+y; }" $, $"test.cpp" $) $; $if $(@expr1073760376 $!@expr1073760377 $assert_ $(@expr1073760378 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4835 $, $db@var1450 $) $) { $return $; } $do ${ $} $while $(@expr1073760379 $false $) ;
4836: $if $(@expr1073760380 $!@expr1073760381 $assert_ $(@expr1073760382 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4836 $, db@var1450 !=@expr1073760383 nullptr $) $) { $return ; }
4837: $if $(@expr1073760384 $!@expr1073760385 $assert_ $(@expr1073760386 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4837 $, db@var1450 .@expr18563 getVariableFromVarId (@expr1073760388 1 ) !=@expr1073760389 nullptr $) $) { $return ; }
4838: $if $(@expr1073760390 $!@expr1073760391 $assert_ $(@expr1073760392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4838 $, db@var1450 .@expr18563 getVariableFromVarId (@expr1073760394 2 ) !=@expr1073760395 nullptr $) $) { $return ; }
4839: }
4840:
4841: void symboldatabase95 ( ) {
4842: $Tokenizer $tokenizer@var1451 $(@expr1073760396 $&@expr1073760397 $settings1@var123 $, $this@expr1073760398 $) $; $const $SymbolDatabase $* $db@var1452 $; $db@var1452 $=@expr1073760399 $getSymbolDB_inner $(@expr1073760400 $tokenizer@var1451 $, "struct B {\n    void foo1(void);\n    void foo2();\n};\nvoid B::foo1() {}\nvoid B::foo2(void) {}\n" $, $"test.cpp" $) $; $if $(@expr1073760401 $!@expr1073760402 $assert_ $(@expr1073760403 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4842 $, $db@var1452 $) $) { $return $; } $do ${ $} $while $(@expr1073760404 $false $)
4843:
|
4846:
4847: ;
4848: $if $(@expr1073760405 $!@expr1073760406 $assertEquals $(@expr1073760407 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4848 $, "" $, errout@var100 .@expr1073760408 str (@expr1073760409 ) $) $) { $return ; }
4849: const Token * functok@var1453 ; functok@var1453 =@expr1073760410 Token ::@expr18587 findsimplematch (@expr1073760412 tokenizer@var1451 .@expr18589 tokens (@expr18590 ) , "foo1 ( ) { }" ) ;
4850: $if $(@expr1073760415 $!@expr1073760416 $assert_ $(@expr1073760417 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4850 $, functok@var1453 $) $) { $return ; }
4851: $if $(@expr1073760418 $!@expr1073760419 $assert_ $(@expr1073760420 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4851 $, functok@var1453 .@expr18597 function (@expr18598 ) $) $) { $return ; }
4852: $if $(@expr1073760423 $!@expr1073760424 $assert_ $(@expr1073760425 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4852 $, functok@var1453 .@expr18597 function (@expr18598 ) .@expr18604 name (@expr18605 ) ==@expr1073760430 "foo1" $) $) { $return ; }
4853: functok@var1453 =@expr1073760431 Token ::@expr18587 findsimplematch (@expr1073760433 tokenizer@var1451 .@expr18589 tokens (@expr18590 ) , "foo2 ( ) { }" ) ;
4854: $if $(@expr1073760436 $!@expr1073760437 $assert_ $(@expr1073760438 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4854 $, functok@var1453 $) $) { $return ; }
4855: $if $(@expr1073760439 $!@expr1073760440 $assert_ $(@expr1073760441 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4855 $, functok@var1453 .@expr18597 function (@expr18598 ) $) $) { $return ; }
4856: $if $(@expr1073760444 $!@expr1073760445 $assert_ $(@expr1073760446 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4856 $, functok@var1453 .@expr18597 function (@expr18598 ) .@expr18604 name (@expr18605 ) ==@expr1073760451 "foo2" $) $) { $return ; }
4857: }
4858:
4859: void symboldatabase96 ( ) {
4860: $Tokenizer $tokenizer@var1454 $(@expr1073760452 $&@expr1073760453 $settings1@var123 $, $this@expr1073760454 $) $; $const $SymbolDatabase $* $db@var1455 $; $db@var1455 $=@expr1073760455 $getSymbolDB_inner $(@expr1073760456 $tokenizer@var1454 $, "struct A {\n    int i, j;\n};\nstd::map<int, A> m{ { 0, A{0,0} }, {0, A{0,0} } };\n" $, $"test.cpp" $) $; $if $(@expr1073760457 $!@expr1073760458 $assert_ $(@expr1073760459 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4860 $, $db@var1455 $) $) { $return $; } $do ${ $} $while $(@expr1073760460 $false $)
4861:
4862:
4863: ;
4864: $if $(@expr1073760461 $!@expr1073760462 $assertEquals $(@expr1073760463 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4864 $, "" $, errout@var100 .@expr1073760464 str (@expr1073760465 ) $) $) { $return ; }
4865: }
4866:
4867: void symboldatabase97 ( ) {
4868: $Tokenizer $tokenizer@var1456 $(@expr1073760467 $&@expr1073760468 $settings1@var123 $, $this@expr1073760469 $) $; $const $SymbolDatabase $* $db@var1457 $; $db@var1457 $=@expr1073760470 $getSymbolDB_inner $(@expr1073760471 $tokenizer@var1456 $, "template<> struct A<void> final {\n    A() {}\n};\n" $, $"test.cpp" $) $; $if $(@expr1073760472 $!@expr1073760473 $assert_ $(@expr1073760474 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4868 $, $db@var1457 $) $) { $return $; } $do ${ $} $while $(@expr1073760475 $false $)
4869:
4870: ;
4871: $if $(@expr1073760476 $!@expr1073760477 $assert_ $(@expr1073760478 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4871 $, db@var1457 $) $) { $return ; }
4872: $if $(@expr1073760479 $!@expr1073760480 $assertEquals $(@expr1073760481 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4872 $, 3 $, db@var1457 .@expr1073760482 scopeList@var1458 .@expr1073760483 size (@expr1073760484 ) $) $) { $return ; }
4873:
4874: const Token * functok@var1459 ; functok@var1459 =@expr1073760485 Token ::@expr1073760486 findmatch (@expr1073760487 tokenizer@var1456 .@expr1073760488 tokens (@expr1073760489 ) , "%name% (" ) ;
4875: $if $(@expr1073760490 $!@expr1073760491 $assert_ $(@expr1073760492 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4875 $, functok@var1459 $) $) { $return ; }
4876: $if $(@expr1073760493 $!@expr1073760494 $assert_ $(@expr1073760495 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4876 $, functok@var1459 .@expr18672 function (@expr18673 ) $) $) { $return ; }
4877: $if $(@expr1073760498 $!@expr1073760499 $assertEquals $(@expr1073760500 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4877 $, functok@var1459 .@expr18672 function (@expr18673 ) .@expr1073760503 type $, Function ::@expr1073760504 Type ::@expr1073760505 eConstructor@expr1073760466 $) $) { $return ; }
4878: }
4879:
4880: void symboldatabase98 ( ) {
4881: {
4882: $Tokenizer $tokenizer@var1460 $(@expr1073760506 $&@expr1073760507 $settings1@var123 $, $this@expr18684 $) $; $const $SymbolDatabase $* $db@var1461 $; $db@var1461 $=@expr1073760509 $getSymbolDB_inner $(@expr1073760510 $tokenizer@var1460 $, "struct A { typedef struct {} B; };\nvoid f() {\n    auto g = [](A::B b) -> void { A::B b2 = b; };\n};\n" $, $"test.cpp" $) $; $if $(@expr1073760511 $!@expr1073760512 $assert_ $(@expr1073760513 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4882 $, $db@var1461 $) $) { $return $; } $do ${ $} $while $(@expr1073760514 $false $)
4883:
4884:
4885: ;
4886: $if $(@expr1073760515 $!@expr1073760516 $assert_ $(@expr1073760517 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4886 $, db@var1461 $) $) { $return ; }
4887: $if $(@expr1073760518 $!@expr1073760519 $assertEquals $(@expr1073760520 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4887 $, 5 $, db@var1461 .@expr1073760521 scopeList@var1462 .@expr1073760522 size (@expr1073760523 ) $) $) { $return ; }
4888: }
4889: {
4890: $Tokenizer $tokenizer@var1463 $(@expr1073760524 $&@expr1073760525 $settings1@var123 $, $this@expr18684 $) $; $const $SymbolDatabase $* $db@var1464 $; $db@var1464 $=@expr1073760526 $getSymbolDB_inner $(@expr1073760527 $tokenizer@var1463 $, "typedef union {\n    int i;\n} U;\ntemplate <auto U::*>\nvoid f();\n" $, $"test.cpp" $) $; $if $(@expr1073760528 $!@expr1073760529 $assert_ $(@expr1073760530 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4890 $, $db@var1464 $) $) { $return $; } $do ${ $} $while $(@expr1073760531 $false $)
4891:
4892:
4893:
4894: ;
4895: $if $(@expr1073760532 $!@expr1073760533 $assert_ $(@expr1073760534 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4895 $, db@var1464 $) $) { $return ; }
4896: $if $(@expr1073760535 $!@expr1073760536 $assertEquals $(@expr1073760537 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4896 $, 2 $, db@var1464 .@expr1073760538 scopeList@var1465 .@expr1073760539 size (@expr1073760540 ) $) $) { $return ; }
4897: }
4898: }
4899:
4900: void symboldatabase99 ( ) {
4901: $check_ $(@expr1073760541 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4901 $, "void f() { std::map<std::string, int> m; }" $) ;
4902: $if $(@expr1073760542 $!@expr1073760543 $assertEquals $(@expr1073760544 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4902 $, "" $, errout@var100 .@expr1073760545 str (@expr1073760546 ) $) $) { $return ; }
4903: }
4904:
4905: void symboldatabase100 ( ) {
4906: {
4907: $Tokenizer $tokenizer@var1466 $(@expr1073760547 $&@expr1073760548 $settings1@var123 $, $this@expr18725 $) $; $const $SymbolDatabase $* $db@var1467 $; $db@var1467 $=@expr1073760550 $getSymbolDB_inner $(@expr1073760551 $tokenizer@var1466 $, "namespace N {\n    struct S {};\n    struct T { void f(S s); };\n    void T::f(N::S s) {}\n}\n" $, $"test.cpp" $) $; $if $(@expr1073760552 $!@expr1073760553 $assert_ $(@expr1073760554 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4907 $, $db@var1467 $) $) { $return $; } $do ${ $} $while $(@expr1073760555 $false $)
4908:
4909:
4910:
4911: ;
4912: $if $(@expr1073760556 $!@expr1073760557 $assert_ $(@expr1073760558 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4912 $, db@var1467 $) $) { $return ; }
4913: $if $(@expr1073760559 $!@expr1073760560 $assertEquals $(@expr1073760561 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4913 $, 1 $, db@var1467 .@expr1073760562 functionScopes@var1468 .@expr1073760563 size (@expr1073760564 ) $) $) { $return ; }
4914: auto it@var1469 ; it@var1469 =@expr1073760565 std ::@expr18742 find_if (@expr1073760567 db@var1467 .@expr18744 scopeList@var1470 .@expr1073760569 begin (@expr1073760570 ) , db@var1467 .@expr18744 scopeList@var1470 .@expr18748 end (@expr18749 ) , [@expr1073760574 ] (@expr1073760575 const Scope &@expr18752 s@var1471 ) {
4915: return s@var1471 .@expr1073760577 className@var1472 ==@expr1073760578 "T" ;
4916: } ) ;
4917: $if $(@expr1073760579 $!@expr1073760580 $assert_ $(@expr1073760581 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4917 $, it@var1469 !=@expr1073760582 db@var1467 .@expr18744 scopeList@var1470 .@expr18748 end (@expr18749 ) $) $) { $return ; }
4918: const Function * function@var1473 ; function@var1473 =@expr1073760586 findFunctionByName (@expr1073760587 "f" , &@expr1073760588 *@expr1073760589 it@var1469 ) ;
4919: $if $(@expr1073760590 $!@expr1073760591 $assert_ $(@expr1073760592 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4919 $, function@var1473 &&@expr1073760593 function@var1473 .@expr1073760594 token@var1474 .@expr1073760595 str (@expr1073760596 ) ==@expr1073760597 "f" $) $) { $return ; }
4920: $if $(@expr1073760598 $!@expr1073760599 $assert_ $(@expr1073760600 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4920 $, function@var1473 .@expr1073760601 hasBody (@expr1073760602 ) $) $) { $return ; }
4921: }
4922: {
4923: $Tokenizer $tokenizer@var1475 $(@expr1073760603 $&@expr1073760604 $settings1@var123 $, $this@expr18725 $) $; $const $SymbolDatabase $* $db@var1476 $; $db@var1476 $=@expr1073760605 $getSymbolDB_inner $(@expr1073760606 $tokenizer@var1475 $, "namespace N {\n    class I {};\n    class A {\n    public:\n        A(I*);\n    };\n}\nusing N::I;\nnamespace N {\n    A::A(I*) {}\n}\n" $, $"test.cpp" $) $; $if $(@expr1073760607 $!@expr1073760608 $assert_ $(@expr1073760609 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4923 $, $db@var1476 $) $) { $return $; } $do ${ $} $while $(@expr1073760610 $false $)
4924:
|
4932:
4933: ;
4934: $if $(@expr1073760611 $!@expr1073760612 $assert_ $(@expr1073760613 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4934 $, db@var1476 $) $) { $return ; }
4935: $if $(@expr1073760614 $!@expr1073760615 $assertEquals $(@expr1073760616 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4935 $, 1 $, db@var1476 .@expr1073760617 functionScopes@var1477 .@expr1073760618 size (@expr1073760619 ) $) $) { $return ; }
4936: auto it@var1478 ; it@var1478 =@expr1073760620 std ::@expr18742 find_if (@expr1073760622 db@var1476 .@expr18799 scopeList@var1479 .@expr1073760624 begin (@expr1073760625 ) , db@var1476 .@expr18799 scopeList@var1479 .@expr18803 end (@expr18804 ) , [@expr1073760629 ] (@expr1073760630 const Scope &@expr18752 s@var1480 ) {
4937: return s@var1480 .@expr1073760632 className@var1481 ==@expr1073760633 "A" ;
4938: } ) ;
4939: $if $(@expr1073760634 $!@expr1073760635 $assert_ $(@expr1073760636 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4939 $, it@var1478 !=@expr1073760637 db@var1476 .@expr18799 scopeList@var1479 .@expr18803 end (@expr18804 ) $) $) { $return ; }
4940: const Function * function@var1482 ; function@var1482 =@expr1073760641 findFunctionByName (@expr1073760642 "A" , &@expr1073760643 *@expr1073760644 it@var1478 ) ;
4941: $if $(@expr1073760645 $!@expr1073760646 $assert_ $(@expr1073760647 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4941 $, function@var1482 &&@expr1073760648 function@var1482 .@expr1073760649 token@var1483 .@expr1073760650 str (@expr1073760651 ) ==@expr1073760652 "A" $) $) { $return ; }
4942: $if $(@expr1073760653 $!@expr1073760654 $assert_ $(@expr1073760655 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4942 $, function@var1482 .@expr1073760656 hasBody (@expr1073760657 ) $) $) { $return ; }
4943: }
4944: {
4945: $Tokenizer $tokenizer@var1484 $(@expr1073760658 $&@expr1073760659 $settings1@var123 $, $this@expr18725 $) $; $const $SymbolDatabase $* $db@var1485 $; $db@var1485 $=@expr1073760660 $getSymbolDB_inner $(@expr1073760661 $tokenizer@var1484 $, "namespace N {\n    namespace O {\n        struct B;\n    }\n}\nstruct I {\n    using B = N::O::B;\n};\nstruct A : I {\n    void f(B*);\n};\nvoid A::f(N::O::B*) {}\n" $, $"test.cpp" $) $; $if $(@expr1073760662 $!@expr1073760663 $assert_ $(@expr1073760664 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4945 $, $db@var1485 $) $) { $return $; } $do ${ $} $while $(@expr1073760665 $false $)
4946:
|
4955:
4956: ;
4957: $if $(@expr1073760666 $!@expr1073760667 $assert_ $(@expr1073760668 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4957 $, db@var1485 $) $) { $return ; }
4958: $if $(@expr1073760669 $!@expr1073760670 $assertEquals $(@expr1073760671 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4958 $, 1 $, db@var1485 .@expr1073760672 functionScopes@var1486 .@expr1073760673 size (@expr1073760674 ) $) $) { $return ; }
4959: auto it@var1487 ; it@var1487 =@expr1073760675 std ::@expr18742 find_if (@expr1073760677 db@var1485 .@expr18854 scopeList@var1488 .@expr1073760679 begin (@expr1073760680 ) , db@var1485 .@expr18854 scopeList@var1488 .@expr18858 end (@expr18859 ) , [@expr1073760684 ] (@expr1073760685 const Scope &@expr18752 s@var1489 ) {
4960: return s@var1489 .@expr1073760687 className@var1490 ==@expr1073760688 "A" ;
4961: } ) ;
4962: $if $(@expr1073760689 $!@expr1073760690 $assert_ $(@expr1073760691 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4962 $, it@var1487 !=@expr1073760692 db@var1485 .@expr18854 scopeList@var1488 .@expr18858 end (@expr18859 ) $) $) { $return ; }
4963: const Function * function@var1491 ; function@var1491 =@expr1073760696 findFunctionByName (@expr1073760697 "f" , &@expr1073760698 *@expr1073760699 it@var1487 ) ;
4964: $if $(@expr1073760700 $!@expr1073760701 $assert_ $(@expr1073760702 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4964 $, function@var1491 &&@expr1073760703 function@var1491 .@expr1073760704 token@var1492 .@expr1073760705 str (@expr1073760706 ) ==@expr1073760707 "f" $) $) { $return ; }
4965: $if $(@expr1073760708 $!@expr1073760709 $assert_ $(@expr1073760710 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4965 $, function@var1491 .@expr1073760711 hasBody (@expr1073760712 ) $) $) { $return ; }
4966: }
4967: }
4968:
4969: void createSymbolDatabaseFindAllScopes1 ( ) {
4970: $Tokenizer $tokenizer@var1493 $(@expr1073760715 $&@expr1073760716 $settings1@var123 $, $this@expr1073760717 $) $; $const $SymbolDatabase $* $db@var1494 $; $db@var1494 $=@expr1073760718 $getSymbolDB_inner $(@expr1073760719 $tokenizer@var1493 $, "void f() { union {int x; char *p;} a={0}; }" $, $"test.cpp" $) $; $if $(@expr1073760720 $!@expr1073760721 $assert_ $(@expr1073760722 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4970 $, $db@var1494 $) $) { $return $; } $do ${ $} $while $(@expr1073760723 $false $) ;
4971: $if $(@expr1073760724 $!@expr1073760725 $assert_ $(@expr1073760726 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4971 $, db@var1494 .@expr18903 scopeList@var1495 .@expr1073760728 size (@expr1073760729 ) ==@expr1073760730 3 $) $) { $return ; }
4972: $if $(@expr1073760731 $!@expr1073760732 $assertEquals $(@expr1073760733 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4972 $, Scope ::@expr1073760734 eUnion@expr1073760713 $, db@var1494 .@expr18903 scopeList@var1495 .@expr1073760736 back (@expr1073760737 ) .@expr1073760738 type@expr1073760714 $) $) { $return ; }
4973: }
4974:
4975: void createSymbolDatabaseFindAllScopes2 ( ) {
4976: $Tokenizer $tokenizer@var1496 $(@expr1073760739 $&@expr1073760740 $settings1@var123 $, $this@expr1073760741 $) $; $const $SymbolDatabase $* $db@var1497 $; $db@var1497 $=@expr1073760742 $getSymbolDB_inner $(@expr1073760743 $tokenizer@var1496 $, "namespace ns { auto var1{0}; }\nnamespace ns { auto var2{0}; }\n" $, $"test.cpp" $) $; $if $(@expr1073760744 $!@expr1073760745 $assert_ $(@expr1073760746 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4976 $, $db@var1497 $) $) { $return $; } $do ${ $} $while $(@expr1073760747 $false $)
4977: ;
4978: $if $(@expr1073760748 $!@expr1073760749 $assert_ $(@expr1073760750 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4978 $, db@var1497 $) $) { $return ; }
4979: $if $(@expr1073760751 $!@expr1073760752 $assertEquals $(@expr1073760753 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4979 $, 2 $, db@var1497 .@expr18930 scopeList@var1498 .@expr1073760755 size (@expr1073760756 ) $) $) { $return ; }
4980: $if $(@expr1073760757 $!@expr1073760758 $assertEquals $(@expr1073760759 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4980 $, 2 $, db@var1497 .@expr18930 scopeList@var1498 .@expr1073760761 back (@expr1073760762 ) .@expr1073760763 varlist .@expr1073760764 size (@expr1073760765 ) $) $) { $return ; }
4981: const Token * const var1@var1499 ; var1@var1499 =@expr1073760766 Token ::@expr18943 findsimplematch (@expr1073760768 tokenizer@var1496 .@expr18945 tokens (@expr18946 ) , "var1" ) ;
4982: const Token * const var2@var1500 ; var2@var1500 =@expr1073760771 Token ::@expr18943 findsimplematch (@expr1073760773 tokenizer@var1496 .@expr18945 tokens (@expr18946 ) , "var2" ) ;
4983: $if $(@expr1073760776 $!@expr1073760777 $assert_ $(@expr1073760778 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4983 $, var1@var1499 .@expr1073760779 variable (@expr1073760780 ) $) $) { $return ; }
4984: $if $(@expr1073760781 $!@expr1073760782 $assert_ $(@expr1073760783 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4984 $, var2@var1500 .@expr1073760784 variable (@expr1073760785 ) $) $) { $return ; }
4985: }
4986:
4987: void createSymbolDatabaseFindAllScopes3 ( ) {
4988: $Tokenizer $tokenizer@var1501 $(@expr1073760786 $&@expr1073760787 $settings1@var123 $, $this@expr1073760788 $) $; $const $SymbolDatabase $* $db@var1502 $; $db@var1502 $=@expr1073760789 $getSymbolDB_inner $(@expr1073760790 $tokenizer@var1501 $, "namespace ns {\n\nnamespace ns_details {\ntemplate <typename T, typename = void> struct has_A : std::false_type {};\ntemplate <typename T> struct has_A<T, typename make_void<typename T::A>::type> : std::true_type {};\ntemplate <typename T, bool> struct is_A_impl : public std::is_trivially_copyable<T> {};\ntemplate <typename T> struct is_A_impl<T, true> : public std::is_same<typename T::A, std::true_type> {};\n}\n\ntemplate <typename T> struct is_A : ns_details::is_A_impl<T, ns_details::has_A<T>::value> {};\ntemplate <class T, class U> struct is_A<std::pair<T, U>> : std::integral_constant<bool, is_A<T>::value && is_A<U>::value> {};\n}\n\nextern \"C\" {\nstatic const int foo = 8;\n}\n" $, $"test.cpp" $) $; $if $(@expr1073760791 $!@expr1073760792 $assert_ $(@expr1073760793 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 4988 $, $db@var1502 $) $) { $return $; } $do ${ $} $while $(@expr1073760794 $false $)
4989:
|
5002:
5003: ;
5004: $if $(@expr1073760795 $!@expr1073760796 $assert_ $(@expr1073760797 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5004 $, db@var1502 $) $) { $return ; }
5005: $if $(@expr1073760798 $!@expr1073760799 $assertEquals $(@expr1073760800 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5005 $, 6 $, db@var1502 .@expr18977 scopeList@var1503 .@expr1073760802 size (@expr1073760803 ) $) $) { $return ; }
5006: $if $(@expr1073760804 $!@expr1073760805 $assertEquals $(@expr1073760806 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5006 $, 1 $, db@var1502 .@expr18977 scopeList@var1503 .@expr1073760808 front (@expr1073760809 ) .@expr1073760810 varlist .@expr1073760811 size (@expr1073760812 ) $) $) { $return ; }
5007: auto list@var1504 ; list@var1504 =@expr1073760813 db@var1502 .@expr18977 scopeList@var1503 ;
5008: list@var1504 .@expr1073760815 pop_front (@expr1073760816 ) ;
5009: for (@expr1073760817 const auto &@expr1073760818 scope@var1505 :@expr1073760819 list@var1504 ) {
5010: $if $(@expr1073760820 $!@expr1073760821 $assertEquals $(@expr1073760822 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5010 $, 0 $, scope@var1505 .@expr1073760823 varlist@var1506 .@expr1073760824 size (@expr1073760825 ) $) $) { $return ; }
5011: }
5012: }
5013:
5014: void createSymbolDatabaseFindAllScopes4 ( )
5015: {
5016: $Tokenizer $tokenizer@var1507 $(@expr1073760826 $&@expr1073760827 $settings1@var123 $, $this@expr1073760828 $) $; $const $SymbolDatabase $* $db@var1508 $; $db@var1508 $=@expr1073760829 $getSymbolDB_inner $(@expr1073760830 $tokenizer@var1507 $, "struct a {\n  void b() {\n    std::set<int> c;\n    a{[&] {\n      auto d{c.lower_bound(0)};\n      c.emplace_hint(d);\n    }};\n  }\n  template <class e> a(e);\n};\n" $, $"test.cpp" $) $; $if $(@expr1073760831 $!@expr1073760832 $assert_ $(@expr1073760833 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5016 $, $db@var1508 $) $) { $return $; } $do ${ $} $while $(@expr1073760834 $false $)
5017:
|
5024:
5025: ;
5026: $if $(@expr1073760835 $!@expr1073760836 $assert_ $(@expr1073760837 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5026 $, db@var1508 $) $) { $return ; }
5027: $if $(@expr1073760838 $!@expr1073760839 $assertEquals $(@expr1073760840 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5027 $, 4 $, db@var1508 .@expr1073760841 scopeList@var1509 .@expr1073760842 size (@expr1073760843 ) $) $) { $return ; }
5028: const Token * const var1@var1510 ; var1@var1510 =@expr1073760844 Token ::@expr1073760845 findsimplematch (@expr1073760846 tokenizer@var1507 .@expr1073760847 tokens (@expr1073760848 ) , "d" ) ;
5029: $if $(@expr1073760849 $!@expr1073760850 $assert_ $(@expr1073760851 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5029 $, var1@var1510 .@expr1073760852 variable (@expr1073760853 ) $) $) { $return ; }
5030: }
5031:
5032: void enum1 ( ) {
5033: $Tokenizer $tokenizer@var1511 $(@expr1073760856 $&@expr1073760857 $settings1@var123 $, $this@expr1073760858 $) $; $const $SymbolDatabase $* $db@var1512 $; $db@var1512 $=@expr1073760859 $getSymbolDB_inner $(@expr1073760860 $tokenizer@var1511 $, "enum BOOL { FALSE, TRUE }; enum BOOL b;" $, $"test.cpp" $) $; $if $(@expr1073760861 $!@expr1073760862 $assert_ $(@expr1073760863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5033 $, $db@var1512 $) $) { $return $; } $do ${ $} $while $(@expr1073760864 $false $) ;
5034:
5035:
5036: $if $(@expr1073760865 $!@expr1073760866 $assert_ $(@expr1073760867 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5036 $, db@var1512 &&@expr1073760868 db@var1512 .@expr19045 scopeList@var1513 .@expr19046 back (@expr19047 ) .@expr1073760872 type@expr1073760854 ==@expr1073760873 Scope ::@expr1073760874 eEnum &&@expr1073760875 db@var1512 .@expr19045 scopeList@var1513 .@expr19046 back (@expr19047 ) .@expr1073760879 className@expr1073760855 ==@expr1073760880 "BOOL" $) $) { $return ; }
5037:
5038:
5039: $if $(@expr1073760881 $!@expr1073760882 $assert_ $(@expr1073760883 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5039 $, db@var1512 &&@expr1073760884 db@var1512 .@expr1073760885 getVariableFromVarId (@expr1073760886 1 ) .@expr1073760887 isEnumType (@expr1073760888 ) $) $) { $return ; }
5040: }
5041:
5042: void enum2 ( ) {
5043: $Tokenizer $tokenizer@var1514 $(@expr1073760891 $&@expr1073760892 $settings1@var123 $, $this@expr1073760893 $) $; $const $SymbolDatabase $* $db@var1515 $; $db@var1515 $=@expr1073760894 $getSymbolDB_inner $(@expr1073760895 $tokenizer@var1514 $, "enum BOOL { FALSE, TRUE } b;" $, $"test.cpp" $) $; $if $(@expr1073760896 $!@expr1073760897 $assert_ $(@expr1073760898 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5043 $, $db@var1515 $) $) { $return $; } $do ${ $} $while $(@expr1073760899 $false $) ;
5044:
5045:
5046: $if $(@expr1073760900 $!@expr1073760901 $assert_ $(@expr1073760902 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5046 $, db@var1515 &&@expr1073760903 db@var1515 .@expr19080 scopeList@var1516 .@expr19081 back (@expr19082 ) .@expr1073760907 type@expr1073760889 ==@expr1073760908 Scope ::@expr1073760909 eEnum &&@expr1073760910 db@var1515 .@expr19080 scopeList@var1516 .@expr19081 back (@expr19082 ) .@expr1073760914 className@expr1073760890 ==@expr1073760915 "BOOL" $) $) { $return ; }
5047:
5048:
5049: $if $(@expr1073760916 $!@expr1073760917 $assert_ $(@expr1073760918 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5049 $, db@var1515 &&@expr1073760919 db@var1515 .@expr1073760920 getVariableFromVarId (@expr1073760921 1 ) .@expr1073760922 isEnumType (@expr1073760923 ) $) $) { $return ; }
5050: }
5051:
5052: void enum3 ( ) {
5053: $Tokenizer $tokenizer@var1517 $(@expr1073760926 $&@expr1073760927 $settings1@var123 $, $this@expr1073760928 $) $; $const $SymbolDatabase $* $db@var1518 $; $db@var1518 $=@expr1073760929 $getSymbolDB_inner $(@expr1073760930 $tokenizer@var1517 $, "enum ABC { A=11,B,C=A+B };" $, $"test.cpp" $) $; $if $(@expr1073760931 $!@expr1073760932 $assert_ $(@expr1073760933 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5053 $, $db@var1518 $) $) { $return $; } $do ${ $} $while $(@expr1073760934 $false $) ;
5054: $if $(@expr1073760935 $!@expr1073760936 $assert_ $(@expr1073760937 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5054 $, db@var1518 &&@expr1073760938 db@var1518 .@expr19115 scopeList@var1519 .@expr19116 back (@expr19117 ) .@expr1073760942 type@expr1073760924 ==@expr1073760943 Scope ::@expr1073760944 eEnum@expr1073760925 $) $) { $return ; }
5055:
5056:
5057: const Enumerator * A@var1520 ; A@var1520 =@expr1073760945 db@var1518 .@expr19115 scopeList@var1519 .@expr19116 back (@expr19117 ) .@expr19125 findEnumerator (@expr1073760950 "A" ) ;
5058: $if $(@expr1073760951 $!@expr1073760952 $assert_ $(@expr1073760953 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5058 $, A@var1520 &&@expr1073760954 A@var1520 .@expr1073760955 value@var1521 ==@expr1073760956 11 &&@expr1073760957 A@var1520 .@expr1073760958 value_known@var1522 $) $) { $return ; }
5059:
5060:
5061: const Enumerator * B@var1523 ; B@var1523 =@expr1073760959 db@var1518 .@expr19115 scopeList@var1519 .@expr19116 back (@expr19117 ) .@expr19125 findEnumerator (@expr1073760964 "B" ) ;
5062: $if $(@expr1073760965 $!@expr1073760966 $assert_ $(@expr1073760967 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5062 $, B@var1523 &&@expr1073760968 B@var1523 .@expr1073760969 value@var1524 ==@expr1073760970 12 &&@expr1073760971 B@var1523 .@expr1073760972 value_known@var1525 $) $) { $return ; }
5063:
5064:
5065: const Enumerator * C@var1526 ; C@var1526 =@expr1073760973 db@var1518 .@expr19115 scopeList@var1519 .@expr19116 back (@expr19117 ) .@expr19125 findEnumerator (@expr1073760978 "C" ) ;
5066: $if $(@expr1073760979 $!@expr1073760980 $assert_ $(@expr1073760981 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5066 $, C@var1526 &&@expr1073760982 C@var1526 .@expr1073760983 value@var1527 ==@expr1073760984 23 &&@expr1073760985 C@var1526 .@expr1073760986 value_known@var1528 $) $) { $return ; }
5067: }
5068:
5069: void enum4 ( ) {
5070: $Tokenizer $tokenizer@var1529 $(@expr1073761009 $&@expr1073761010 $settings1@var123 $, $this@expr1073761011 $) $; $const $SymbolDatabase $* $db@var1530 $; $db@var1530 $=@expr1073761012 $getSymbolDB_inner $(@expr1073761013 $tokenizer@var1529 $, "enum Offsets { O1, O2, O3=5, O4 };\nenum MyEnums { E1=O1+1, E2, E3=O3+1 };" $, $"test.cpp" $) $; $if $(@expr1073761014 $!@expr1073761015 $assert_ $(@expr1073761016 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5070 $, $db@var1530 $) $) { $return $; } $do ${ $} $while $(@expr1073761017 $false $)
5071: ;
5072: $if $(@expr1073761018 $!@expr1073761019 $assert_ $(@expr1073761020 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5072 $, db@var1530 !=@expr1073761021 nullptr $) $) { $return ; }
5073:
5074: $if $(@expr1073761022 $!@expr1073761023 $assertEquals $(@expr1073761024 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5074 $, 3U $, db@var1530 .@expr19201 scopeList@var1531 .@expr1073761026 size (@expr1073761027 ) $) $) { $return ; }
5075:
5076:
5077: std ::@expr1073761028 list < Scope > ::@expr1073761029 const_iterator scope@var1532 ; scope@var1532 =@expr1073761030 db@var1530 .@expr19201 scopeList@var1531 .@expr1073761032 begin (@expr1073761033 ) ;
5078:
5079:
5080: ++@expr1073761034 scope@var1532 ;
5081: $if $(@expr1073761035 $!@expr1073761036 $assertEquals $(@expr1073761037 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5081 $, (@expr19214 unsigned int ) Scope ::@expr19215 eEnum@expr19163 $, (@expr19216 unsigned int ) scope@var1532 .@expr19217 type@var1533 $) $) { $return ; }
5082: $if $(@expr1073761042 $!@expr1073761043 $assertEquals $(@expr1073761044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5082 $, 4U $, scope@var1532 .@expr19221 enumeratorList@var1534 .@expr19222 size (@expr19223 ) $) $) { $return ; }
5083:
5084: $if $(@expr1073761048 $!@expr1073761049 $assert_ $(@expr1073761050 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5084 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19229 name .@expr19230 enumerator (@expr19231 ) ==@expr19232 &@expr19233 scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] $) $) { $return ; }
5085: $if $(@expr1073761060 $!@expr1073761061 $assertEquals $(@expr1073761062 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5085 $, (@expr19239 unsigned int ) Token ::@expr19240 eEnumerator@expr19164 $, (@expr19241 unsigned int ) scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19229 name .@expr19245 tokType (@expr19246 ) $) $) { $return ; }
5086: $if $(@expr1073761071 $!@expr1073761072 $assert_ $(@expr1073761073 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5086 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19252 scope@expr19165 ==@expr19253 &@expr19254 *@expr19255 scope@var1532 $) $) { $return ; }
5087: $if $(@expr1073761080 $!@expr1073761081 $assertEquals $(@expr1073761082 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5087 $, "O1" $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19229 name .@expr19262 str (@expr19263 ) $) $) { $return ; }
5088: $if $(@expr1073761088 $!@expr1073761089 $assert_ $(@expr1073761090 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5088 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19269 start@expr19166 ==@expr1073761094 nullptr $) $) { $return ; }
5089: $if $(@expr1073761095 $!@expr1073761096 $assert_ $(@expr1073761097 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5089 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19276 end@expr19167 ==@expr1073761101 nullptr $) $) { $return ; }
5090: $if $(@expr1073761102 $!@expr1073761103 $assertEquals $(@expr1073761104 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5090 $, true $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19283 value_known@expr19168 $) $) { $return ; }
5091: $if $(@expr1073761108 $!@expr1073761109 $assertEquals $(@expr1073761110 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5091 $, 0 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19289 value@expr19169 $) $) { $return ; }
5092:
5093: $if $(@expr1073761114 $!@expr1073761115 $assert_ $(@expr1073761116 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5093 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19295 name .@expr19296 enumerator (@expr19297 ) ==@expr19298 &@expr19299 scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] $) $) { $return ; }
5094: $if $(@expr1073761126 $!@expr1073761127 $assertEquals $(@expr1073761128 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5094 $, (@expr19239 unsigned int ) Token ::@expr19240 eEnumerator@expr19164 $, (@expr19307 unsigned int ) scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19295 name .@expr19311 tokType (@expr19312 ) $) $) { $return ; }
5095: $if $(@expr1073761137 $!@expr1073761138 $assert_ $(@expr1073761139 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5095 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19318 scope@expr19170 ==@expr19319 &@expr19254 *@expr19255 scope@var1532 $) $) { $return ; }
5096: $if $(@expr1073761146 $!@expr1073761147 $assertEquals $(@expr1073761148 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5096 $, "O2" $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19295 name .@expr19328 str (@expr19329 ) $) $) { $return ; }
5097: $if $(@expr1073761154 $!@expr1073761155 $assert_ $(@expr1073761156 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5097 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19335 start@expr19171 ==@expr19336 nullptr $) $) { $return ; }
5098: $if $(@expr1073761161 $!@expr1073761162 $assert_ $(@expr1073761163 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5098 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19342 end@expr19172 ==@expr19343 nullptr $) $) { $return ; }
5099: $if $(@expr1073761168 $!@expr1073761169 $assertEquals $(@expr1073761170 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5099 $, true $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19349 value_known@expr19173 $) $) { $return ; }
5100: $if $(@expr1073761174 $!@expr1073761175 $assertEquals $(@expr1073761176 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5100 $, 1 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19355 value@expr19174 $) $) { $return ; }
5101:
5102: $if $(@expr1073761180 $!@expr1073761181 $assert_ $(@expr1073761182 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5102 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19361 name .@expr19362 enumerator (@expr19363 ) ==@expr19364 &@expr19365 scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] $) $) { $return ; }
5103: $if $(@expr1073761192 $!@expr1073761193 $assertEquals $(@expr1073761194 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5103 $, (@expr19239 unsigned int ) Token ::@expr19240 eEnumerator@expr19164 $, (@expr19373 unsigned int ) scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19361 name .@expr19377 tokType (@expr19378 ) $) $) { $return ; }
5104: $if $(@expr1073761203 $!@expr1073761204 $assert_ $(@expr1073761205 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5104 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19384 scope@expr19175 ==@expr19385 &@expr19254 *@expr19255 scope@var1532 $) $) { $return ; }
5105: $if $(@expr1073761212 $!@expr1073761213 $assertEquals $(@expr1073761214 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5105 $, "O3" $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19361 name .@expr19394 str (@expr19395 ) $) $) { $return ; }
5106: $if $(@expr1073761220 $!@expr1073761221 $assert_ $(@expr1073761222 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5106 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19401 start@expr19176 !=@expr19402 nullptr $) $) { $return ; }
5107: $if $(@expr1073761227 $!@expr1073761228 $assert_ $(@expr1073761229 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5107 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19408 end@expr19177 !=@expr19409 nullptr $) $) { $return ; }
5108: $if $(@expr1073761234 $!@expr1073761235 $assertEquals $(@expr1073761236 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5108 $, true $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19415 value_known@expr19178 $) $) { $return ; }
5109: $if $(@expr1073761240 $!@expr1073761241 $assertEquals $(@expr1073761242 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5109 $, 5 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19421 value@expr19179 $) $) { $return ; }
5110:
5111: $if $(@expr1073761246 $!@expr1073761247 $assert_ $(@expr1073761248 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5111 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] .@expr19427 name .@expr1073761252 enumerator (@expr1073761253 ) ==@expr1073761254 &@expr1073761255 scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] $) $) { $return ; }
5112: $if $(@expr1073761258 $!@expr1073761259 $assertEquals $(@expr1073761260 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5112 $, (@expr19239 unsigned int ) Token ::@expr19240 eEnumerator@expr19164 $, (@expr1073761263 unsigned int ) scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] .@expr19427 name .@expr1073761267 tokType (@expr1073761268 ) $) $) { $return ; }
5113: $if $(@expr1073761269 $!@expr1073761270 $assert_ $(@expr1073761271 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5113 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] .@expr1073761274 scope@expr1073761004 ==@expr1073761275 &@expr19254 *@expr19255 scope@var1532 $) $) { $return ; }
5114: $if $(@expr1073761278 $!@expr1073761279 $assertEquals $(@expr1073761280 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5114 $, "O4" $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] .@expr19427 name .@expr1073761284 str (@expr1073761285 ) $) $) { $return ; }
5115: $if $(@expr1073761286 $!@expr1073761287 $assert_ $(@expr1073761288 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5115 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] .@expr1073761291 start@expr1073761005 ==@expr1073761292 nullptr $) $) { $return ; }
5116: $if $(@expr1073761293 $!@expr1073761294 $assert_ $(@expr1073761295 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5116 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] .@expr1073761298 end@expr1073761006 ==@expr1073761299 nullptr $) $) { $return ; }
5117: $if $(@expr1073761300 $!@expr1073761301 $assertEquals $(@expr1073761302 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5117 $, true $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] .@expr1073761305 value_known@expr1073761007 $) $) { $return ; }
5118: $if $(@expr1073761306 $!@expr1073761307 $assertEquals $(@expr1073761308 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5118 $, 6 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19426 3 ] .@expr1073761311 value@expr1073761008 $) $) { $return ; }
5119:
5120:
5121: ++@expr1073761312 scope@var1532 ;
5122: $if $(@expr1073761313 $!@expr1073761314 $assertEquals $(@expr1073761315 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5122 $, (@expr19214 unsigned int ) Scope ::@expr19215 eEnum@expr19163 $, (@expr19216 unsigned int ) scope@var1532 .@expr19217 type@var1533 $) $) { $return ; }
5123: $if $(@expr1073761320 $!@expr1073761321 $assertEquals $(@expr1073761322 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5123 $, 3U $, scope@var1532 .@expr19221 enumeratorList@var1534 .@expr19222 size (@expr19223 ) $) $) { $return ; }
5124:
5125: $if $(@expr1073761326 $!@expr1073761327 $assert_ $(@expr1073761328 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5125 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19229 name .@expr19230 enumerator (@expr19231 ) ==@expr19232 &@expr19233 scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] $) $) { $return ; }
5126: $if $(@expr1073761338 $!@expr1073761339 $assertEquals $(@expr1073761340 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5126 $, (@expr19239 unsigned int ) Token ::@expr19240 eEnumerator@expr19164 $, (@expr19241 unsigned int ) scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19229 name .@expr19245 tokType (@expr19246 ) $) $) { $return ; }
5127: $if $(@expr1073761349 $!@expr1073761350 $assert_ $(@expr1073761351 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5127 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19252 scope@expr19165 ==@expr19253 &@expr19254 *@expr19255 scope@var1532 $) $) { $return ; }
5128: $if $(@expr1073761358 $!@expr1073761359 $assertEquals $(@expr1073761360 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5128 $, "E1" $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19229 name .@expr19262 str (@expr19263 ) $) $) { $return ; }
5129: $if $(@expr1073761366 $!@expr1073761367 $assert_ $(@expr1073761368 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5129 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19269 start@expr19166 !=@expr1073761372 nullptr $) $) { $return ; }
5130: $if $(@expr1073761373 $!@expr1073761374 $assert_ $(@expr1073761375 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5130 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19276 end@expr19167 !=@expr1073761379 nullptr $) $) { $return ; }
5131: $if $(@expr1073761380 $!@expr1073761381 $assertEquals $(@expr1073761382 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5131 $, true $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19283 value_known@expr19168 $) $) { $return ; }
5132: $if $(@expr1073761386 $!@expr1073761387 $assertEquals $(@expr1073761388 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5132 $, 1 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19228 0 ] .@expr19289 value@expr19169 $) $) { $return ; }
5133:
5134: $if $(@expr1073761392 $!@expr1073761393 $assert_ $(@expr1073761394 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5134 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19295 name .@expr19296 enumerator (@expr19297 ) ==@expr19298 &@expr19299 scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] $) $) { $return ; }
5135: $if $(@expr1073761404 $!@expr1073761405 $assertEquals $(@expr1073761406 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5135 $, (@expr19239 unsigned int ) Token ::@expr19240 eEnumerator@expr19164 $, (@expr19307 unsigned int ) scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19295 name .@expr19311 tokType (@expr19312 ) $) $) { $return ; }
5136: $if $(@expr1073761415 $!@expr1073761416 $assert_ $(@expr1073761417 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5136 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19318 scope@expr19170 ==@expr19319 &@expr19254 *@expr19255 scope@var1532 $) $) { $return ; }
5137: $if $(@expr1073761424 $!@expr1073761425 $assertEquals $(@expr1073761426 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5137 $, "E2" $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19295 name .@expr19328 str (@expr19329 ) $) $) { $return ; }
5138: $if $(@expr1073761432 $!@expr1073761433 $assert_ $(@expr1073761434 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5138 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19335 start@expr19171 ==@expr19336 nullptr $) $) { $return ; }
5139: $if $(@expr1073761439 $!@expr1073761440 $assert_ $(@expr1073761441 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5139 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19342 end@expr19172 ==@expr19343 nullptr $) $) { $return ; }
5140: $if $(@expr1073761446 $!@expr1073761447 $assertEquals $(@expr1073761448 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5140 $, true $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19349 value_known@expr19173 $) $) { $return ; }
5141: $if $(@expr1073761452 $!@expr1073761453 $assertEquals $(@expr1073761454 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5141 $, 2 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19294 1 ] .@expr19355 value@expr19174 $) $) { $return ; }
5142:
5143: $if $(@expr1073761458 $!@expr1073761459 $assert_ $(@expr1073761460 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5143 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19361 name .@expr19362 enumerator (@expr19363 ) ==@expr19364 &@expr19365 scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] $) $) { $return ; }
5144: $if $(@expr1073761470 $!@expr1073761471 $assertEquals $(@expr1073761472 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5144 $, (@expr19239 unsigned int ) Token ::@expr19240 eEnumerator@expr19164 $, (@expr19373 unsigned int ) scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19361 name .@expr19377 tokType (@expr19378 ) $) $) { $return ; }
5145: $if $(@expr1073761481 $!@expr1073761482 $assert_ $(@expr1073761483 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5145 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19384 scope@expr19175 ==@expr19385 &@expr19254 *@expr19255 scope@var1532 $) $) { $return ; }
5146: $if $(@expr1073761490 $!@expr1073761491 $assertEquals $(@expr1073761492 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5146 $, "E3" $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19361 name .@expr19394 str (@expr19395 ) $) $) { $return ; }
5147: $if $(@expr1073761498 $!@expr1073761499 $assert_ $(@expr1073761500 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5147 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19401 start@expr19176 !=@expr19402 nullptr $) $) { $return ; }
5148: $if $(@expr1073761505 $!@expr1073761506 $assert_ $(@expr1073761507 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5148 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19408 end@expr19177 !=@expr19409 nullptr $) $) { $return ; }
5149: $if $(@expr1073761512 $!@expr1073761513 $assertEquals $(@expr1073761514 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5149 $, true $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19415 value_known@expr19178 $) $) { $return ; }
5150: $if $(@expr1073761518 $!@expr1073761519 $assertEquals $(@expr1073761520 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5150 $, 6 $, scope@var1532 .@expr19221 enumeratorList@var1534 [@expr19360 2 ] .@expr19421 value@expr19179 $) $) { $return ; }
5151: }
5152:
5153: void enum5 ( ) {
5154: $Tokenizer $tokenizer@var1535 $(@expr1073761529 $&@expr1073761530 $settings1@var123 $, $this@expr1073761531 $) $; $const $SymbolDatabase $* $db@var1536 $; $db@var1536 $=@expr1073761532 $getSymbolDB_inner $(@expr1073761533 $tokenizer@var1535 $, "enum { A = 10, B = 2 };\nint a[10 + 2];\nint b[A];\nint c[A + 2];\nint d[10 + B];\nint e[A + B];" $, $"test.cpp" $) $; $if $(@expr1073761534 $!@expr1073761535 $assert_ $(@expr1073761536 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5154 $, $db@var1536 $) $) { $return $; } $do ${ $} $while $(@expr1073761537 $false $)
5155:
|
5158:
5159: ;
5160: $if $(@expr1073761538 $!@expr1073761539 $assert_ $(@expr1073761540 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5160 $, db@var1536 !=@expr1073761541 nullptr $) $) { $return ; }
5161:
5162: $if $(@expr1073761542 $!@expr1073761543 $assertEquals $(@expr1073761544 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5162 $, 2U $, db@var1536 .@expr19721 scopeList@var1537 .@expr1073761546 size (@expr1073761547 ) $) $) { $return ; }
5163:
5164:
5165: std ::@expr1073761548 list < Scope > ::@expr1073761549 const_iterator scope@var1538 ; scope@var1538 =@expr1073761550 db@var1536 .@expr19721 scopeList@var1537 .@expr1073761552 begin (@expr1073761553 ) ;
5166:
5167: ++@expr1073761554 scope@var1538 ;
5168: $if $(@expr1073761555 $!@expr1073761556 $assertEquals $(@expr1073761557 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5168 $, (@expr1073761558 unsigned int ) Scope ::@expr1073761559 eEnum@expr1073761524 $, (@expr1073761560 unsigned int ) scope@var1538 .@expr1073761561 type@var1539 $) $) { $return ; }
5169: $if $(@expr1073761562 $!@expr1073761563 $assertEquals $(@expr1073761564 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5169 $, 2U $, scope@var1538 .@expr19741 enumeratorList@var1540 .@expr1073761566 size (@expr1073761567 ) $) $) { $return ; }
5170: $if $(@expr1073761568 $!@expr1073761569 $assertEquals $(@expr1073761570 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5170 $, true $, scope@var1538 .@expr19741 enumeratorList@var1540 [@expr19748 0 ] .@expr1073761573 value_known@expr1073761525 $) $) { $return ; }
5171: $if $(@expr1073761574 $!@expr1073761575 $assertEquals $(@expr1073761576 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5171 $, 10 $, scope@var1538 .@expr19741 enumeratorList@var1540 [@expr19748 0 ] .@expr1073761579 value@expr1073761526 $) $) { $return ; }
5172: $if $(@expr1073761580 $!@expr1073761581 $assertEquals $(@expr1073761582 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5172 $, true $, scope@var1538 .@expr19741 enumeratorList@var1540 [@expr19760 1 ] .@expr1073761585 value_known@expr1073761527 $) $) { $return ; }
5173: $if $(@expr1073761586 $!@expr1073761587 $assertEquals $(@expr1073761588 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5173 $, 2 $, scope@var1538 .@expr19741 enumeratorList@var1540 [@expr19760 1 ] .@expr1073761591 value@expr1073761528 $) $) { $return ; }
5174:
5175: $if $(@expr1073761592 $!@expr1073761593 $assert_ $(@expr1073761594 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5175 $, db@var1536 .@expr1073761595 variableList (@expr1073761596 ) .@expr1073761597 size (@expr1073761598 ) ==@expr1073761599 6 $) $) { $return ; }
5176: const Variable * v@var1541 ; v@var1541 =@expr1073761600 db@var1536 .@expr19777 getVariableFromVarId (@expr1073761602 1 ) ;
5177: $if $(@expr1073761603 $!@expr1073761604 $assert_ $(@expr1073761605 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5177 $, v@var1541 !=@expr19782 nullptr $) $) { $return ; }
5178:
5179: $if $(@expr1073761607 $!@expr1073761608 $assert_ $(@expr1073761609 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5179 $, v@var1541 .@expr19786 isArray (@expr19787 ) $) $) { $return ; }
5180: $if $(@expr1073761612 $!@expr1073761613 $assertEquals $(@expr1073761614 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5180 $, 1U $, v@var1541 .@expr19791 dimensions (@expr19792 ) .@expr19793 size (@expr19794 ) $) $) { $return ; }
5181: $if $(@expr1073761619 $!@expr1073761620 $assertEquals $(@expr1073761621 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5181 $, 12U $, v@var1541 .@expr19798 dimension (@expr19799 0 ) $) $) { $return ; }
5182: v@var1541 =@expr1073761624 db@var1536 .@expr19777 getVariableFromVarId (@expr1073761626 2 ) ;
5183: $if $(@expr1073761627 $!@expr1073761628 $assert_ $(@expr1073761629 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5183 $, v@var1541 !=@expr19782 nullptr $) $) { $return ; }
5184:
5185: $if $(@expr1073761631 $!@expr1073761632 $assert_ $(@expr1073761633 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5185 $, v@var1541 .@expr19786 isArray (@expr19787 ) $) $) { $return ; }
5186: $if $(@expr1073761636 $!@expr1073761637 $assertEquals $(@expr1073761638 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5186 $, 1U $, v@var1541 .@expr19791 dimensions (@expr19792 ) .@expr19793 size (@expr19794 ) $) $) { $return ; }
5187: $if $(@expr1073761643 $!@expr1073761644 $assertEquals $(@expr1073761645 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5187 $, 10U $, v@var1541 .@expr19798 dimension (@expr19799 0 ) $) $) { $return ; }
5188: v@var1541 =@expr1073761648 db@var1536 .@expr19777 getVariableFromVarId (@expr1073761650 3 ) ;
5189: $if $(@expr1073761651 $!@expr1073761652 $assert_ $(@expr1073761653 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5189 $, v@var1541 !=@expr19782 nullptr $) $) { $return ; }
5190:
5191: $if $(@expr1073761655 $!@expr1073761656 $assert_ $(@expr1073761657 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5191 $, v@var1541 .@expr19786 isArray (@expr19787 ) $) $) { $return ; }
5192: $if $(@expr1073761660 $!@expr1073761661 $assertEquals $(@expr1073761662 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5192 $, 1U $, v@var1541 .@expr19791 dimensions (@expr19792 ) .@expr19793 size (@expr19794 ) $) $) { $return ; }
5193: $if $(@expr1073761667 $!@expr1073761668 $assertEquals $(@expr1073761669 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5193 $, 12U $, v@var1541 .@expr19798 dimension (@expr19799 0 ) $) $) { $return ; }
5194: v@var1541 =@expr1073761672 db@var1536 .@expr19777 getVariableFromVarId (@expr1073761674 4 ) ;
5195: $if $(@expr1073761675 $!@expr1073761676 $assert_ $(@expr1073761677 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5195 $, v@var1541 !=@expr19782 nullptr $) $) { $return ; }
5196:
5197: $if $(@expr1073761679 $!@expr1073761680 $assert_ $(@expr1073761681 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5197 $, v@var1541 .@expr19786 isArray (@expr19787 ) $) $) { $return ; }
5198: $if $(@expr1073761684 $!@expr1073761685 $assertEquals $(@expr1073761686 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5198 $, 1U $, v@var1541 .@expr19791 dimensions (@expr19792 ) .@expr19793 size (@expr19794 ) $) $) { $return ; }
5199: $if $(@expr1073761691 $!@expr1073761692 $assertEquals $(@expr1073761693 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5199 $, 12U $, v@var1541 .@expr19798 dimension (@expr19799 0 ) $) $) { $return ; }
5200: v@var1541 =@expr1073761696 db@var1536 .@expr19777 getVariableFromVarId (@expr1073761698 5 ) ;
5201: $if $(@expr1073761699 $!@expr1073761700 $assert_ $(@expr1073761701 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5201 $, v@var1541 !=@expr19782 nullptr $) $) { $return ; }
5202:
5203: $if $(@expr1073761703 $!@expr1073761704 $assert_ $(@expr1073761705 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5203 $, v@var1541 .@expr19786 isArray (@expr19787 ) $) $) { $return ; }
5204: $if $(@expr1073761708 $!@expr1073761709 $assertEquals $(@expr1073761710 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5204 $, 1U $, v@var1541 .@expr19791 dimensions (@expr19792 ) .@expr19793 size (@expr19794 ) $) $) { $return ; }
5205: $if $(@expr1073761715 $!@expr1073761716 $assertEquals $(@expr1073761717 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5205 $, 12U $, v@var1541 .@expr19798 dimension (@expr19799 0 ) $) $) { $return ; }
5206: }
5207:
5208: void enum6 ( ) {
5209: $Tokenizer $tokenizer@var1542 $(@expr1073761720 $&@expr1073761721 $settings1@var123 $, $this@expr1073761722 $) $; $const $SymbolDatabase $* $db@var1543 $; $db@var1543 $=@expr1073761723 $getSymbolDB_inner $(@expr1073761724 $tokenizer@var1542 $, "struct Fred {\n    enum Enum { E0, E1 };\n};\nstruct Barney : public Fred {\n    Enum func(Enum e) { return e; }\n};" $, $"test.cpp" $) $; $if $(@expr1073761725 $!@expr1073761726 $assert_ $(@expr1073761727 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5209 $, $db@var1543 $) $) { $return $; } $do ${ $} $while $(@expr1073761728 $false $)
5210:
|
5213:
5214: ;
5215: $if $(@expr1073761729 $!@expr1073761730 $assert_ $(@expr1073761731 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5215 $, db@var1543 !=@expr1073761732 nullptr $) $) { $return ; }
5216:
5217: const Token * const functionToken@var1544 ; functionToken@var1544 =@expr1073761733 Token ::@expr1073761734 findsimplematch (@expr1073761735 tokenizer@var1542 .@expr1073761736 tokens (@expr1073761737 ) , "func" ) ;
5218: $if $(@expr1073761738 $!@expr1073761739 $assert_ $(@expr1073761740 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5218 $, functionToken@var1544 !=@expr1073761741 nullptr $) $) { $return ; }
5219:
5220: const Function * function@var1545 ; function@var1545 =@expr1073761742 functionToken@var1544 .@expr1073761743 function (@expr1073761744 ) ;
5221: $if $(@expr1073761745 $!@expr1073761746 $assert_ $(@expr1073761747 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5221 $, function@var1545 !=@expr1073761748 nullptr $) $) { $return ; }
5222:
5223: $if $(@expr1073761749 $!@expr1073761750 $assert_ $(@expr1073761751 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5223 $, function@var1545 .@expr1073761752 token@var1546 .@expr1073761753 str (@expr1073761754 ) ==@expr1073761755 "func" $) $) { $return ; }
5224: $if $(@expr1073761756 $!@expr1073761757 $assert_ $(@expr1073761758 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5224 $, function@var1545 .@expr19935 retDef@var1547 &&@expr1073761760 function@var1545 .@expr19935 retDef@var1547 .@expr1073761762 str (@expr1073761763 ) ==@expr1073761764 "Enum" $) $) { $return ; }
5225: $if $(@expr1073761765 $!@expr1073761766 $assert_ $(@expr1073761767 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5225 $, function@var1545 .@expr19944 retType@var1548 &&@expr1073761769 function@var1545 .@expr19944 retType@var1548 .@expr1073761771 name (@expr1073761772 ) ==@expr1073761773 "Enum" $) $) { $return ; }
5226: }
5227:
|
5234:
5235: void enum7 ( ) {
5236: $Tokenizer $tokenizer@var1549 $(@expr1073761774 $&@expr1073761775 $settings1@var123 $, $this@expr1073761776 $) $; $const $SymbolDatabase $* $db@var1550 $; $db@var1550 $=@expr1073761777 $getSymbolDB_inner $(@expr1073761778 $tokenizer@var1549 $, "enum E { X };\nenum EC : char { C };\nenum ES : short { S };\nenum EI : int { I };\nenum EL : long { L };\nenum ELL : long long { LL };\nchar array1[sizeof(E)];\nchar array2[sizeof(X)];\nchar array3[sizeof(EC)];\nchar array4[sizeof(C)];\nchar array5[sizeof(ES)];\nchar array6[sizeof(S)];\nchar array7[sizeof(EI)];\nchar array8[sizeof(I)];\nchar array9[sizeof(EL)];\nchar array10[sizeof(L)];\nchar array11[sizeof(ELL)];\nchar array12[sizeof(LL)];" $, $"test.cpp" $) $; $if $(@expr1073761779 $!@expr1073761780 $assert_ $(@expr1073761781 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5236 $, $db@var1550 $) $) { $return $; } $do ${ $} $while $(@expr1073761782 $false $)
5237:
|
5252:
5253: ;
5254: $if $(@expr1073761783 $!@expr1073761784 $assert_ $(@expr1073761785 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5254 $, db@var1550 !=@expr1073761786 nullptr $) $) { $return ; }
5255:
5256: $if $(@expr1073761787 $!@expr1073761788 $assert_ $(@expr1073761789 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5256 $, db@var1550 .@expr1073761790 variableList (@expr1073761791 ) .@expr1073761792 size (@expr1073761793 ) ==@expr1073761794 13 $) $) { $return ; }
5257: const Variable * v@var1551 ;
5258: unsigned int id@var1552 ; id@var1552 =@expr1073761795 1 ;
5259: $v@var1551 $=@expr1073761796 $db@var1550 $.@expr1073761797 $getVariableFromVarId $(@expr1073761798 $id@var1552 $++@expr1073761799 $) $; $if $(@expr1073761800 $!@expr1073761801 $assert_ $(@expr1073761802 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5259 $, $v@var1551 $!=@expr1073761803 $nullptr $) $) { $return $; } $if $(@expr1073761804 $!@expr1073761805 $assert_ $(@expr1073761806 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5259 $, $v@var1551 $.@expr1073761807 $isArray $(@expr1073761808 $) $) $) { $return $; } $if $(@expr1073761809 $!@expr1073761810 $assertEquals $(@expr1073761811 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5259 $, $1U $, $v@var1551 $.@expr1073761812 $dimensions $(@expr1073761813 $) $.@expr1073761814 $size $(@expr1073761815 $) $) $) { $return $; } $if $(@expr1073761816 $!@expr1073761817 $assertEquals $(@expr1073761818 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5259 $, settings1@var123 .@expr19995 sizeof_int@var1553 $, $v@var1551 $.@expr1073761820 $dimension $(@expr1073761821 $0 $) $) $) { $return ; }
5260: $v@var1551 $=@expr1073761822 $db@var1550 $.@expr1073761823 $getVariableFromVarId $(@expr1073761824 $id@var1552 $++@expr1073761825 $) $; $if $(@expr1073761826 $!@expr1073761827 $assert_ $(@expr1073761828 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5260 $, $v@var1551 $!=@expr1073761829 $nullptr $) $) { $return $; } $if $(@expr1073761830 $!@expr1073761831 $assert_ $(@expr1073761832 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5260 $, $v@var1551 $.@expr1073761833 $isArray $(@expr1073761834 $) $) $) { $return $; } $if $(@expr1073761835 $!@expr1073761836 $assertEquals $(@expr1073761837 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5260 $, $1U $, $v@var1551 $.@expr1073761838 $dimensions $(@expr1073761839 $) $.@expr1073761840 $size $(@expr1073761841 $) $) $) { $return $; } $if $(@expr1073761842 $!@expr1073761843 $assertEquals $(@expr1073761844 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5260 $, settings1@var123 .@expr19995 sizeof_int@var1553 $, $v@var1551 $.@expr1073761846 $dimension $(@expr1073761847 $0 $) $) $) { $return ; }
5261: $v@var1551 $=@expr1073761848 $db@var1550 $.@expr1073761849 $getVariableFromVarId $(@expr1073761850 $id@var1552 $++@expr1073761851 $) $; $if $(@expr1073761852 $!@expr1073761853 $assert_ $(@expr1073761854 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5261 $, $v@var1551 $!=@expr1073761855 $nullptr $) $) { $return $; } $if $(@expr1073761856 $!@expr1073761857 $assert_ $(@expr1073761858 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5261 $, $v@var1551 $.@expr1073761859 $isArray $(@expr1073761860 $) $) $) { $return $; } $if $(@expr1073761861 $!@expr1073761862 $assertEquals $(@expr1073761863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5261 $, $1U $, $v@var1551 $.@expr1073761864 $dimensions $(@expr1073761865 $) $.@expr1073761866 $size $(@expr1073761867 $) $) $) { $return $; } $if $(@expr1073761868 $!@expr1073761869 $assertEquals $(@expr1073761870 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5261 $, 1 $, $v@var1551 $.@expr1073761871 $dimension $(@expr1073761872 $0 $) $) $) { $return ; }
5262: $v@var1551 $=@expr1073761873 $db@var1550 $.@expr1073761874 $getVariableFromVarId $(@expr1073761875 $id@var1552 $++@expr1073761876 $) $; $if $(@expr1073761877 $!@expr1073761878 $assert_ $(@expr1073761879 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5262 $, $v@var1551 $!=@expr1073761880 $nullptr $) $) { $return $; } $if $(@expr1073761881 $!@expr1073761882 $assert_ $(@expr1073761883 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5262 $, $v@var1551 $.@expr1073761884 $isArray $(@expr1073761885 $) $) $) { $return $; } $if $(@expr1073761886 $!@expr1073761887 $assertEquals $(@expr1073761888 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5262 $, $1U $, $v@var1551 $.@expr1073761889 $dimensions $(@expr1073761890 $) $.@expr1073761891 $size $(@expr1073761892 $) $) $) { $return $; } $if $(@expr1073761893 $!@expr1073761894 $assertEquals $(@expr1073761895 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5262 $, 1 $, $v@var1551 $.@expr1073761896 $dimension $(@expr1073761897 $0 $) $) $) { $return ; }
5263: $v@var1551 $=@expr1073761898 $db@var1550 $.@expr1073761899 $getVariableFromVarId $(@expr1073761900 $id@var1552 $++@expr1073761901 $) $; $if $(@expr1073761902 $!@expr1073761903 $assert_ $(@expr1073761904 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5263 $, $v@var1551 $!=@expr1073761905 $nullptr $) $) { $return $; } $if $(@expr1073761906 $!@expr1073761907 $assert_ $(@expr1073761908 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5263 $, $v@var1551 $.@expr1073761909 $isArray $(@expr1073761910 $) $) $) { $return $; } $if $(@expr1073761911 $!@expr1073761912 $assertEquals $(@expr1073761913 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5263 $, $1U $, $v@var1551 $.@expr1073761914 $dimensions $(@expr1073761915 $) $.@expr1073761916 $size $(@expr1073761917 $) $) $) { $return $; } $if $(@expr1073761918 $!@expr1073761919 $assertEquals $(@expr1073761920 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5263 $, settings1@var123 .@expr20097 sizeof_short@var1554 $, $v@var1551 $.@expr1073761922 $dimension $(@expr1073761923 $0 $) $) $) { $return ; }
5264: $v@var1551 $=@expr1073761924 $db@var1550 $.@expr1073761925 $getVariableFromVarId $(@expr1073761926 $id@var1552 $++@expr1073761927 $) $; $if $(@expr1073761928 $!@expr1073761929 $assert_ $(@expr1073761930 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5264 $, $v@var1551 $!=@expr1073761931 $nullptr $) $) { $return $; } $if $(@expr1073761932 $!@expr1073761933 $assert_ $(@expr1073761934 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5264 $, $v@var1551 $.@expr1073761935 $isArray $(@expr1073761936 $) $) $) { $return $; } $if $(@expr1073761937 $!@expr1073761938 $assertEquals $(@expr1073761939 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5264 $, $1U $, $v@var1551 $.@expr1073761940 $dimensions $(@expr1073761941 $) $.@expr1073761942 $size $(@expr1073761943 $) $) $) { $return $; } $if $(@expr1073761944 $!@expr1073761945 $assertEquals $(@expr1073761946 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5264 $, settings1@var123 .@expr20097 sizeof_short@var1554 $, $v@var1551 $.@expr1073761948 $dimension $(@expr1073761949 $0 $) $) $) { $return ; }
5265: $v@var1551 $=@expr1073761950 $db@var1550 $.@expr1073761951 $getVariableFromVarId $(@expr1073761952 $id@var1552 $++@expr1073761953 $) $; $if $(@expr1073761954 $!@expr1073761955 $assert_ $(@expr1073761956 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5265 $, $v@var1551 $!=@expr1073761957 $nullptr $) $) { $return $; } $if $(@expr1073761958 $!@expr1073761959 $assert_ $(@expr1073761960 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5265 $, $v@var1551 $.@expr1073761961 $isArray $(@expr1073761962 $) $) $) { $return $; } $if $(@expr1073761963 $!@expr1073761964 $assertEquals $(@expr1073761965 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5265 $, $1U $, $v@var1551 $.@expr1073761966 $dimensions $(@expr1073761967 $) $.@expr1073761968 $size $(@expr1073761969 $) $) $) { $return $; } $if $(@expr1073761970 $!@expr1073761971 $assertEquals $(@expr1073761972 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5265 $, settings1@var123 .@expr19995 sizeof_int@var1553 $, $v@var1551 $.@expr1073761974 $dimension $(@expr1073761975 $0 $) $) $) { $return ; }
5266: $v@var1551 $=@expr1073761976 $db@var1550 $.@expr1073761977 $getVariableFromVarId $(@expr1073761978 $id@var1552 $++@expr1073761979 $) $; $if $(@expr1073761980 $!@expr1073761981 $assert_ $(@expr1073761982 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5266 $, $v@var1551 $!=@expr1073761983 $nullptr $) $) { $return $; } $if $(@expr1073761984 $!@expr1073761985 $assert_ $(@expr1073761986 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5266 $, $v@var1551 $.@expr1073761987 $isArray $(@expr1073761988 $) $) $) { $return $; } $if $(@expr1073761989 $!@expr1073761990 $assertEquals $(@expr1073761991 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5266 $, $1U $, $v@var1551 $.@expr1073761992 $dimensions $(@expr1073761993 $) $.@expr1073761994 $size $(@expr1073761995 $) $) $) { $return $; } $if $(@expr1073761996 $!@expr1073761997 $assertEquals $(@expr1073761998 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5266 $, settings1@var123 .@expr19995 sizeof_int@var1553 $, $v@var1551 $.@expr1073762000 $dimension $(@expr1073762001 $0 $) $) $) { $return ; }
5267: $v@var1551 $=@expr1073762002 $db@var1550 $.@expr1073762003 $getVariableFromVarId $(@expr1073762004 $id@var1552 $++@expr1073762005 $) $; $if $(@expr1073762006 $!@expr1073762007 $assert_ $(@expr1073762008 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5267 $, $v@var1551 $!=@expr1073762009 $nullptr $) $) { $return $; } $if $(@expr1073762010 $!@expr1073762011 $assert_ $(@expr1073762012 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5267 $, $v@var1551 $.@expr1073762013 $isArray $(@expr1073762014 $) $) $) { $return $; } $if $(@expr1073762015 $!@expr1073762016 $assertEquals $(@expr1073762017 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5267 $, $1U $, $v@var1551 $.@expr1073762018 $dimensions $(@expr1073762019 $) $.@expr1073762020 $size $(@expr1073762021 $) $) $) { $return $; } $if $(@expr1073762022 $!@expr1073762023 $assertEquals $(@expr1073762024 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5267 $, settings1@var123 .@expr20201 sizeof_long@var1555 $, $v@var1551 $.@expr1073762026 $dimension $(@expr1073762027 $0 $) $) $) { $return ; }
5268: $v@var1551 $=@expr1073762028 $db@var1550 $.@expr1073762029 $getVariableFromVarId $(@expr1073762030 $id@var1552 $++@expr1073762031 $) $; $if $(@expr1073762032 $!@expr1073762033 $assert_ $(@expr1073762034 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5268 $, $v@var1551 $!=@expr1073762035 $nullptr $) $) { $return $; } $if $(@expr1073762036 $!@expr1073762037 $assert_ $(@expr1073762038 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5268 $, $v@var1551 $.@expr1073762039 $isArray $(@expr1073762040 $) $) $) { $return $; } $if $(@expr1073762041 $!@expr1073762042 $assertEquals $(@expr1073762043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5268 $, $1U $, $v@var1551 $.@expr1073762044 $dimensions $(@expr1073762045 $) $.@expr1073762046 $size $(@expr1073762047 $) $) $) { $return $; } $if $(@expr1073762048 $!@expr1073762049 $assertEquals $(@expr1073762050 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5268 $, settings1@var123 .@expr20201 sizeof_long@var1555 $, $v@var1551 $.@expr1073762052 $dimension $(@expr1073762053 $0 $) $) $) { $return ; }
5269: $v@var1551 $=@expr1073762054 $db@var1550 $.@expr1073762055 $getVariableFromVarId $(@expr1073762056 $id@var1552 $++@expr1073762057 $) $; $if $(@expr1073762058 $!@expr1073762059 $assert_ $(@expr1073762060 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5269 $, $v@var1551 $!=@expr1073762061 $nullptr $) $) { $return $; } $if $(@expr1073762062 $!@expr1073762063 $assert_ $(@expr1073762064 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5269 $, $v@var1551 $.@expr1073762065 $isArray $(@expr1073762066 $) $) $) { $return $; } $if $(@expr1073762067 $!@expr1073762068 $assertEquals $(@expr1073762069 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5269 $, $1U $, $v@var1551 $.@expr1073762070 $dimensions $(@expr1073762071 $) $.@expr1073762072 $size $(@expr1073762073 $) $) $) { $return $; } $if $(@expr1073762074 $!@expr1073762075 $assertEquals $(@expr1073762076 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5269 $, settings1@var123 .@expr20253 sizeof_long_long@var1556 $, $v@var1551 $.@expr1073762078 $dimension $(@expr1073762079 $0 $) $) $) { $return ; }
5270: $v@var1551 $=@expr1073762080 $db@var1550 $.@expr1073762081 $getVariableFromVarId $(@expr1073762082 $id@var1552 $++@expr1073762083 $) $; $if $(@expr1073762084 $!@expr1073762085 $assert_ $(@expr1073762086 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5270 $, $v@var1551 $!=@expr1073762087 $nullptr $) $) { $return $; } $if $(@expr1073762088 $!@expr1073762089 $assert_ $(@expr1073762090 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5270 $, $v@var1551 $.@expr1073762091 $isArray $(@expr1073762092 $) $) $) { $return $; } $if $(@expr1073762093 $!@expr1073762094 $assertEquals $(@expr1073762095 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5270 $, $1U $, $v@var1551 $.@expr1073762096 $dimensions $(@expr1073762097 $) $.@expr1073762098 $size $(@expr1073762099 $) $) $) { $return $; } $if $(@expr1073762100 $!@expr1073762101 $assertEquals $(@expr1073762102 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5270 $, settings1@var123 .@expr20253 sizeof_long_long@var1556 $, $v@var1551 $.@expr1073762104 $dimension $(@expr1073762105 $0 $) $) $) { $return ; }
5271: }
5272:
5273: void enum8 ( ) {
5274: $Tokenizer $tokenizer@var1557 $(@expr1073762106 $&@expr1073762107 $settings1@var123 $, $this@expr1073762108 $) $; $const $SymbolDatabase $* $db@var1558 $; $db@var1558 $=@expr1073762109 $getSymbolDB_inner $(@expr1073762110 $tokenizer@var1557 $, "enum E { X0 = x, X1, X2 = 2, X3, X4 = y, X5 };\n" $, $"test.cpp" $) $; $if $(@expr1073762111 $!@expr1073762112 $assert_ $(@expr1073762113 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5274 $, $db@var1558 $) $) { $return $; } $do ${ $} $while $(@expr1073762114 $false $) ;
5275: $if $(@expr1073762115 $!@expr1073762116 $assert_ $(@expr1073762117 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5275 $, db@var1558 !=@expr1073762118 nullptr $) $) { $return ; }
5276: const Enumerator * X0@var1559 ; X0@var1559 =@expr1073762119 db@var1558 .@expr20296 scopeList@var1560 .@expr20297 back (@expr20298 ) .@expr20299 findEnumerator (@expr1073762124 "X0" ) ;
5277: $if $(@expr1073762125 $!@expr1073762126 $assert_ $(@expr1073762127 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5277 $, X0@var1559 $) $) { $return ; }
5278: $if $(@expr1073762128 $!@expr1073762129 $assert_ $(@expr1073762130 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5278 $, !@expr1073762131 X0@var1559 .@expr1073762132 value_known@var1561 $) $) { $return ; }
5279: const Enumerator * X1@var1562 ; X1@var1562 =@expr1073762133 db@var1558 .@expr20296 scopeList@var1560 .@expr20297 back (@expr20298 ) .@expr20299 findEnumerator (@expr1073762138 "X1" ) ;
5280: $if $(@expr1073762139 $!@expr1073762140 $assert_ $(@expr1073762141 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5280 $, X1@var1562 $) $) { $return ; }
5281: $if $(@expr1073762142 $!@expr1073762143 $assert_ $(@expr1073762144 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5281 $, !@expr1073762145 X1@var1562 .@expr1073762146 value_known@var1563 $) $) { $return ; }
5282: const Enumerator * X2@var1564 ; X2@var1564 =@expr1073762147 db@var1558 .@expr20296 scopeList@var1560 .@expr20297 back (@expr20298 ) .@expr20299 findEnumerator (@expr1073762152 "X2" ) ;
5283: $if $(@expr1073762153 $!@expr1073762154 $assert_ $(@expr1073762155 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5283 $, X2@var1564 $) $) { $return ; }
5284: $if $(@expr1073762156 $!@expr1073762157 $assert_ $(@expr1073762158 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5284 $, X2@var1564 .@expr1073762159 value_known@var1565 $) $) { $return ; }
5285: $if $(@expr1073762160 $!@expr1073762161 $assertEquals $(@expr1073762162 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5285 $, X2@var1564 .@expr1073762163 value@var1566 $, 2 $) $) { $return ; }
5286: const Enumerator * X3@var1567 ; X3@var1567 =@expr1073762164 db@var1558 .@expr20296 scopeList@var1560 .@expr20297 back (@expr20298 ) .@expr20299 findEnumerator (@expr1073762169 "X3" ) ;
5287: $if $(@expr1073762170 $!@expr1073762171 $assert_ $(@expr1073762172 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5287 $, X3@var1567 $) $) { $return ; }
5288: $if $(@expr1073762173 $!@expr1073762174 $assert_ $(@expr1073762175 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5288 $, X3@var1567 .@expr1073762176 value_known@var1568 $) $) { $return ; }
5289: $if $(@expr1073762177 $!@expr1073762178 $assertEquals $(@expr1073762179 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5289 $, X3@var1567 .@expr1073762180 value@var1569 $, 3 $) $) { $return ; }
5290: const Enumerator * X4@var1570 ; X4@var1570 =@expr1073762181 db@var1558 .@expr20296 scopeList@var1560 .@expr20297 back (@expr20298 ) .@expr20299 findEnumerator (@expr1073762186 "X4" ) ;
5291: $if $(@expr1073762187 $!@expr1073762188 $assert_ $(@expr1073762189 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5291 $, X4@var1570 $) $) { $return ; }
5292: $if $(@expr1073762190 $!@expr1073762191 $assert_ $(@expr1073762192 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5292 $, !@expr1073762193 X4@var1570 .@expr1073762194 value_known@var1571 $) $) { $return ; }
5293: const Enumerator * X5@var1572 ; X5@var1572 =@expr1073762195 db@var1558 .@expr20296 scopeList@var1560 .@expr20297 back (@expr20298 ) .@expr20299 findEnumerator (@expr1073762200 "X5" ) ;
5294: $if $(@expr1073762201 $!@expr1073762202 $assert_ $(@expr1073762203 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5294 $, X5@var1572 $) $) { $return ; }
5295: $if $(@expr1073762204 $!@expr1073762205 $assert_ $(@expr1073762206 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5295 $, !@expr1073762207 X5@var1572 .@expr1073762208 value_known@var1573 $) $) { $return ; }
5296: }
5297:
5298: void enum9 ( ) {
5299: $Tokenizer $tokenizer@var1574 $(@expr1073762209 $&@expr1073762210 $settings1@var123 $, $this@expr1073762211 $) $; $const $SymbolDatabase $* $db@var1575 $; $db@var1575 $=@expr1073762212 $getSymbolDB_inner $(@expr1073762213 $tokenizer@var1574 $, "const int x = 7; enum E { X0 = x, X1 };\n" $, $"test.cpp" $) $; $if $(@expr1073762214 $!@expr1073762215 $assert_ $(@expr1073762216 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5299 $, $db@var1575 $) $) { $return $; } $do ${ $} $while $(@expr1073762217 $false $) ;
5300: $if $(@expr1073762218 $!@expr1073762219 $assert_ $(@expr1073762220 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5300 $, db@var1575 !=@expr1073762221 nullptr $) $) { $return ; }
5301: const Enumerator * X0@var1576 ; X0@var1576 =@expr1073762222 db@var1575 .@expr20399 scopeList@var1577 .@expr20400 back (@expr20401 ) .@expr20402 findEnumerator (@expr1073762227 "X0" ) ;
5302: $if $(@expr1073762228 $!@expr1073762229 $assert_ $(@expr1073762230 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5302 $, X0@var1576 $) $) { $return ; }
5303: $if $(@expr1073762231 $!@expr1073762232 $assert_ $(@expr1073762233 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5303 $, X0@var1576 .@expr1073762234 value_known@var1578 $) $) { $return ; }
5304: $if $(@expr1073762235 $!@expr1073762236 $assertEquals $(@expr1073762237 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5304 $, X0@var1576 .@expr1073762238 value@var1579 $, 7 $) $) { $return ; }
5305: const Enumerator * X1@var1580 ; X1@var1580 =@expr1073762239 db@var1575 .@expr20399 scopeList@var1577 .@expr20400 back (@expr20401 ) .@expr20402 findEnumerator (@expr1073762244 "X1" ) ;
5306: $if $(@expr1073762245 $!@expr1073762246 $assert_ $(@expr1073762247 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5306 $, X1@var1580 $) $) { $return ; }
5307: $if $(@expr1073762248 $!@expr1073762249 $assert_ $(@expr1073762250 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5307 $, X1@var1580 .@expr1073762251 value_known@var1581 $) $) { $return ; }
5308: $if $(@expr1073762252 $!@expr1073762253 $assertEquals $(@expr1073762254 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5308 $, X1@var1580 .@expr1073762255 value@var1582 $, 8 $) $) { $return ; }
5309: }
5310:
5311: void enum10 ( ) {
5312: $Tokenizer $tokenizer@var1583 $(@expr1073762256 $&@expr1073762257 $settings1@var123 $, $this@expr1073762258 $) $; $const $SymbolDatabase $* $db@var1584 $; $db@var1584 $=@expr1073762259 $getSymbolDB_inner $(@expr1073762260 $tokenizer@var1583 $, "int b = sizeof(enum etag {X, Y});\n" $, $"test.c" $) $; $do ${ $} $while $(@expr1073762261 $false $) ;
5313: $if $(@expr1073762262 $!@expr1073762263 $assert_ $(@expr1073762264 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5313 $, db@var1584 !=@expr1073762265 nullptr $) $) { $return ; }
5314: const Enumerator * X@var1585 ; X@var1585 =@expr1073762266 db@var1584 .@expr20443 scopeList@var1586 .@expr20444 back (@expr20445 ) .@expr20446 findEnumerator (@expr1073762271 "X" ) ;
5315: $if $(@expr1073762272 $!@expr1073762273 $assert_ $(@expr1073762274 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5315 $, X@var1585 $) $) { $return ; }
5316: $if $(@expr1073762275 $!@expr1073762276 $assert_ $(@expr1073762277 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5316 $, X@var1585 .@expr1073762278 value_known@var1587 $) $) { $return ; }
5317: $if $(@expr1073762279 $!@expr1073762280 $assertEquals $(@expr1073762281 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5317 $, X@var1585 .@expr1073762282 value@var1588 $, 0 $) $) { $return ; }
5318: const Enumerator * Y@var1589 ; Y@var1589 =@expr1073762283 db@var1584 .@expr20443 scopeList@var1586 .@expr20444 back (@expr20445 ) .@expr20446 findEnumerator (@expr1073762288 "Y" ) ;
5319: $if $(@expr1073762289 $!@expr1073762290 $assert_ $(@expr1073762291 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5319 $, Y@var1589 $) $) { $return ; }
5320: $if $(@expr1073762292 $!@expr1073762293 $assert_ $(@expr1073762294 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5320 $, Y@var1589 .@expr1073762295 value_known@var1590 $) $) { $return ; }
5321: $if $(@expr1073762296 $!@expr1073762297 $assertEquals $(@expr1073762298 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5321 $, Y@var1589 .@expr1073762299 value@var1591 $, 1 $) $) { $return ; }
5322: }
5323:
5324: void sizeOfType ( ) {
5325:
5326: $Tokenizer $tokenizer@var1592 $(@expr1073762300 $&@expr1073762301 $settings1@var123 $, $this@expr1073762302 $) $; $const $SymbolDatabase $* $db@var1593 $; $db@var1593 $=@expr1073762303 $getSymbolDB_inner $(@expr1073762304 $tokenizer@var1592 $, "enum e;\nvoid foo() {\n    e abc[] = {A,B,C};\n    int i = abc[ARRAY_SIZE(cats)];\n}" $, $"test.cpp" $) $; $if $(@expr1073762305 $!@expr1073762306 $assert_ $(@expr1073762307 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5326 $, $db@var1593 $) $) { $return $; } $do ${ $} $while $(@expr1073762308 $false $)
5327:
5328:
5329:
5330: ;
5331: const Token * e@var1594 ; e@var1594 =@expr1073762309 Token ::@expr1073762310 findsimplematch (@expr1073762311 tokenizer@var1592 .@expr1073762312 tokens (@expr1073762313 ) , "e abc" ) ;
5332: db@var1593 .@expr1073762314 sizeOfType (@expr1073762315 e@var1594 ) ;
5333: }
5334:
5335: void isImplicitlyVirtual ( ) {
5336: {
5337: $Tokenizer $tokenizer@var1595 $(@expr1073762316 $&@expr1073762317 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1596 $; $db@var1596 $=@expr1073762319 $getSymbolDB_inner $(@expr1073762320 $tokenizer@var1595 $, "class Base {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" $, $"test.cpp" $) $; $if $(@expr1073762321 $!@expr1073762322 $assert_ $(@expr1073762323 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5337 $, $db@var1596 $) $) { $return $; } $do ${ $} $while $(@expr1073762324 $false $)
5338:
|
5341:
5342: ;
5343: $if $(@expr1073762325 $!@expr1073762326 $assert_ $(@expr1073762327 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5343 $, db@var1596 &&@expr1073762328 db@var1596 .@expr20505 findScopeByName (@expr20506 "Deri" ) &&@expr1073762331 db@var1596 .@expr20505 findScopeByName (@expr20506 "Deri" ) .@expr1073762334 functionList .@expr1073762335 front (@expr1073762336 ) .@expr1073762337 isImplicitlyVirtual (@expr1073762338 ) $) $) { $return ; }
5344: }
5345: {
5346: $Tokenizer $tokenizer@var1597 $(@expr1073762339 $&@expr1073762340 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1598 $; $db@var1598 $=@expr1073762341 $getSymbolDB_inner $(@expr1073762342 $tokenizer@var1597 $, "class Base {\n    virtual void foo() {}\n};\nclass Deri1 : Base {\n    void foo() {}\n};\nclass Deri2 : Deri1 {\n    void foo() {}\n};" $, $"test.cpp" $) $; $if $(@expr1073762343 $!@expr1073762344 $assert_ $(@expr1073762345 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5346 $, $db@var1598 $) $) { $return $; } $do ${ $} $while $(@expr1073762346 $false $)
5347:
|
5353:
5354: ;
5355: $if $(@expr1073762347 $!@expr1073762348 $assert_ $(@expr1073762349 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5355 $, db@var1598 &&@expr1073762350 db@var1598 .@expr20527 findScopeByName (@expr20528 "Deri2" ) &&@expr1073762353 db@var1598 .@expr20527 findScopeByName (@expr20528 "Deri2" ) .@expr1073762356 functionList .@expr1073762357 front (@expr1073762358 ) .@expr1073762359 isImplicitlyVirtual (@expr1073762360 ) $) $) { $return ; }
5356: }
5357: {
5358: $Tokenizer $tokenizer@var1599 $(@expr1073762361 $&@expr1073762362 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1600 $; $db@var1600 $=@expr1073762363 $getSymbolDB_inner $(@expr1073762364 $tokenizer@var1599 $, "class Base {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" $, $"test.cpp" $) $; $if $(@expr1073762365 $!@expr1073762366 $assert_ $(@expr1073762367 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5358 $, $db@var1600 $) $) { $return $; } $do ${ $} $while $(@expr1073762368 $false $)
5359:
|
5362:
5363: ;
5364: $if $(@expr1073762369 $!@expr1073762370 $assert_ $(@expr1073762371 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5364 $, db@var1600 &&@expr1073762372 db@var1600 .@expr20549 findScopeByName (@expr20550 "Deri" ) &&@expr1073762375 !@expr1073762376 db@var1600 .@expr20549 findScopeByName (@expr20550 "Deri" ) .@expr1073762379 functionList .@expr1073762380 front (@expr1073762381 ) .@expr1073762382 isImplicitlyVirtual (@expr1073762383 true ) $) $) { $return ; }
5365: }
5366: {
5367: $Tokenizer $tokenizer@var1601 $(@expr1073762384 $&@expr1073762385 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1602 $; $db@var1602 $=@expr1073762386 $getSymbolDB_inner $(@expr1073762387 $tokenizer@var1601 $, "class Base {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo(std::string& s) {}\n};" $, $"test.cpp" $) $; $if $(@expr1073762388 $!@expr1073762389 $assert_ $(@expr1073762390 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5367 $, $db@var1602 $) $) { $return $; } $do ${ $} $while $(@expr1073762391 $false $)
5368:
|
5371:
5372: ;
5373: $if $(@expr1073762392 $!@expr1073762393 $assert_ $(@expr1073762394 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5373 $, db@var1602 &&@expr1073762395 db@var1602 .@expr20572 findScopeByName (@expr20573 "Deri" ) &&@expr1073762398 !@expr1073762399 db@var1602 .@expr20572 findScopeByName (@expr20573 "Deri" ) .@expr1073762402 functionList .@expr1073762403 front (@expr1073762404 ) .@expr1073762405 isImplicitlyVirtual (@expr1073762406 true ) $) $) { $return ; }
5374: }
5375: {
5376: $Tokenizer $tokenizer@var1603 $(@expr1073762407 $&@expr1073762408 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1604 $; $db@var1604 $=@expr1073762409 $getSymbolDB_inner $(@expr1073762410 $tokenizer@var1603 $, "class Base {\n    virtual void foo() {}\n};\nclass Deri1 : Base {\n    void foo(int i) {}\n};\nclass Deri2 : Deri1 {\n    void foo() {}\n};" $, $"test.cpp" $) $; $if $(@expr1073762411 $!@expr1073762412 $assert_ $(@expr1073762413 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5376 $, $db@var1604 $) $) { $return $; } $do ${ $} $while $(@expr1073762414 $false $)
5377:
|
5383:
5384: ;
5385: $if $(@expr1073762415 $!@expr1073762416 $assert_ $(@expr1073762417 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5385 $, db@var1604 &&@expr1073762418 db@var1604 .@expr20595 findScopeByName (@expr20596 "Deri2" ) &&@expr1073762421 db@var1604 .@expr20595 findScopeByName (@expr20596 "Deri2" ) .@expr1073762424 functionList .@expr1073762425 front (@expr1073762426 ) .@expr1073762427 isImplicitlyVirtual (@expr1073762428 ) $) $) { $return ; }
5386: }
5387: {
5388: $Tokenizer $tokenizer@var1605 $(@expr1073762429 $&@expr1073762430 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1606 $; $db@var1606 $=@expr1073762431 $getSymbolDB_inner $(@expr1073762432 $tokenizer@var1605 $, "class Base : Base2 {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" $, $"test.cpp" $) $; $if $(@expr1073762433 $!@expr1073762434 $assert_ $(@expr1073762435 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5388 $, $db@var1606 $) $) { $return $; } $do ${ $} $while $(@expr1073762436 $false $)
5389:
|
5392:
5393: ;
5394: $if $(@expr1073762437 $!@expr1073762438 $assert_ $(@expr1073762439 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5394 $, db@var1606 &&@expr1073762440 db@var1606 .@expr20617 findScopeByName (@expr20618 "Deri" ) &&@expr1073762443 db@var1606 .@expr20617 findScopeByName (@expr20618 "Deri" ) .@expr1073762446 functionList .@expr1073762447 front (@expr1073762448 ) .@expr1073762449 isImplicitlyVirtual (@expr1073762450 true ) $) $) { $return ; }
5395: }
5396: {
5397: $Tokenizer $tokenizer@var1607 $(@expr1073762451 $&@expr1073762452 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1608 $; $db@var1608 $=@expr1073762453 $getSymbolDB_inner $(@expr1073762454 $tokenizer@var1607 $, "class Base : Base2 {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" $, $"test.cpp" $) $; $if $(@expr1073762455 $!@expr1073762456 $assert_ $(@expr1073762457 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5397 $, $db@var1608 $) $) { $return $; } $do ${ $} $while $(@expr1073762458 $false $)
5398:
|
5401:
5402: ;
5403: $if $(@expr1073762459 $!@expr1073762460 $assert_ $(@expr1073762461 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5403 $, db@var1608 &&@expr1073762462 db@var1608 .@expr20639 findScopeByName (@expr20640 "Deri" ) &&@expr1073762465 !@expr1073762466 db@var1608 .@expr20639 findScopeByName (@expr20640 "Deri" ) .@expr1073762469 functionList .@expr1073762470 front (@expr1073762471 ) .@expr1073762472 isImplicitlyVirtual (@expr1073762473 false ) $) $) { $return ; }
5404: }
5405: {
5406: $Tokenizer $tokenizer@var1609 $(@expr1073762474 $&@expr1073762475 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1610 $; $db@var1610 $=@expr1073762476 $getSymbolDB_inner $(@expr1073762477 $tokenizer@var1609 $, "class Base : Base2 {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" $, $"test.cpp" $) $; $if $(@expr1073762478 $!@expr1073762479 $assert_ $(@expr1073762480 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5406 $, $db@var1610 $) $) { $return $; } $do ${ $} $while $(@expr1073762481 $false $)
5407:
|
5410:
5411: ;
5412: $if $(@expr1073762482 $!@expr1073762483 $assert_ $(@expr1073762484 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5412 $, db@var1610 &&@expr1073762485 db@var1610 .@expr20662 findScopeByName (@expr20663 "Deri" ) &&@expr1073762488 db@var1610 .@expr20662 findScopeByName (@expr20663 "Deri" ) .@expr1073762491 functionList .@expr1073762492 front (@expr1073762493 ) .@expr1073762494 isImplicitlyVirtual (@expr1073762495 false ) $) $) { $return ; }
5413: }
5414:
5415: {
5416: $Tokenizer $tokenizer@var1611 $(@expr1073762496 $&@expr1073762497 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1612 $; $db@var1612 $=@expr1073762498 $getSymbolDB_inner $(@expr1073762499 $tokenizer@var1611 $, "template<>\nclass Bar<void, void> {\n};\ntemplate<typename K, typename V, int KeySize>\nclass Bar : private Bar<void, void> {\n   void foo() {\n   }\n};" $, $"test.cpp" $) $; $if $(@expr1073762500 $!@expr1073762501 $assert_ $(@expr1073762502 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5416 $, $db@var1612 $) $) { $return $; } $do ${ $} $while $(@expr1073762503 $false $)
5417:
|
5422:
5423: ;
5424: $if $(@expr1073762504 $!@expr1073762505 $assert_ $(@expr1073762506 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5424 $, db@var1612 &&@expr1073762507 db@var1612 .@expr20684 findScopeByName (@expr20685 "Bar" ) &&@expr1073762510 !@expr1073762511 db@var1612 .@expr20684 findScopeByName (@expr20685 "Bar" ) .@expr20690 functionList .@expr1073762515 empty (@expr1073762516 ) &&@expr1073762517 !@expr1073762518 db@var1612 .@expr20684 findScopeByName (@expr20685 "Bar" ) .@expr20690 functionList .@expr1073762522 front (@expr1073762523 ) .@expr1073762524 isImplicitlyVirtual (@expr1073762525 false ) $) $) { $return ; }
5425: $if $(@expr1073762526 $!@expr1073762527 $assertEquals $(@expr1073762528 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5425 $, 1 $, db@var1612 .@expr20684 findScopeByName (@expr20685 "Bar" ) .@expr20690 functionList .@expr1073762532 size (@expr1073762533 ) $) $) { $return ; }
5426: }
5427:
5428:
5429: {
5430: $Tokenizer $tokenizer@var1613 $(@expr1073762534 $&@expr1073762535 $settings1@var123 $, $this@expr20494 $) $; $const $SymbolDatabase $* $db@var1614 $; $db@var1614 $=@expr1073762536 $getSymbolDB_inner $(@expr1073762537 $tokenizer@var1613 $, "class InfiniteB : InfiniteA {\n    class D {\n    };\n};\nnamespace N {\n    class InfiniteA : InfiniteB {\n    };\n}\nclass InfiniteA : InfiniteB {\n    void foo();\n};\nvoid InfiniteA::foo() {\n    C a;\n}" $, $"test.cpp" $) $; $if $(@expr1073762538 $!@expr1073762539 $assert_ $(@expr1073762540 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5430 $, $db@var1614 $) $) { $return $; } $do ${ $} $while $(@expr1073762541 $false $)
5431:
|
5442:
5443: ;
5444:
5445: $todoAssertEquals $(@expr1073762542 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5445 $, 1 $, 0 $, db@var1614 .@expr1073762543 findScopeByName (@expr1073762544 "InfiniteA" ) .@expr1073762545 functionList .@expr1073762546 size (@expr1073762547 ) $) ;
5446: }
5447: }
5448:
5449: void isPure ( ) {
5450: $Tokenizer $tokenizer@var1615 $(@expr1073762548 $&@expr1073762549 $settings1@var123 $, $this@expr1073762550 $) $; $const $SymbolDatabase $* $db@var1616 $; $db@var1616 $=@expr1073762551 $getSymbolDB_inner $(@expr1073762552 $tokenizer@var1615 $, "class C {\n    void f() = 0;\n    C(B b) = 0;\n    C(C& c) = default;    void g();\n};" $, $"test.cpp" $) $; $if $(@expr1073762553 $!@expr1073762554 $assert_ $(@expr1073762555 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5450 $, $db@var1616 $) $) { $return $; } $do ${ $} $while $(@expr1073762556 $false $)
5451:
|
5454:
5455: ;
5456: $if $(@expr1073762557 $!@expr1073762558 $assert_ $(@expr1073762559 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5456 $, db@var1616 &&@expr1073762560 db@var1616 .@expr20737 scopeList@var1617 .@expr20738 back (@expr20739 ) .@expr20740 functionList .@expr1073762565 size (@expr1073762566 ) ==@expr1073762567 4 $) $) { $return ; }
5457: std ::@expr1073762568 list < Function > ::@expr1073762569 const_iterator it@var1618 ; it@var1618 =@expr1073762570 db@var1616 .@expr20737 scopeList@var1617 .@expr20738 back (@expr20739 ) .@expr20740 functionList .@expr1073762575 begin (@expr1073762576 ) ;
5458: $if $(@expr1073762577 $!@expr1073762578 $assert_ $(@expr1073762579 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5458 $, (@expr1073762580 it@var1618 ++@expr1073762581 ) .@expr1073762582 isPure (@expr1073762583 ) $) $) { $return ; }
5459: $if $(@expr1073762584 $!@expr1073762585 $assert_ $(@expr1073762586 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5459 $, (@expr1073762587 it@var1618 ++@expr1073762588 ) .@expr1073762589 isPure (@expr1073762590 ) $) $) { $return ; }
5460: $if $(@expr1073762591 $!@expr1073762592 $assert_ $(@expr1073762593 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5460 $, !@expr1073762594 (@expr1073762595 it@var1618 ++@expr1073762596 ) .@expr1073762597 isPure (@expr1073762598 ) $) $) { $return ; }
5461: $if $(@expr1073762599 $!@expr1073762600 $assert_ $(@expr1073762601 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5461 $, !@expr1073762602 (@expr1073762603 it@var1618 ++@expr1073762604 ) .@expr1073762605 isPure (@expr1073762606 ) $) $) { $return ; }
5462: }
5463:
5464: void isFunction1 ( ) {
5465: $Tokenizer $tokenizer@var1619 $(@expr1073762607 $&@expr1073762608 $settings1@var123 $, $this@expr1073762609 $) $; $const $SymbolDatabase $* $db@var1620 $; $db@var1620 $=@expr1073762610 $getSymbolDB_inner $(@expr1073762611 $tokenizer@var1619 $, "TEST(a,b) {\n  std::vector<int> messages;\n  foo(messages[2].size());\n}" $, $"test.cpp" $) $; $if $(@expr1073762612 $!@expr1073762613 $assert_ $(@expr1073762614 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5465 $, $db@var1620 $) $) { $return $; } $do ${ $} $while $(@expr1073762615 $false $)
5466:
5467:
5468: ;
5469: const Variable * const var@var1621 ; var@var1621 =@expr1073762616 db@var1620 ?@expr1073762617 db@var1620 .@expr1073762618 getVariableFromVarId (@expr1073762619 1U ) :@expr1073762620 nullptr ;
5470: $if $(@expr1073762621 $!@expr1073762622 $assert_ $(@expr1073762623 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5470 $, db@var1620 &&@expr1073762624 db@var1620 .@expr1073762625 findScopeByName (@expr1073762626 "TEST" ) &&@expr1073762627 var@var1621 &&@expr1073762628 var@var1621 .@expr20805 typeStartToken (@expr20806 ) &&@expr1073762631 var@var1621 .@expr20805 typeStartToken (@expr20806 ) .@expr1073762634 str (@expr1073762635 ) ==@expr1073762636 "std" $) $) { $return
5471:
5472:
5473:
5474: ; }
5475: }
5476:
5477: void isFunction2 ( ) {
5478: $Tokenizer $tokenizer@var1622 $(@expr1073762637 $&@expr1073762638 $settings1@var123 $, $this@expr1073762639 $) $; $const $SymbolDatabase $* $db@var1623 $; $db@var1623 $=@expr1073762640 $getSymbolDB_inner $(@expr1073762641 $tokenizer@var1622 $, "void set_cur_cpu_spec()\n{\n    t = PTRRELOC(t);\n}\n\ncpu_spec * __init setup_cpu_spec()\n{\n    t = PTRRELOC(t);\n    *PTRRELOC(&x) = &y;\n}" $, $"test.cpp" $) $; $if $(@expr1073762642 $!@expr1073762643 $assert_ $(@expr1073762644 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5478 $, $db@var1623 $) $) { $return $; } $do ${ $} $while $(@expr1073762645 $false $)
5479:
|
5486:
5487: ;
5488: $if $(@expr1073762646 $!@expr1073762647 $assert_ $(@expr1073762648 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5488 $, db@var1623 !=@expr1073762649 nullptr $) $) { $return ; }
5489: $if $(@expr1073762650 $!@expr1073762651 $assert_ $(@expr1073762652 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5489 $, $(@expr1073762653 db@var1623 &&@expr1073762654 !@expr1073762655 db@var1623 .@expr1073762656 isFunction (@expr1073762657 Token ::@expr1073762658 findsimplematch (@expr1073762659 tokenizer@var1622 .@expr1073762660 tokens (@expr1073762661 ) , "PTRRELOC ( &" ) , &@expr1073762662 db@var1623 .@expr1073762663 scopeList@var1624 .@expr1073762664 back (@expr1073762665 ) , nullptr , nullptr , nullptr ) $) $) $) { $return ; }
5490: $if $(@expr1073762666 $!@expr1073762667 $assert_ $(@expr1073762668 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5490 $, db@var1623 .@expr20845 findScopeByName (@expr1073762670 "set_cur_cpu_spec" ) !=@expr1073762671 nullptr $) $) { $return ; }
5491: $if $(@expr1073762672 $!@expr1073762673 $assert_ $(@expr1073762674 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5491 $, db@var1623 .@expr20845 findScopeByName (@expr1073762676 "setup_cpu_spec" ) !=@expr1073762677 nullptr $) $) { $return ; }
5492: $if $(@expr1073762678 $!@expr1073762679 $assert_ $(@expr1073762680 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5492 $, db@var1623 .@expr20845 findScopeByName (@expr1073762682 "PTRRELOC" ) ==@expr1073762683 nullptr $) $) { $return ; }
5493: }
5494:
5495:
5496: void findFunction1 ( ) {
5497: $Tokenizer $tokenizer@var1625 $(@expr1073762685 $&@expr1073762686 $settings1@var123 $, $this@expr1073762687 $) $; $const $SymbolDatabase $* $db@var1626 $; $db@var1626 $=@expr1073762688 $getSymbolDB_inner $(@expr1073762689 $tokenizer@var1625 $, "int foo(int x);\nvoid foo();\nvoid bar() {\n    foo();\n    foo(1);\n}" $, $"test.cpp" $) $; $if $(@expr1073762690 $!@expr1073762691 $assert_ $(@expr1073762692 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5497 $, $db@var1626 $) $) { $return $; } $do ${ $} $while $(@expr1073762693 $false $)
5498:
|
5501:
5502: ;
5503: $if $(@expr1073762694 $!@expr1073762695 $assertEquals $(@expr1073762696 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5503 $, "" $, errout@var100 .@expr1073762697 str (@expr1073762698 ) $) $) { $return ; }
5504: $if $(@expr1073762699 $!@expr1073762700 $assert_ $(@expr1073762701 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5504 $, db@var1626 $) $) { $return ; }
5505: const Scope * bar@var1627 ; bar@var1627 =@expr1073762702 db@var1626 .@expr1073762703 findScopeByName (@expr1073762704 "bar" ) ;
5506: $if $(@expr1073762705 $!@expr1073762706 $assert_ $(@expr1073762707 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5506 $, bar@var1627 !=@expr1073762708 nullptr $) $) { $return ; }
5507: const unsigned int linenrs@var1628 [@expr1073762709 2 ] =@expr1073762710 {@expr1073762711 2 , 1 } ;
5508: unsigned int index@var1629 ; index@var1629 =@expr1073762712 0 ;
5509: for (@expr1073762713 const Token *@expr1073762714 tok@var1630 =@expr1073762715 bar@var1627 .@expr1073762716 bodyStart@var1631 .@expr1073762717 next (@expr1073762718 ) ; tok@var1630 !=@expr1073762719 bar@var1627 .@expr1073762720 bodyEnd@var1632 ; tok@var1630 =@expr1073762721 tok@var1630 .@expr1073762722 next (@expr1073762723 ) ) {
5510: if (@expr1073762724 Token ::@expr1073762725 Match (@expr1073762726 tok@var1630 , "%name% (" ) &&@expr1073762727 !@expr1073762728 tok@var1630 .@expr1073762729 varId (@expr1073762730 ) &&@expr1073762731 Token ::@expr1073762732 simpleMatch (@expr1073762733 tok@var1630 .@expr1073762734 linkAt (@expr1073762735 1 ) , ") ;" ) ) {
5511: const Function * function@var1633 ; function@var1633 =@expr1073762736 db@var1626 .@expr1073762737 findFunction (@expr1073762738 tok@var1630 ) ;
5512: $if $(@expr1073762739 $!@expr1073762740 $assert_ $(@expr1073762741 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5512 $, function@var1633 !=@expr1073762742 nullptr $) $) { $return ; }
5513: if (@expr1073762743 function@var1633 ) {
5514: std ::@expr1073762744 stringstream expected@var1634 ;
5515: expected@var1634 <<@expr1073762745 "Function call on line " <<@expr1073762746 tok@var1630 .@expr20923 linenr (@expr20924 ) <<@expr1073762749 " calls function on line " <<@expr1073762750 linenrs@var1628 [@expr1073762751 index@var1629 ] <<@expr1073762752 std ::@expr20929 endl@expr20860 ;
5516: std ::@expr1073762754 stringstream actual@var1635 ;
5517: actual@var1635 <<@expr1073762755 "Function call on line " <<@expr1073762756 tok@var1630 .@expr20923 linenr (@expr20924 ) <<@expr1073762759 " calls function on line " <<@expr1073762760 function@var1633 .@expr1073762761 tokenDef@var1636 .@expr1073762762 linenr (@expr1073762763 ) <<@expr1073762764 std ::@expr20929 endl@expr20860 ;
5518: $if $(@expr1073762766 $!@expr1073762767 $assertEquals $(@expr1073762768 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5518 $, expected@var1634 .@expr1073762769 str (@expr1073762770 ) $, actual@var1635 .@expr1073762771 str (@expr1073762772 ) $) $) { $return ; }
5519: }
5520: index@var1629 ++@expr1073762773 ;
5521: }
5522: }
5523: }
5524:
5525: void findFunction2 ( ) {
5526:
5527: $Tokenizer $tokenizer@var1637 $(@expr1073762774 $&@expr1073762775 $settings1@var123 $, $this@expr1073762776 $) $; $const $SymbolDatabase $* $db@var1638 $; $db@var1638 $=@expr1073762777 $getSymbolDB_inner $(@expr1073762778 $tokenizer@var1637 $, "void func(const int x, const Fred &fred);\nvoid otherfunc() {\n    float t;\n    func(x, &t);\n}" $, $"test.cpp" $) $; $if $(@expr1073762779 $!@expr1073762780 $assert_ $(@expr1073762781 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5527 $, $db@var1638 $) $) { $return $; } $do ${ $} $while $(@expr1073762782 $false $)
5528:
5529:
5530:
5531: ;
5532: const Token * callfunc@var1639 ; callfunc@var1639 =@expr1073762783 Token ::@expr1073762784 findsimplematch (@expr1073762785 tokenizer@var1637 .@expr1073762786 tokens (@expr1073762787 ) , "func ( x , & t ) ;" ) ;
5533: $if $(@expr1073762788 $!@expr1073762789 $assertEquals $(@expr1073762790 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5533 $, "" $, errout@var100 .@expr1073762791 str (@expr1073762792 ) $) $) { $return ; }
5534: $if $(@expr1073762793 $!@expr1073762794 $assertEquals $(@expr1073762795 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5534 $, true $, db@var1638 !=@expr1073762796 nullptr $) $) { $return ; }
5535: $if $(@expr1073762797 $!@expr1073762798 $assertEquals $(@expr1073762799 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5535 $, true $, callfunc@var1639 !=@expr1073762800 nullptr $) $) { $return ; }
5536: $if $(@expr1073762801 $!@expr1073762802 $assertEquals $(@expr1073762803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5536 $, false $, callfunc@var1639 &&@expr1073762804 callfunc@var1639 .@expr1073762805 function (@expr1073762806 ) $) $) { $return ; }
5537: }
5538:
5539: void findFunction3 ( ) {
5540: $Tokenizer $tokenizer@var1640 $(@expr1073762807 $&@expr1073762808 $settings1@var123 $, $this@expr1073762809 $) $; $const $SymbolDatabase $* $db@var1641 $; $db@var1641 $=@expr1073762810 $getSymbolDB_inner $(@expr1073762811 $tokenizer@var1640 $, "struct base { void foo() { } };\nstruct derived : public base { void foo() { } };\nvoid foo() {\n    derived d;\n    d.foo();\n}" $, $"test.cpp" $) $; $if $(@expr1073762812 $!@expr1073762813 $assert_ $(@expr1073762814 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5540 $, $db@var1641 $) $) { $return $; } $do ${ $} $while $(@expr1073762815 $false $)
5541:
|
5544:
5545: ;
5546:
5547: const Token * callfunc@var1642 ; callfunc@var1642 =@expr1073762816 Token ::@expr1073762817 findsimplematch (@expr1073762818 tokenizer@var1640 .@expr1073762819 tokens (@expr1073762820 ) , "d . foo ( ) ;" ) ;
5548: $if $(@expr1073762821 $!@expr1073762822 $assertEquals $(@expr1073762823 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5548 $, "" $, errout@var100 .@expr1073762824 str (@expr1073762825 ) $) $) { $return ; }
5549: $if $(@expr1073762826 $!@expr1073762827 $assertEquals $(@expr1073762828 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5549 $, true $, db@var1641 !=@expr1073762829 nullptr $) $) { $return ; }
5550: $if $(@expr1073762830 $!@expr1073762831 $assertEquals $(@expr1073762832 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5550 $, true $, callfunc@var1642 !=@expr1073762833 nullptr $) $) { $return ; }
5551: $if $(@expr1073762834 $!@expr1073762835 $assertEquals $(@expr1073762836 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5551 $, true $, callfunc@var1642 &&@expr1073762837 callfunc@var1642 .@expr21014 tokAt (@expr21015 2 ) .@expr21016 function (@expr21017 ) &&@expr1073762842 callfunc@var1642 .@expr21014 tokAt (@expr21015 2 ) .@expr21016 function (@expr21017 ) .@expr1073762847 tokenDef .@expr1073762848 linenr (@expr1073762849 ) ==@expr1073762850 2 $) $) { $return ; }
5552: }
5553:
5554: void findFunction4 ( ) {
5555: $Tokenizer $tokenizer@var1643 $(@expr1073762851 $&@expr1073762852 $settings1@var123 $, $this@expr1073762853 $) $; $const $SymbolDatabase $* $db@var1644 $; $db@var1644 $=@expr1073762854 $getSymbolDB_inner $(@expr1073762855 $tokenizer@var1643 $, "void foo(UNKNOWN) { }\nvoid foo(int a) { }\nvoid foo(unsigned int a) { }\nvoid foo(unsigned long a) { }\nvoid foo(unsigned long long a) { }\nvoid foo(float a) { }\nvoid foo(double a) { }\nvoid foo(long double a) { }\nint i;\nunsigned int ui;\nunsigned long ul;\nunsigned long long ull;\nfloat f;\ndouble d;\nlong double ld;\nint & ri = i;\nunsigned int & rui = ui;\nunsigned long & rul = ul;\nunsigned long long & rull = ull;\nfloat & rf = f;\ndouble & rd = d;\nlong double & rld = ld;\nconst int & cri = i;\nconst unsigned int & crui = ui;\nconst unsigned long & crul = ul;\nconst unsigned long long & crull = ull;\nconst float & crf = f;\nconst double & crd = d;\nconst long double & crld = ld;\nvoid foo() {\n    foo(1);\n    foo(1U);\n    foo(1UL);\n    foo(1ULL);\n    foo(1.0F);\n    foo(1.0);\n    foo(1.0L);\n    foo(i);\n    foo(ui);\n    foo(ul);\n    foo(ull);\n    foo(f);\n    foo(d);\n    foo(ld);\n    foo(ri);\n    foo(rui);\n    foo(rul);\n    foo(rull);\n    foo(rf);\n    foo(rd);\n    foo(rld);\n    foo(cri);\n    foo(crui);\n    foo(crul);\n    foo(crull);\n    foo(crf);\n    foo(crd);\n    foo(crld);\n}" $, $"test.cpp" $) $; $if $(@expr1073762856 $!@expr1073762857 $assert_ $(@expr1073762858 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5555 $, $db@var1644 $) $) { $return $; } $do ${ $} $while $(@expr1073762859 $false $)
5556:
|
5612:
5613: ;
5614:
5615: $if $(@expr1073762860 $!@expr1073762861 $assertEquals $(@expr1073762862 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5615 $, "" $, errout@var100 .@expr1073762863 str (@expr1073762864 ) $) $) { $return ; }
5616:
5617: const Token * f@var1645 ; f@var1645 =@expr1073762865 Token ::@expr21042 findsimplematch (@expr1073762867 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( 1 ) ;" ) ;
5618: $if $(@expr1073762870 $!@expr1073762871 $assertEquals $(@expr1073762872 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5618 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21053 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21059 2 $) $) { $return ; }
5619:
5620: f@var1645 =@expr1073762884 Token ::@expr21042 findsimplematch (@expr1073762886 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( 1U ) ;" ) ;
5621: $if $(@expr1073762889 $!@expr1073762890 $assertEquals $(@expr1073762891 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5621 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21072 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21078 3 $) $) { $return ; }
5622:
5623: f@var1645 =@expr1073762903 Token ::@expr21042 findsimplematch (@expr1073762905 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( 1UL ) ;" ) ;
5624: $if $(@expr1073762908 $!@expr1073762909 $assertEquals $(@expr1073762910 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5624 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21091 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21097 4 $) $) { $return ; }
5625:
5626: f@var1645 =@expr1073762922 Token ::@expr21042 findsimplematch (@expr1073762924 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( 1ULL ) ;" ) ;
5627: $if $(@expr1073762927 $!@expr1073762928 $assertEquals $(@expr1073762929 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5627 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21110 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21116 5 $) $) { $return ; }
5628:
5629: f@var1645 =@expr1073762941 Token ::@expr21042 findsimplematch (@expr1073762943 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( 1.0F ) ;" ) ;
5630: $if $(@expr1073762946 $!@expr1073762947 $assertEquals $(@expr1073762948 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5630 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21129 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21135 6 $) $) { $return ; }
5631:
5632: f@var1645 =@expr1073762960 Token ::@expr21042 findsimplematch (@expr1073762962 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( 1.0 ) ;" ) ;
5633: $if $(@expr1073762965 $!@expr1073762966 $assertEquals $(@expr1073762967 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5633 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21148 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21154 7 $) $) { $return ; }
5634:
5635: f@var1645 =@expr1073762979 Token ::@expr21042 findsimplematch (@expr1073762981 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( 1.0L ) ;" ) ;
5636: $if $(@expr1073762984 $!@expr1073762985 $assertEquals $(@expr1073762986 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5636 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21167 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21173 8 $) $) { $return ; }
5637:
5638: f@var1645 =@expr1073762998 Token ::@expr21042 findsimplematch (@expr1073763000 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( i ) ;" ) ;
5639: $if $(@expr1073763003 $!@expr1073763004 $assertEquals $(@expr1073763005 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5639 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21053 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21059 2 $) $) { $return ; }
5640:
5641: f@var1645 =@expr1073763017 Token ::@expr21042 findsimplematch (@expr1073763019 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( ui ) ;" ) ;
5642: $if $(@expr1073763022 $!@expr1073763023 $assertEquals $(@expr1073763024 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5642 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21072 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21078 3 $) $) { $return ; }
5643:
5644: f@var1645 =@expr1073763036 Token ::@expr21042 findsimplematch (@expr1073763038 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( ul ) ;" ) ;
5645: $if $(@expr1073763041 $!@expr1073763042 $assertEquals $(@expr1073763043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5645 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21091 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21097 4 $) $) { $return ; }
5646:
5647: f@var1645 =@expr1073763055 Token ::@expr21042 findsimplematch (@expr1073763057 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( ull ) ;" ) ;
5648: $if $(@expr1073763060 $!@expr1073763061 $assertEquals $(@expr1073763062 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5648 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21110 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21116 5 $) $) { $return ; }
5649:
5650: f@var1645 =@expr1073763074 Token ::@expr21042 findsimplematch (@expr1073763076 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( f ) ;" ) ;
5651: $if $(@expr1073763079 $!@expr1073763080 $assertEquals $(@expr1073763081 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5651 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21129 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21135 6 $) $) { $return ; }
5652:
5653: f@var1645 =@expr1073763093 Token ::@expr21042 findsimplematch (@expr1073763095 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( d ) ;" ) ;
5654: $if $(@expr1073763098 $!@expr1073763099 $assertEquals $(@expr1073763100 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5654 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21148 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21154 7 $) $) { $return ; }
5655:
5656: f@var1645 =@expr1073763112 Token ::@expr21042 findsimplematch (@expr1073763114 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( ld ) ;" ) ;
5657: $if $(@expr1073763117 $!@expr1073763118 $assertEquals $(@expr1073763119 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5657 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21167 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21173 8 $) $) { $return ; }
5658:
5659: f@var1645 =@expr1073763131 Token ::@expr21042 findsimplematch (@expr1073763133 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( ri ) ;" ) ;
5660: $if $(@expr1073763136 $!@expr1073763137 $assertEquals $(@expr1073763138 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5660 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21053 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21059 2 $) $) { $return ; }
5661:
5662: f@var1645 =@expr1073763150 Token ::@expr21042 findsimplematch (@expr1073763152 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( rui ) ;" ) ;
5663: $if $(@expr1073763155 $!@expr1073763156 $assertEquals $(@expr1073763157 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5663 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21072 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21078 3 $) $) { $return ; }
5664:
5665: f@var1645 =@expr1073763169 Token ::@expr21042 findsimplematch (@expr1073763171 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( rul ) ;" ) ;
5666: $if $(@expr1073763174 $!@expr1073763175 $assertEquals $(@expr1073763176 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5666 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21091 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21097 4 $) $) { $return ; }
5667:
5668: f@var1645 =@expr1073763188 Token ::@expr21042 findsimplematch (@expr1073763190 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( rull ) ;" ) ;
5669: $if $(@expr1073763193 $!@expr1073763194 $assertEquals $(@expr1073763195 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5669 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21110 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21116 5 $) $) { $return ; }
5670:
5671: f@var1645 =@expr1073763207 Token ::@expr21042 findsimplematch (@expr1073763209 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( rf ) ;" ) ;
5672: $if $(@expr1073763212 $!@expr1073763213 $assertEquals $(@expr1073763214 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5672 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21129 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21135 6 $) $) { $return ; }
5673:
5674: f@var1645 =@expr1073763226 Token ::@expr21042 findsimplematch (@expr1073763228 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( rd ) ;" ) ;
5675: $if $(@expr1073763231 $!@expr1073763232 $assertEquals $(@expr1073763233 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5675 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21148 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21154 7 $) $) { $return ; }
5676:
5677: f@var1645 =@expr1073763245 Token ::@expr21042 findsimplematch (@expr1073763247 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( rld ) ;" ) ;
5678: $if $(@expr1073763250 $!@expr1073763251 $assertEquals $(@expr1073763252 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5678 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21167 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21173 8 $) $) { $return ; }
5679:
5680: f@var1645 =@expr1073763264 Token ::@expr21042 findsimplematch (@expr1073763266 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( cri ) ;" ) ;
5681: $if $(@expr1073763269 $!@expr1073763270 $assertEquals $(@expr1073763271 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5681 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21053 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21059 2 $) $) { $return ; }
5682:
5683: f@var1645 =@expr1073763283 Token ::@expr21042 findsimplematch (@expr1073763285 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( crui ) ;" ) ;
5684: $if $(@expr1073763288 $!@expr1073763289 $assertEquals $(@expr1073763290 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5684 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21072 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21078 3 $) $) { $return ; }
5685:
5686: f@var1645 =@expr1073763302 Token ::@expr21042 findsimplematch (@expr1073763304 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( crul ) ;" ) ;
5687: $if $(@expr1073763307 $!@expr1073763308 $assertEquals $(@expr1073763309 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5687 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21091 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21097 4 $) $) { $return ; }
5688:
5689: f@var1645 =@expr1073763321 Token ::@expr21042 findsimplematch (@expr1073763323 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( crull ) ;" ) ;
5690: $if $(@expr1073763326 $!@expr1073763327 $assertEquals $(@expr1073763328 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5690 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21110 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21116 5 $) $) { $return ; }
5691:
5692: f@var1645 =@expr1073763340 Token ::@expr21042 findsimplematch (@expr1073763342 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( crf ) ;" ) ;
5693: $if $(@expr1073763345 $!@expr1073763346 $assertEquals $(@expr1073763347 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5693 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21129 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21135 6 $) $) { $return ; }
5694:
5695: f@var1645 =@expr1073763359 Token ::@expr21042 findsimplematch (@expr1073763361 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( crd ) ;" ) ;
5696: $if $(@expr1073763364 $!@expr1073763365 $assertEquals $(@expr1073763366 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5696 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21148 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21154 7 $) $) { $return ; }
5697:
5698: f@var1645 =@expr1073763378 Token ::@expr21042 findsimplematch (@expr1073763380 tokenizer@var1643 .@expr21044 tokens (@expr21045 ) , "foo ( crld ) ;" ) ;
5699: $if $(@expr1073763383 $!@expr1073763384 $assertEquals $(@expr1073763385 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5699 $, true $, db@var1644 &&@expr21049 f@var1645 &&@expr21050 f@var1645 .@expr21051 function (@expr21052 ) &&@expr21167 f@var1645 .@expr21051 function (@expr21052 ) .@expr21056 tokenDef .@expr21057 linenr (@expr21058 ) ==@expr21173 8 $) $) { $return ; }
5700: }
5701:
5702: void findFunction5 ( ) {
5703: $Tokenizer $tokenizer@var1646 $(@expr1073763397 $&@expr1073763398 $settings1@var123 $, $this@expr1073763399 $) $; $const $SymbolDatabase $* $db@var1647 $; $db@var1647 $=@expr1073763400 $getSymbolDB_inner $(@expr1073763401 $tokenizer@var1646 $, "struct Fred {\n    void Sync(dsmp_t& type, int& len, int limit = 123);\n    void Sync(int& syncpos, dsmp_t& type, int& len, int limit = 123);\n    void FindSyncPoint();\n};\nvoid Fred::FindSyncPoint() {\n    dsmp_t type;\n    int syncpos, len;\n    Sync(syncpos, type, len);\n    Sync(type, len);\n}" $, $"test.cpp" $) $; $if $(@expr1073763402 $!@expr1073763403 $assert_ $(@expr1073763404 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5703 $, $db@var1647 $) $) { $return $; } $do ${ $} $while $(@expr1073763405 $false $)
5704:
|
5712:
5713: ;
5714: const Token * f@var1648 ; f@var1648 =@expr1073763406 Token ::@expr21583 findsimplematch (@expr1073763408 tokenizer@var1646 .@expr21585 tokens (@expr21586 ) , "Sync ( syncpos" ) ;
5715: $if $(@expr1073763411 $!@expr1073763412 $assertEquals $(@expr1073763413 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5715 $, true $, db@var1647 &&@expr21590 f@var1648 &&@expr21591 f@var1648 .@expr21592 function (@expr21593 ) &&@expr1073763418 f@var1648 .@expr21592 function (@expr21593 ) .@expr21597 tokenDef .@expr21598 linenr (@expr21599 ) ==@expr1073763424 3 $) $) { $return ; }
5716:
5717: f@var1648 =@expr1073763425 Token ::@expr21583 findsimplematch (@expr1073763427 tokenizer@var1646 .@expr21585 tokens (@expr21586 ) , "Sync ( type" ) ;
5718: $if $(@expr1073763430 $!@expr1073763431 $assertEquals $(@expr1073763432 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5718 $, true $, db@var1647 &&@expr21590 f@var1648 &&@expr21591 f@var1648 .@expr21592 function (@expr21593 ) &&@expr1073763437 f@var1648 .@expr21592 function (@expr21593 ) .@expr21597 tokenDef .@expr21598 linenr (@expr21599 ) ==@expr1073763443 2 $) $) { $return ; }
5719: }
5720:
5721: void findFunction6 ( ) {
5722: $Tokenizer $tokenizer@var1649 $(@expr1073763444 $&@expr1073763445 $settings1@var123 $, $this@expr1073763446 $) $; $const $SymbolDatabase $* $db@var1650 $; $db@var1650 $=@expr1073763447 $getSymbolDB_inner $(@expr1073763448 $tokenizer@var1649 $, "void addtoken(Token** rettail, const Token *tok);\nvoid CheckMemoryLeakInFunction::getcode(const Token *tok ) {\n   addtoken(&rettail, tok);\n}" $, $"test.cpp" $) $; $if $(@expr1073763449 $!@expr1073763450 $assert_ $(@expr1073763451 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5722 $, $db@var1650 $) $) { $return $; } $do ${ $} $while $(@expr1073763452 $false $)
5723:
5724:
5725: ;
5726: const Token * f@var1651 ; f@var1651 =@expr1073763453 Token ::@expr1073763454 findsimplematch (@expr1073763455 tokenizer@var1649 .@expr1073763456 tokens (@expr1073763457 ) , "void addtoken ( Token * *" ) ;
5727: $if $(@expr1073763458 $!@expr1073763459 $assertEquals $(@expr1073763460 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5727 $, true $, db@var1650 &&@expr1073763461 f@var1651 &&@expr1073763462 !@expr1073763463 f@var1651 .@expr1073763464 function (@expr1073763465 ) $) $) { $return ; }
5728: }
5729:
5730: void findFunction7 ( ) {
5731: $Tokenizer $tokenizer@var1652 $(@expr1073763466 $&@expr1073763467 $settings1@var123 $, $this@expr1073763468 $) $; $const $SymbolDatabase $* $db@var1653 $; $db@var1653 $=@expr1073763469 $getSymbolDB_inner $(@expr1073763470 $tokenizer@var1652 $, "class ResultEnsemble {\npublic:\n    std::vector<int> &nodeResults() const;\n    std::vector<int> &nodeResults();\n};\nclass Simulator {\n    int generatePinchResultEnsemble(const ResultEnsemble &power, const ResultEnsemble &ground) {\n        power.nodeResults().size();\n        assert(power.nodeResults().size()==ground.nodeResults().size());\n    }\n};" $, $"test.cpp" $) $; $if $(@expr1073763471 $!@expr1073763472 $assert_ $(@expr1073763473 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5731 $, $db@var1653 $) $) { $return $; } $do ${ $} $while $(@expr1073763474 $false $)
5732:
|
5740:
5741: ;
5742: const Token * callfunc@var1654 ; callfunc@var1654 =@expr1073763475 Token ::@expr1073763476 findsimplematch (@expr1073763477 tokenizer@var1652 .@expr1073763478 tokens (@expr1073763479 ) , "power . nodeResults ( ) . size ( ) ;" ) ;
5743: $if $(@expr1073763480 $!@expr1073763481 $assertEquals $(@expr1073763482 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5743 $, "" $, errout@var100 .@expr1073763483 str (@expr1073763484 ) $) $) { $return ; }
5744: $if $(@expr1073763485 $!@expr1073763486 $assertEquals $(@expr1073763487 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5744 $, true $, db@var1653 !=@expr1073763488 nullptr $) $) { $return ; }
5745: $if $(@expr1073763489 $!@expr1073763490 $assertEquals $(@expr1073763491 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5745 $, true $, callfunc@var1654 !=@expr1073763492 nullptr $) $) { $return ; }
5746: $if $(@expr1073763493 $!@expr1073763494 $assertEquals $(@expr1073763495 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5746 $, true $, callfunc@var1654 &&@expr1073763496 callfunc@var1654 .@expr21673 tokAt (@expr21674 2 ) .@expr21675 function (@expr21676 ) &&@expr1073763501 callfunc@var1654 .@expr21673 tokAt (@expr21674 2 ) .@expr21675 function (@expr21676 ) .@expr1073763506 tokenDef .@expr1073763507 linenr (@expr1073763508 ) ==@expr1073763509 3 $) $) { $return ; }
5747: }
5748:
5749: void findFunction8 ( ) {
5750: $Tokenizer $tokenizer@var1655 $(@expr1073763510 $&@expr1073763511 $settings1@var123 $, $this@expr1073763512 $) $; $const $SymbolDatabase $* $db@var1656 $; $db@var1656 $=@expr1073763513 $getSymbolDB_inner $(@expr1073763514 $tokenizer@var1655 $, "struct S {\n    void f()   { }\n    void f() & { }\n    void f() &&{ }\n    void f() const   { }\n    void f() const & { }\n    void f() const &&{ }\n    void g()   ;\n    void g() & ;\n    void g() &&;\n    void g() const   ;\n    void g() const & ;\n    void g() const &&;\n};\nvoid S::g()   { }\nvoid S::g() & { }\nvoid S::g() &&{ }\nvoid S::g() const   { }\nvoid S::g() const & { }\nvoid S::g() const &&{ }" $, $"test.cpp" $) $; $if $(@expr1073763515 $!@expr1073763516 $assert_ $(@expr1073763517 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5750 $, $db@var1656 $) $) { $return $; } $do ${ $} $while $(@expr1073763518 $false $)
5751:
|
5768:
5769: ;
5770: $if $(@expr1073763519 $!@expr1073763520 $assertEquals $(@expr1073763521 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5770 $, "" $, errout@var100 .@expr1073763522 str (@expr1073763523 ) $) $) { $return ; }
5771:
5772: const Token * f@var1657 ; f@var1657 =@expr1073763524 Token ::@expr21701 findsimplematch (@expr1073763526 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "f ( ) {" ) ;
5773: $if $(@expr1073763529 $!@expr1073763530 $assertEquals $(@expr1073763531 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5773 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763536 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763542 2 $) $) { $return ; }
5774:
5775: f@var1657 =@expr1073763543 Token ::@expr21701 findsimplematch (@expr1073763545 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "f ( ) & {" ) ;
5776: $if $(@expr1073763548 $!@expr1073763549 $assertEquals $(@expr1073763550 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5776 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763555 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763561 3 $) $) { $return ; }
5777:
5778: f@var1657 =@expr1073763562 Token ::@expr21701 findsimplematch (@expr1073763564 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "f ( ) && {" ) ;
5779: $if $(@expr1073763567 $!@expr1073763568 $assertEquals $(@expr1073763569 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5779 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763574 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763580 4 $) $) { $return ; }
5780:
5781: f@var1657 =@expr1073763581 Token ::@expr21701 findsimplematch (@expr1073763583 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "f ( ) const {" ) ;
5782: $if $(@expr1073763586 $!@expr1073763587 $assertEquals $(@expr1073763588 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5782 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763593 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763599 5 $) $) { $return ; }
5783:
5784: f@var1657 =@expr1073763600 Token ::@expr21701 findsimplematch (@expr1073763602 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "f ( ) const & {" ) ;
5785: $if $(@expr1073763605 $!@expr1073763606 $assertEquals $(@expr1073763607 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5785 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763612 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763618 6 $) $) { $return ; }
5786:
5787: f@var1657 =@expr1073763619 Token ::@expr21701 findsimplematch (@expr1073763621 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "f ( ) const && {" ) ;
5788: $if $(@expr1073763624 $!@expr1073763625 $assertEquals $(@expr1073763626 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5788 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763631 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763637 7 $) $) { $return ; }
5789:
5790: f@var1657 =@expr1073763638 Token ::@expr21701 findsimplematch (@expr1073763640 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "g ( ) {" ) ;
5791: $if $(@expr1073763643 $!@expr1073763644 $assertEquals $(@expr1073763645 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5791 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763650 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763656 8 &&@expr1073763657 f@var1657 .@expr21710 function (@expr21711 ) .@expr21836 token .@expr21837 linenr (@expr21838 ) ==@expr1073763663 15 $) $) { $return ; }
5792:
5793: f@var1657 =@expr1073763664 Token ::@expr21701 findsimplematch (@expr1073763666 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "g ( ) & {" ) ;
5794: $if $(@expr1073763669 $!@expr1073763670 $assertEquals $(@expr1073763671 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5794 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763676 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763682 9 &&@expr1073763683 f@var1657 .@expr21710 function (@expr21711 ) .@expr21836 token .@expr21837 linenr (@expr21838 ) ==@expr1073763689 16 $) $) { $return ; }
5795:
5796: f@var1657 =@expr1073763690 Token ::@expr21701 findsimplematch (@expr1073763692 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "g ( ) && {" ) ;
5797: $if $(@expr1073763695 $!@expr1073763696 $assertEquals $(@expr1073763697 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5797 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763702 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763708 10 &&@expr1073763709 f@var1657 .@expr21710 function (@expr21711 ) .@expr21836 token .@expr21837 linenr (@expr21838 ) ==@expr1073763715 17 $) $) { $return ; }
5798:
5799: f@var1657 =@expr1073763716 Token ::@expr21701 findsimplematch (@expr1073763718 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "g ( ) const {" ) ;
5800: $if $(@expr1073763721 $!@expr1073763722 $assertEquals $(@expr1073763723 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5800 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763728 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763734 11 &&@expr1073763735 f@var1657 .@expr21710 function (@expr21711 ) .@expr21836 token .@expr21837 linenr (@expr21838 ) ==@expr1073763741 18 $) $) { $return ; }
5801:
5802: f@var1657 =@expr1073763742 Token ::@expr21701 findsimplematch (@expr1073763744 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "g ( ) const & {" ) ;
5803: $if $(@expr1073763747 $!@expr1073763748 $assertEquals $(@expr1073763749 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5803 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763754 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763760 12 &&@expr1073763761 f@var1657 .@expr21710 function (@expr21711 ) .@expr21836 token .@expr21837 linenr (@expr21838 ) ==@expr1073763767 19 $) $) { $return ; }
5804:
5805: f@var1657 =@expr1073763768 Token ::@expr21701 findsimplematch (@expr1073763770 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "g ( ) const && {" ) ;
5806: $if $(@expr1073763773 $!@expr1073763774 $assertEquals $(@expr1073763775 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5806 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21709 f@var1657 .@expr21710 function (@expr21711 ) &&@expr1073763780 f@var1657 .@expr21710 function (@expr21711 ) .@expr21715 tokenDef .@expr21716 linenr (@expr21717 ) ==@expr1073763786 13 &&@expr1073763787 f@var1657 .@expr21710 function (@expr21711 ) .@expr21836 token .@expr21837 linenr (@expr21838 ) ==@expr1073763793 20 $) $) { $return ; }
5807:
5808: f@var1657 =@expr1073763794 Token ::@expr21701 findsimplematch (@expr1073763796 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "S :: g ( ) {" ) ;
5809: $if $(@expr1073763799 $!@expr1073763800 $assertEquals $(@expr1073763801 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5809 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21979 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) &&@expr1073763808 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21989 tokenDef .@expr21990 linenr (@expr21991 ) ==@expr1073763816 8 &&@expr1073763817 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21998 token .@expr21999 linenr (@expr22000 ) ==@expr1073763825 15 $) $) { $return ; }
5810:
5811: f@var1657 =@expr1073763826 Token ::@expr21701 findsimplematch (@expr1073763828 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "S :: g ( ) & {" ) ;
5812: $if $(@expr1073763831 $!@expr1073763832 $assertEquals $(@expr1073763833 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5812 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21979 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) &&@expr1073763840 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21989 tokenDef .@expr21990 linenr (@expr21991 ) ==@expr1073763848 9 &&@expr1073763849 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21998 token .@expr21999 linenr (@expr22000 ) ==@expr1073763857 16 $) $) { $return ; }
5813:
5814: f@var1657 =@expr1073763858 Token ::@expr21701 findsimplematch (@expr1073763860 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "S :: g ( ) && {" ) ;
5815: $if $(@expr1073763863 $!@expr1073763864 $assertEquals $(@expr1073763865 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5815 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21979 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) &&@expr1073763872 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21989 tokenDef .@expr21990 linenr (@expr21991 ) ==@expr1073763880 10 &&@expr1073763881 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21998 token .@expr21999 linenr (@expr22000 ) ==@expr1073763889 17 $) $) { $return ; }
5816:
5817: f@var1657 =@expr1073763890 Token ::@expr21701 findsimplematch (@expr1073763892 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "S :: g ( ) const {" ) ;
5818: $if $(@expr1073763895 $!@expr1073763896 $assertEquals $(@expr1073763897 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5818 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21979 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) &&@expr1073763904 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21989 tokenDef .@expr21990 linenr (@expr21991 ) ==@expr1073763912 11 &&@expr1073763913 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21998 token .@expr21999 linenr (@expr22000 ) ==@expr1073763921 18 $) $) { $return ; }
5819:
5820: f@var1657 =@expr1073763922 Token ::@expr21701 findsimplematch (@expr1073763924 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "S :: g ( ) const & {" ) ;
5821: $if $(@expr1073763927 $!@expr1073763928 $assertEquals $(@expr1073763929 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5821 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21979 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) &&@expr1073763936 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21989 tokenDef .@expr21990 linenr (@expr21991 ) ==@expr1073763944 12 &&@expr1073763945 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21998 token .@expr21999 linenr (@expr22000 ) ==@expr1073763953 19 $) $) { $return ; }
5822:
5823: f@var1657 =@expr1073763954 Token ::@expr21701 findsimplematch (@expr1073763956 tokenizer@var1655 .@expr21703 tokens (@expr21704 ) , "S :: g ( ) const && {" ) ;
5824: $if $(@expr1073763959 $!@expr1073763960 $assertEquals $(@expr1073763961 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5824 $, true $, db@var1656 &&@expr21708 f@var1657 &&@expr21979 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) &&@expr1073763968 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21989 tokenDef .@expr21990 linenr (@expr21991 ) ==@expr1073763976 13 &&@expr1073763977 f@var1657 .@expr21980 tokAt (@expr21981 2 ) .@expr21982 function (@expr21983 ) .@expr21998 token .@expr21999 linenr (@expr22000 ) ==@expr1073763985 20 $) $) { $return ; }
5825: }
5826:
5827: void findFunction9 ( ) {
5828: $Tokenizer $tokenizer@var1658 $(@expr1073763986 $&@expr1073763987 $settings1@var123 $, $this@expr1073763988 $) $; $const $SymbolDatabase $* $db@var1659 $; $db@var1659 $=@expr1073763989 $getSymbolDB_inner $(@expr1073763990 $tokenizer@var1658 $, "struct Fred {\n    void foo(const int * p);\n};\nvoid Fred::foo(const int * const p) { }" $, $"test.cpp" $) $; $if $(@expr1073763991 $!@expr1073763992 $assert_ $(@expr1073763993 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5828 $, $db@var1659 $) $) { $return $; } $do ${ $} $while $(@expr1073763994 $false $)
5829:
5830:
5831: ;
5832: $if $(@expr1073763995 $!@expr1073763996 $assertEquals $(@expr1073763997 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5832 $, "" $, errout@var100 .@expr1073763998 str (@expr1073763999 ) $) $) { $return ; }
5833:
5834: const Token * f@var1660 ; f@var1660 =@expr1073764000 Token ::@expr1073764001 findsimplematch (@expr1073764002 tokenizer@var1658 .@expr1073764003 tokens (@expr1073764004 ) , "foo ( const int * const p ) {" ) ;
5835: $if $(@expr1073764005 $!@expr1073764006 $assertEquals $(@expr1073764007 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5835 $, true $, db@var1659 &&@expr1073764008 f@var1660 &&@expr1073764009 f@var1660 .@expr22186 function (@expr22187 ) &&@expr1073764012 f@var1660 .@expr22186 function (@expr22187 ) .@expr1073764015 tokenDef .@expr1073764016 linenr (@expr1073764017 ) ==@expr1073764018 2 $) $) { $return ; }
5836: }
5837:
5838: void findFunction10 ( ) {
5839: $Tokenizer $tokenizer@var1661 $(@expr1073764019 $&@expr1073764020 $settings1@var123 $, $this@expr1073764021 $) $; $const $SymbolDatabase $* $db@var1662 $; $db@var1662 $=@expr1073764022 $getSymbolDB_inner $(@expr1073764023 $tokenizer@var1661 $, "struct Fred {\n    void foo(const int * p);\n};\nvoid Fred::foo(const int p []) { }" $, $"test.cpp" $) $; $if $(@expr1073764024 $!@expr1073764025 $assert_ $(@expr1073764026 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5839 $, $db@var1662 $) $) { $return $; } $do ${ $} $while $(@expr1073764027 $false $)
5840:
5841:
5842: ;
5843: $if $(@expr1073764028 $!@expr1073764029 $assertEquals $(@expr1073764030 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5843 $, "" $, errout@var100 .@expr1073764031 str (@expr1073764032 ) $) $) { $return ; }
5844:
5845: const Token * f@var1663 ; f@var1663 =@expr1073764033 Token ::@expr1073764034 findsimplematch (@expr1073764035 tokenizer@var1661 .@expr1073764036 tokens (@expr1073764037 ) , "foo ( const int p [ ] ) {" ) ;
5846: $if $(@expr1073764038 $!@expr1073764039 $assertEquals $(@expr1073764040 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5846 $, true $, db@var1662 &&@expr1073764041 f@var1663 &&@expr1073764042 f@var1663 .@expr22219 function (@expr22220 ) &&@expr1073764045 f@var1663 .@expr22219 function (@expr22220 ) .@expr1073764048 tokenDef .@expr1073764049 linenr (@expr1073764050 ) ==@expr1073764051 2 $) $) { $return ; }
5847: }
5848:
5849: void findFunction11 ( ) {
5850: $Tokenizer $tokenizer@var1664 $(@expr1073764052 $&@expr1073764053 $settings1@var123 $, $this@expr1073764054 $) $; $const $SymbolDatabase $* $db@var1665 $; $db@var1665 $=@expr1073764055 $getSymbolDB_inner $(@expr1073764056 $tokenizer@var1664 $, "class Fred : public QObject {\n    Q_OBJECT\nprivate slots:\n    void foo();\n};\nvoid Fred::foo() { }" $, $"test.cpp" $) $; $if $(@expr1073764057 $!@expr1073764058 $assert_ $(@expr1073764059 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5850 $, $db@var1665 $) $) { $return $; } $do ${ $} $while $(@expr1073764060 $false $)
5851:
|
5854:
5855: ;
5856: $if $(@expr1073764061 $!@expr1073764062 $assertEquals $(@expr1073764063 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5856 $, "" $, errout@var100 .@expr1073764064 str (@expr1073764065 ) $) $) { $return ; }
5857:
5858: const Token * f@var1666 ; f@var1666 =@expr1073764066 Token ::@expr1073764067 findsimplematch (@expr1073764068 tokenizer@var1664 .@expr1073764069 tokens (@expr1073764070 ) , "foo ( ) {" ) ;
5859: $if $(@expr1073764071 $!@expr1073764072 $assertEquals $(@expr1073764073 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5859 $, true $, db@var1665 &&@expr1073764074 f@var1666 &&@expr1073764075 f@var1666 .@expr22252 function (@expr22253 ) &&@expr1073764078 f@var1666 .@expr22252 function (@expr22253 ) .@expr1073764081 tokenDef .@expr1073764082 linenr (@expr1073764083 ) ==@expr1073764084 4 $) $) { $return ; }
5860: }
5861:
5862: void findFunction12 ( ) {
5863: $Tokenizer $tokenizer@var1667 $(@expr1073764085 $&@expr1073764086 $settings1@var123 $, $this@expr1073764087 $) $; $const $SymbolDatabase $* $db@var1668 $; $db@var1668 $=@expr1073764088 $getSymbolDB_inner $(@expr1073764089 $tokenizer@var1667 $, "void foo(std::string a) { }\nvoid foo(long long a) { }\nvoid func(char* cp) {\n    foo(0);\n    foo(0L);\n    foo(0.f);\n    foo(bar());\n    foo(cp);\n    foo(\"\");\n}" $, $"test.cpp" $) $; $if $(@expr1073764090 $!@expr1073764091 $assert_ $(@expr1073764092 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5863 $, $db@var1668 $) $) { $return $; } $do ${ $} $while $(@expr1073764093 $false $)
5864:
|
5871:
5872: ;
5873:
5874: $if $(@expr1073764094 $!@expr1073764095 $assertEquals $(@expr1073764096 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5874 $, "" $, errout@var100 .@expr1073764097 str (@expr1073764098 ) $) $) { $return ; }
5875:
5876: const Token * f@var1669 ; f@var1669 =@expr1073764099 Token ::@expr22276 findsimplematch (@expr1073764101 tokenizer@var1667 .@expr22278 tokens (@expr22279 ) , "foo ( 0 ) ;" ) ;
5877: $if $(@expr1073764104 $!@expr1073764105 $assertEquals $(@expr1073764106 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5877 $, true $, db@var1668 &&@expr1073764107 f@var1669 &&@expr1073764108 f@var1669 .@expr22285 function (@expr22286 ) &&@expr1073764111 f@var1669 .@expr22285 function (@expr22286 ) .@expr22290 tokenDef .@expr22291 linenr (@expr22292 ) ==@expr22293 2 $) $) { $return ; }
5878:
5879: f@var1669 =@expr1073764118 Token ::@expr22276 findsimplematch (@expr1073764120 tokenizer@var1667 .@expr22278 tokens (@expr22279 ) , "foo ( 0L ) ;" ) ;
5880: $if $(@expr1073764123 $!@expr1073764124 $assertEquals $(@expr1073764125 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5880 $, true $, f@var1669 &&@expr22302 f@var1669 .@expr22285 function (@expr22286 ) &&@expr22305 f@var1669 .@expr22285 function (@expr22286 ) .@expr22290 tokenDef .@expr22291 linenr (@expr22292 ) ==@expr22293 2 $) $) { $return ; }
5881:
5882: f@var1669 =@expr1073764136 Token ::@expr22276 findsimplematch (@expr1073764138 tokenizer@var1667 .@expr22278 tokens (@expr22279 ) , "foo ( 0.f ) ;" ) ;
5883: $if $(@expr1073764141 $!@expr1073764142 $assertEquals $(@expr1073764143 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5883 $, true $, f@var1669 &&@expr22302 f@var1669 .@expr22285 function (@expr22286 ) &&@expr22305 f@var1669 .@expr22285 function (@expr22286 ) .@expr22290 tokenDef .@expr22291 linenr (@expr22292 ) ==@expr22293 2 $) $) { $return ; }
5884:
5885: f@var1669 =@expr1073764154 Token ::@expr22276 findsimplematch (@expr1073764156 tokenizer@var1667 .@expr22278 tokens (@expr22279 ) , "foo ( bar ( ) ) ;" ) ;
5886: $if $(@expr1073764159 $!@expr1073764160 $assertEquals $(@expr1073764161 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5886 $, true $, f@var1669 &&@expr1073764162 f@var1669 .@expr22285 function (@expr22286 ) ==@expr1073764165 nullptr $) $) { $return ; }
5887:
5888: f@var1669 =@expr1073764166 Token ::@expr22276 findsimplematch (@expr1073764168 tokenizer@var1667 .@expr22278 tokens (@expr22279 ) , "foo ( cp ) ;" ) ;
5889: $if $(@expr1073764171 $!@expr1073764172 $assertEquals $(@expr1073764173 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5889 $, true $, f@var1669 &&@expr22302 f@var1669 .@expr22285 function (@expr22286 ) &&@expr22353 f@var1669 .@expr22285 function (@expr22286 ) .@expr22290 tokenDef .@expr22291 linenr (@expr22292 ) ==@expr22359 1 $) $) { $return ; }
5890:
5891: f@var1669 =@expr1073764184 Token ::@expr22276 findsimplematch (@expr1073764186 tokenizer@var1667 .@expr22278 tokens (@expr22279 ) , "foo ( \"\" ) ;" ) ;
5892: $if $(@expr1073764189 $!@expr1073764190 $assertEquals $(@expr1073764191 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5892 $, true $, f@var1669 &&@expr22302 f@var1669 .@expr22285 function (@expr22286 ) &&@expr22353 f@var1669 .@expr22285 function (@expr22286 ) .@expr22290 tokenDef .@expr22291 linenr (@expr22292 ) ==@expr22359 1 $) $) { $return ; }
5893: }
5894:
5895: void findFunction13 ( ) {
5896: $Tokenizer $tokenizer@var1670 $(@expr1073764202 $&@expr1073764203 $settings1@var123 $, $this@expr1073764204 $) $; $const $SymbolDatabase $* $db@var1671 $; $db@var1671 $=@expr1073764205 $getSymbolDB_inner $(@expr1073764206 $tokenizer@var1670 $, "void foo(std::string a) { }\nvoid foo(double a) { }\nvoid foo(long long a) { }\nvoid foo(int* a) { }\nvoid foo(void* a) { }\nvoid func(int i, const float f, int* ip, float* fp, char* cp) {\n    foo(0);\n    foo(0L);\n    foo(0.f);\n    foo(false);\n    foo(bar());\n    foo(i);\n    foo(f);\n    foo(&i);\n    foo(&f);\n    foo(ip);\n    foo(fp);\n    foo(cp);\n    foo(\"\");\n}" $, $"test.cpp" $) $; $if $(@expr1073764207 $!@expr1073764208 $assert_ $(@expr1073764209 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5896 $, $db@var1671 $) $) { $return $; } $do ${ $} $while $(@expr1073764210 $false $)
5897:
|
5914:
5915: ;
5916:
5917: $if $(@expr1073764211 $!@expr1073764212 $assertEquals $(@expr1073764213 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5917 $, "" $, errout@var100 .@expr1073764214 str (@expr1073764215 ) $) $) { $return ; }
5918:
5919: const Token * f@var1672 ; f@var1672 =@expr1073764216 Token ::@expr22393 findsimplematch (@expr1073764218 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( 0 ) ;" ) ;
5920: $if $(@expr1073764221 $!@expr1073764222 $assertEquals $(@expr1073764223 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5920 $, true $, db@var1671 &&@expr1073764224 f@var1672 &&@expr1073764225 f@var1672 .@expr22402 function (@expr22403 ) &&@expr1073764228 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22410 3 $) $) { $return ; }
5921:
5922: f@var1672 =@expr1073764235 Token ::@expr22393 findsimplematch (@expr1073764237 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( 0L ) ;" ) ;
5923: $if $(@expr1073764240 $!@expr1073764241 $assertEquals $(@expr1073764242 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5923 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22422 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22410 3 $) $) { $return ; }
5924:
5925: f@var1672 =@expr1073764253 Token ::@expr22393 findsimplematch (@expr1073764255 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( 0.f ) ;" ) ;
5926: $if $(@expr1073764258 $!@expr1073764259 $assertEquals $(@expr1073764260 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5926 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22440 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22446 2 $) $) { $return ; }
5927:
5928: f@var1672 =@expr1073764271 Token ::@expr22393 findsimplematch (@expr1073764273 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( false ) ;" ) ;
5929: $if $(@expr1073764276 $!@expr1073764277 $assertEquals $(@expr1073764278 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5929 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22422 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22410 3 $) $) { $return ; }
5930:
5931: f@var1672 =@expr1073764289 Token ::@expr22393 findsimplematch (@expr1073764291 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( bar ( ) ) ;" ) ;
5932: $if $(@expr1073764294 $!@expr1073764295 $assertEquals $(@expr1073764296 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5932 $, true $, f@var1672 &&@expr22473 f@var1672 .@expr22402 function (@expr22403 ) ==@expr22476 nullptr $) $) { $return ; }
5933:
5934: f@var1672 =@expr1073764301 Token ::@expr22393 findsimplematch (@expr1073764303 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( i ) ;" ) ;
5935: $if $(@expr1073764306 $!@expr1073764307 $assertEquals $(@expr1073764308 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5935 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22422 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22410 3 $) $) { $return ; }
5936:
5937: f@var1672 =@expr1073764319 Token ::@expr22393 findsimplematch (@expr1073764321 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( f ) ;" ) ;
5938: $if $(@expr1073764324 $!@expr1073764325 $assertEquals $(@expr1073764326 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5938 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22440 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22446 2 $) $) { $return ; }
5939:
5940: f@var1672 =@expr1073764337 Token ::@expr22393 findsimplematch (@expr1073764339 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( & i ) ;" ) ;
5941: $if $(@expr1073764342 $!@expr1073764343 $assertEquals $(@expr1073764344 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5941 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22524 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22530 4 $) $) { $return ; }
5942:
5943: f@var1672 =@expr1073764355 Token ::@expr22393 findsimplematch (@expr1073764357 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( & f ) ;" ) ;
5944: $if $(@expr1073764360 $!@expr1073764361 $assertEquals $(@expr1073764362 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5944 $, true $, f@var1672 &&@expr22473 f@var1672 .@expr22402 function (@expr22403 ) ==@expr22476 nullptr $) $) { $return ; }
5945:
5946: f@var1672 =@expr1073764367 Token ::@expr22393 findsimplematch (@expr1073764369 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( ip ) ;" ) ;
5947: $if $(@expr1073764372 $!@expr1073764373 $assertEquals $(@expr1073764374 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5947 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22524 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22530 4 $) $) { $return ; }
5948:
5949: f@var1672 =@expr1073764385 Token ::@expr22393 findsimplematch (@expr1073764387 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( fp ) ;" ) ;
5950: $if $(@expr1073764390 $!@expr1073764391 $assertEquals $(@expr1073764392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5950 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22572 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22578 5 $) $) { $return ; }
5951:
5952: f@var1672 =@expr1073764403 Token ::@expr22393 findsimplematch (@expr1073764405 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( cp ) ;" ) ;
5953: $if $(@expr1073764408 $!@expr1073764409 $assertEquals $(@expr1073764410 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5953 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr22572 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr22578 5 $) $) { $return ; }
5954:
5955: f@var1672 =@expr1073764421 Token ::@expr22393 findsimplematch (@expr1073764423 tokenizer@var1670 .@expr22395 tokens (@expr22396 ) , "foo ( \"\" ) ;" ) ;
5956: $if $(@expr1073764426 $!@expr1073764427 $assertEquals $(@expr1073764428 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5956 $, true $, f@var1672 &&@expr22419 f@var1672 .@expr22402 function (@expr22403 ) &&@expr1073764432 f@var1672 .@expr22402 function (@expr22403 ) .@expr22407 tokenDef .@expr22408 linenr (@expr22409 ) ==@expr1073764438 1 $) $) { $return ; }
5957: }
5958:
5959: void findFunction14 ( ) {
5960: $Tokenizer $tokenizer@var1673 $(@expr1073764439 $&@expr1073764440 $settings1@var123 $, $this@expr1073764441 $) $; $const $SymbolDatabase $* $db@var1674 $; $db@var1674 $=@expr1073764442 $getSymbolDB_inner $(@expr1073764443 $tokenizer@var1673 $, "void foo(int* a) { }\nvoid foo(const int* a) { }\nvoid foo(void* a) { }\nvoid foo(const float a) { }\nvoid foo(bool a) { }\nvoid foo2(Foo* a) { }\nvoid foo2(Foo a) { }\nvoid func(int* ip, const int* cip, const char* ccp, char* cp, float f, bool b) {\n    foo(ip);\n    foo(cip);\n    foo(cp);\n    foo(ccp);\n    foo(f);\n    foo(b);\n    foo2(0);\n    foo2(nullptr);\n    foo2(NULL);\n}" $, $"test.cpp" $) $; $if $(@expr1073764444 $!@expr1073764445 $assert_ $(@expr1073764446 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5960 $, $db@var1674 $) $) { $return $; } $do ${ $} $while $(@expr1073764447 $false $)
5961:
|
5976:
5977: ;
5978:
5979: $if $(@expr1073764448 $!@expr1073764449 $assertEquals $(@expr1073764450 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5979 $, "" $, errout@var100 .@expr1073764451 str (@expr1073764452 ) $) $) { $return ; }
5980:
5981: const Token * f@var1675 ; f@var1675 =@expr1073764453 Token ::@expr22630 findsimplematch (@expr1073764455 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo ( ip ) ;" ) ;
5982: $if $(@expr1073764458 $!@expr1073764459 $assertEquals $(@expr1073764460 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5982 $, true $, db@var1674 &&@expr1073764461 f@var1675 &&@expr1073764462 f@var1675 .@expr22639 function (@expr22640 ) &&@expr1073764465 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr1073764471 1 $) $) { $return ; }
5983:
5984: f@var1675 =@expr1073764472 Token ::@expr22630 findsimplematch (@expr1073764474 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo ( cip ) ;" ) ;
5985: $if $(@expr1073764477 $!@expr1073764478 $assertEquals $(@expr1073764479 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5985 $, true $, f@var1675 &&@expr22656 f@var1675 .@expr22639 function (@expr22640 ) &&@expr1073764483 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr1073764489 2 $) $) { $return ; }
5986:
5987: f@var1675 =@expr1073764490 Token ::@expr22630 findsimplematch (@expr1073764492 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo ( cp ) ;" ) ;
5988: $if $(@expr1073764495 $!@expr1073764496 $assertEquals $(@expr1073764497 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5988 $, true $, f@var1675 &&@expr22656 f@var1675 .@expr22639 function (@expr22640 ) &&@expr1073764501 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr1073764507 3 $) $) { $return ; }
5989:
5990: f@var1675 =@expr1073764508 Token ::@expr22630 findsimplematch (@expr1073764510 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo ( ccp ) ;" ) ;
5991: $if $(@expr1073764513 $!@expr1073764514 $assertEquals $(@expr1073764515 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5991 $, true $, f@var1675 &&@expr22656 f@var1675 .@expr22639 function (@expr22640 ) &&@expr22695 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr22701 5 $) $) { $return ; }
5992:
5993: f@var1675 =@expr1073764526 Token ::@expr22630 findsimplematch (@expr1073764528 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo ( f ) ;" ) ;
5994: $if $(@expr1073764531 $!@expr1073764532 $assertEquals $(@expr1073764533 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5994 $, true $, f@var1675 &&@expr22656 f@var1675 .@expr22639 function (@expr22640 ) &&@expr1073764537 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr1073764543 4 $) $) { $return ; }
5995:
5996: f@var1675 =@expr1073764544 Token ::@expr22630 findsimplematch (@expr1073764546 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo ( b ) ;" ) ;
5997: $if $(@expr1073764549 $!@expr1073764550 $assertEquals $(@expr1073764551 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 5997 $, true $, f@var1675 &&@expr22656 f@var1675 .@expr22639 function (@expr22640 ) &&@expr22695 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr22701 5 $) $) { $return ; }
5998:
5999: f@var1675 =@expr1073764562 Token ::@expr22630 findsimplematch (@expr1073764564 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo2 ( 0 ) ;" ) ;
6000: $if $(@expr1073764567 $!@expr1073764568 $assertEquals $(@expr1073764569 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6000 $, true $, f@var1675 &&@expr22656 f@var1675 .@expr22639 function (@expr22640 ) &&@expr22749 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr22755 6 $) $) { $return ; }
6001:
6002: f@var1675 =@expr1073764580 Token ::@expr22630 findsimplematch (@expr1073764582 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo2 ( nullptr ) ;" ) ;
6003: $if $(@expr1073764585 $!@expr1073764586 $assertEquals $(@expr1073764587 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6003 $, true $, f@var1675 &&@expr22656 f@var1675 .@expr22639 function (@expr22640 ) &&@expr22749 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr22755 6 $) $) { $return ; }
6004:
6005: f@var1675 =@expr1073764598 Token ::@expr22630 findsimplematch (@expr1073764600 tokenizer@var1673 .@expr22632 tokens (@expr22633 ) , "foo2 ( NULL ) ;" ) ;
6006: $if $(@expr1073764603 $!@expr1073764604 $assertEquals $(@expr1073764605 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6006 $, true $, f@var1675 &&@expr22656 f@var1675 .@expr22639 function (@expr22640 ) &&@expr22749 f@var1675 .@expr22639 function (@expr22640 ) .@expr22644 tokenDef .@expr22645 linenr (@expr22646 ) ==@expr22755 6 $) $) { $return ; }
6007: }
6008:
6009: void findFunction15 ( ) {
6010: $Tokenizer $tokenizer@var1676 $(@expr1073764616 $&@expr1073764617 $settings1@var123 $, $this@expr1073764618 $) $; $const $SymbolDatabase $* $db@var1677 $; $db@var1677 $=@expr1073764619 $getSymbolDB_inner $(@expr1073764620 $tokenizer@var1676 $, "void foo1(int, char* a) { }\nvoid foo1(int, char a) { }\nvoid foo1(int, wchar_t a) { }\nvoid foo1(int, char16_t a) { }\nvoid foo2(int, float a) { }\nvoid foo2(int, wchar_t a) { }\nvoid foo3(int, float a) { }\nvoid foo3(int, char a) { }\nvoid func() {\n    foo1(1, 'c');\n    foo1(2, L'c');\n    foo1(3, u'c');\n    foo2(4, 'c');\n    foo2(5, L'c');\n    foo3(6, 'c');\n    foo3(7, L'c');\n}" $, $"test.cpp" $) $; $if $(@expr1073764621 $!@expr1073764622 $assert_ $(@expr1073764623 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6010 $, $db@var1677 $) $) { $return $; } $do ${ $} $while $(@expr1073764624 $false $)
6011:
|
6025:
6026: ;
6027:
6028: $if $(@expr1073764625 $!@expr1073764626 $assertEquals $(@expr1073764627 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6028 $, "" $, errout@var100 .@expr1073764628 str (@expr1073764629 ) $) $) { $return ; }
6029:
6030: const Token * f@var1678 ; f@var1678 =@expr1073764630 Token ::@expr22807 findsimplematch (@expr1073764632 tokenizer@var1676 .@expr22809 tokens (@expr22810 ) , "foo1 ( 1" ) ;
6031: $if $(@expr1073764635 $!@expr1073764636 $assertEquals $(@expr1073764637 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6031 $, true $, db@var1677 &&@expr22814 f@var1678 &&@expr22815 f@var1678 .@expr22816 function (@expr22817 ) &&@expr1073764642 f@var1678 .@expr22816 function (@expr22817 ) .@expr22821 tokenDef .@expr22822 linenr (@expr22823 ) ==@expr1073764648 2 $) $) { $return ; }
6032:
6033: f@var1678 =@expr1073764649 Token ::@expr22807 findsimplematch (@expr1073764651 tokenizer@var1676 .@expr22809 tokens (@expr22810 ) , "foo1 ( 2" ) ;
6034: $if $(@expr1073764654 $!@expr1073764655 $assertEquals $(@expr1073764656 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6034 $, true $, db@var1677 &&@expr22814 f@var1678 &&@expr22815 f@var1678 .@expr22816 function (@expr22817 ) &&@expr1073764661 f@var1678 .@expr22816 function (@expr22817 ) .@expr22821 tokenDef .@expr22822 linenr (@expr22823 ) ==@expr1073764667 3 $) $) { $return ; }
6035:
6036: f@var1678 =@expr1073764668 Token ::@expr22807 findsimplematch (@expr1073764670 tokenizer@var1676 .@expr22809 tokens (@expr22810 ) , "foo1 ( 3" ) ;
6037: $if $(@expr1073764673 $!@expr1073764674 $assertEquals $(@expr1073764675 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6037 $, true $, db@var1677 &&@expr22814 f@var1678 &&@expr22815 f@var1678 .@expr22816 function (@expr22817 ) &&@expr1073764680 f@var1678 .@expr22816 function (@expr22817 ) .@expr22821 tokenDef .@expr22822 linenr (@expr22823 ) ==@expr1073764686 4 $) $) { $return ; }
6038:
6039: f@var1678 =@expr1073764687 Token ::@expr22807 findsimplematch (@expr1073764689 tokenizer@var1676 .@expr22809 tokens (@expr22810 ) , "foo2 ( 4" ) ;
6040: $if $(@expr1073764692 $!@expr1073764693 $assertEquals $(@expr1073764694 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6040 $, true $, db@var1677 &&@expr22814 f@var1678 &&@expr22815 f@var1678 .@expr22816 function (@expr22817 ) &&@expr22875 f@var1678 .@expr22816 function (@expr22817 ) .@expr22821 tokenDef .@expr22822 linenr (@expr22823 ) ==@expr22881 6 $) $) { $return ; }
6041:
6042: f@var1678 =@expr1073764706 Token ::@expr22807 findsimplematch (@expr1073764708 tokenizer@var1676 .@expr22809 tokens (@expr22810 ) , "foo2 ( 5" ) ;
6043: $if $(@expr1073764711 $!@expr1073764712 $assertEquals $(@expr1073764713 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6043 $, true $, db@var1677 &&@expr22814 f@var1678 &&@expr22815 f@var1678 .@expr22816 function (@expr22817 ) &&@expr22875 f@var1678 .@expr22816 function (@expr22817 ) .@expr22821 tokenDef .@expr22822 linenr (@expr22823 ) ==@expr22881 6 $) $) { $return ; }
6044:
6045: f@var1678 =@expr1073764725 Token ::@expr22807 findsimplematch (@expr1073764727 tokenizer@var1676 .@expr22809 tokens (@expr22810 ) , "foo3 ( 6" ) ;
6046: $if $(@expr1073764730 $!@expr1073764731 $assertEquals $(@expr1073764732 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6046 $, true $, db@var1677 &&@expr22814 f@var1678 &&@expr22815 f@var1678 .@expr22816 function (@expr22817 ) &&@expr1073764737 f@var1678 .@expr22816 function (@expr22817 ) .@expr22821 tokenDef .@expr22822 linenr (@expr22823 ) ==@expr1073764743 8 $) $) { $return ; }
6047:
|
6050:
6051: }
6052:
6053: void findFunction16 ( ) {
6054: $Tokenizer $tokenizer@var1679 $(@expr1073764744 $&@expr1073764745 $settings1@var123 $, $this@expr1073764746 $) $; $const $SymbolDatabase $* $db@var1680 $; $db@var1680 $=@expr1073764747 $getSymbolDB_inner $(@expr1073764748 $tokenizer@var1679 $, "struct C { int i; static int si; float f; int* ip; float* fp};\nvoid foo(float a) { }\nvoid foo(int a) { }\nvoid foo(int* a) { }\nvoid func(C c, C* cp) {\n    foo(c.i);\n    foo(cp->i);\n    foo(c.f);\n    foo(c.si);\n    foo(C::si);\n    foo(c.ip);\n    foo(c.fp);\n}" $, $"test.cpp" $) $; $if $(@expr1073764749 $!@expr1073764750 $assert_ $(@expr1073764751 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6054 $, $db@var1680 $) $) { $return $; } $do ${ $} $while $(@expr1073764752 $false $)
6055:
|
6065:
6066: ;
6067:
6068: $if $(@expr1073764753 $!@expr1073764754 $assertEquals $(@expr1073764755 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6068 $, "" $, errout@var100 .@expr1073764756 str (@expr1073764757 ) $) $) { $return ; }
6069:
6070: const Token * f@var1681 ; f@var1681 =@expr1073764758 Token ::@expr22935 findsimplematch (@expr1073764760 tokenizer@var1679 .@expr22937 tokens (@expr22938 ) , "foo ( c . i ) ;" ) ;
6071: $if $(@expr1073764763 $!@expr1073764764 $assertEquals $(@expr1073764765 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6071 $, true $, db@var1680 &&@expr1073764766 f@var1681 &&@expr1073764767 f@var1681 .@expr22944 function (@expr22945 ) &&@expr1073764770 f@var1681 .@expr22944 function (@expr22945 ) .@expr22949 tokenDef .@expr22950 linenr (@expr22951 ) ==@expr22952 3 $) $) { $return ; }
6072:
6073: f@var1681 =@expr1073764777 Token ::@expr22935 findsimplematch (@expr1073764779 tokenizer@var1679 .@expr22937 tokens (@expr22938 ) , "foo ( cp . i ) ;" ) ;
6074: $if $(@expr1073764782 $!@expr1073764783 $assertEquals $(@expr1073764784 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6074 $, true $, f@var1681 &&@expr22961 f@var1681 .@expr22944 function (@expr22945 ) &&@expr22964 f@var1681 .@expr22944 function (@expr22945 ) .@expr22949 tokenDef .@expr22950 linenr (@expr22951 ) ==@expr22952 3 $) $) { $return ; }
6075:
6076: f@var1681 =@expr1073764795 Token ::@expr22935 findsimplematch (@expr1073764797 tokenizer@var1679 .@expr22937 tokens (@expr22938 ) , "foo ( c . f ) ;" ) ;
6077: $if $(@expr1073764800 $!@expr1073764801 $assertEquals $(@expr1073764802 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6077 $, true $, f@var1681 &&@expr22961 f@var1681 .@expr22944 function (@expr22945 ) &&@expr1073764806 f@var1681 .@expr22944 function (@expr22945 ) .@expr22949 tokenDef .@expr22950 linenr (@expr22951 ) ==@expr1073764812 2 $) $) { $return ; }
6078:
6079: f@var1681 =@expr1073764813 Token ::@expr22935 findsimplematch (@expr1073764815 tokenizer@var1679 .@expr22937 tokens (@expr22938 ) , "foo ( c . si ) ;" ) ;
6080: $if $(@expr1073764818 $!@expr1073764819 $assertEquals $(@expr1073764820 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6080 $, true $, f@var1681 &&@expr22961 f@var1681 .@expr22944 function (@expr22945 ) &&@expr22964 f@var1681 .@expr22944 function (@expr22945 ) .@expr22949 tokenDef .@expr22950 linenr (@expr22951 ) ==@expr22952 3 $) $) { $return ; }
6081:
6082: f@var1681 =@expr1073764831 Token ::@expr22935 findsimplematch (@expr1073764833 tokenizer@var1679 .@expr22937 tokens (@expr22938 ) , "foo ( C :: si ) ;" ) ;
6083: $if $(@expr1073764836 $!@expr1073764837 $assertEquals $(@expr1073764838 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6083 $, true $, f@var1681 &&@expr22961 f@var1681 .@expr22944 function (@expr22945 ) &&@expr22964 f@var1681 .@expr22944 function (@expr22945 ) .@expr22949 tokenDef .@expr22950 linenr (@expr22951 ) ==@expr22952 3 $) $) { $return ; }
6084:
6085: f@var1681 =@expr1073764849 Token ::@expr22935 findsimplematch (@expr1073764851 tokenizer@var1679 .@expr22937 tokens (@expr22938 ) , "foo ( c . ip ) ;" ) ;
6086: $if $(@expr1073764854 $!@expr1073764855 $assertEquals $(@expr1073764856 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6086 $, true $, f@var1681 &&@expr22961 f@var1681 .@expr22944 function (@expr22945 ) &&@expr1073764860 f@var1681 .@expr22944 function (@expr22945 ) .@expr22949 tokenDef .@expr22950 linenr (@expr22951 ) ==@expr1073764866 4 $) $) { $return ; }
6087:
6088: f@var1681 =@expr1073764867 Token ::@expr22935 findsimplematch (@expr1073764869 tokenizer@var1679 .@expr22937 tokens (@expr22938 ) , "foo ( c . fp ) ;" ) ;
6089: $if $(@expr1073764872 $!@expr1073764873 $assertEquals $(@expr1073764874 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6089 $, true $, f@var1681 &&@expr1073764875 f@var1681 .@expr22944 function (@expr22945 ) ==@expr1073764878 nullptr $) $) { $return ; }
6090: }
6091:
6092: void findFunction17 ( ) {
6093: $Tokenizer $tokenizer@var1682 $(@expr1073764879 $&@expr1073764880 $settings1@var123 $, $this@expr1073764881 $) $; $const $SymbolDatabase $* $db@var1683 $; $db@var1683 $=@expr1073764882 $getSymbolDB_inner $(@expr1073764883 $tokenizer@var1682 $, "void foo(int a) { }\nvoid foo(float a) { }\nvoid foo(void* a) { }\nvoid foo(bool a) { }\nvoid func(int i, float f, bool b) {\n    foo(i + i);\n    foo(f + f);\n    foo(!b);\n    foo(i > 0);\n    foo(f + i);\n}" $, $"test.cpp" $) $; $if $(@expr1073764884 $!@expr1073764885 $assert_ $(@expr1073764886 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6093 $, $db@var1683 $) $) { $return $; } $do ${ $} $while $(@expr1073764887 $false $)
6094:
|
6102:
6103: ;
6104:
6105: $if $(@expr1073764888 $!@expr1073764889 $assertEquals $(@expr1073764890 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6105 $, "" $, errout@var100 .@expr1073764891 str (@expr1073764892 ) $) $) { $return ; }
6106:
6107: const Token * f@var1684 ; f@var1684 =@expr1073764893 Token ::@expr23070 findsimplematch (@expr1073764895 tokenizer@var1682 .@expr23072 tokens (@expr23073 ) , "foo ( i + i ) ;" ) ;
6108: $if $(@expr1073764898 $!@expr1073764899 $assertEquals $(@expr1073764900 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6108 $, true $, db@var1683 &&@expr1073764901 f@var1684 &&@expr1073764902 f@var1684 .@expr23079 function (@expr23080 ) &&@expr1073764905 f@var1684 .@expr23079 function (@expr23080 ) .@expr23084 tokenDef .@expr23085 linenr (@expr23086 ) ==@expr1073764911 1 $) $) { $return ; }
6109:
6110: f@var1684 =@expr1073764912 Token ::@expr23070 findsimplematch (@expr1073764914 tokenizer@var1682 .@expr23072 tokens (@expr23073 ) , "foo ( f + f ) ;" ) ;
6111: $if $(@expr1073764917 $!@expr1073764918 $assertEquals $(@expr1073764919 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6111 $, true $, f@var1684 &&@expr23096 f@var1684 .@expr23079 function (@expr23080 ) &&@expr23099 f@var1684 .@expr23079 function (@expr23080 ) .@expr23084 tokenDef .@expr23085 linenr (@expr23086 ) ==@expr23105 2 $) $) { $return ; }
6112:
6113: f@var1684 =@expr1073764930 Token ::@expr23070 findsimplematch (@expr1073764932 tokenizer@var1682 .@expr23072 tokens (@expr23073 ) , "foo ( ! b ) ;" ) ;
6114: $if $(@expr1073764935 $!@expr1073764936 $assertEquals $(@expr1073764937 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6114 $, true $, f@var1684 &&@expr23096 f@var1684 .@expr23079 function (@expr23080 ) &&@expr23117 f@var1684 .@expr23079 function (@expr23080 ) .@expr23084 tokenDef .@expr23085 linenr (@expr23086 ) ==@expr23123 4 $) $) { $return ; }
6115:
6116: f@var1684 =@expr1073764948 Token ::@expr23070 findsimplematch (@expr1073764950 tokenizer@var1682 .@expr23072 tokens (@expr23073 ) , "foo ( i > 0 ) ;" ) ;
6117: $if $(@expr1073764953 $!@expr1073764954 $assertEquals $(@expr1073764955 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6117 $, true $, f@var1684 &&@expr23096 f@var1684 .@expr23079 function (@expr23080 ) &&@expr23117 f@var1684 .@expr23079 function (@expr23080 ) .@expr23084 tokenDef .@expr23085 linenr (@expr23086 ) ==@expr23123 4 $) $) { $return ; }
6118:
6119: f@var1684 =@expr1073764966 Token ::@expr23070 findsimplematch (@expr1073764968 tokenizer@var1682 .@expr23072 tokens (@expr23073 ) , "foo ( f + i ) ;" ) ;
6120: $if $(@expr1073764971 $!@expr1073764972 $assertEquals $(@expr1073764973 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6120 $, true $, f@var1684 &&@expr23096 f@var1684 .@expr23079 function (@expr23080 ) &&@expr23099 f@var1684 .@expr23079 function (@expr23080 ) .@expr23084 tokenDef .@expr23085 linenr (@expr23086 ) ==@expr23105 2 $) $) { $return ; }
6121: }
6122:
6123: void findFunction18 ( ) {
6124: $Tokenizer $tokenizer@var1685 $(@expr1073764984 $&@expr1073764985 $settings1@var123 $, $this@expr1073764986 $) $; $const $SymbolDatabase $* $db@var1686 $; $db@var1686 $=@expr1073764987 $getSymbolDB_inner $(@expr1073764988 $tokenizer@var1685 $, "class Fred {\n    void f(int i) { }\n    void f(float f) const { }\n    void a() { f(1); }\n    void b() { f(1.f); }\n};" $, $"test.cpp" $) $; $if $(@expr1073764989 $!@expr1073764990 $assert_ $(@expr1073764991 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6124 $, $db@var1686 $) $) { $return $; } $do ${ $} $while $(@expr1073764992 $false $)
6125:
|
6128:
6129: ;
6130:
6131: $if $(@expr1073764993 $!@expr1073764994 $assertEquals $(@expr1073764995 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6131 $, "" $, errout@var100 .@expr1073764996 str (@expr1073764997 ) $) $) { $return ; }
6132:
6133: const Token * f@var1687 ; f@var1687 =@expr1073764998 Token ::@expr23175 findsimplematch (@expr1073765000 tokenizer@var1685 .@expr23177 tokens (@expr23178 ) , "f ( 1 ) ;" ) ;
6134: $if $(@expr1073765003 $!@expr1073765004 $assertEquals $(@expr1073765005 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6134 $, true $, db@var1686 &&@expr1073765006 f@var1687 &&@expr1073765007 f@var1687 .@expr23184 function (@expr23185 ) &&@expr1073765010 f@var1687 .@expr23184 function (@expr23185 ) .@expr23189 tokenDef .@expr23190 linenr (@expr23191 ) ==@expr1073765016 2 $) $) { $return ; }
6135:
6136: f@var1687 =@expr1073765017 Token ::@expr23175 findsimplematch (@expr1073765019 tokenizer@var1685 .@expr23177 tokens (@expr23178 ) , "f ( 1.f ) ;" ) ;
6137: $if $(@expr1073765022 $!@expr1073765023 $assertEquals $(@expr1073765024 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6137 $, true $, f@var1687 &&@expr1073765025 f@var1687 .@expr23184 function (@expr23185 ) &&@expr1073765028 f@var1687 .@expr23184 function (@expr23185 ) .@expr23189 tokenDef .@expr23190 linenr (@expr23191 ) ==@expr1073765034 3 $) $) { $return ; }
6138: }
6139:
6140: void findFunction19 ( ) {
6141: $Tokenizer $tokenizer@var1688 $(@expr1073765036 $&@expr1073765037 $settings1@var123 $, $this@expr1073765038 $) $; $const $SymbolDatabase $* $db@var1689 $; $db@var1689 $=@expr1073765039 $getSymbolDB_inner $(@expr1073765040 $tokenizer@var1688 $, "class Fred {\n    enum E1 { e1 };\n    enum class E2 : unsigned short { e2 };\n    bool               get(bool x) { return x; }\n    char               get(char x) { return x; }\n    short              get(short x) { return x; }\n    int                get(int x) { return x; }\n    long               get(long x) { return x; }\n    long long          get(long long x) { return x; }\n    unsigned char      get(unsigned char x) { return x; }\n    signed char        get(signed char x) { return x; }\n    unsigned short     get(unsigned short x) { return x; }\n    unsigned int       get(unsigned int x) { return x; }\n    unsigned long      get(unsigned long x) { return x; }\n    unsigned long long get(unsigned long long x) { return x; }\n    E1                 get(E1 x) { return x; }\n    E2                 get(E2 x) { return x; }\n    void foo() {\n        bool               v1  = true;   v1  = get(get(v1));\n        char               v2  = '1';    v2  = get(get(v2));\n        short              v3  = 1;      v3  = get(get(v3));\n        int                v4  = 1;      v4  = get(get(v4));\n        long               v5  = 1;      v5  = get(get(v5));\n        long long          v6  = 1;      v6  = get(get(v6));\n        unsigned char      v7  = '1';    v7  = get(get(v7));\n        signed char        v8  = '1';    v8  = get(get(v8));\n        unsigned short     v9  = 1;      v9  = get(get(v9));\n        unsigned int       v10 = 1;      v10 = get(get(v10));\n        unsigned long      v11 = 1;      v11 = get(get(v11));\n        unsigned long long v12 = 1;      v12 = get(get(v12));\n        E1                 v13 = e1;     v13 = get(get(v13));\n        E2                 v14 = E2::e2; v14 = get(get(v14));\n    }\n};" $, $"test.cpp" $) $; $if $(@expr1073765041 $!@expr1073765042 $assert_ $(@expr1073765043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6141 $, $db@var1689 $) $) { $return $; } $do ${ $} $while $(@expr1073765044 $false $)
6142:
|
6173:
6174: ;
6175:
6176: $if $(@expr1073765045 $!@expr1073765046 $assertEquals $(@expr1073765047 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6176 $, "" $, errout@var100 .@expr1073765048 str (@expr1073765049 ) $) $) { $return ; }
6177: $if $(@expr1073765050 $!@expr1073765051 $assert_ $(@expr1073765052 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6177 $, db@var1689 $) $) { $return ; }
6178:
6179: const Token * f@var1690 ; f@var1690 =@expr1073765053 Token ::@expr23230 findsimplematch (@expr1073765055 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v1 ) ) ;" ) ;
6180: $if $(@expr1073765058 $!@expr1073765059 $assert_ $(@expr1073765060 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6180 $, f@var1690 $) $) { $return ; }
6181: $if $(@expr1073765061 $!@expr1073765062 $assert_ $(@expr1073765063 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6181 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6182: $if $(@expr1073765066 $!@expr1073765067 $assertEquals $(@expr1073765068 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6182 $, 4 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6183:
6184: f@var1690 =@expr1073765074 Token ::@expr23230 findsimplematch (@expr1073765076 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v2 ) ) ;" ) ;
6185: $if $(@expr1073765079 $!@expr1073765080 $assert_ $(@expr1073765081 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6185 $, f@var1690 $) $) { $return ; }
6186: $if $(@expr1073765082 $!@expr1073765083 $assert_ $(@expr1073765084 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6186 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6187: $if $(@expr1073765087 $!@expr1073765088 $assertEquals $(@expr1073765089 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6187 $, 5 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6188:
6189: f@var1690 =@expr1073765095 Token ::@expr23230 findsimplematch (@expr1073765097 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v3 ) ) ;" ) ;
6190: $if $(@expr1073765100 $!@expr1073765101 $assert_ $(@expr1073765102 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6190 $, f@var1690 $) $) { $return ; }
6191: $if $(@expr1073765103 $!@expr1073765104 $assert_ $(@expr1073765105 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6191 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6192: $if $(@expr1073765108 $!@expr1073765109 $assertEquals $(@expr1073765110 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6192 $, 6 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6193:
6194: f@var1690 =@expr1073765116 Token ::@expr23230 findsimplematch (@expr1073765118 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v4 ) ) ;" ) ;
6195: $if $(@expr1073765121 $!@expr1073765122 $assert_ $(@expr1073765123 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6195 $, f@var1690 $) $) { $return ; }
6196: $if $(@expr1073765124 $!@expr1073765125 $assert_ $(@expr1073765126 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6196 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6197: $if $(@expr1073765129 $!@expr1073765130 $assertEquals $(@expr1073765131 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6197 $, 7 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6198:
6199: f@var1690 =@expr1073765137 Token ::@expr23230 findsimplematch (@expr1073765139 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v5 ) ) ;" ) ;
6200: $if $(@expr1073765142 $!@expr1073765143 $assert_ $(@expr1073765144 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6200 $, f@var1690 $) $) { $return ; }
6201: $if $(@expr1073765145 $!@expr1073765146 $assert_ $(@expr1073765147 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6201 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6202: $if $(@expr1073765150 $!@expr1073765151 $assertEquals $(@expr1073765152 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6202 $, 8 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6203:
6204: f@var1690 =@expr1073765158 Token ::@expr23230 findsimplematch (@expr1073765160 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v6 ) ) ;" ) ;
6205: $if $(@expr1073765163 $!@expr1073765164 $assert_ $(@expr1073765165 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6205 $, f@var1690 $) $) { $return ; }
6206: $if $(@expr1073765166 $!@expr1073765167 $assert_ $(@expr1073765168 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6206 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6207: $if $(@expr1073765171 $!@expr1073765172 $assertEquals $(@expr1073765173 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6207 $, 9 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6208:
6209: f@var1690 =@expr1073765179 Token ::@expr23230 findsimplematch (@expr1073765181 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v7 ) ) ;" ) ;
6210: $if $(@expr1073765184 $!@expr1073765185 $assert_ $(@expr1073765186 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6210 $, f@var1690 $) $) { $return ; }
6211: $if $(@expr1073765187 $!@expr1073765188 $assert_ $(@expr1073765189 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6211 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6212: if (@expr23368 std ::@expr23369 numeric_limits < char > ::@expr23370 is_signed@expr23211 ) {
6213: $if $(@expr1073765195 $!@expr1073765196 $assertEquals $(@expr1073765197 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6213 $, 10 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6214: } else {
6215: $if $(@expr1073765203 $!@expr1073765204 $assertEquals $(@expr1073765205 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6215 $, 5 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6216: }
6217:
6218: f@var1690 =@expr1073765211 Token ::@expr23230 findsimplematch (@expr1073765213 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v8 ) ) ;" ) ;
6219: $if $(@expr1073765216 $!@expr1073765217 $assert_ $(@expr1073765218 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6219 $, f@var1690 $) $) { $return ; }
6220: $if $(@expr1073765219 $!@expr1073765220 $assert_ $(@expr1073765221 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6220 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6221: if (@expr23368 std ::@expr23369 numeric_limits < char > ::@expr23370 is_signed@expr23211 ) {
6222: $if $(@expr1073765227 $!@expr1073765228 $assertEquals $(@expr1073765229 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6222 $, 5 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6223: } else {
6224: $if $(@expr1073765235 $!@expr1073765236 $assertEquals $(@expr1073765237 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6224 $, 11 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6225: }
6226:
6227: f@var1690 =@expr1073765243 Token ::@expr23230 findsimplematch (@expr1073765245 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v9 ) ) ;" ) ;
6228: $if $(@expr1073765248 $!@expr1073765249 $assert_ $(@expr1073765250 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6228 $, f@var1690 $) $) { $return ; }
6229: $if $(@expr1073765251 $!@expr1073765252 $assert_ $(@expr1073765253 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6229 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6230: $if $(@expr1073765256 $!@expr1073765257 $assertEquals $(@expr1073765258 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6230 $, 12 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6231:
6232: f@var1690 =@expr1073765264 Token ::@expr23230 findsimplematch (@expr1073765266 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v10 ) ) ;" ) ;
6233: $if $(@expr1073765269 $!@expr1073765270 $assert_ $(@expr1073765271 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6233 $, f@var1690 $) $) { $return ; }
6234: $if $(@expr1073765272 $!@expr1073765273 $assert_ $(@expr1073765274 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6234 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6235: $if $(@expr1073765277 $!@expr1073765278 $assertEquals $(@expr1073765279 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6235 $, 13 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6236:
6237: f@var1690 =@expr1073765285 Token ::@expr23230 findsimplematch (@expr1073765287 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v11 ) ) ;" ) ;
6238: $if $(@expr1073765290 $!@expr1073765291 $assert_ $(@expr1073765292 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6238 $, f@var1690 $) $) { $return ; }
6239: $if $(@expr1073765293 $!@expr1073765294 $assert_ $(@expr1073765295 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6239 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6240: $if $(@expr1073765298 $!@expr1073765299 $assertEquals $(@expr1073765300 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6240 $, 14 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6241:
6242: f@var1690 =@expr1073765306 Token ::@expr23230 findsimplematch (@expr1073765308 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v12 ) ) ;" ) ;
6243: $if $(@expr1073765311 $!@expr1073765312 $assert_ $(@expr1073765313 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6243 $, f@var1690 $) $) { $return ; }
6244: $if $(@expr1073765314 $!@expr1073765315 $assert_ $(@expr1073765316 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6244 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6245: $if $(@expr1073765319 $!@expr1073765320 $assertEquals $(@expr1073765321 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6245 $, 15 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6246:
6247: f@var1690 =@expr1073765327 Token ::@expr23230 findsimplematch (@expr1073765329 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v13 ) ) ;" ) ;
6248: $if $(@expr1073765332 $!@expr1073765333 $assert_ $(@expr1073765334 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6248 $, f@var1690 $) $) { $return ; }
6249: $if $(@expr1073765335 $!@expr1073765336 $assert_ $(@expr1073765337 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6249 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6250: $if $(@expr1073765340 $!@expr1073765341 $assertEquals $(@expr1073765342 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6250 $, 16 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6251:
6252: f@var1690 =@expr1073765348 Token ::@expr23230 findsimplematch (@expr1073765350 tokenizer@var1688 .@expr23232 tokens (@expr23233 ) , "get ( get ( v14 ) ) ;" ) ;
6253: $if $(@expr1073765353 $!@expr1073765354 $assert_ $(@expr1073765355 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6253 $, f@var1690 $) $) { $return ; }
6254: $if $(@expr1073765356 $!@expr1073765357 $assert_ $(@expr1073765358 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6254 $, f@var1690 .@expr23240 function (@expr23241 ) $) $) { $return ; }
6255: $if $(@expr1073765361 $!@expr1073765362 $assertEquals $(@expr1073765363 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6255 $, 17 $, f@var1690 .@expr23240 function (@expr23241 ) .@expr23247 tokenDef .@expr23248 linenr (@expr23249 ) $) $) { $return ; }
6256: }
6257:
6258: void findFunction20 ( ) {
6259: $Tokenizer $tokenizer@var1691 $(@expr1073765369 $&@expr1073765370 $settings1@var123 $, $this@expr1073765371 $) $; $const $SymbolDatabase $* $db@var1692 $; $db@var1692 $=@expr1073765372 $getSymbolDB_inner $(@expr1073765373 $tokenizer@var1691 $, "class Foo {\npublic:\n    Foo() : _x(0), _y(0) {}\n    Foo(const Foo& f) {\n        copy(&f);\n    }\n    void copy(const Foo* f) {\n        _x=f->_x;\n        copy(*f);\n    }\nprivate:\n    void copy(const Foo& f) {\n        _y=f._y;\n    }\n    int _x;\n    int _y;\n};" $, $"test.cpp" $) $; $if $(@expr1073765374 $!@expr1073765375 $assert_ $(@expr1073765376 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6259 $, $db@var1692 $) $) { $return $; } $do ${ $} $while $(@expr1073765377 $false $)
6260:
|
6274:
6275: ;
6276:
6277: $if $(@expr1073765378 $!@expr1073765379 $assertEquals $(@expr1073765380 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6277 $, "" $, errout@var100 .@expr1073765381 str (@expr1073765382 ) $) $) { $return ; }
6278:
6279: const Token * f@var1693 ; f@var1693 =@expr1073765383 Token ::@expr23560 findsimplematch (@expr1073765385 tokenizer@var1691 .@expr23562 tokens (@expr23563 ) , "copy ( & f ) ;" ) ;
6280: $if $(@expr1073765388 $!@expr1073765389 $assertEquals $(@expr1073765390 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6280 $, true $, db@var1692 &&@expr23567 f@var1693 &&@expr23568 f@var1693 .@expr23569 function (@expr23570 ) &&@expr1073765395 f@var1693 .@expr23569 function (@expr23570 ) .@expr23574 tokenDef .@expr23575 linenr (@expr23576 ) ==@expr1073765401 7 $) $) { $return ; }
6281:
6282: f@var1693 =@expr1073765402 Token ::@expr23560 findsimplematch (@expr1073765404 tokenizer@var1691 .@expr23562 tokens (@expr23563 ) , "copy ( * f ) ;" ) ;
6283: $if $(@expr1073765407 $!@expr1073765408 $assertEquals $(@expr1073765409 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6283 $, true $, db@var1692 &&@expr23567 f@var1693 &&@expr23568 f@var1693 .@expr23569 function (@expr23570 ) &&@expr1073765414 f@var1693 .@expr23569 function (@expr23570 ) .@expr23574 tokenDef .@expr23575 linenr (@expr23576 ) ==@expr1073765420 12 $) $) { $return ; }
6284: }
6285:
6286: void findFunction21 ( ) {
6287: $Tokenizer $tokenizer@var1694 $(@expr1073765421 $&@expr1073765422 $settings1@var123 $, $this@expr1073765423 $) $; $const $SymbolDatabase $* $db@var1695 $; $db@var1695 $=@expr1073765424 $getSymbolDB_inner $(@expr1073765425 $tokenizer@var1694 $, "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(foo *myFoo) {\n    int* myThing = myFoo->GetThing();\n}" $, $"test.cpp" $) $; $if $(@expr1073765426 $!@expr1073765427 $assert_ $(@expr1073765428 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6287 $, $db@var1695 $) $) { $return $; } $do ${ $} $while $(@expr1073765429 $false $)
6288:
|
6293:
6294: ;
6295:
6296: $if $(@expr1073765430 $!@expr1073765431 $assert_ $(@expr1073765432 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6296 $, db@var1695 !=@expr1073765433 nullptr $) $) { $return ; }
6297:
6298: const Token * tok1@var1696 ; tok1@var1696 =@expr1073765434 Token ::@expr1073765435 findsimplematch (@expr1073765436 tokenizer@var1694 .@expr1073765437 tokens (@expr1073765438 ) , "myFoo . GetThing ( ) ;" ) ;
6299:
6300: const Function * f@var1697 ; f@var1697 =@expr1073765439 tok1@var1696 &&@expr1073765440 tok1@var1696 .@expr23617 tokAt (@expr23618 2 ) ?@expr1073765443 tok1@var1696 .@expr23617 tokAt (@expr23618 2 ) .@expr1073765446 function (@expr1073765447 ) :@expr1073765448 nullptr ;
6301: $if $(@expr1073765449 $!@expr1073765450 $assert_ $(@expr1073765451 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6301 $, f@var1697 !=@expr1073765452 nullptr $) $) { $return ; }
6302: $if $(@expr1073765453 $!@expr1073765454 $assertEquals $(@expr1073765455 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6302 $, true $, f@var1697 &&@expr1073765456 !@expr1073765457 f@var1697 .@expr1073765458 isConst (@expr1073765459 ) $) $) { $return ; }
6303: }
6304:
6305: void findFunction22 ( ) {
6306: $Tokenizer $tokenizer@var1698 $(@expr1073765460 $&@expr1073765461 $settings1@var123 $, $this@expr1073765462 $) $; $const $SymbolDatabase $* $db@var1699 $; $db@var1699 $=@expr1073765463 $getSymbolDB_inner $(@expr1073765464 $tokenizer@var1698 $, "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(const foo *myFoo) {\n    int* myThing = myFoo->GetThing();\n}" $, $"test.cpp" $) $; $if $(@expr1073765465 $!@expr1073765466 $assert_ $(@expr1073765467 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6306 $, $db@var1699 $) $) { $return $; } $do ${ $} $while $(@expr1073765468 $false $)
6307:
|
6312:
6313: ;
6314:
6315: $if $(@expr1073765469 $!@expr1073765470 $assert_ $(@expr1073765471 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6315 $, db@var1699 !=@expr1073765472 nullptr $) $) { $return ; }
6316:
6317: const Token * tok1@var1700 ; tok1@var1700 =@expr1073765473 Token ::@expr1073765474 findsimplematch (@expr1073765475 tokenizer@var1698 .@expr1073765476 tokens (@expr1073765477 ) , ". GetThing ( ) ;" ) .@expr1073765478 next (@expr1073765479 ) ;
6318:
6319: const Function * f@var1701 ; f@var1701 =@expr1073765480 tok1@var1700 ?@expr1073765481 tok1@var1700 .@expr1073765482 function (@expr1073765483 ) :@expr1073765484 nullptr ;
6320: $if $(@expr1073765485 $!@expr1073765486 $assert_ $(@expr1073765487 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6320 $, f@var1701 !=@expr1073765488 nullptr $) $) { $return ; }
6321: $if $(@expr1073765489 $!@expr1073765490 $assertEquals $(@expr1073765491 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6321 $, true $, f@var1701 &&@expr1073765492 f@var1701 .@expr1073765493 isConst (@expr1073765494 ) $) $) { $return ; }
6322: }
6323:
6324: void findFunction23 ( ) {
6325: $Tokenizer $tokenizer@var1702 $(@expr1073765495 $&@expr1073765496 $settings1@var123 $, $this@expr1073765497 $) $; $const $SymbolDatabase $* $db@var1703 $; $db@var1703 $=@expr1073765498 $getSymbolDB_inner $(@expr1073765499 $tokenizer@var1702 $, "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(foo *myFoo) {\n    int* myThing = ((const foo *)myFoo)->GetThing();\n}" $, $"test.cpp" $) $; $if $(@expr1073765500 $!@expr1073765501 $assert_ $(@expr1073765502 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6325 $, $db@var1703 $) $) { $return $; } $do ${ $} $while $(@expr1073765503 $false $)
6326:
|
6331:
6332: ;
6333:
6334: $if $(@expr1073765504 $!@expr1073765505 $assert_ $(@expr1073765506 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6334 $, db@var1703 !=@expr1073765507 nullptr $) $) { $return ; }
6335:
6336: const Token * tok1@var1704 ; tok1@var1704 =@expr1073765508 Token ::@expr1073765509 findsimplematch (@expr1073765510 tokenizer@var1702 .@expr1073765511 tokens (@expr1073765512 ) , ". GetThing ( ) ;" ) .@expr1073765513 next (@expr1073765514 ) ;
6337:
6338: const Function * f@var1705 ; f@var1705 =@expr1073765515 tok1@var1704 ?@expr1073765516 tok1@var1704 .@expr1073765517 function (@expr1073765518 ) :@expr1073765519 nullptr ;
6339: $if $(@expr1073765520 $!@expr1073765521 $assert_ $(@expr1073765522 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6339 $, f@var1705 !=@expr1073765523 nullptr $) $) { $return ; }
6340: $if $(@expr1073765524 $!@expr1073765525 $assertEquals $(@expr1073765526 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6340 $, true $, f@var1705 &&@expr1073765527 f@var1705 .@expr1073765528 isConst (@expr1073765529 ) $) $) { $return ; }
6341: }
6342:
6343: void findFunction24 ( ) {
6344: $Tokenizer $tokenizer@var1706 $(@expr1073765530 $&@expr1073765531 $settings1@var123 $, $this@expr1073765532 $) $; $const $SymbolDatabase $* $db@var1707 $; $db@var1707 $=@expr1073765533 $getSymbolDB_inner $(@expr1073765534 $tokenizer@var1706 $, "struct foo {\n  void dostuff();\n}\n\nvoid f(std::shared_ptr<foo> p) {\n  p->dostuff();\n}" $, $"test.cpp" $) $; $if $(@expr1073765535 $!@expr1073765536 $assert_ $(@expr1073765537 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6344 $, $db@var1707 $) $) { $return $; } $do ${ $} $while $(@expr1073765538 $false $)
6345:
|
6349:
6350: ;
6351: $if $(@expr1073765539 $!@expr1073765540 $assert_ $(@expr1073765541 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6351 $, db@var1707 !=@expr1073765542 nullptr $) $) { $return ; }
6352: const Token * tok1@var1708 ; tok1@var1708 =@expr1073765543 Token ::@expr1073765544 findsimplematch (@expr1073765545 tokenizer@var1706 .@expr1073765546 tokens (@expr1073765547 ) , ". dostuff ( ) ;" ) .@expr1073765548 next (@expr1073765549 ) ;
6353: $if $(@expr1073765550 $!@expr1073765551 $assert_ $(@expr1073765552 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6353 $, tok1@var1708 .@expr1073765553 function (@expr1073765554 ) $) $) { $return ; }
6354: }
6355:
6356: void findFunction25 ( ) {
6357: $Tokenizer $tokenizer@var1709 $(@expr1073765555 $&@expr1073765556 $settings1@var123 $, $this@expr1073765557 $) $; $const $SymbolDatabase $* $db@var1710 $; $db@var1710 $=@expr1073765558 $getSymbolDB_inner $(@expr1073765559 $tokenizer@var1709 $, "struct foo {\n  void dostuff();\n}\n\nvoid f1(std::vector<std::shared_ptr<foo>> v)\n{\n    for (auto p : v)\n    {\n        p->dostuff();\n    }\n}" $, $"test.cpp" $) $; $if $(@expr1073765560 $!@expr1073765561 $assert_ $(@expr1073765562 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6357 $, $db@var1710 $) $) { $return $; } $do ${ $} $while $(@expr1073765563 $false $)
6358:
|
6366:
6367: ;
6368: $if $(@expr1073765564 $!@expr1073765565 $assert_ $(@expr1073765566 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6368 $, db@var1710 !=@expr1073765567 nullptr $) $) { $return ; }
6369: const Token * tok1@var1711 ; tok1@var1711 =@expr1073765568 Token ::@expr1073765569 findsimplematch (@expr1073765570 tokenizer@var1709 .@expr1073765571 tokens (@expr1073765572 ) , ". dostuff ( ) ;" ) .@expr1073765573 next (@expr1073765574 ) ;
6370: $if $(@expr1073765575 $!@expr1073765576 $assert_ $(@expr1073765577 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6370 $, tok1@var1711 .@expr1073765578 function (@expr1073765579 ) $) $) { $return ; }
6371: }
6372:
6373: void findFunction26 ( ) {
6374: $Tokenizer $tokenizer@var1712 $(@expr1073765581 $&@expr1073765582 $settings1@var123 $, $this@expr1073765583 $) $; $const $SymbolDatabase $* $db@var1713 $; $db@var1713 $=@expr1073765584 $getSymbolDB_inner $(@expr1073765585 $tokenizer@var1712 $, "void dostuff(const int *p) {}\nvoid dostuff(float) {}\nvoid f(int *p) {\n  dostuff(p);\n}" $, $"test.cpp" $) $; $if $(@expr1073765586 $!@expr1073765587 $assert_ $(@expr1073765588 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6374 $, $db@var1713 $) $) { $return $; } $do ${ $} $while $(@expr1073765589 $false $)
6375:
6376:
6377:
6378: ;
6379: $if $(@expr1073765590 $!@expr1073765591 $assert_ $(@expr1073765592 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6379 $, db@var1713 !=@expr1073765593 nullptr $) $) { $return ; }
6380: const Token * dostuff1@var1714 ; dostuff1@var1714 =@expr1073765594 Token ::@expr1073765595 findsimplematch (@expr1073765596 tokenizer@var1712 .@expr1073765597 tokens (@expr1073765598 ) , "dostuff ( p ) ;" ) ;
6381: $if $(@expr1073765599 $!@expr1073765600 $assert_ $(@expr1073765601 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6381 $, dostuff1@var1714 .@expr23778 function (@expr23779 ) $) $) { $return ; }
6382: $if $(@expr1073765604 $!@expr1073765605 $assert_ $(@expr1073765606 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6382 $, dostuff1@var1714 .@expr23778 function (@expr23779 ) &&@expr23785 dostuff1@var1714 .@expr23778 function (@expr23779 ) .@expr23788 token@expr1073765580 $) $) { $return ; }
6383: $if $(@expr1073765613 $!@expr1073765614 $assert_ $(@expr1073765615 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6383 $, dostuff1@var1714 .@expr23778 function (@expr23779 ) &&@expr23785 dostuff1@var1714 .@expr23778 function (@expr23779 ) .@expr23788 token &&@expr1073765622 dostuff1@var1714 .@expr23778 function (@expr23779 ) .@expr23788 token .@expr1073765626 linenr (@expr1073765627 ) ==@expr1073765628 1 $) $) { $return ; }
6384: }
6385:
6386: void findFunction27 ( ) {
6387: $Tokenizer $tokenizer@var1715 $(@expr1073765629 $&@expr1073765630 $settings1@var123 $, $this@expr1073765631 $) $; $const $SymbolDatabase $* $db@var1716 $; $db@var1716 $=@expr1073765632 $getSymbolDB_inner $(@expr1073765633 $tokenizer@var1715 $, "namespace { void a(int); }\nvoid f() { a(9); }" $, $"test.cpp" $) $; $if $(@expr1073765634 $!@expr1073765635 $assert_ $(@expr1073765636 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6387 $, $db@var1716 $) $) { $return $; } $do ${ $} $while $(@expr1073765637 $false $)
6388: ;
6389: const Token * a@var1717 ; a@var1717 =@expr1073765638 Token ::@expr1073765639 findsimplematch (@expr1073765640 tokenizer@var1715 .@expr1073765641 tokens (@expr1073765642 ) , "a ( 9 )" ) ;
6390: $if $(@expr1073765643 $!@expr1073765644 $assert_ $(@expr1073765645 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6390 $, a@var1717 $) $) { $return ; }
6391: $if $(@expr1073765646 $!@expr1073765647 $assert_ $(@expr1073765648 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6391 $, a@var1717 .@expr1073765649 function (@expr1073765650 ) $) $) { $return ; }
6392: }
6393:
6394: void findFunction28 ( ) {
6395: $Tokenizer $tokenizer@var1718 $(@expr1073765652 $&@expr1073765653 $settings1@var123 $, $this@expr1073765654 $) $; $const $SymbolDatabase $* $db@var1719 $; $db@var1719 $=@expr1073765655 $getSymbolDB_inner $(@expr1073765656 $tokenizer@var1718 $, "namespace { void a(int); }\nstruct S {\n  void foo() { a(7); }\n  void a(int);\n};" $, $"test.cpp" $) $; $if $(@expr1073765657 $!@expr1073765658 $assert_ $(@expr1073765659 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6395 $, $db@var1719 $) $) { $return $; } $do ${ $} $while $(@expr1073765660 $false $)
6396:
6397:
6398:
6399: ;
6400: const Token * a@var1720 ; a@var1720 =@expr1073765661 Token ::@expr1073765662 findsimplematch (@expr1073765663 tokenizer@var1718 .@expr1073765664 tokens (@expr1073765665 ) , "a ( 7 )" ) ;
6401: $if $(@expr1073765666 $!@expr1073765667 $assert_ $(@expr1073765668 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6401 $, a@var1720 $) $) { $return ; }
6402: $if $(@expr1073765669 $!@expr1073765670 $assert_ $(@expr1073765671 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6402 $, a@var1720 .@expr23848 function (@expr23849 ) $) $) { $return ; }
6403: $if $(@expr1073765674 $!@expr1073765675 $assert_ $(@expr1073765676 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6403 $, a@var1720 .@expr23848 function (@expr23849 ) .@expr23855 token@expr1073765651 $) $) { $return ; }
6404: $if $(@expr1073765680 $!@expr1073765681 $assertEquals $(@expr1073765682 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6404 $, 4 $, a@var1720 .@expr23848 function (@expr23849 ) .@expr23855 token .@expr1073765686 linenr (@expr1073765687 ) $) $) { $return ; }
6405: }
6406:
6407: void findFunction29 ( ) {
6408: $Tokenizer $tokenizer@var1721 $(@expr1073765689 $&@expr1073765690 $settings1@var123 $, $this@expr1073765691 $) $; $const $SymbolDatabase $* $db@var1722 $; $db@var1722 $=@expr1073765692 $getSymbolDB_inner $(@expr1073765693 $tokenizer@var1721 $, "struct A {\n    int foo() const;\n};\n\nstruct B {\n    A a;\n};\n\ntypedef std::shared_ptr<B> BPtr;\n\nvoid bar(BPtr b) {\n    int x = b->a.foo();\n}" $, $"test.cpp" $) $; $if $(@expr1073765694 $!@expr1073765695 $assert_ $(@expr1073765696 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6408 $, $db@var1722 $) $) { $return $; } $do ${ $} $while $(@expr1073765697 $false $)
6409:
|
6419:
6420: ;
6421: const Token * foo@var1723 ; foo@var1723 =@expr1073765698 Token ::@expr1073765699 findsimplematch (@expr1073765700 tokenizer@var1721 .@expr1073765701 tokens (@expr1073765702 ) , "foo ( ) ;" ) ;
6422: $if $(@expr1073765703 $!@expr1073765704 $assert_ $(@expr1073765705 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6422 $, foo@var1723 $) $) { $return ; }
6423: $if $(@expr1073765706 $!@expr1073765707 $assert_ $(@expr1073765708 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6423 $, foo@var1723 .@expr23885 function (@expr23886 ) $) $) { $return ; }
6424: $if $(@expr1073765711 $!@expr1073765712 $assert_ $(@expr1073765713 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6424 $, foo@var1723 .@expr23885 function (@expr23886 ) .@expr23892 token@expr1073765688 $) $) { $return ; }
6425: $if $(@expr1073765717 $!@expr1073765718 $assertEquals $(@expr1073765719 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6425 $, 2 $, foo@var1723 .@expr23885 function (@expr23886 ) .@expr23892 token .@expr1073765723 linenr (@expr1073765724 ) $) $) { $return ; }
6426: }
6427:
6428: void findFunction30 ( ) {
6429: $Tokenizer $tokenizer@var1724 $(@expr1073765725 $&@expr1073765726 $settings1@var123 $, $this@expr1073765727 $) $; $const $SymbolDatabase $* $db@var1725 $; $db@var1725 $=@expr1073765728 $getSymbolDB_inner $(@expr1073765729 $tokenizer@var1724 $, "struct A;\nvoid foo(std::shared_ptr<A> ptr) {\n    int x = ptr->bar();\n}" $, $"test.cpp" $) $; $if $(@expr1073765730 $!@expr1073765731 $assert_ $(@expr1073765732 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6429 $, $db@var1725 $) $) { $return $; } $do ${ $} $while $(@expr1073765733 $false $)
6430:
6431:
6432: ;
6433: const Token * bar@var1726 ; bar@var1726 =@expr1073765734 Token ::@expr1073765735 findsimplematch (@expr1073765736 tokenizer@var1724 .@expr1073765737 tokens (@expr1073765738 ) , "bar ( ) ;" ) ;
6434: $if $(@expr1073765739 $!@expr1073765740 $assert_ $(@expr1073765741 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6434 $, bar@var1726 $) $) { $return ; }
6435: $if $(@expr1073765742 $!@expr1073765743 $assert_ $(@expr1073765744 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6435 $, !@expr1073765745 bar@var1726 .@expr1073765746 function (@expr1073765747 ) $) $) { $return ; }
6436: }
6437:
6438: void findFunction31 ( ) {
6439: $Tokenizer $tokenizer@var1727 $(@expr1073765749 $&@expr1073765750 $settings1@var123 $, $this@expr1073765751 $) $; $const $SymbolDatabase $* $db@var1728 $; $db@var1728 $=@expr1073765752 $getSymbolDB_inner $(@expr1073765753 $tokenizer@var1727 $, "void foo(bool);\nvoid foo(std::string s);\nvoid bar() { foo(\"123\"); }" $, $"test.cpp" $) $; $if $(@expr1073765754 $!@expr1073765755 $assert_ $(@expr1073765756 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6439 $, $db@var1728 $) $) { $return $; } $do ${ $} $while $(@expr1073765757 $false $)
6440:
6441: ;
6442: const Token * foo@var1729 ; foo@var1729 =@expr1073765758 Token ::@expr1073765759 findsimplematch (@expr1073765760 tokenizer@var1727 .@expr1073765761 tokens (@expr1073765762 ) , "foo ( \"123\" ) ;" ) ;
6443: $if $(@expr1073765763 $!@expr1073765764 $assert_ $(@expr1073765765 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6443 $, foo@var1729 $) $) { $return ; }
6444: $if $(@expr1073765766 $!@expr1073765767 $assert_ $(@expr1073765768 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6444 $, foo@var1729 .@expr23945 function (@expr23946 ) $) $) { $return ; }
6445: $if $(@expr1073765771 $!@expr1073765772 $assert_ $(@expr1073765773 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6445 $, foo@var1729 .@expr23945 function (@expr23946 ) .@expr23952 tokenDef@expr1073765748 $) $) { $return ; }
6446: $if $(@expr1073765777 $!@expr1073765778 $assertEquals $(@expr1073765779 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6446 $, 1 $, foo@var1729 .@expr23945 function (@expr23946 ) .@expr23952 tokenDef .@expr1073765783 linenr (@expr1073765784 ) $) $) { $return ; }
6447: }
6448:
6449: void findFunction32 ( ) {
6450: $Tokenizer $tokenizer@var1730 $(@expr1073765786 $&@expr1073765787 $settings1@var123 $, $this@expr1073765788 $) $; $const $SymbolDatabase $* $db@var1731 $; $db@var1731 $=@expr1073765789 $getSymbolDB_inner $(@expr1073765790 $tokenizer@var1730 $, "void foo(char *p);\nvoid bar() { foo(\"123\"); }" $, $"test.c" $) $; $do ${ $} $while $(@expr1073765791 $false $)
6451: ;
6452: (@expr1073765792 void ) db@var1731 ;
6453: const Token * foo@var1732 ; foo@var1732 =@expr1073765793 Token ::@expr1073765794 findsimplematch (@expr1073765795 tokenizer@var1730 .@expr1073765796 tokens (@expr1073765797 ) , "foo ( \"123\" ) ;" ) ;
6454: $if $(@expr1073765798 $!@expr1073765799 $assert_ $(@expr1073765800 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6454 $, foo@var1732 $) $) { $return ; }
6455: $if $(@expr1073765801 $!@expr1073765802 $assert_ $(@expr1073765803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6455 $, foo@var1732 .@expr23980 function (@expr23981 ) $) $) { $return ; }
6456: $if $(@expr1073765806 $!@expr1073765807 $assert_ $(@expr1073765808 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6456 $, foo@var1732 .@expr23980 function (@expr23981 ) .@expr23987 tokenDef@expr1073765785 $) $) { $return ; }
6457: $if $(@expr1073765812 $!@expr1073765813 $assertEquals $(@expr1073765814 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6457 $, 1 $, foo@var1732 .@expr23980 function (@expr23981 ) .@expr23987 tokenDef .@expr1073765818 linenr (@expr1073765819 ) $) $) { $return ; }
6458: }
6459:
6460: void findFunction33 ( ) {
6461: {
6462: $Tokenizer $tokenizer@var1733 $(@expr1073765821 $&@expr1073765822 $settings1@var123 $, $this@expr23999 $) $; $const $SymbolDatabase $* $db@var1734 $; $db@var1734 $=@expr1073765824 $getSymbolDB_inner $(@expr1073765825 $tokenizer@var1733 $, "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo();\n    }\n};" $, $"test.cpp" $) $; $if $(@expr1073765826 $!@expr1073765827 $assert_ $(@expr1073765828 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6462 $, $db@var1734 $) $) { $return $; } $do ${ $} $while $(@expr1073765829 $false $)
6463:
|
6472:
6473: ;
6474: (@expr1073765830 void ) db@var1734 ;
6475: const Token * foo@var1735 ; foo@var1735 =@expr1073765831 Token ::@expr24008 findsimplematch (@expr1073765833 tokenizer@var1733 .@expr1073765834 tokens (@expr1073765835 ) , "foo ( ) ;" ) ;
6476: $if $(@expr1073765836 $!@expr1073765837 $assert_ $(@expr1073765838 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6476 $, foo@var1735 $) $) { $return ; }
6477: $if $(@expr1073765839 $!@expr1073765840 $assert_ $(@expr1073765841 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6477 $, foo@var1735 .@expr24018 function (@expr24019 ) $) $) { $return ; }
6478: $if $(@expr1073765844 $!@expr1073765845 $assert_ $(@expr1073765846 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6478 $, foo@var1735 .@expr24018 function (@expr24019 ) .@expr24025 tokenDef@expr23996 $) $) { $return ; }
6479: $if $(@expr1073765850 $!@expr1073765851 $assertEquals $(@expr1073765852 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6479 $, 4 $, foo@var1735 .@expr24018 function (@expr24019 ) .@expr24025 tokenDef .@expr1073765856 linenr (@expr1073765857 ) $) $) { $return ; }
6480: }
6481: {
6482: $Tokenizer $tokenizer@var1736 $(@expr1073765858 $&@expr1073765859 $settings1@var123 $, $this@expr23999 $) $; $const $SymbolDatabase $* $db@var1737 $; $db@var1737 $=@expr1073765860 $getSymbolDB_inner $(@expr1073765861 $tokenizer@var1736 $, "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1);\n    }\n};" $, $"test.cpp" $) $; $if $(@expr1073765862 $!@expr1073765863 $assert_ $(@expr1073765864 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6482 $, $db@var1737 $) $) { $return $; } $do ${ $} $while $(@expr1073765865 $false $)
6483:
|
6492:
6493: ;
6494: (@expr1073765866 void ) db@var1737 ;
6495: const Token * foo@var1738 ; foo@var1738 =@expr1073765867 Token ::@expr24008 findsimplematch (@expr1073765869 tokenizer@var1736 .@expr1073765870 tokens (@expr1073765871 ) , "foo ( 1 ) ;" ) ;
6496: $if $(@expr1073765872 $!@expr1073765873 $assert_ $(@expr1073765874 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6496 $, foo@var1738 $) $) { $return ; }
6497: $if $(@expr1073765875 $!@expr1073765876 $assert_ $(@expr1073765877 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6497 $, foo@var1738 .@expr24054 function (@expr24055 ) $) $) { $return ; }
6498: $if $(@expr1073765880 $!@expr1073765881 $assert_ $(@expr1073765882 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6498 $, foo@var1738 .@expr24054 function (@expr24055 ) .@expr24061 tokenDef@expr23996 $) $) { $return ; }
6499: $if $(@expr1073765886 $!@expr1073765887 $assertEquals $(@expr1073765888 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6499 $, 4 $, foo@var1738 .@expr24054 function (@expr24055 ) .@expr24061 tokenDef .@expr1073765892 linenr (@expr1073765893 ) $) $) { $return ; }
6500: }
6501: {
6502: $Tokenizer $tokenizer@var1739 $(@expr1073765894 $&@expr1073765895 $settings1@var123 $, $this@expr23999 $) $; $const $SymbolDatabase $* $db@var1740 $; $db@var1740 $=@expr1073765896 $getSymbolDB_inner $(@expr1073765897 $tokenizer@var1739 $, "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1,2);\n    }\n};" $, $"test.cpp" $) $; $if $(@expr1073765898 $!@expr1073765899 $assert_ $(@expr1073765900 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6502 $, $db@var1740 $) $) { $return $; } $do ${ $} $while $(@expr1073765901 $false $)
6503:
|
6512:
6513: ;
6514: (@expr1073765902 void ) db@var1740 ;
6515: const Token * foo@var1741 ; foo@var1741 =@expr1073765903 Token ::@expr24008 findsimplematch (@expr1073765905 tokenizer@var1739 .@expr1073765906 tokens (@expr1073765907 ) , "foo ( 1 , 2 ) ;" ) ;
6516: $if $(@expr1073765908 $!@expr1073765909 $assert_ $(@expr1073765910 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6516 $, foo@var1741 $) $) { $return ; }
6517: $if $(@expr1073765911 $!@expr1073765912 $assert_ $(@expr1073765913 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6517 $, foo@var1741 .@expr24090 function (@expr24091 ) $) $) { $return ; }
6518: $if $(@expr1073765916 $!@expr1073765917 $assert_ $(@expr1073765918 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6518 $, foo@var1741 .@expr24090 function (@expr24091 ) .@expr24097 tokenDef@expr23996 $) $) { $return ; }
6519: $if $(@expr1073765922 $!@expr1073765923 $assertEquals $(@expr1073765924 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6519 $, 4 $, foo@var1741 .@expr24090 function (@expr24091 ) .@expr24097 tokenDef .@expr1073765928 linenr (@expr1073765929 ) $) $) { $return ; }
6520: }
6521: {
6522: $Tokenizer $tokenizer@var1742 $(@expr1073765930 $&@expr1073765931 $settings1@var123 $, $this@expr23999 $) $; $const $SymbolDatabase $* $db@var1743 $; $db@var1743 $=@expr1073765932 $getSymbolDB_inner $(@expr1073765933 $tokenizer@var1742 $, "class Base {\n    int i{};\npublic:\n    void foo(int, ...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1);\n    }\n};" $, $"test.cpp" $) $; $if $(@expr1073765934 $!@expr1073765935 $assert_ $(@expr1073765936 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6522 $, $db@var1743 $) $) { $return $; } $do ${ $} $while $(@expr1073765937 $false $)
6523:
|
6532:
6533: ;
6534: (@expr1073765938 void ) db@var1743 ;
6535: const Token * foo@var1744 ; foo@var1744 =@expr1073765939 Token ::@expr24008 findsimplematch (@expr1073765941 tokenizer@var1742 .@expr1073765942 tokens (@expr1073765943 ) , "foo ( 1 ) ;" ) ;
6536: $if $(@expr1073765944 $!@expr1073765945 $assert_ $(@expr1073765946 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6536 $, foo@var1744 $) $) { $return ; }
6537: $if $(@expr1073765947 $!@expr1073765948 $assert_ $(@expr1073765949 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6537 $, foo@var1744 .@expr24126 function (@expr24127 ) $) $) { $return ; }
6538: $if $(@expr1073765952 $!@expr1073765953 $assert_ $(@expr1073765954 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6538 $, foo@var1744 .@expr24126 function (@expr24127 ) .@expr24133 tokenDef@expr23996 $) $) { $return ; }
6539: $if $(@expr1073765958 $!@expr1073765959 $assertEquals $(@expr1073765960 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6539 $, 4 $, foo@var1744 .@expr24126 function (@expr24127 ) .@expr24133 tokenDef .@expr1073765964 linenr (@expr1073765965 ) $) $) { $return ; }
6540: }
6541: {
6542: $Tokenizer $tokenizer@var1745 $(@expr1073765966 $&@expr1073765967 $settings1@var123 $, $this@expr23999 $) $; $const $SymbolDatabase $* $db@var1746 $; $db@var1746 $=@expr1073765968 $getSymbolDB_inner $(@expr1073765969 $tokenizer@var1745 $, "class Base {\n    int i{};\npublic:\n    void foo(int,...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1,2);\n    }\n};" $, $"test.cpp" $) $; $if $(@expr1073765970 $!@expr1073765971 $assert_ $(@expr1073765972 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6542 $, $db@var1746 $) $) { $return $; } $do ${ $} $while $(@expr1073765973 $false $)
6543:
|
6552:
6553: ;
6554: (@expr1073765974 void ) db@var1746 ;
6555: const Token * foo@var1747 ; foo@var1747 =@expr1073765975 Token ::@expr24008 findsimplematch (@expr1073765977 tokenizer@var1745 .@expr1073765978 tokens (@expr1073765979 ) , "foo ( 1 , 2 ) ;" ) ;
6556: $if $(@expr1073765980 $!@expr1073765981 $assert_ $(@expr1073765982 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6556 $, foo@var1747 $) $) { $return ; }
6557: $if $(@expr1073765983 $!@expr1073765984 $assert_ $(@expr1073765985 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6557 $, foo@var1747 .@expr24162 function (@expr24163 ) $) $) { $return ; }
6558: $if $(@expr1073765988 $!@expr1073765989 $assert_ $(@expr1073765990 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6558 $, foo@var1747 .@expr24162 function (@expr24163 ) .@expr24169 tokenDef@expr23996 $) $) { $return ; }
6559: $if $(@expr1073765994 $!@expr1073765995 $assertEquals $(@expr1073765996 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6559 $, 4 $, foo@var1747 .@expr24162 function (@expr24163 ) .@expr24169 tokenDef .@expr1073766000 linenr (@expr1073766001 ) $) $) { $return ; }
6560: }
6561: {
6562: $Tokenizer $tokenizer@var1748 $(@expr1073766002 $&@expr1073766003 $settings1@var123 $, $this@expr23999 $) $; $const $SymbolDatabase $* $db@var1749 $; $db@var1749 $=@expr1073766004 $getSymbolDB_inner $(@expr1073766005 $tokenizer@var1748 $, "class Base {\n    int i{};\npublic:\n    void foo(int,...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1, 2, 3);\n    }\n};" $, $"test.cpp" $) $; $if $(@expr1073766006 $!@expr1073766007 $assert_ $(@expr1073766008 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6562 $, $db@var1749 $) $) { $return $; } $do ${ $} $while $(@expr1073766009 $false $)
6563:
|
6572:
6573: ;
6574: (@expr1073766010 void ) db@var1749 ;
6575: const Token * foo@var1750 ; foo@var1750 =@expr1073766011 Token ::@expr24008 findsimplematch (@expr1073766013 tokenizer@var1748 .@expr1073766014 tokens (@expr1073766015 ) , "foo ( 1 , 2 , 3 ) ;" ) ;
6576: $if $(@expr1073766016 $!@expr1073766017 $assert_ $(@expr1073766018 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6576 $, foo@var1750 $) $) { $return ; }
6577: $if $(@expr1073766019 $!@expr1073766020 $assert_ $(@expr1073766021 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6577 $, foo@var1750 .@expr24198 function (@expr24199 ) $) $) { $return ; }
6578: $if $(@expr1073766024 $!@expr1073766025 $assert_ $(@expr1073766026 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6578 $, foo@var1750 .@expr24198 function (@expr24199 ) .@expr24205 tokenDef@expr23996 $) $) { $return ; }
6579: $if $(@expr1073766030 $!@expr1073766031 $assertEquals $(@expr1073766032 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6579 $, 4 $, foo@var1750 .@expr24198 function (@expr24199 ) .@expr24205 tokenDef .@expr1073766036 linenr (@expr1073766037 ) $) $) { $return ; }
6580: }
6581: }
6582:
6583: void findFunction34 ( ) {
6584: $Tokenizer $tokenizer@var1751 $(@expr1073766039 $&@expr1073766040 $settings1@var123 $, $this@expr1073766041 $) $; $const $SymbolDatabase $* $db@var1752 $; $db@var1752 $=@expr1073766042 $getSymbolDB_inner $(@expr1073766043 $tokenizer@var1751 $, "namespace cppcheck {\n    class Platform {\n    public:\n        enum PlatformType { Unspecified };\n    };\n}\nclass ImportProject {\n    void selectOneVsConfig(cppcheck::Platform::PlatformType);\n};\nclass Settings : public cppcheck::Platform { };\nvoid ImportProject::selectOneVsConfig(Settings::PlatformType) { }" $, $"test.cpp" $) $; $if $(@expr1073766044 $!@expr1073766045 $assert_ $(@expr1073766046 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6584 $, $db@var1752 $) $) { $return $; } $do ${ $} $while $(@expr1073766047 $false $)
6585:
|
6593:
6594: ;
6595: (@expr1073766048 void ) db@var1752 ;
6596: const Token * foo@var1753 ; foo@var1753 =@expr1073766049 Token ::@expr1073766050 findsimplematch (@expr1073766051 tokenizer@var1751 .@expr1073766052 tokens (@expr1073766053 ) , "selectOneVsConfig ( Settings :: PlatformType ) { }" ) ;
6597: $if $(@expr1073766054 $!@expr1073766055 $assert_ $(@expr1073766056 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6597 $, foo@var1753 $) $) { $return ; }
6598: $if $(@expr1073766057 $!@expr1073766058 $assert_ $(@expr1073766059 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6598 $, foo@var1753 .@expr24236 function (@expr24237 ) $) $) { $return ; }
6599: $if $(@expr1073766062 $!@expr1073766063 $assert_ $(@expr1073766064 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6599 $, foo@var1753 .@expr24236 function (@expr24237 ) .@expr24243 tokenDef@expr1073766038 $) $) { $return ; }
6600: $if $(@expr1073766068 $!@expr1073766069 $assertEquals $(@expr1073766070 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6600 $, 8 $, foo@var1753 .@expr24236 function (@expr24237 ) .@expr24243 tokenDef .@expr1073766074 linenr (@expr1073766075 ) $) $) { $return ; }
6601: }
6602:
6603: void findFunction35 ( ) {
6604: $Tokenizer $tokenizer@var1754 $(@expr1073766077 $&@expr1073766078 $settings1@var123 $, $this@expr1073766079 $) $; $const $SymbolDatabase $* $db@var1755 $; $db@var1755 $=@expr1073766080 $getSymbolDB_inner $(@expr1073766081 $tokenizer@var1754 $, "namespace clangimport {\n    class AstNode {\n    public:\n        AstNode();\n        void createTokens();\n    };\n}\n::clangimport::AstNode::AstNode() { }\nvoid ::clangimport::AstNode::createTokens() { }" $, $"test.cpp" $) $; $if $(@expr1073766082 $!@expr1073766083 $assert_ $(@expr1073766084 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6604 $, $db@var1755 $) $) { $return $; } $do ${ $} $while $(@expr1073766085 $false $)
6605:
|
6611:
6612: ;
6613: (@expr1073766086 void ) db@var1755 ;
6614: const Token * foo@var1756 ; foo@var1756 =@expr1073766087 Token ::@expr24264 findsimplematch (@expr1073766089 tokenizer@var1754 .@expr24266 tokens (@expr24267 ) , "AstNode ( ) { }" ) ;
6615: $if $(@expr1073766092 $!@expr1073766093 $assert_ $(@expr1073766094 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6615 $, foo@var1756 $) $) { $return ; }
6616: $if $(@expr1073766095 $!@expr1073766096 $assert_ $(@expr1073766097 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6616 $, foo@var1756 .@expr24274 function (@expr24275 ) $) $) { $return ; }
6617: $if $(@expr1073766100 $!@expr1073766101 $assert_ $(@expr1073766102 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6617 $, foo@var1756 .@expr24274 function (@expr24275 ) .@expr24281 tokenDef@expr24252 $) $) { $return ; }
6618: $if $(@expr1073766106 $!@expr1073766107 $assertEquals $(@expr1073766108 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6618 $, 4 $, foo@var1756 .@expr24274 function (@expr24275 ) .@expr24281 tokenDef .@expr24288 linenr (@expr24289 ) $) $) { $return ; }
6619: foo@var1756 =@expr1073766114 Token ::@expr24264 findsimplematch (@expr1073766116 tokenizer@var1754 .@expr24266 tokens (@expr24267 ) , "createTokens ( ) { }" ) ;
6620: $if $(@expr1073766119 $!@expr1073766120 $assert_ $(@expr1073766121 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6620 $, foo@var1756 $) $) { $return ; }
6621: $if $(@expr1073766122 $!@expr1073766123 $assert_ $(@expr1073766124 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6621 $, foo@var1756 .@expr24274 function (@expr24275 ) $) $) { $return ; }
6622: $if $(@expr1073766127 $!@expr1073766128 $assert_ $(@expr1073766129 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6622 $, foo@var1756 .@expr24274 function (@expr24275 ) .@expr24281 tokenDef@expr24252 $) $) { $return ; }
6623: $if $(@expr1073766133 $!@expr1073766134 $assertEquals $(@expr1073766135 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6623 $, 5 $, foo@var1756 .@expr24274 function (@expr24275 ) .@expr24281 tokenDef .@expr24288 linenr (@expr24289 ) $) $) { $return ; }
6624: }
6625:
6626: void findFunction36 ( ) {
6627: $Tokenizer $tokenizer@var1757 $(@expr1073766141 $&@expr1073766142 $settings1@var123 $, $this@expr1073766143 $) $; $const $SymbolDatabase $* $db@var1758 $; $db@var1758 $=@expr1073766144 $getSymbolDB_inner $(@expr1073766145 $tokenizer@var1757 $, "namespace external {\n    enum class T { };\n}\nnamespace ns {\n    class A {\n    public:\n        void f(external::T);\n    };\n}\nnamespace ns {\n    void A::f(external::T link_type) { }\n}" $, $"test.cpp" $) $; $if $(@expr1073766146 $!@expr1073766147 $assert_ $(@expr1073766148 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6627 $, $db@var1758 $) $) { $return $; } $do ${ $} $while $(@expr1073766149 $false $)
6628:
|
6637:
6638: ;
6639: $if $(@expr1073766150 $!@expr1073766151 $assertEquals $(@expr1073766152 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6639 $, "" $, errout@var100 .@expr1073766153 str (@expr1073766154 ) $) $) { $return ; }
6640: const Token * functok@var1759 ; functok@var1759 =@expr1073766155 Token ::@expr1073766156 findsimplematch (@expr1073766157 tokenizer@var1757 .@expr1073766158 tokens (@expr1073766159 ) , "f ( external :: T link_type )" ) ;
6641: $if $(@expr1073766160 $!@expr1073766161 $assert_ $(@expr1073766162 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6641 $, functok@var1759 $) $) { $return ; }
6642: $if $(@expr1073766163 $!@expr1073766164 $assert_ $(@expr1073766165 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6642 $, functok@var1759 .@expr24342 function (@expr24343 ) $) $) { $return ; }
6643: $if $(@expr1073766168 $!@expr1073766169 $assert_ $(@expr1073766170 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6643 $, functok@var1759 .@expr24342 function (@expr24343 ) .@expr1073766173 name (@expr1073766174 ) ==@expr1073766175 "f" $) $) { $return ; }
6644: $if $(@expr1073766176 $!@expr1073766177 $assertEquals $(@expr1073766178 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6644 $, 7 $, functok@var1759 .@expr24342 function (@expr24343 ) .@expr1073766181 tokenDef .@expr1073766182 linenr (@expr1073766183 ) $) $) { $return ; }
6645: }
6646:
6647: void findFunction37 ( ) {
6648: $Tokenizer $tokenizer@var1760 $(@expr1073766184 $&@expr1073766185 $settings1@var123 $, $this@expr1073766186 $) $; $const $SymbolDatabase $* $db@var1761 $; $db@var1761 $=@expr1073766187 $getSymbolDB_inner $(@expr1073766188 $tokenizer@var1760 $, "namespace ns {\n    class V { };\n}\nclass A {\npublic:\n    void f(const ns::V&);\n};\nusing ::ns::V;\nvoid A::f(const V&) { }" $, $"test.cpp" $) $; $if $(@expr1073766189 $!@expr1073766190 $assert_ $(@expr1073766191 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6648 $, $db@var1761 $) $) { $return $; } $do ${ $} $while $(@expr1073766192 $false $)
6649:
|
6655:
6656: ;
6657: $if $(@expr1073766193 $!@expr1073766194 $assertEquals $(@expr1073766195 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6657 $, "" $, errout@var100 .@expr1073766196 str (@expr1073766197 ) $) $) { $return ; }
6658: const Token * functok@var1762 ; functok@var1762 =@expr1073766198 Token ::@expr1073766199 findsimplematch (@expr1073766200 tokenizer@var1760 .@expr1073766201 tokens (@expr1073766202 ) , "f ( const :: ns :: V & )" ) ;
6659: $if $(@expr1073766203 $!@expr1073766204 $assert_ $(@expr1073766205 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6659 $, functok@var1762 $) $) { $return ; }
6660: $if $(@expr1073766206 $!@expr1073766207 $assert_ $(@expr1073766208 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6660 $, functok@var1762 .@expr24385 function (@expr24386 ) $) $) { $return ; }
6661: $if $(@expr1073766211 $!@expr1073766212 $assert_ $(@expr1073766213 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6661 $, functok@var1762 .@expr24385 function (@expr24386 ) .@expr1073766216 name (@expr1073766217 ) ==@expr1073766218 "f" $) $) { $return ; }
6662: $if $(@expr1073766219 $!@expr1073766220 $assertEquals $(@expr1073766221 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6662 $, 6 $, functok@var1762 .@expr24385 function (@expr24386 ) .@expr1073766224 tokenDef .@expr1073766225 linenr (@expr1073766226 ) $) $) { $return ; }
6663: }
6664:
6665: void findFunction38 ( ) {
6666: $Tokenizer $tokenizer@var1763 $(@expr1073766227 $&@expr1073766228 $settings1@var123 $, $this@expr1073766229 $) $; $const $SymbolDatabase $* $db@var1764 $; $db@var1764 $=@expr1073766230 $getSymbolDB_inner $(@expr1073766231 $tokenizer@var1763 $, "namespace ns {\n    class V { };\n    using Var = V;\n}\nclass A {\n    void f(const ns::Var&);\n};\nusing ::ns::Var;\nvoid A::f(const Var&) {}" $, $"test.cpp" $) $; $if $(@expr1073766232 $!@expr1073766233 $assert_ $(@expr1073766234 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6666 $, $db@var1764 $) $) { $return $; } $do ${ $} $while $(@expr1073766235 $false $)
6667:
|
6673:
6674: ;
6675: $if $(@expr1073766236 $!@expr1073766237 $assertEquals $(@expr1073766238 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6675 $, "" $, errout@var100 .@expr1073766239 str (@expr1073766240 ) $) $) { $return ; }
6676: const Token * functok@var1765 ; functok@var1765 =@expr1073766241 Token ::@expr1073766242 findsimplematch (@expr1073766243 tokenizer@var1763 .@expr1073766244 tokens (@expr1073766245 ) , "f ( const :: ns :: V & )" ) ;
6677: $if $(@expr1073766246 $!@expr1073766247 $assert_ $(@expr1073766248 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6677 $, functok@var1765 $) $) { $return ; }
6678: $if $(@expr1073766249 $!@expr1073766250 $assert_ $(@expr1073766251 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6678 $, functok@var1765 .@expr24428 function (@expr24429 ) $) $) { $return ; }
6679: $if $(@expr1073766254 $!@expr1073766255 $assert_ $(@expr1073766256 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6679 $, functok@var1765 .@expr24428 function (@expr24429 ) .@expr1073766259 name (@expr1073766260 ) ==@expr1073766261 "f" $) $) { $return ; }
6680: $if $(@expr1073766262 $!@expr1073766263 $assertEquals $(@expr1073766264 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6680 $, 6 $, functok@var1765 .@expr24428 function (@expr24429 ) .@expr1073766267 tokenDef .@expr1073766268 linenr (@expr1073766269 ) $) $) { $return ; }
6681: }
6682:
6683: void findFunction39 ( ) {
6684: $Tokenizer $tokenizer@var1766 $(@expr1073766270 $&@expr1073766271 $settings1@var123 $, $this@expr1073766272 $) $; $const $SymbolDatabase $* $db@var1767 $; $db@var1767 $=@expr1073766273 $getSymbolDB_inner $(@expr1073766274 $tokenizer@var1766 $, "namespace external {\n    class V {\n    public:\n        using I = int;\n    };\n}\nclass A {\n    void f(external::V::I);\n};\nusing ::external::V;\nvoid A::f(V::I) {}" $, $"test.cpp" $) $; $if $(@expr1073766275 $!@expr1073766276 $assert_ $(@expr1073766277 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6684 $, $db@var1767 $) $) { $return $; } $do ${ $} $while $(@expr1073766278 $false $)
6685:
|
6693:
6694: ;
6695: $if $(@expr1073766279 $!@expr1073766280 $assertEquals $(@expr1073766281 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6695 $, "" $, errout@var100 .@expr1073766282 str (@expr1073766283 ) $) $) { $return ; }
6696: const Token * functok@var1768 ; functok@var1768 =@expr1073766284 Token ::@expr1073766285 findsimplematch (@expr1073766286 tokenizer@var1766 .@expr1073766287 tokens (@expr1073766288 ) , "f ( int )" ) ;
6697: $if $(@expr1073766289 $!@expr1073766290 $assert_ $(@expr1073766291 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6697 $, functok@var1768 $) $) { $return ; }
6698: $if $(@expr1073766292 $!@expr1073766293 $assert_ $(@expr1073766294 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6698 $, functok@var1768 .@expr24471 function (@expr24472 ) $) $) { $return ; }
6699: $if $(@expr1073766297 $!@expr1073766298 $assert_ $(@expr1073766299 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6699 $, functok@var1768 .@expr24471 function (@expr24472 ) .@expr1073766302 name (@expr1073766303 ) ==@expr1073766304 "f" $) $) { $return ; }
6700: $if $(@expr1073766305 $!@expr1073766306 $assertEquals $(@expr1073766307 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6700 $, 8 $, functok@var1768 .@expr24471 function (@expr24472 ) .@expr1073766310 tokenDef .@expr1073766311 linenr (@expr1073766312 ) $) $) { $return ; }
6701: }
6702:
6703: void findFunction40 ( ) {
6704: $Tokenizer $tokenizer@var1769 $(@expr1073766313 $&@expr1073766314 $settings1@var123 $, $this@expr1073766315 $) $; $const $SymbolDatabase $* $db@var1770 $; $db@var1770 $=@expr1073766316 $getSymbolDB_inner $(@expr1073766317 $tokenizer@var1769 $, "class E : public std::exception {\npublic:\n    const char* what() const noexcept override;\n};\nconst char* E::what() const noexcept {\n    return nullptr;\n}" $, $"test.cpp" $) $; $if $(@expr1073766318 $!@expr1073766319 $assert_ $(@expr1073766320 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6704 $, $db@var1770 $) $) { $return $; } $do ${ $} $while $(@expr1073766321 $false $)
6705:
|
6709:
6710: ;
6711: $if $(@expr1073766322 $!@expr1073766323 $assertEquals $(@expr1073766324 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6711 $, "" $, errout@var100 .@expr1073766325 str (@expr1073766326 ) $) $) { $return ; }
6712: const Token * functok@var1771 ; functok@var1771 =@expr1073766327 Token ::@expr1073766328 findsimplematch (@expr1073766329 tokenizer@var1769 .@expr1073766330 tokens (@expr1073766331 ) , "what ( ) const noexcept {" ) ;
6713: $if $(@expr1073766332 $!@expr1073766333 $assert_ $(@expr1073766334 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6713 $, functok@var1771 $) $) { $return ; }
6714: $if $(@expr1073766335 $!@expr1073766336 $assert_ $(@expr1073766337 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6714 $, functok@var1771 .@expr24514 function (@expr24515 ) $) $) { $return ; }
6715: $if $(@expr1073766340 $!@expr1073766341 $assert_ $(@expr1073766342 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6715 $, functok@var1771 .@expr24514 function (@expr24515 ) .@expr1073766345 name (@expr1073766346 ) ==@expr1073766347 "what" $) $) { $return ; }
6716: $if $(@expr1073766348 $!@expr1073766349 $assertEquals $(@expr1073766350 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6716 $, 3 $, functok@var1771 .@expr24514 function (@expr24515 ) .@expr1073766353 tokenDef .@expr1073766354 linenr (@expr1073766355 ) $) $) { $return ; }
6717: }
6718:
6719: void findFunction41 ( ) {
6720: {
6721: $Tokenizer $tokenizer@var1772 $(@expr1073766356 $&@expr1073766357 $settings1@var123 $, $this@expr24534 $) $; $const $SymbolDatabase $* $db@var1773 $; $db@var1773 $=@expr1073766359 $getSymbolDB_inner $(@expr1073766360 $tokenizer@var1772 $, "struct A {};\nconst int* g(const A&);\nint* g(A&);\nvoid f(A& x) {\n    int* y = g(x);\n    *y = 0;\n}\n" $, $"test.cpp" $) $; $if $(@expr1073766361 $!@expr1073766362 $assert_ $(@expr1073766363 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6721 $, $db@var1773 $) $) { $return $; } $do ${ $} $while $(@expr1073766364 $false $)
6722:
|
6726:
6727: ;
6728: $if $(@expr1073766365 $!@expr1073766366 $assertEquals $(@expr1073766367 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6728 $, "" $, errout@var100 .@expr24544 str (@expr24545 ) $) $) { $return ; }
6729: const Token * functok@var1774 ; functok@var1774 =@expr1073766370 Token ::@expr24547 findsimplematch (@expr1073766372 tokenizer@var1772 .@expr1073766373 tokens (@expr1073766374 ) , "g ( x )" ) ;
6730: $if $(@expr1073766375 $!@expr1073766376 $assert_ $(@expr1073766377 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6730 $, functok@var1774 $) $) { $return ; }
6731: $if $(@expr1073766378 $!@expr1073766379 $assert_ $(@expr1073766380 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6731 $, functok@var1774 .@expr24557 function (@expr24558 ) $) $) { $return ; }
6732: $if $(@expr1073766383 $!@expr1073766384 $assert_ $(@expr1073766385 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6732 $, functok@var1774 .@expr24557 function (@expr24558 ) .@expr1073766388 name (@expr1073766389 ) ==@expr1073766390 "g" $) $) { $return ; }
6733: $if $(@expr1073766391 $!@expr1073766392 $assertEquals $(@expr1073766393 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6733 $, 3 $, functok@var1774 .@expr24557 function (@expr24558 ) .@expr1073766396 tokenDef .@expr1073766397 linenr (@expr1073766398 ) $) $) { $return ; }
6734: }
6735: {
6736: $Tokenizer $tokenizer@var1775 $(@expr1073766399 $&@expr1073766400 $settings1@var123 $, $this@expr24534 $) $; $const $SymbolDatabase $* $db@var1776 $; $db@var1776 $=@expr1073766401 $getSymbolDB_inner $(@expr1073766402 $tokenizer@var1775 $, "struct A {};\nconst int* g(const A&);\nint* g(A&);\nvoid f(const A& x) {\n    int* y = g(x);\n    *y = 0;\n}\n" $, $"test.cpp" $) $; $if $(@expr1073766403 $!@expr1073766404 $assert_ $(@expr1073766405 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6736 $, $db@var1776 $) $) { $return $; } $do ${ $} $while $(@expr1073766406 $false $)
6737:
|
6741:
6742: ;
6743: $if $(@expr1073766407 $!@expr1073766408 $assertEquals $(@expr1073766409 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6743 $, "" $, errout@var100 .@expr24544 str (@expr24545 ) $) $) { $return ; }
6744: const Token * functok@var1777 ; functok@var1777 =@expr1073766412 Token ::@expr24547 findsimplematch (@expr1073766414 tokenizer@var1775 .@expr1073766415 tokens (@expr1073766416 ) , "g ( x )" ) ;
6745: $if $(@expr1073766417 $!@expr1073766418 $assert_ $(@expr1073766419 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6745 $, functok@var1777 $) $) { $return ; }
6746: $if $(@expr1073766420 $!@expr1073766421 $assert_ $(@expr1073766422 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6746 $, functok@var1777 .@expr24599 function (@expr24600 ) $) $) { $return ; }
6747: $if $(@expr1073766425 $!@expr1073766426 $assert_ $(@expr1073766427 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6747 $, functok@var1777 .@expr24599 function (@expr24600 ) .@expr1073766430 name (@expr1073766431 ) ==@expr1073766432 "g" $) $) { $return ; }
6748: $if $(@expr1073766433 $!@expr1073766434 $assertEquals $(@expr1073766435 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6748 $, 2 $, functok@var1777 .@expr24599 function (@expr24600 ) .@expr1073766438 tokenDef .@expr1073766439 linenr (@expr1073766440 ) $) $) { $return ; }
6749: }
6750: }
6751:
6752: void findFunction42 ( ) {
6753: $Tokenizer $tokenizer@var1778 $(@expr1073766441 $&@expr1073766442 $settings1@var123 $, $this@expr1073766443 $) $; $const $SymbolDatabase $* $db@var1779 $; $db@var1779 $=@expr1073766444 $getSymbolDB_inner $(@expr1073766445 $tokenizer@var1778 $, "void a(const std::string &, const std::string &);\nvoid a(long, long);\nvoid b() { a(true, false); }\n" $, $"test.cpp" $) $; $if $(@expr1073766446 $!@expr1073766447 $assert_ $(@expr1073766448 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6753 $, $db@var1779 $) $) { $return $; } $do ${ $} $while $(@expr1073766449 $false $)
6754:
6755: ;
6756: $if $(@expr1073766450 $!@expr1073766451 $assertEquals $(@expr1073766452 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6756 $, "" $, errout@var100 .@expr1073766453 str (@expr1073766454 ) $) $) { $return ; }
6757: const Token * functok@var1780 ; functok@var1780 =@expr1073766455 Token ::@expr1073766456 findsimplematch (@expr1073766457 tokenizer@var1778 .@expr1073766458 tokens (@expr1073766459 ) , "a ( true , false )" ) ;
6758: $if $(@expr1073766460 $!@expr1073766461 $assert_ $(@expr1073766462 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6758 $, functok@var1780 $) $) { $return ; }
6759: $if $(@expr1073766463 $!@expr1073766464 $assert_ $(@expr1073766465 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6759 $, functok@var1780 .@expr24642 function (@expr24643 ) $) $) { $return ; }
6760: $if $(@expr1073766468 $!@expr1073766469 $assert_ $(@expr1073766470 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6760 $, functok@var1780 .@expr24642 function (@expr24643 ) .@expr1073766473 name (@expr1073766474 ) ==@expr1073766475 "a" $) $) { $return ; }
6761: $if $(@expr1073766476 $!@expr1073766477 $assertEquals $(@expr1073766478 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6761 $, 2 $, functok@var1780 .@expr24642 function (@expr24643 ) .@expr1073766481 tokenDef .@expr1073766482 linenr (@expr1073766483 ) $) $) { $return ; }
6762: }
6763:
6764: void findFunction43 ( ) {
6765: {
6766: $Tokenizer $tokenizer@var1781 $(@expr1073766484 $&@expr1073766485 $settings1@var123 $, $this@expr24662 $) $; $const $SymbolDatabase $* $db@var1782 $; $db@var1782 $=@expr1073766487 $getSymbolDB_inner $(@expr1073766488 $tokenizer@var1781 $, "struct A {};\nconst A* g(const std::string&);\nconst A& g(std::vector<A>::size_type i);\nconst A& f(std::vector<A>::size_type i) { return g(i); }\n" $, $"test.cpp" $) $; $if $(@expr1073766489 $!@expr1073766490 $assert_ $(@expr1073766491 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6766 $, $db@var1782 $) $) { $return $; } $do ${ $} $while $(@expr1073766492 $false $)
6767:
6768:
6769: ;
6770: $if $(@expr1073766493 $!@expr1073766494 $assertEquals $(@expr1073766495 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6770 $, "" $, errout@var100 .@expr24672 str (@expr24673 ) $) $) { $return ; }
6771: const Token * functok@var1783 ; functok@var1783 =@expr1073766498 Token ::@expr24675 findsimplematch (@expr1073766500 tokenizer@var1781 .@expr1073766501 tokens (@expr1073766502 ) , "g ( i )" ) ;
6772: $if $(@expr1073766503 $!@expr1073766504 $assert_ $(@expr1073766505 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6772 $, functok@var1783 $) $) { $return ; }
6773: $if $(@expr1073766506 $!@expr1073766507 $assert_ $(@expr1073766508 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6773 $, functok@var1783 .@expr24685 function (@expr24686 ) $) $) { $return ; }
6774: $if $(@expr1073766511 $!@expr1073766512 $assert_ $(@expr1073766513 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6774 $, functok@var1783 .@expr24685 function (@expr24686 ) .@expr1073766516 name (@expr1073766517 ) ==@expr1073766518 "g" $) $) { $return ; }
6775: $if $(@expr1073766519 $!@expr1073766520 $assertEquals $(@expr1073766521 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6775 $, 3 $, functok@var1783 .@expr24685 function (@expr24686 ) .@expr1073766524 tokenDef .@expr1073766525 linenr (@expr1073766526 ) $) $) { $return ; }
6776: }
6777: {
6778: $Tokenizer $tokenizer@var1784 $(@expr1073766527 $&@expr1073766528 $settings1@var123 $, $this@expr24662 $) $; $const $SymbolDatabase $* $db@var1785 $; $db@var1785 $=@expr1073766529 $getSymbolDB_inner $(@expr1073766530 $tokenizer@var1784 $, "struct A {};\nconst A& g(std::vector<A>::size_type i);\nconst A* g(const std::string&);\nconst A& f(std::vector<A>::size_type i) { return g(i); }\n" $, $"test.cpp" $) $; $if $(@expr1073766531 $!@expr1073766532 $assert_ $(@expr1073766533 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6778 $, $db@var1785 $) $) { $return $; } $do ${ $} $while $(@expr1073766534 $false $)
6779:
6780:
6781: ;
6782: $if $(@expr1073766535 $!@expr1073766536 $assertEquals $(@expr1073766537 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6782 $, "" $, errout@var100 .@expr24672 str (@expr24673 ) $) $) { $return ; }
6783: const Token * functok@var1786 ; functok@var1786 =@expr1073766540 Token ::@expr24675 findsimplematch (@expr1073766542 tokenizer@var1784 .@expr1073766543 tokens (@expr1073766544 ) , "g ( i )" ) ;
6784: $if $(@expr1073766545 $!@expr1073766546 $assert_ $(@expr1073766547 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6784 $, functok@var1786 $) $) { $return ; }
6785: $if $(@expr1073766548 $!@expr1073766549 $assert_ $(@expr1073766550 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6785 $, functok@var1786 .@expr24727 function (@expr24728 ) $) $) { $return ; }
6786: $if $(@expr1073766553 $!@expr1073766554 $assert_ $(@expr1073766555 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6786 $, functok@var1786 .@expr24727 function (@expr24728 ) .@expr1073766558 name (@expr1073766559 ) ==@expr1073766560 "g" $) $) { $return ; }
6787: $if $(@expr1073766561 $!@expr1073766562 $assertEquals $(@expr1073766563 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6787 $, 2 $, functok@var1786 .@expr24727 function (@expr24728 ) .@expr1073766566 tokenDef .@expr1073766567 linenr (@expr1073766568 ) $) $) { $return ; }
6788: }
6789: }
6790:
6791:
6792: void findFunctionContainer ( ) {
6793: {
6794: $Tokenizer $tokenizer@var1787 $(@expr1073766570 $&@expr1073766571 $settings1@var123 $, $this@expr24748 $) $; $const $SymbolDatabase $* $db@var1788 $; $db@var1788 $=@expr1073766573 $getSymbolDB_inner $(@expr1073766574 $tokenizer@var1787 $, "void dostuff(std::vector<int> v);\nvoid f(std::vector<int> v) {\n  dostuff(v);\n}" $, $"test.cpp" $) $; $if $(@expr1073766575 $!@expr1073766576 $assert_ $(@expr1073766577 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6794 $, $db@var1788 $) $) { $return $; } $do ${ $} $while $(@expr1073766578 $false $)
6795:
6796:
6797: ;
6798: (@expr1073766579 void ) db@var1788 ;
6799: const Token * dostuff@var1789 ; dostuff@var1789 =@expr1073766580 Token ::@expr24757 findsimplematch (@expr1073766582 tokenizer@var1787 .@expr1073766583 tokens (@expr1073766584 ) , "dostuff ( v ) ;" ) ;
6800: $if $(@expr1073766585 $!@expr1073766586 $assert_ $(@expr1073766587 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6800 $, dostuff@var1789 .@expr24764 function (@expr24765 ) $) $) { $return ; }
6801: $if $(@expr1073766590 $!@expr1073766591 $assert_ $(@expr1073766592 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6801 $, dostuff@var1789 .@expr24764 function (@expr24765 ) &&@expr24771 dostuff@var1789 .@expr24764 function (@expr24765 ) .@expr24774 tokenDef@expr1073766569 $) $) { $return ; }
6802: $if $(@expr1073766599 $!@expr1073766600 $assert_ $(@expr1073766601 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6802 $, dostuff@var1789 .@expr24764 function (@expr24765 ) &&@expr24771 dostuff@var1789 .@expr24764 function (@expr24765 ) .@expr24774 tokenDef &&@expr1073766608 dostuff@var1789 .@expr24764 function (@expr24765 ) .@expr24774 tokenDef .@expr1073766612 linenr (@expr1073766613 ) ==@expr1073766614 1 $) $) { $return ; }
6803: }
6804: {
6805: $Tokenizer $tokenizer@var1790 $(@expr1073766615 $&@expr1073766616 $settings1@var123 $, $this@expr24748 $) $; $const $SymbolDatabase $* $db@var1791 $; $db@var1791 $=@expr1073766617 $getSymbolDB_inner $(@expr1073766618 $tokenizer@var1790 $, "void dostuff(std::vector<int> v);\nvoid dostuff(int *i);\nvoid f(std::vector<char> v) {\n  dostuff(v);\n}" $, $"test.cpp" $) $; $if $(@expr1073766619 $!@expr1073766620 $assert_ $(@expr1073766621 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6805 $, $db@var1791 $) $) { $return $; } $do ${ $} $while $(@expr1073766622 $false $)
6806:
6807:
6808:
6809: ;
6810: (@expr1073766623 void ) db@var1791 ;
6811: const Token * dostuff@var1792 ; dostuff@var1792 =@expr1073766624 Token ::@expr24757 findsimplematch (@expr1073766626 tokenizer@var1790 .@expr1073766627 tokens (@expr1073766628 ) , "dostuff ( v ) ;" ) ;
6812: $if $(@expr1073766629 $!@expr1073766630 $assert_ $(@expr1073766631 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6812 $, !@expr1073766632 dostuff@var1792 .@expr1073766633 function (@expr1073766634 ) $) $) { $return ; }
6813: }
6814: }
6815:
6816: void findFunctionExternC ( ) {
6817: $Tokenizer $tokenizer@var1793 $(@expr1073766635 $&@expr1073766636 $settings1@var123 $, $this@expr1073766637 $) $; $const $SymbolDatabase $* $db@var1794 $; $db@var1794 $=@expr1073766638 $getSymbolDB_inner $(@expr1073766639 $tokenizer@var1793 $, "extern \"C\" { void foo(int); }\nvoid bar() {\n    foo(42);\n}" $, $"test.cpp" $) $; $if $(@expr1073766640 $!@expr1073766641 $assert_ $(@expr1073766642 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6817 $, $db@var1794 $) $) { $return $; } $do ${ $} $while $(@expr1073766643 $false $)
6818:
6819:
6820: ;
6821: const Token * a@var1795 ; a@var1795 =@expr1073766644 Token ::@expr1073766645 findsimplematch (@expr1073766646 tokenizer@var1793 .@expr1073766647 tokens (@expr1073766648 ) , "foo ( 42 )" ) ;
6822: $if $(@expr1073766649 $!@expr1073766650 $assert_ $(@expr1073766651 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6822 $, a@var1795 $) $) { $return ; }
6823: $if $(@expr1073766652 $!@expr1073766653 $assert_ $(@expr1073766654 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6823 $, a@var1795 .@expr1073766655 function (@expr1073766656 ) $) $) { $return ; }
6824: }
6825:
6826: void findFunctionGlobalScope ( ) {
6827: $Tokenizer $tokenizer@var1796 $(@expr1073766657 $&@expr1073766658 $settings1@var123 $, $this@expr1073766659 $) $; $const $SymbolDatabase $* $db@var1797 $; $db@var1797 $=@expr1073766660 $getSymbolDB_inner $(@expr1073766661 $tokenizer@var1796 $, "struct S {\n    void foo();\n    int x;\n};\n\nint bar(int x);\n\nvoid S::foo() {\n    x = ::bar(x);\n}" $, $"test.cpp" $) $; $if $(@expr1073766662 $!@expr1073766663 $assert_ $(@expr1073766664 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6827 $, $db@var1797 $) $) { $return $; } $do ${ $} $while $(@expr1073766665 $false $)
6828:
|
6835:
6836: ;
6837: const Token * bar@var1798 ; bar@var1798 =@expr1073766666 Token ::@expr1073766667 findsimplematch (@expr1073766668 tokenizer@var1796 .@expr1073766669 tokens (@expr1073766670 ) , "bar ( x )" ) ;
6838: $if $(@expr1073766671 $!@expr1073766672 $assert_ $(@expr1073766673 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6838 $, bar@var1798 $) $) { $return ; }
6839: $if $(@expr1073766674 $!@expr1073766675 $assert_ $(@expr1073766676 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6839 $, bar@var1798 .@expr1073766677 function (@expr1073766678 ) $) $) { $return ; }
6840: }
6841:
6842: void overloadedFunction1 ( ) {
6843: $Tokenizer $tokenizer@var1799 $(@expr1073766679 $&@expr1073766680 $settings1@var123 $, $this@expr1073766681 $) $; $const $SymbolDatabase $* $db@var1800 $; $db@var1800 $=@expr1073766682 $getSymbolDB_inner $(@expr1073766683 $tokenizer@var1799 $, "struct S {\n    int operator()(int);\n};\n\nvoid foo(S x) {\n    x(123);\n}" $, $"test.cpp" $) $; $if $(@expr1073766684 $!@expr1073766685 $assert_ $(@expr1073766686 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6843 $, $db@var1800 $) $) { $return $; } $do ${ $} $while $(@expr1073766687 $false $)
6844:
|
6848:
6849: ;
6850: const Token * tok@var1801 ; tok@var1801 =@expr1073766688 Token ::@expr1073766689 findsimplematch (@expr1073766690 tokenizer@var1799 .@expr1073766691 tokens (@expr1073766692 ) , "x . operator() ( 123 )" ) ;
6851: $if $(@expr1073766693 $!@expr1073766694 $assert_ $(@expr1073766695 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6851 $, tok@var1801 $) $) { $return ; }
6852: $if $(@expr1073766696 $!@expr1073766697 $assert_ $(@expr1073766698 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6852 $, tok@var1801 .@expr1073766699 tokAt (@expr1073766700 2 ) .@expr1073766701 function (@expr1073766702 ) $) $) { $return ; }
6853: }
6854:
6855: void valueTypeMatchParameter ( ) {
6856: ValueType vt_int@var1802 (@expr1073766711 ValueType ::@expr24888 Sign ::@expr24889 SIGNED , ValueType ::@expr24890 Type ::@expr24891 INT@expr24879 , 0 ) ;
6857: ValueType vt_const_int@var1803 (@expr1073766716 ValueType ::@expr24888 Sign ::@expr24889 SIGNED , ValueType ::@expr24890 Type ::@expr24891 INT@expr24879 , 0 , 1 ) ;
6858: $if $(@expr1073766721 $!@expr1073766722 $assertEquals $(@expr1073766723 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6858 $, (@expr24900 int ) ValueType ::@expr24901 MatchResult ::@expr24902 SAME@expr24880 $, $(@expr1073766727 (@expr1073766728 int ) ValueType ::@expr24905 matchParameter (@expr1073766730 &@expr24907 vt_int@var1802 , &@expr24907 vt_int@var1802 ) $) $) $) { $return ; }
6859: $if $(@expr1073766733 $!@expr1073766734 $assertEquals $(@expr1073766735 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6859 $, (@expr24900 int ) ValueType ::@expr24901 MatchResult ::@expr24902 SAME@expr24880 $, $(@expr1073766739 (@expr1073766740 int ) ValueType ::@expr24905 matchParameter (@expr1073766742 &@expr24919 vt_const_int@var1803 , &@expr24907 vt_int@var1802 ) $) $) $) { $return ; }
6860: $if $(@expr1073766745 $!@expr1073766746 $assertEquals $(@expr1073766747 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6860 $, (@expr24900 int ) ValueType ::@expr24901 MatchResult ::@expr24902 SAME@expr24880 $, $(@expr1073766751 (@expr1073766752 int ) ValueType ::@expr24905 matchParameter (@expr1073766754 &@expr24907 vt_int@var1802 , &@expr24919 vt_const_int@var1803 ) $) $) $) { $return ; }
6861:
6862: ValueType vt_char_pointer@var1804 (@expr1073766757 ValueType ::@expr24888 Sign ::@expr24889 SIGNED , ValueType ::@expr24890 Type ::@expr24937 CHAR@expr24881 , 1 ) ;
6863: ValueType vt_void_pointer@var1805 (@expr1073766762 ValueType ::@expr24888 Sign ::@expr24889 SIGNED , ValueType ::@expr24890 Type ::@expr1073766766 VOID@expr1073766706 , 1 ) ;
6864: ValueType vt_int_pointer@var1806 (@expr1073766767 ValueType ::@expr24888 Sign ::@expr24889 SIGNED , ValueType ::@expr24890 Type ::@expr24891 INT@expr24879 , 1 ) ;
6865: $if $(@expr1073766772 $!@expr1073766773 $assertEquals $(@expr1073766774 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6865 $, (@expr24951 int ) ValueType ::@expr24901 MatchResult ::@expr24953 FALLBACK1@expr24883 $, $(@expr1073766778 (@expr1073766779 int ) ValueType ::@expr24905 matchParameter (@expr1073766781 &@expr24958 vt_char_pointer@var1804 , &@expr24959 vt_void_pointer@var1805 ) $) $) $) { $return ; }
6866: $if $(@expr1073766784 $!@expr1073766785 $assertEquals $(@expr1073766786 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6866 $, (@expr24963 int ) ValueType ::@expr24901 MatchResult ::@expr24965 NOMATCH@expr24884 $, $(@expr1073766790 (@expr1073766791 int ) ValueType ::@expr24905 matchParameter (@expr1073766793 &@expr24958 vt_char_pointer@var1804 , &@expr1073766795 vt_int_pointer@var1806 ) $) $) $) { $return ; }
6867:
6868: ValueType vt_char_pointer2@var1807 (@expr1073766796 ValueType ::@expr24888 Sign ::@expr24889 SIGNED , ValueType ::@expr24890 Type ::@expr24937 CHAR@expr24881 , 2 ) ;
6869: $if $(@expr1073766801 $!@expr1073766802 $assertEquals $(@expr1073766803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6869 $, (@expr24951 int ) ValueType ::@expr24901 MatchResult ::@expr24953 FALLBACK1@expr24883 $, $(@expr1073766807 (@expr1073766808 int ) ValueType ::@expr24905 matchParameter (@expr1073766810 &@expr1073766811 vt_char_pointer2@var1807 , &@expr24959 vt_void_pointer@var1805 ) $) $) $) { $return ; }
6870:
6871: ValueType vt_const_float_pointer@var1808 (@expr1073766813 ValueType ::@expr24888 Sign ::@expr1073766815 UNKNOWN_SIGN , ValueType ::@expr24890 Type ::@expr1073766817 FLOAT@expr1073766709 , 1 , 1 ) ;
6872: ValueType vt_long_long@var1809 (@expr1073766818 ValueType ::@expr24888 Sign ::@expr24889 SIGNED , ValueType ::@expr24890 Type ::@expr1073766822 LONGLONG@expr1073766710 , 0 , 0 ) ;
6873: $if $(@expr1073766823 $!@expr1073766824 $assertEquals $(@expr1073766825 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6873 $, (@expr24963 int ) ValueType ::@expr24901 MatchResult ::@expr24965 NOMATCH@expr24884 $, $(@expr1073766829 (@expr1073766830 int ) ValueType ::@expr24905 matchParameter (@expr1073766832 &@expr1073766833 vt_const_float_pointer@var1808 , &@expr1073766834 vt_long_long@var1809 ) $) $) $) { $return ; }
6874: }
6875:
|
6881:
6882: void noexceptFunction1 ( ) {
6883: $Tokenizer $tokenizer@var1810 $(@expr1073766835 $&@expr1073766836 $settings1@var123 $, $this@expr1073766837 $) $; $const $SymbolDatabase $* $db@var1811 $; $db@var1811 $=@expr1073766838 $getSymbolDB_inner $(@expr1073766839 $tokenizer@var1810 $, "void func1() noexcept;\nvoid func2() noexcept { }\nvoid func3() noexcept(true);\nvoid func4() noexcept(true) { }" $, $"test.cpp" $) $; $if $(@expr1073766840 $!@expr1073766841 $assert_ $(@expr1073766842 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6883 $, $db@var1811 $) $) { $return $; } $do ${ $} $while $(@expr1073766843 $false $)
6884:
6885:
6886: ;
6887: $if $(@expr1073766844 $!@expr1073766845 $assertEquals $(@expr1073766846 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6887 $, "" $, errout@var100 .@expr1073766847 str (@expr1073766848 ) $) $) { $return ; }
6888: $if $(@expr1073766849 $!@expr1073766850 $assertEquals $(@expr1073766851 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6888 $, true $, db@var1811 !=@expr1073766852 nullptr $) $) { $return ; }
6889:
6890: $do ${ $const $Function $* func1@var1812 $; func1@var1812 $=@expr1073766853 $findFunctionByName $(@expr1073766854 "func1" $, $&@expr1073766855 $db@var1811 $.@expr1073766856 $scopeList@var1813 $.@expr1073766857 $front $(@expr1073766858 $) $) $; $if $(@expr1073766859 $!@expr1073766860 $assertEquals $(@expr1073766861 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6890 $, $true $, func1@var1812 $!=@expr1073766862 $nullptr $) $) { $return $; } $if $(@expr1073766863 $!@expr1073766864 $assertEquals $(@expr1073766865 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6890 $, $true $, func1@var1812 $.@expr1073766866 $isNoExcept $(@expr1073766867 $) $) $) { $return $; } $} $while $(@expr1073766868 $false $) ;
6891: $do ${ $const $Function $* func2@var1814 $; func2@var1814 $=@expr1073766869 $findFunctionByName $(@expr1073766870 "func2" $, $&@expr1073766871 $db@var1811 $.@expr1073766872 $scopeList@var1813 $.@expr1073766873 $front $(@expr1073766874 $) $) $; $if $(@expr1073766875 $!@expr1073766876 $assertEquals $(@expr1073766877 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6891 $, $true $, func2@var1814 $!=@expr1073766878 $nullptr $) $) { $return $; } $if $(@expr1073766879 $!@expr1073766880 $assertEquals $(@expr1073766881 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6891 $, $true $, func2@var1814 $.@expr1073766882 $isNoExcept $(@expr1073766883 $) $) $) { $return $; } $} $while $(@expr1073766884 $false $) ;
6892: $do ${ $const $Function $* func3@var1815 $; func3@var1815 $=@expr1073766885 $findFunctionByName $(@expr1073766886 "func3" $, $&@expr1073766887 $db@var1811 $.@expr1073766888 $scopeList@var1813 $.@expr1073766889 $front $(@expr1073766890 $) $) $; $if $(@expr1073766891 $!@expr1073766892 $assertEquals $(@expr1073766893 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6892 $, $true $, func3@var1815 $!=@expr1073766894 $nullptr $) $) { $return $; } $if $(@expr1073766895 $!@expr1073766896 $assertEquals $(@expr1073766897 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6892 $, $true $, func3@var1815 $.@expr1073766898 $isNoExcept $(@expr1073766899 $) $) $) { $return $; } $} $while $(@expr1073766900 $false $) ;
6893: $do ${ $const $Function $* func4@var1816 $; func4@var1816 $=@expr1073766901 $findFunctionByName $(@expr1073766902 "func4" $, $&@expr1073766903 $db@var1811 $.@expr1073766904 $scopeList@var1813 $.@expr1073766905 $front $(@expr1073766906 $) $) $; $if $(@expr1073766907 $!@expr1073766908 $assertEquals $(@expr1073766909 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6893 $, $true $, func4@var1816 $!=@expr1073766910 $nullptr $) $) { $return $; } $if $(@expr1073766911 $!@expr1073766912 $assertEquals $(@expr1073766913 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6893 $, $true $, func4@var1816 $.@expr1073766914 $isNoExcept $(@expr1073766915 $) $) $) { $return $; } $} $while $(@expr1073766916 $false $) ;
6894: }
6895:
6896: void noexceptFunction2 ( ) {
6897: $Tokenizer $tokenizer@var1817 $(@expr1073766917 $&@expr1073766918 $settings1@var123 $, $this@expr1073766919 $) $; $const $SymbolDatabase $* $db@var1818 $; $db@var1818 $=@expr1073766920 $getSymbolDB_inner $(@expr1073766921 $tokenizer@var1817 $, "template <class T> void self_assign(T& t) noexcept(noexcept(t = t)) {t = t; }" $, $"test.cpp" $) $; $if $(@expr1073766922 $!@expr1073766923 $assert_ $(@expr1073766924 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6897 $, $db@var1818 $) $) { $return $; } $do ${ $} $while $(@expr1073766925 $false $) ;
6898:
6899: $if $(@expr1073766926 $!@expr1073766927 $assertEquals $(@expr1073766928 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6899 $, "" $, errout@var100 .@expr1073766929 str (@expr1073766930 ) $) $) { $return ; }
6900: $if $(@expr1073766931 $!@expr1073766932 $assertEquals $(@expr1073766933 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6900 $, true $, db@var1818 !=@expr1073766934 nullptr $) $) { $return ; }
6901:
6902: $do ${ $const $Function $* self_assign@var1819 $; self_assign@var1819 $=@expr1073766935 $findFunctionByName $(@expr1073766936 "self_assign" $, $&@expr1073766937 $db@var1818 $.@expr1073766938 $scopeList@var1820 $.@expr1073766939 $front $(@expr1073766940 $) $) $; $if $(@expr1073766941 $!@expr1073766942 $assertEquals $(@expr1073766943 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6902 $, $true $, self_assign@var1819 $!=@expr1073766944 $nullptr $) $) { $return $; } $if $(@expr1073766945 $!@expr1073766946 $assertEquals $(@expr1073766947 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6902 $, $true $, self_assign@var1819 $.@expr1073766948 $isNoExcept $(@expr1073766949 $) $) $) { $return $; } $} $while $(@expr1073766950 $false $) ;
6903: }
6904:
|
6910:
6911: void noexceptFunction3 ( ) {
6912: $Tokenizer $tokenizer@var1821 $(@expr1073766951 $&@expr1073766952 $settings1@var123 $, $this@expr1073766953 $) $; $const $SymbolDatabase $* $db@var1822 $; $db@var1822 $=@expr1073766954 $getSymbolDB_inner $(@expr1073766955 $tokenizer@var1821 $, "struct Fred {\n    void func1() noexcept;\n    void func2() noexcept { }\n    void func3() noexcept(true);\n    void func4() noexcept(true) { }\n    void func5() const noexcept;\n    void func6() const noexcept { }\n    void func7() const noexcept(true);\n    void func8() const noexcept(true) { }\n    void func9() noexcept = 0;\n    void func10() noexcept = 0;\n    void func11() const noexcept(true) = 0;\n    void func12() const noexcept(true) = 0;\n    void func13() const noexcept(false) = 0;\n};" $, $"test.cpp" $) $; $if $(@expr1073766956 $!@expr1073766957 $assert_ $(@expr1073766958 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6912 $, $db@var1822 $) $) { $return $; } $do ${ $} $while $(@expr1073766959 $false $)
6913:
|
6925:
6926: ;
6927: $if $(@expr1073766960 $!@expr1073766961 $assertEquals $(@expr1073766962 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6927 $, "" $, errout@var100 .@expr1073766963 str (@expr1073766964 ) $) $) { $return ; }
6928: $if $(@expr1073766965 $!@expr1073766966 $assertEquals $(@expr1073766967 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6928 $, true $, db@var1822 !=@expr1073766968 nullptr $) $) { $return ; }
6929:
6930: const Scope * fred@var1823 ; fred@var1823 =@expr1073766969 db@var1822 .@expr1073766970 findScopeByName (@expr1073766971 "Fred" ) ;
6931: $if $(@expr1073766972 $!@expr1073766973 $assertEquals $(@expr1073766974 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6931 $, true $, fred@var1823 !=@expr1073766975 nullptr $) $) { $return ; }
6932: $do ${ $const $Function $* func1@var1824 $; func1@var1824 $=@expr1073766976 $findFunctionByName $(@expr1073766977 "func1" $, fred@var1823 $) $; $if $(@expr1073766978 $!@expr1073766979 $assertEquals $(@expr1073766980 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6932 $, $true $, func1@var1824 $!=@expr1073766981 $nullptr $) $) { $return $; } $if $(@expr1073766982 $!@expr1073766983 $assertEquals $(@expr1073766984 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6932 $, true $, func1@var1824 $.@expr1073766985 $isNoExcept $(@expr1073766986 $) $) $) { $return $; } $} $while $(@expr1073766987 $false $) ;
6933: $do ${ $const $Function $* func2@var1825 $; func2@var1825 $=@expr1073766988 $findFunctionByName $(@expr1073766989 "func2" $, fred@var1823 $) $; $if $(@expr1073766990 $!@expr1073766991 $assertEquals $(@expr1073766992 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6933 $, $true $, func2@var1825 $!=@expr1073766993 $nullptr $) $) { $return $; } $if $(@expr1073766994 $!@expr1073766995 $assertEquals $(@expr1073766996 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6933 $, true $, func2@var1825 $.@expr1073766997 $isNoExcept $(@expr1073766998 $) $) $) { $return $; } $} $while $(@expr1073766999 $false $) ;
6934: $do ${ $const $Function $* func3@var1826 $; func3@var1826 $=@expr1073767000 $findFunctionByName $(@expr1073767001 "func3" $, fred@var1823 $) $; $if $(@expr1073767002 $!@expr1073767003 $assertEquals $(@expr1073767004 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6934 $, $true $, func3@var1826 $!=@expr1073767005 $nullptr $) $) { $return $; } $if $(@expr1073767006 $!@expr1073767007 $assertEquals $(@expr1073767008 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6934 $, true $, func3@var1826 $.@expr1073767009 $isNoExcept $(@expr1073767010 $) $) $) { $return $; } $} $while $(@expr1073767011 $false $) ;
6935: $do ${ $const $Function $* func4@var1827 $; func4@var1827 $=@expr1073767012 $findFunctionByName $(@expr1073767013 "func4" $, fred@var1823 $) $; $if $(@expr1073767014 $!@expr1073767015 $assertEquals $(@expr1073767016 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6935 $, $true $, func4@var1827 $!=@expr1073767017 $nullptr $) $) { $return $; } $if $(@expr1073767018 $!@expr1073767019 $assertEquals $(@expr1073767020 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6935 $, true $, func4@var1827 $.@expr1073767021 $isNoExcept $(@expr1073767022 $) $) $) { $return $; } $} $while $(@expr1073767023 $false $) ;
6936: $do ${ $const $Function $* func5@var1828 $; func5@var1828 $=@expr1073767024 $findFunctionByName $(@expr1073767025 "func5" $, fred@var1823 $) $; $if $(@expr1073767026 $!@expr1073767027 $assertEquals $(@expr1073767028 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6936 $, $true $, func5@var1828 $!=@expr1073767029 $nullptr $) $) { $return $; } $if $(@expr1073767030 $!@expr1073767031 $assertEquals $(@expr1073767032 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6936 $, true $, func5@var1828 $.@expr1073767033 $isNoExcept $(@expr1073767034 $) $) $) { $return $; } $} $while $(@expr1073767035 $false $) ;
6937: $do ${ $const $Function $* func6@var1829 $; func6@var1829 $=@expr1073767036 $findFunctionByName $(@expr1073767037 "func6" $, fred@var1823 $) $; $if $(@expr1073767038 $!@expr1073767039 $assertEquals $(@expr1073767040 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6937 $, $true $, func6@var1829 $!=@expr1073767041 $nullptr $) $) { $return $; } $if $(@expr1073767042 $!@expr1073767043 $assertEquals $(@expr1073767044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6937 $, true $, func6@var1829 $.@expr1073767045 $isNoExcept $(@expr1073767046 $) $) $) { $return $; } $} $while $(@expr1073767047 $false $) ;
6938: $do ${ $const $Function $* func7@var1830 $; func7@var1830 $=@expr1073767048 $findFunctionByName $(@expr1073767049 "func7" $, fred@var1823 $) $; $if $(@expr1073767050 $!@expr1073767051 $assertEquals $(@expr1073767052 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6938 $, $true $, func7@var1830 $!=@expr1073767053 $nullptr $) $) { $return $; } $if $(@expr1073767054 $!@expr1073767055 $assertEquals $(@expr1073767056 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6938 $, true $, func7@var1830 $.@expr1073767057 $isNoExcept $(@expr1073767058 $) $) $) { $return $; } $} $while $(@expr1073767059 $false $) ;
6939: $do ${ $const $Function $* func8@var1831 $; func8@var1831 $=@expr1073767060 $findFunctionByName $(@expr1073767061 "func8" $, fred@var1823 $) $; $if $(@expr1073767062 $!@expr1073767063 $assertEquals $(@expr1073767064 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6939 $, $true $, func8@var1831 $!=@expr1073767065 $nullptr $) $) { $return $; } $if $(@expr1073767066 $!@expr1073767067 $assertEquals $(@expr1073767068 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6939 $, true $, func8@var1831 $.@expr1073767069 $isNoExcept $(@expr1073767070 $) $) $) { $return $; } $} $while $(@expr1073767071 $false $) ;
6940: $do ${ $const $Function $* func9@var1832 $; func9@var1832 $=@expr1073767072 $findFunctionByName $(@expr1073767073 "func9" $, fred@var1823 $) $; $if $(@expr1073767074 $!@expr1073767075 $assertEquals $(@expr1073767076 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6940 $, $true $, func9@var1832 $!=@expr1073767077 $nullptr $) $) { $return $; } $if $(@expr1073767078 $!@expr1073767079 $assertEquals $(@expr1073767080 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6940 $, true $, func9@var1832 $.@expr1073767081 $isNoExcept $(@expr1073767082 $) $) $) { $return $; } $} $while $(@expr1073767083 $false $) ;
6941: $do ${ $const $Function $* func10@var1833 $; func10@var1833 $=@expr1073767084 $findFunctionByName $(@expr1073767085 "func10" $, fred@var1823 $) $; $if $(@expr1073767086 $!@expr1073767087 $assertEquals $(@expr1073767088 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6941 $, $true $, func10@var1833 $!=@expr1073767089 $nullptr $) $) { $return $; } $if $(@expr1073767090 $!@expr1073767091 $assertEquals $(@expr1073767092 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6941 $, true $, func10@var1833 $.@expr1073767093 $isNoExcept $(@expr1073767094 $) $) $) { $return $; } $} $while $(@expr1073767095 $false $) ;
6942: $do ${ $const $Function $* func11@var1834 $; func11@var1834 $=@expr1073767096 $findFunctionByName $(@expr1073767097 "func11" $, fred@var1823 $) $; $if $(@expr1073767098 $!@expr1073767099 $assertEquals $(@expr1073767100 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6942 $, $true $, func11@var1834 $!=@expr1073767101 $nullptr $) $) { $return $; } $if $(@expr1073767102 $!@expr1073767103 $assertEquals $(@expr1073767104 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6942 $, true $, func11@var1834 $.@expr1073767105 $isNoExcept $(@expr1073767106 $) $) $) { $return $; } $} $while $(@expr1073767107 $false $) ;
6943: $do ${ $const $Function $* func12@var1835 $; func12@var1835 $=@expr1073767108 $findFunctionByName $(@expr1073767109 "func12" $, fred@var1823 $) $; $if $(@expr1073767110 $!@expr1073767111 $assertEquals $(@expr1073767112 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6943 $, $true $, func12@var1835 $!=@expr1073767113 $nullptr $) $) { $return $; } $if $(@expr1073767114 $!@expr1073767115 $assertEquals $(@expr1073767116 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6943 $, true $, func12@var1835 $.@expr1073767117 $isNoExcept $(@expr1073767118 $) $) $) { $return $; } $} $while $(@expr1073767119 $false $) ;
6944: $do ${ $const $Function $* func13@var1836 $; func13@var1836 $=@expr1073767120 $findFunctionByName $(@expr1073767121 "func13" $, fred@var1823 $) $; $if $(@expr1073767122 $!@expr1073767123 $assertEquals $(@expr1073767124 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6944 $, $true $, func13@var1836 $!=@expr1073767125 $nullptr $) $) { $return $; } $if $(@expr1073767126 $!@expr1073767127 $assertEquals $(@expr1073767128 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6944 $, false $, func13@var1836 $.@expr1073767129 $isNoExcept $(@expr1073767130 $) $) $) { $return $; } $} $while $(@expr1073767131 $false $) ;
6945: }
6946:
6947: void noexceptFunction4 ( ) {
6948: $Tokenizer $tokenizer@var1837 $(@expr1073767132 $&@expr1073767133 $settings1@var123 $, $this@expr1073767134 $) $; $const $SymbolDatabase $* $db@var1838 $; $db@var1838 $=@expr1073767135 $getSymbolDB_inner $(@expr1073767136 $tokenizer@var1837 $, "class A {\npublic:\n   A(A&& a) {\n      throw std::runtime_error(\"err\");\n   }\n};\nclass B {\n   A a;\n   B(B&& b) noexcept\n   :a(std::move(b.a)) { }\n};" $, $"test.cpp" $) $; $if $(@expr1073767137 $!@expr1073767138 $assert_ $(@expr1073767139 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6948 $, $db@var1838 $) $) { $return $; } $do ${ $} $while $(@expr1073767140 $false $)
6949:
|
6957:
6958: ;
6959: $if $(@expr1073767141 $!@expr1073767142 $assertEquals $(@expr1073767143 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6959 $, "" $, errout@var100 .@expr1073767144 str (@expr1073767145 ) $) $) { $return ; }
6960: $if $(@expr1073767146 $!@expr1073767147 $assert_ $(@expr1073767148 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6960 $, db@var1838 !=@expr1073767149 nullptr $) $) { $return ; }
6961: const Scope * b@var1839 ; b@var1839 =@expr1073767150 db@var1838 .@expr1073767151 findScopeByName (@expr1073767152 "B" ) ;
6962: $if $(@expr1073767153 $!@expr1073767154 $assert_ $(@expr1073767155 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6962 $, b@var1839 !=@expr1073767156 nullptr $) $) { $return ; }
6963: $do ${ $const $Function $* B@var1840 $; B@var1840 $=@expr1073767157 $findFunctionByName $(@expr1073767158 "B" $, b@var1839 $) $; $if $(@expr1073767159 $!@expr1073767160 $assertEquals $(@expr1073767161 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6963 $, $true $, B@var1840 $!=@expr1073767162 $nullptr $) $) { $return $; } $if $(@expr1073767163 $!@expr1073767164 $assertEquals $(@expr1073767165 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6963 $, true $, B@var1840 $.@expr1073767166 $isNoExcept $(@expr1073767167 $) $) $) { $return $; } $} $while $(@expr1073767168 $false $) ;
6964: }
6965:
|
6971:
6972: void throwFunction1 ( ) {
6973: $Tokenizer $tokenizer@var1841 $(@expr1073767169 $&@expr1073767170 $settings1@var123 $, $this@expr1073767171 $) $; $const $SymbolDatabase $* $db@var1842 $; $db@var1842 $=@expr1073767172 $getSymbolDB_inner $(@expr1073767173 $tokenizer@var1841 $, "void func1() throw();\nvoid func2() throw() { }\nvoid func3() throw(int);\nvoid func4() throw(int) { }" $, $"test.cpp" $) $; $if $(@expr1073767174 $!@expr1073767175 $assert_ $(@expr1073767176 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6973 $, $db@var1842 $) $) { $return $; } $do ${ $} $while $(@expr1073767177 $false $)
6974:
6975:
6976: ;
6977: $if $(@expr1073767178 $!@expr1073767179 $assertEquals $(@expr1073767180 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6977 $, "" $, errout@var100 .@expr1073767181 str (@expr1073767182 ) $) $) { $return ; }
6978: $if $(@expr1073767183 $!@expr1073767184 $assert_ $(@expr1073767185 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6978 $, db@var1842 !=@expr1073767186 nullptr $) $) { $return ; }
6979:
6980: $do ${ $const $Function $* func1@var1843 $; func1@var1843 $=@expr1073767187 $findFunctionByName $(@expr1073767188 "func1" $, $&@expr1073767189 $db@var1842 $.@expr1073767190 $scopeList@var1844 $.@expr1073767191 $front $(@expr1073767192 $) $) $; $if $(@expr1073767193 $!@expr1073767194 $assertEquals $(@expr1073767195 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6980 $, $true $, func1@var1843 $!=@expr1073767196 $nullptr $) $) { $return $; } $if $(@expr1073767197 $!@expr1073767198 $assertEquals $(@expr1073767199 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6980 $, $true $, func1@var1843 $.@expr1073767200 $isThrow $(@expr1073767201 $) $) $) { $return $; } $} $while $(@expr1073767202 $false $) ;
6981: $do ${ $const $Function $* func2@var1845 $; func2@var1845 $=@expr1073767203 $findFunctionByName $(@expr1073767204 "func2" $, $&@expr1073767205 $db@var1842 $.@expr1073767206 $scopeList@var1844 $.@expr1073767207 $front $(@expr1073767208 $) $) $; $if $(@expr1073767209 $!@expr1073767210 $assertEquals $(@expr1073767211 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6981 $, $true $, func2@var1845 $!=@expr1073767212 $nullptr $) $) { $return $; } $if $(@expr1073767213 $!@expr1073767214 $assertEquals $(@expr1073767215 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6981 $, $true $, func2@var1845 $.@expr1073767216 $isThrow $(@expr1073767217 $) $) $) { $return $; } $} $while $(@expr1073767218 $false $) ;
6982: $do ${ $const $Function $* func3@var1846 $; func3@var1846 $=@expr1073767219 $findFunctionByName $(@expr1073767220 "func3" $, $&@expr1073767221 $db@var1842 $.@expr1073767222 $scopeList@var1844 $.@expr1073767223 $front $(@expr1073767224 $) $) $; $if $(@expr1073767225 $!@expr1073767226 $assertEquals $(@expr1073767227 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6982 $, $true $, func3@var1846 $!=@expr1073767228 $nullptr $) $) { $return $; } $if $(@expr1073767229 $!@expr1073767230 $assertEquals $(@expr1073767231 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6982 $, $true $, func3@var1846 $.@expr1073767232 $isThrow $(@expr1073767233 $) $) $) { $return $; } $} $while $(@expr1073767234 $false $) ;
6983: $do ${ $const $Function $* func4@var1847 $; func4@var1847 $=@expr1073767235 $findFunctionByName $(@expr1073767236 "func4" $, $&@expr1073767237 $db@var1842 $.@expr1073767238 $scopeList@var1844 $.@expr1073767239 $front $(@expr1073767240 $) $) $; $if $(@expr1073767241 $!@expr1073767242 $assertEquals $(@expr1073767243 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6983 $, $true $, func4@var1847 $!=@expr1073767244 $nullptr $) $) { $return $; } $if $(@expr1073767245 $!@expr1073767246 $assertEquals $(@expr1073767247 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6983 $, $true $, func4@var1847 $.@expr1073767248 $isThrow $(@expr1073767249 $) $) $) { $return $; } $} $while $(@expr1073767250 $false $) ;
6984: }
6985:
|
6990:
6991: void throwFunction2 ( ) {
6992: $Tokenizer $tokenizer@var1848 $(@expr1073767251 $&@expr1073767252 $settings1@var123 $, $this@expr1073767253 $) $; $const $SymbolDatabase $* $db@var1849 $; $db@var1849 $=@expr1073767254 $getSymbolDB_inner $(@expr1073767255 $tokenizer@var1848 $, "struct Fred {\n    void func1() throw();\n    void func2() throw() { }\n    void func3() throw(int);\n    void func4() throw(int) { }\n    void func5() const throw();\n    void func6() const throw() { }\n    void func7() const throw(int);\n    void func8() const throw(int) { }\n    void func9() throw() = 0;\n    void func10() throw(int) = 0;\n    void func11() const throw() = 0;\n    void func12() const throw(int) = 0;\n};" $, $"test.cpp" $) $; $if $(@expr1073767256 $!@expr1073767257 $assert_ $(@expr1073767258 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 6992 $, $db@var1849 $) $) { $return $; } $do ${ $} $while $(@expr1073767259 $false $)
6993:
|
7004:
7005: ;
7006: $if $(@expr1073767260 $!@expr1073767261 $assertEquals $(@expr1073767262 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7006 $, "" $, errout@var100 .@expr1073767263 str (@expr1073767264 ) $) $) { $return ; }
7007: $if $(@expr1073767265 $!@expr1073767266 $assertEquals $(@expr1073767267 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7007 $, true $, db@var1849 !=@expr1073767268 nullptr $) $) { $return ; }
7008:
7009: const Scope * fred@var1850 ; fred@var1850 =@expr1073767269 db@var1849 .@expr1073767270 findScopeByName (@expr1073767271 "Fred" ) ;
7010: $if $(@expr1073767272 $!@expr1073767273 $assertEquals $(@expr1073767274 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7010 $, true $, fred@var1850 !=@expr1073767275 nullptr $) $) { $return ; }
7011: $do ${ $const $Function $* func1@var1851 $; func1@var1851 $=@expr1073767276 $findFunctionByName $(@expr1073767277 "func1" $, fred@var1850 $) $; $if $(@expr1073767278 $!@expr1073767279 $assertEquals $(@expr1073767280 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7011 $, $true $, func1@var1851 $!=@expr1073767281 $nullptr $) $) { $return $; } $if $(@expr1073767282 $!@expr1073767283 $assertEquals $(@expr1073767284 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7011 $, $true $, func1@var1851 $.@expr1073767285 $isThrow $(@expr1073767286 $) $) $) { $return $; } $} $while $(@expr1073767287 $false $) ;
7012: $do ${ $const $Function $* func2@var1852 $; func2@var1852 $=@expr1073767288 $findFunctionByName $(@expr1073767289 "func2" $, fred@var1850 $) $; $if $(@expr1073767290 $!@expr1073767291 $assertEquals $(@expr1073767292 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7012 $, $true $, func2@var1852 $!=@expr1073767293 $nullptr $) $) { $return $; } $if $(@expr1073767294 $!@expr1073767295 $assertEquals $(@expr1073767296 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7012 $, $true $, func2@var1852 $.@expr1073767297 $isThrow $(@expr1073767298 $) $) $) { $return $; } $} $while $(@expr1073767299 $false $) ;
7013: $do ${ $const $Function $* func3@var1853 $; func3@var1853 $=@expr1073767300 $findFunctionByName $(@expr1073767301 "func3" $, fred@var1850 $) $; $if $(@expr1073767302 $!@expr1073767303 $assertEquals $(@expr1073767304 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7013 $, $true $, func3@var1853 $!=@expr1073767305 $nullptr $) $) { $return $; } $if $(@expr1073767306 $!@expr1073767307 $assertEquals $(@expr1073767308 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7013 $, $true $, func3@var1853 $.@expr1073767309 $isThrow $(@expr1073767310 $) $) $) { $return $; } $} $while $(@expr1073767311 $false $) ;
7014: $do ${ $const $Function $* func4@var1854 $; func4@var1854 $=@expr1073767312 $findFunctionByName $(@expr1073767313 "func4" $, fred@var1850 $) $; $if $(@expr1073767314 $!@expr1073767315 $assertEquals $(@expr1073767316 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7014 $, $true $, func4@var1854 $!=@expr1073767317 $nullptr $) $) { $return $; } $if $(@expr1073767318 $!@expr1073767319 $assertEquals $(@expr1073767320 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7014 $, $true $, func4@var1854 $.@expr1073767321 $isThrow $(@expr1073767322 $) $) $) { $return $; } $} $while $(@expr1073767323 $false $) ;
7015: $do ${ $const $Function $* func5@var1855 $; func5@var1855 $=@expr1073767324 $findFunctionByName $(@expr1073767325 "func5" $, fred@var1850 $) $; $if $(@expr1073767326 $!@expr1073767327 $assertEquals $(@expr1073767328 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7015 $, $true $, func5@var1855 $!=@expr1073767329 $nullptr $) $) { $return $; } $if $(@expr1073767330 $!@expr1073767331 $assertEquals $(@expr1073767332 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7015 $, $true $, func5@var1855 $.@expr1073767333 $isThrow $(@expr1073767334 $) $) $) { $return $; } $} $while $(@expr1073767335 $false $) ;
7016: $do ${ $const $Function $* func6@var1856 $; func6@var1856 $=@expr1073767336 $findFunctionByName $(@expr1073767337 "func6" $, fred@var1850 $) $; $if $(@expr1073767338 $!@expr1073767339 $assertEquals $(@expr1073767340 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7016 $, $true $, func6@var1856 $!=@expr1073767341 $nullptr $) $) { $return $; } $if $(@expr1073767342 $!@expr1073767343 $assertEquals $(@expr1073767344 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7016 $, $true $, func6@var1856 $.@expr1073767345 $isThrow $(@expr1073767346 $) $) $) { $return $; } $} $while $(@expr1073767347 $false $) ;
7017: $do ${ $const $Function $* func7@var1857 $; func7@var1857 $=@expr1073767348 $findFunctionByName $(@expr1073767349 "func7" $, fred@var1850 $) $; $if $(@expr1073767350 $!@expr1073767351 $assertEquals $(@expr1073767352 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7017 $, $true $, func7@var1857 $!=@expr1073767353 $nullptr $) $) { $return $; } $if $(@expr1073767354 $!@expr1073767355 $assertEquals $(@expr1073767356 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7017 $, $true $, func7@var1857 $.@expr1073767357 $isThrow $(@expr1073767358 $) $) $) { $return $; } $} $while $(@expr1073767359 $false $) ;
7018: $do ${ $const $Function $* func8@var1858 $; func8@var1858 $=@expr1073767360 $findFunctionByName $(@expr1073767361 "func8" $, fred@var1850 $) $; $if $(@expr1073767362 $!@expr1073767363 $assertEquals $(@expr1073767364 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7018 $, $true $, func8@var1858 $!=@expr1073767365 $nullptr $) $) { $return $; } $if $(@expr1073767366 $!@expr1073767367 $assertEquals $(@expr1073767368 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7018 $, $true $, func8@var1858 $.@expr1073767369 $isThrow $(@expr1073767370 $) $) $) { $return $; } $} $while $(@expr1073767371 $false $) ;
7019: $do ${ $const $Function $* func9@var1859 $; func9@var1859 $=@expr1073767372 $findFunctionByName $(@expr1073767373 "func9" $, fred@var1850 $) $; $if $(@expr1073767374 $!@expr1073767375 $assertEquals $(@expr1073767376 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7019 $, $true $, func9@var1859 $!=@expr1073767377 $nullptr $) $) { $return $; } $if $(@expr1073767378 $!@expr1073767379 $assertEquals $(@expr1073767380 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7019 $, $true $, func9@var1859 $.@expr1073767381 $isThrow $(@expr1073767382 $) $) $) { $return $; } $} $while $(@expr1073767383 $false $) ;
7020: $do ${ $const $Function $* func10@var1860 $; func10@var1860 $=@expr1073767384 $findFunctionByName $(@expr1073767385 "func10" $, fred@var1850 $) $; $if $(@expr1073767386 $!@expr1073767387 $assertEquals $(@expr1073767388 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7020 $, $true $, func10@var1860 $!=@expr1073767389 $nullptr $) $) { $return $; } $if $(@expr1073767390 $!@expr1073767391 $assertEquals $(@expr1073767392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7020 $, $true $, func10@var1860 $.@expr1073767393 $isThrow $(@expr1073767394 $) $) $) { $return $; } $} $while $(@expr1073767395 $false $) ;
7021: $do ${ $const $Function $* func11@var1861 $; func11@var1861 $=@expr1073767396 $findFunctionByName $(@expr1073767397 "func11" $, fred@var1850 $) $; $if $(@expr1073767398 $!@expr1073767399 $assertEquals $(@expr1073767400 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7021 $, $true $, func11@var1861 $!=@expr1073767401 $nullptr $) $) { $return $; } $if $(@expr1073767402 $!@expr1073767403 $assertEquals $(@expr1073767404 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7021 $, $true $, func11@var1861 $.@expr1073767405 $isThrow $(@expr1073767406 $) $) $) { $return $; } $} $while $(@expr1073767407 $false $) ;
7022: $do ${ $const $Function $* func12@var1862 $; func12@var1862 $=@expr1073767408 $findFunctionByName $(@expr1073767409 "func12" $, fred@var1850 $) $; $if $(@expr1073767410 $!@expr1073767411 $assertEquals $(@expr1073767412 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7022 $, $true $, func12@var1862 $!=@expr1073767413 $nullptr $) $) { $return $; } $if $(@expr1073767414 $!@expr1073767415 $assertEquals $(@expr1073767416 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7022 $, $true $, func12@var1862 $.@expr1073767417 $isThrow $(@expr1073767418 $) $) $) { $return $; } $} $while $(@expr1073767419 $false $) ;
7023: }
7024:
7025: void nothrowAttributeFunction ( ) {
7026: $Tokenizer $tokenizer@var1863 $(@expr1073767420 $&@expr1073767421 $settings1@var123 $, $this@expr1073767422 $) $; $const $SymbolDatabase $* $db@var1864 $; $db@var1864 $=@expr1073767423 $getSymbolDB_inner $(@expr1073767424 $tokenizer@var1863 $, "void func() __attribute__((nothrow));\nvoid func() { }" $, $"test.cpp" $) $; $if $(@expr1073767425 $!@expr1073767426 $assert_ $(@expr1073767427 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7026 $, $db@var1864 $) $) { $return $; } $do ${ $} $while $(@expr1073767428 $false $)
7027: ;
7028: $if $(@expr1073767429 $!@expr1073767430 $assertEquals $(@expr1073767431 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7028 $, "" $, errout@var100 .@expr1073767432 str (@expr1073767433 ) $) $) { $return ; }
7029: $if $(@expr1073767434 $!@expr1073767435 $assertEquals $(@expr1073767436 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7029 $, true $, db@var1864 !=@expr1073767437 nullptr $) $) { $return ; }
7030:
7031: const Function * func@var1865 ; func@var1865 =@expr1073767438 findFunctionByName (@expr1073767439 "func" , &@expr1073767440 db@var1864 .@expr1073767441 scopeList@var1866 .@expr1073767442 front (@expr1073767443 ) ) ;
7032: $if $(@expr1073767444 $!@expr1073767445 $assertEquals $(@expr1073767446 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7032 $, true $, func@var1865 !=@expr1073767447 nullptr $) $) { $return ; }
7033: $if $(@expr1073767448 $!@expr1073767449 $assertEquals $(@expr1073767450 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7033 $, true $, func@var1865 .@expr1073767451 isAttributeNothrow (@expr1073767452 ) $) $) { $return ; }
7034: }
7035:
7036: void nothrowDeclspecFunction ( ) {
7037: $Tokenizer $tokenizer@var1867 $(@expr1073767453 $&@expr1073767454 $settings1@var123 $, $this@expr1073767455 $) $; $const $SymbolDatabase $* $db@var1868 $; $db@var1868 $=@expr1073767456 $getSymbolDB_inner $(@expr1073767457 $tokenizer@var1867 $, "void __declspec(nothrow) func() { }" $, $"test.cpp" $) $; $if $(@expr1073767458 $!@expr1073767459 $assert_ $(@expr1073767460 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7037 $, $db@var1868 $) $) { $return $; } $do ${ $} $while $(@expr1073767461 $false $) ;
7038: $if $(@expr1073767462 $!@expr1073767463 $assertEquals $(@expr1073767464 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7038 $, "" $, errout@var100 .@expr1073767465 str (@expr1073767466 ) $) $) { $return ; }
7039: $if $(@expr1073767467 $!@expr1073767468 $assertEquals $(@expr1073767469 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7039 $, true $, db@var1868 !=@expr1073767470 nullptr $) $) { $return ; }
7040:
7041: const Function * func@var1869 ; func@var1869 =@expr1073767471 findFunctionByName (@expr1073767472 "func" , &@expr1073767473 db@var1868 .@expr1073767474 scopeList@var1870 .@expr1073767475 front (@expr1073767476 ) ) ;
7042: $if $(@expr1073767477 $!@expr1073767478 $assertEquals $(@expr1073767479 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7042 $, true $, func@var1869 !=@expr1073767480 nullptr $) $) { $return ; }
7043: $if $(@expr1073767481 $!@expr1073767482 $assertEquals $(@expr1073767483 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7043 $, true $, func@var1869 .@expr1073767484 isAttributeNothrow (@expr1073767485 ) $) $) { $return ; }
7044: }
7045:
7046: void noreturnAttributeFunction ( ) {
7047: $Tokenizer $tokenizer@var1871 $(@expr1073767486 $&@expr1073767487 $settings1@var123 $, $this@expr1073767488 $) $; $const $SymbolDatabase $* $db@var1872 $; $db@var1872 $=@expr1073767489 $getSymbolDB_inner $(@expr1073767490 $tokenizer@var1871 $, "[[noreturn]] void func1();\nvoid func1() { }\n[[noreturn]] void func2();\n[[noreturn]] void func3() { }\ntemplate <class T> [[noreturn]] void func4() { }" $, $"test.cpp" $) $; $if $(@expr1073767491 $!@expr1073767492 $assert_ $(@expr1073767493 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7047 $, $db@var1872 $) $) { $return $; } $do ${ $} $while $(@expr1073767494 $false $)
7048:
7049:
7050:
7051: ;
7052: $if $(@expr1073767495 $!@expr1073767496 $assertEquals $(@expr1073767497 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7052 $, "" $, errout@var100 .@expr1073767498 str (@expr1073767499 ) $) $) { $return ; }
7053: $if $(@expr1073767500 $!@expr1073767501 $assertEquals $(@expr1073767502 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7053 $, true $, db@var1872 !=@expr1073767503 nullptr $) $) { $return ; }
7054:
7055: const Function * func@var1873 ; func@var1873 =@expr1073767504 findFunctionByName (@expr1073767505 "func1" , &@expr25682 db@var1872 .@expr25683 scopeList@var1874 .@expr25684 front (@expr25685 ) ) ;
7056: $if $(@expr1073767510 $!@expr1073767511 $assertEquals $(@expr1073767512 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7056 $, true $, func@var1873 !=@expr25689 nullptr $) $) { $return ; }
7057: $if $(@expr1073767514 $!@expr1073767515 $assertEquals $(@expr1073767516 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7057 $, true $, func@var1873 .@expr25693 isAttributeNoreturn (@expr25694 ) $) $) { $return ; }
7058:
7059: func@var1873 =@expr1073767519 findFunctionByName (@expr1073767520 "func2" , &@expr25682 db@var1872 .@expr25683 scopeList@var1874 .@expr25684 front (@expr25685 ) ) ;
7060: $if $(@expr1073767525 $!@expr1073767526 $assertEquals $(@expr1073767527 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7060 $, true $, func@var1873 !=@expr25689 nullptr $) $) { $return ; }
7061: $if $(@expr1073767529 $!@expr1073767530 $assertEquals $(@expr1073767531 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7061 $, true $, func@var1873 .@expr25693 isAttributeNoreturn (@expr25694 ) $) $) { $return ; }
7062:
7063: func@var1873 =@expr1073767534 findFunctionByName (@expr1073767535 "func3" , &@expr25682 db@var1872 .@expr25683 scopeList@var1874 .@expr25684 front (@expr25685 ) ) ;
7064: $if $(@expr1073767540 $!@expr1073767541 $assertEquals $(@expr1073767542 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7064 $, true $, func@var1873 !=@expr25689 nullptr $) $) { $return ; }
7065: $if $(@expr1073767544 $!@expr1073767545 $assertEquals $(@expr1073767546 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7065 $, true $, func@var1873 .@expr25693 isAttributeNoreturn (@expr25694 ) $) $) { $return ; }
7066:
7067: func@var1873 =@expr1073767549 findFunctionByName (@expr1073767550 "func4" , &@expr25682 db@var1872 .@expr25683 scopeList@var1874 .@expr25684 front (@expr25685 ) ) ;
7068: $if $(@expr1073767555 $!@expr1073767556 $assertEquals $(@expr1073767557 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7068 $, true $, func@var1873 !=@expr25689 nullptr $) $) { $return ; }
7069: $if $(@expr1073767559 $!@expr1073767560 $assertEquals $(@expr1073767561 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7069 $, true $, func@var1873 .@expr25693 isAttributeNoreturn (@expr25694 ) $) $) { $return ; }
7070:
7071: }
7072:
7073: void nodiscardAttributeFunction ( ) {
7074: $Tokenizer $tokenizer@var1875 $(@expr1073767564 $&@expr1073767565 $settings1@var123 $, $this@expr1073767566 $) $; $const $SymbolDatabase $* $db@var1876 $; $db@var1876 $=@expr1073767567 $getSymbolDB_inner $(@expr1073767568 $tokenizer@var1875 $, "[[nodiscard]] int func1();\nint func1() { }\n[[nodiscard]] int func2();\n[[nodiscard]] int func3() { }\ntemplate <class T> [[nodiscard]] int func4() { }std::pair<bool, char> [[nodiscard]] func5();\n[[nodiscard]] std::pair<bool, char> func6();\n" $, $"test.cpp" $) $; $if $(@expr1073767569 $!@expr1073767570 $assert_ $(@expr1073767571 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7074 $, $db@var1876 $) $) { $return $; } $do ${ $} $while $(@expr1073767572 $false $)
7075:
|
7080:
7081: ;
7082: $if $(@expr1073767573 $!@expr1073767574 $assertEquals $(@expr1073767575 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7082 $, "" $, errout@var100 .@expr1073767576 str (@expr1073767577 ) $) $) { $return ; }
7083: $if $(@expr1073767578 $!@expr1073767579 $assertEquals $(@expr1073767580 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7083 $, true $, db@var1876 !=@expr1073767581 nullptr $) $) { $return ; }
7084:
7085: const Function * func@var1877 ; func@var1877 =@expr1073767582 findFunctionByName (@expr1073767583 "func1" , &@expr25760 db@var1876 .@expr25761 scopeList@var1878 .@expr25762 front (@expr25763 ) ) ;
7086: $if $(@expr1073767588 $!@expr1073767589 $assertEquals $(@expr1073767590 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7086 $, true $, func@var1877 !=@expr25767 nullptr $) $) { $return ; }
7087: $if $(@expr1073767592 $!@expr1073767593 $assertEquals $(@expr1073767594 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7087 $, true $, func@var1877 .@expr25771 isAttributeNodiscard (@expr25772 ) $) $) { $return ; }
7088:
7089: func@var1877 =@expr1073767597 findFunctionByName (@expr1073767598 "func2" , &@expr25760 db@var1876 .@expr25761 scopeList@var1878 .@expr25762 front (@expr25763 ) ) ;
7090: $if $(@expr1073767603 $!@expr1073767604 $assertEquals $(@expr1073767605 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7090 $, true $, func@var1877 !=@expr25767 nullptr $) $) { $return ; }
7091: $if $(@expr1073767607 $!@expr1073767608 $assertEquals $(@expr1073767609 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7091 $, true $, func@var1877 .@expr25771 isAttributeNodiscard (@expr25772 ) $) $) { $return ; }
7092:
7093: func@var1877 =@expr1073767612 findFunctionByName (@expr1073767613 "func3" , &@expr25760 db@var1876 .@expr25761 scopeList@var1878 .@expr25762 front (@expr25763 ) ) ;
7094: $if $(@expr1073767618 $!@expr1073767619 $assertEquals $(@expr1073767620 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7094 $, true $, func@var1877 !=@expr25767 nullptr $) $) { $return ; }
7095: $if $(@expr1073767622 $!@expr1073767623 $assertEquals $(@expr1073767624 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7095 $, true $, func@var1877 .@expr25771 isAttributeNodiscard (@expr25772 ) $) $) { $return ; }
7096:
7097: func@var1877 =@expr1073767627 findFunctionByName (@expr1073767628 "func4" , &@expr25760 db@var1876 .@expr25761 scopeList@var1878 .@expr25762 front (@expr25763 ) ) ;
7098: $if $(@expr1073767633 $!@expr1073767634 $assertEquals $(@expr1073767635 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7098 $, true $, func@var1877 !=@expr25767 nullptr $) $) { $return ; }
7099: $if $(@expr1073767637 $!@expr1073767638 $assertEquals $(@expr1073767639 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7099 $, true $, func@var1877 .@expr25771 isAttributeNodiscard (@expr25772 ) $) $) { $return ; }
7100:
7101: func@var1877 =@expr1073767642 findFunctionByName (@expr1073767643 "func5" , &@expr25760 db@var1876 .@expr25761 scopeList@var1878 .@expr25762 front (@expr25763 ) ) ;
7102: $if $(@expr1073767648 $!@expr1073767649 $assertEquals $(@expr1073767650 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7102 $, true $, func@var1877 !=@expr25767 nullptr $) $) { $return ; }
7103: $if $(@expr1073767652 $!@expr1073767653 $assertEquals $(@expr1073767654 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7103 $, true $, func@var1877 .@expr25771 isAttributeNodiscard (@expr25772 ) $) $) { $return ; }
7104:
7105: func@var1877 =@expr1073767657 findFunctionByName (@expr1073767658 "func6" , &@expr25760 db@var1876 .@expr25761 scopeList@var1878 .@expr25762 front (@expr25763 ) ) ;
7106: $if $(@expr1073767663 $!@expr1073767664 $assertEquals $(@expr1073767665 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7106 $, true $, func@var1877 !=@expr25767 nullptr $) $) { $return ; }
7107: $if $(@expr1073767667 $!@expr1073767668 $assertEquals $(@expr1073767669 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7107 $, true $, func@var1877 .@expr25771 isAttributeNodiscard (@expr25772 ) $) $) { $return ; }
7108: }
7109:
7110: void varTypesIntegral ( ) {
7111: $Tokenizer $tokenizer@var1879 $(@expr1073767672 $&@expr1073767673 $settings1@var123 $, $this@expr1073767674 $) $; $const $SymbolDatabase $* $db@var1880 $; $db@var1880 $=@expr1073767675 $getSymbolDB_inner $(@expr1073767676 $tokenizer@var1879 $, "void f() { bool b; char c; unsigned char uc; short s; unsigned short us; int i; unsigned u; unsigned int ui; long l; unsigned long ul; long long ll; }" $, $"test.cpp" $) $; $if $(@expr1073767677 $!@expr1073767678 $assert_ $(@expr1073767679 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7111 $, $db@var1880 $) $) { $return $; } $do ${ $} $while $(@expr1073767680 $false $) ;
7112: const Variable * b@var1881 ; b@var1881 =@expr1073767681 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767683 1 ) ;
7113: $if $(@expr1073767684 $!@expr1073767685 $assert_ $(@expr1073767686 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7113 $, b@var1881 !=@expr1073767687 nullptr $) $) { $return ; }
7114: $if $(@expr1073767688 $!@expr1073767689 $assertEquals $(@expr1073767690 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7114 $, "b" $, b@var1881 .@expr1073767691 nameToken (@expr1073767692 ) .@expr1073767693 str (@expr1073767694 ) $) $) { $return ; }
7115: $if $(@expr1073767695 $!@expr1073767696 $assertEquals $(@expr1073767697 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7115 $, false $, b@var1881 .@expr1073767698 isFloatingType (@expr1073767699 ) $) $) { $return ; }
7116:
7117: const Variable * c@var1882 ; c@var1882 =@expr1073767700 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767702 2 ) ;
7118: $if $(@expr1073767703 $!@expr1073767704 $assert_ $(@expr1073767705 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7118 $, c@var1882 !=@expr1073767706 nullptr $) $) { $return ; }
7119: $if $(@expr1073767707 $!@expr1073767708 $assertEquals $(@expr1073767709 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7119 $, "c" $, c@var1882 .@expr1073767710 nameToken (@expr1073767711 ) .@expr1073767712 str (@expr1073767713 ) $) $) { $return ; }
7120: $if $(@expr1073767714 $!@expr1073767715 $assertEquals $(@expr1073767716 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7120 $, false $, c@var1882 .@expr1073767717 isFloatingType (@expr1073767718 ) $) $) { $return ; }
7121:
7122: const Variable * uc@var1883 ; uc@var1883 =@expr1073767719 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767721 3 ) ;
7123: $if $(@expr1073767722 $!@expr1073767723 $assert_ $(@expr1073767724 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7123 $, uc@var1883 !=@expr1073767725 nullptr $) $) { $return ; }
7124: $if $(@expr1073767726 $!@expr1073767727 $assertEquals $(@expr1073767728 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7124 $, "uc" $, uc@var1883 .@expr1073767729 nameToken (@expr1073767730 ) .@expr1073767731 str (@expr1073767732 ) $) $) { $return ; }
7125: $if $(@expr1073767733 $!@expr1073767734 $assertEquals $(@expr1073767735 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7125 $, false $, uc@var1883 .@expr1073767736 isFloatingType (@expr1073767737 ) $) $) { $return ; }
7126:
7127: const Variable * s@var1884 ; s@var1884 =@expr1073767738 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767740 4 ) ;
7128: $if $(@expr1073767741 $!@expr1073767742 $assert_ $(@expr1073767743 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7128 $, s@var1884 !=@expr1073767744 nullptr $) $) { $return ; }
7129: $if $(@expr1073767745 $!@expr1073767746 $assertEquals $(@expr1073767747 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7129 $, "s" $, s@var1884 .@expr1073767748 nameToken (@expr1073767749 ) .@expr1073767750 str (@expr1073767751 ) $) $) { $return ; }
7130: $if $(@expr1073767752 $!@expr1073767753 $assertEquals $(@expr1073767754 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7130 $, false $, s@var1884 .@expr1073767755 isFloatingType (@expr1073767756 ) $) $) { $return ; }
7131:
7132: const Variable * us@var1885 ; us@var1885 =@expr1073767757 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767759 5 ) ;
7133: $if $(@expr1073767760 $!@expr1073767761 $assert_ $(@expr1073767762 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7133 $, us@var1885 !=@expr1073767763 nullptr $) $) { $return ; }
7134: $if $(@expr1073767764 $!@expr1073767765 $assertEquals $(@expr1073767766 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7134 $, "us" $, us@var1885 .@expr1073767767 nameToken (@expr1073767768 ) .@expr1073767769 str (@expr1073767770 ) $) $) { $return ; }
7135: $if $(@expr1073767771 $!@expr1073767772 $assertEquals $(@expr1073767773 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7135 $, false $, us@var1885 .@expr1073767774 isFloatingType (@expr1073767775 ) $) $) { $return ; }
7136:
7137: const Variable * i@var1886 ; i@var1886 =@expr1073767776 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767778 6 ) ;
7138: $if $(@expr1073767779 $!@expr1073767780 $assert_ $(@expr1073767781 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7138 $, i@var1886 !=@expr1073767782 nullptr $) $) { $return ; }
7139: $if $(@expr1073767783 $!@expr1073767784 $assertEquals $(@expr1073767785 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7139 $, "i" $, i@var1886 .@expr1073767786 nameToken (@expr1073767787 ) .@expr1073767788 str (@expr1073767789 ) $) $) { $return ; }
7140: $if $(@expr1073767790 $!@expr1073767791 $assertEquals $(@expr1073767792 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7140 $, false $, i@var1886 .@expr1073767793 isFloatingType (@expr1073767794 ) $) $) { $return ; }
7141:
7142: const Variable * u@var1887 ; u@var1887 =@expr1073767795 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767797 7 ) ;
7143: $if $(@expr1073767798 $!@expr1073767799 $assert_ $(@expr1073767800 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7143 $, u@var1887 !=@expr1073767801 nullptr $) $) { $return ; }
7144: $if $(@expr1073767802 $!@expr1073767803 $assertEquals $(@expr1073767804 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7144 $, "u" $, u@var1887 .@expr1073767805 nameToken (@expr1073767806 ) .@expr1073767807 str (@expr1073767808 ) $) $) { $return ; }
7145: $if $(@expr1073767809 $!@expr1073767810 $assertEquals $(@expr1073767811 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7145 $, false $, u@var1887 .@expr1073767812 isFloatingType (@expr1073767813 ) $) $) { $return ; }
7146:
7147: const Variable * ui@var1888 ; ui@var1888 =@expr1073767814 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767816 8 ) ;
7148: $if $(@expr1073767817 $!@expr1073767818 $assert_ $(@expr1073767819 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7148 $, ui@var1888 !=@expr1073767820 nullptr $) $) { $return ; }
7149: $if $(@expr1073767821 $!@expr1073767822 $assertEquals $(@expr1073767823 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7149 $, "ui" $, ui@var1888 .@expr1073767824 nameToken (@expr1073767825 ) .@expr1073767826 str (@expr1073767827 ) $) $) { $return ; }
7150: $if $(@expr1073767828 $!@expr1073767829 $assertEquals $(@expr1073767830 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7150 $, false $, ui@var1888 .@expr1073767831 isFloatingType (@expr1073767832 ) $) $) { $return ; }
7151:
7152: const Variable * l@var1889 ; l@var1889 =@expr1073767833 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767835 9 ) ;
7153: $if $(@expr1073767836 $!@expr1073767837 $assert_ $(@expr1073767838 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7153 $, l@var1889 !=@expr1073767839 nullptr $) $) { $return ; }
7154: $if $(@expr1073767840 $!@expr1073767841 $assertEquals $(@expr1073767842 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7154 $, "l" $, l@var1889 .@expr1073767843 nameToken (@expr1073767844 ) .@expr1073767845 str (@expr1073767846 ) $) $) { $return ; }
7155: $if $(@expr1073767847 $!@expr1073767848 $assertEquals $(@expr1073767849 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7155 $, false $, l@var1889 .@expr1073767850 isFloatingType (@expr1073767851 ) $) $) { $return ; }
7156:
7157: const Variable * ul@var1890 ; ul@var1890 =@expr1073767852 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767854 10 ) ;
7158: $if $(@expr1073767855 $!@expr1073767856 $assert_ $(@expr1073767857 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7158 $, ul@var1890 !=@expr1073767858 nullptr $) $) { $return ; }
7159: $if $(@expr1073767859 $!@expr1073767860 $assertEquals $(@expr1073767861 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7159 $, "ul" $, ul@var1890 .@expr1073767862 nameToken (@expr1073767863 ) .@expr1073767864 str (@expr1073767865 ) $) $) { $return ; }
7160: $if $(@expr1073767866 $!@expr1073767867 $assertEquals $(@expr1073767868 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7160 $, false $, ul@var1890 .@expr1073767869 isFloatingType (@expr1073767870 ) $) $) { $return ; }
7161:
7162: const Variable * ll@var1891 ; ll@var1891 =@expr1073767871 db@var1880 .@expr25858 getVariableFromVarId (@expr1073767873 11 ) ;
7163: $if $(@expr1073767874 $!@expr1073767875 $assert_ $(@expr1073767876 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7163 $, ll@var1891 !=@expr1073767877 nullptr $) $) { $return ; }
7164: $if $(@expr1073767878 $!@expr1073767879 $assertEquals $(@expr1073767880 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7164 $, "ll" $, ll@var1891 .@expr1073767881 nameToken (@expr1073767882 ) .@expr1073767883 str (@expr1073767884 ) $) $) { $return ; }
7165: $if $(@expr1073767885 $!@expr1073767886 $assertEquals $(@expr1073767887 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7165 $, false $, ll@var1891 .@expr1073767888 isFloatingType (@expr1073767889 ) $) $) { $return ; }
7166: }
7167:
7168: void varTypesFloating ( ) {
7169: {
7170: $Tokenizer $tokenizer@var1892 $(@expr1073767890 $&@expr1073767891 $settings1@var123 $, $this@expr26068 $) $; $const $SymbolDatabase $* $db@var1893 $; $db@var1893 $=@expr1073767893 $getSymbolDB_inner $(@expr1073767894 $tokenizer@var1892 $, "void f() { float f; double d; long double ld; }" $, $"test.cpp" $) $; $if $(@expr1073767895 $!@expr1073767896 $assert_ $(@expr1073767897 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7170 $, $db@var1893 $) $) { $return $; } $do ${ $} $while $(@expr1073767898 $false $) ;
7171: const Variable * f@var1894 ; f@var1894 =@expr1073767899 db@var1893 .@expr26076 getVariableFromVarId (@expr1073767901 1 ) ;
7172: $if $(@expr1073767902 $!@expr1073767903 $assert_ $(@expr1073767904 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7172 $, f@var1894 !=@expr1073767905 nullptr $) $) { $return ; }
7173: $if $(@expr1073767906 $!@expr1073767907 $assertEquals $(@expr1073767908 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7173 $, "f" $, f@var1894 .@expr1073767909 nameToken (@expr1073767910 ) .@expr1073767911 str (@expr1073767912 ) $) $) { $return ; }
7174: $if $(@expr1073767913 $!@expr1073767914 $assertEquals $(@expr1073767915 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7174 $, true $, f@var1894 .@expr1073767916 isFloatingType (@expr1073767917 ) $) $) { $return ; }
7175:
7176: const Variable * d@var1895 ; d@var1895 =@expr1073767918 db@var1893 .@expr26076 getVariableFromVarId (@expr1073767920 2 ) ;
7177: $if $(@expr1073767921 $!@expr1073767922 $assert_ $(@expr1073767923 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7177 $, d@var1895 !=@expr1073767924 nullptr $) $) { $return ; }
7178: $if $(@expr1073767925 $!@expr1073767926 $assertEquals $(@expr1073767927 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7178 $, "d" $, d@var1895 .@expr1073767928 nameToken (@expr1073767929 ) .@expr1073767930 str (@expr1073767931 ) $) $) { $return ; }
7179: $if $(@expr1073767932 $!@expr1073767933 $assertEquals $(@expr1073767934 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7179 $, true $, d@var1895 .@expr1073767935 isFloatingType (@expr1073767936 ) $) $) { $return ; }
7180:
7181: const Variable * ld@var1896 ; ld@var1896 =@expr1073767937 db@var1893 .@expr26076 getVariableFromVarId (@expr1073767939 3 ) ;
7182: $if $(@expr1073767940 $!@expr1073767941 $assert_ $(@expr1073767942 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7182 $, ld@var1896 !=@expr1073767943 nullptr $) $) { $return ; }
7183: $if $(@expr1073767944 $!@expr1073767945 $assertEquals $(@expr1073767946 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7183 $, "ld" $, ld@var1896 .@expr1073767947 nameToken (@expr1073767948 ) .@expr1073767949 str (@expr1073767950 ) $) $) { $return ; }
7184: $if $(@expr1073767951 $!@expr1073767952 $assertEquals $(@expr1073767953 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7184 $, true $, ld@var1896 .@expr1073767954 isFloatingType (@expr1073767955 ) $) $) { $return ; }
7185: }
7186: {
7187: $Tokenizer $tokenizer@var1897 $(@expr1073767956 $&@expr1073767957 $settings1@var123 $, $this@expr26068 $) $; $const $SymbolDatabase $* $db@var1898 $; $db@var1898 $=@expr1073767958 $getSymbolDB_inner $(@expr1073767959 $tokenizer@var1897 $, "void f() { float * f; static const float * scf; }" $, $"test.cpp" $) $; $if $(@expr1073767960 $!@expr1073767961 $assert_ $(@expr1073767962 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7187 $, $db@var1898 $) $) { $return $; } $do ${ $} $while $(@expr1073767963 $false $) ;
7188: const Variable * f@var1899 ; f@var1899 =@expr1073767964 db@var1898 .@expr26141 getVariableFromVarId (@expr1073767966 1 ) ;
7189: $if $(@expr1073767967 $!@expr1073767968 $assert_ $(@expr1073767969 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7189 $, f@var1899 !=@expr1073767970 nullptr $) $) { $return ; }
7190: $if $(@expr1073767971 $!@expr1073767972 $assertEquals $(@expr1073767973 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7190 $, "f" $, f@var1899 .@expr1073767974 nameToken (@expr1073767975 ) .@expr1073767976 str (@expr1073767977 ) $) $) { $return ; }
7191: $if $(@expr1073767978 $!@expr1073767979 $assertEquals $(@expr1073767980 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7191 $, true $, f@var1899 .@expr1073767981 isFloatingType (@expr1073767982 ) $) $) { $return ; }
7192: $if $(@expr1073767983 $!@expr1073767984 $assertEquals $(@expr1073767985 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7192 $, true $, f@var1899 .@expr1073767986 isArrayOrPointer (@expr1073767987 ) $) $) { $return ; }
7193:
7194: const Variable * scf@var1900 ; scf@var1900 =@expr1073767988 db@var1898 .@expr26141 getVariableFromVarId (@expr1073767990 2 ) ;
7195: $if $(@expr1073767991 $!@expr1073767992 $assert_ $(@expr1073767993 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7195 $, scf@var1900 !=@expr1073767994 nullptr $) $) { $return ; }
7196: $if $(@expr1073767995 $!@expr1073767996 $assertEquals $(@expr1073767997 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7196 $, "scf" $, scf@var1900 .@expr1073767998 nameToken (@expr1073767999 ) .@expr1073768000 str (@expr1073768001 ) $) $) { $return ; }
7197: $if $(@expr1073768002 $!@expr1073768003 $assertEquals $(@expr1073768004 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7197 $, true $, scf@var1900 .@expr1073768005 isFloatingType (@expr1073768006 ) $) $) { $return ; }
7198: $if $(@expr1073768007 $!@expr1073768008 $assertEquals $(@expr1073768009 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7198 $, true $, scf@var1900 .@expr1073768010 isArrayOrPointer (@expr1073768011 ) $) $) { $return ; }
7199: }
7200: {
7201: $Tokenizer $tokenizer@var1901 $(@expr1073768012 $&@expr1073768013 $settings1@var123 $, $this@expr26068 $) $; $const $SymbolDatabase $* $db@var1902 $; $db@var1902 $=@expr1073768014 $getSymbolDB_inner $(@expr1073768015 $tokenizer@var1901 $, "void f() { float fa[42]; }" $, $"test.cpp" $) $; $if $(@expr1073768016 $!@expr1073768017 $assert_ $(@expr1073768018 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7201 $, $db@var1902 $) $) { $return $; } $do ${ $} $while $(@expr1073768019 $false $) ;
7202: const Variable * fa@var1903 ; fa@var1903 =@expr1073768020 db@var1902 .@expr1073768021 getVariableFromVarId (@expr1073768022 1 ) ;
7203: $if $(@expr1073768023 $!@expr1073768024 $assert_ $(@expr1073768025 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7203 $, fa@var1903 !=@expr1073768026 nullptr $) $) { $return ; }
7204: $if $(@expr1073768027 $!@expr1073768028 $assertEquals $(@expr1073768029 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7204 $, "fa" $, fa@var1903 .@expr1073768030 nameToken (@expr1073768031 ) .@expr1073768032 str (@expr1073768033 ) $) $) { $return ; }
7205: $if $(@expr1073768034 $!@expr1073768035 $assertEquals $(@expr1073768036 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7205 $, true $, fa@var1903 .@expr1073768037 isFloatingType (@expr1073768038 ) $) $) { $return ; }
7206: $if $(@expr1073768039 $!@expr1073768040 $assertEquals $(@expr1073768041 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7206 $, true $, fa@var1903 .@expr1073768042 isArrayOrPointer (@expr1073768043 ) $) $) { $return ; }
7207: }
7208: }
7209:
7210: void varTypesOther ( ) {
7211: $Tokenizer $tokenizer@var1904 $(@expr1073768044 $&@expr1073768045 $settings1@var123 $, $this@expr1073768046 $) $; $const $SymbolDatabase $* $db@var1905 $; $db@var1905 $=@expr1073768047 $getSymbolDB_inner $(@expr1073768048 $tokenizer@var1904 $, "void f() { class A {} a; void *b;  }" $, $"test.cpp" $) $; $if $(@expr1073768049 $!@expr1073768050 $assert_ $(@expr1073768051 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7211 $, $db@var1905 $) $) { $return $; } $do ${ $} $while $(@expr1073768052 $false $) ;
7212: const Variable * a@var1906 ; a@var1906 =@expr1073768053 db@var1905 .@expr26230 getVariableFromVarId (@expr1073768055 1 ) ;
7213: $if $(@expr1073768056 $!@expr1073768057 $assert_ $(@expr1073768058 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7213 $, a@var1906 !=@expr1073768059 nullptr $) $) { $return ; }
7214: $if $(@expr1073768060 $!@expr1073768061 $assertEquals $(@expr1073768062 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7214 $, "a" $, a@var1906 .@expr1073768063 nameToken (@expr1073768064 ) .@expr1073768065 str (@expr1073768066 ) $) $) { $return ; }
7215: $if $(@expr1073768067 $!@expr1073768068 $assertEquals $(@expr1073768069 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7215 $, false $, a@var1906 .@expr1073768070 isFloatingType (@expr1073768071 ) $) $) { $return ; }
7216:
7217: const Variable * b@var1907 ; b@var1907 =@expr1073768072 db@var1905 .@expr26230 getVariableFromVarId (@expr1073768074 2 ) ;
7218: $if $(@expr1073768075 $!@expr1073768076 $assert_ $(@expr1073768077 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7218 $, b@var1907 !=@expr1073768078 nullptr $) $) { $return ; }
7219: $if $(@expr1073768079 $!@expr1073768080 $assertEquals $(@expr1073768081 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7219 $, "b" $, b@var1907 .@expr1073768082 nameToken (@expr1073768083 ) .@expr1073768084 str (@expr1073768085 ) $) $) { $return ; }
7220: $if $(@expr1073768086 $!@expr1073768087 $assertEquals $(@expr1073768088 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7220 $, false $, b@var1907 .@expr1073768089 isFloatingType (@expr1073768090 ) $) $) { $return ; }
7221: }
7222:
7223: void functionPrototype ( ) {
7224: $check_ $(@expr1073768091 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7224 $, "int foo(int x) {\n    extern int func1();\n    extern int func2(int);\n    int func3();\n    int func4(int);\n    return func4(x);\n}\n" , true $)
7225:
|
7229:
7230: ;
7231: $if $(@expr1073768092 $!@expr1073768093 $assertEquals $(@expr1073768094 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7231 $, "" $, errout@var100 .@expr1073768095 str (@expr1073768096 ) $) $) { $return ; }
7232: }
7233:
7234: void lambda ( ) {
7235: $Tokenizer $tokenizer@var1908 $(@expr1073768100 $&@expr1073768101 $settings1@var123 $, $this@expr1073768102 $) $; $const $SymbolDatabase $* $db@var1909 $; $db@var1909 $=@expr1073768103 $getSymbolDB_inner $(@expr1073768104 $tokenizer@var1908 $, "void func() {\n    float y = 0.0f;\n    auto lambda = [&]()\n    {\n        float x = 1.0f;\n        y += 10.0f - x;\n    }\n    lambda();\n}" $, $"test.cpp" $) $; $if $(@expr1073768105 $!@expr1073768106 $assert_ $(@expr1073768107 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7235 $, $db@var1909 $) $) { $return $; } $do ${ $} $while $(@expr1073768108 $false $)
7236:
|
7242:
7243: ;
7244:
7245: $if $(@expr1073768109 $!@expr1073768110 $assert_ $(@expr1073768111 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7245 $, db@var1909 &&@expr1073768112 db@var1909 .@expr26289 scopeList@var1910 .@expr1073768114 size (@expr1073768115 ) ==@expr1073768116 3 $) $) { $return ; }
7246: std ::@expr1073768117 list < Scope > ::@expr1073768118 const_iterator scope@var1911 ; scope@var1911 =@expr1073768119 db@var1909 .@expr26289 scopeList@var1910 .@expr1073768121 begin (@expr1073768122 ) ;
7247: $if $(@expr1073768123 $!@expr1073768124 $assertEquals $(@expr1073768125 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7247 $, Scope ::@expr1073768126 eGlobal@expr1073768097 $, scope@var1911 .@expr26303 type@var1912 $) $) { $return ; }
7248: ++@expr1073768128 scope@var1911 ;
7249: $if $(@expr1073768129 $!@expr1073768130 $assertEquals $(@expr1073768131 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7249 $, Scope ::@expr1073768132 eFunction@expr1073768098 $, scope@var1911 .@expr26303 type@var1912 $) $) { $return ; }
7250: ++@expr1073768134 scope@var1911 ;
7251: $if $(@expr1073768135 $!@expr1073768136 $assertEquals $(@expr1073768137 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7251 $, Scope ::@expr1073768138 eLambda@expr1073768099 $, scope@var1911 .@expr26303 type@var1912 $) $) { $return ; }
7252: }
7253:
7254: void lambda2 ( ) {
7255: $Tokenizer $tokenizer@var1913 $(@expr1073768143 $&@expr1073768144 $settings1@var123 $, $this@expr1073768145 $) $; $const $SymbolDatabase $* $db@var1914 $; $db@var1914 $=@expr1073768146 $getSymbolDB_inner $(@expr1073768147 $tokenizer@var1913 $, "void func() {\n    float y = 0.0f;\n    auto lambda = [&]() -> bool\n    {\n        float x = 1.0f;\n    }\n    lambda();\n}" $, $"test.cpp" $) $; $if $(@expr1073768148 $!@expr1073768149 $assert_ $(@expr1073768150 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7255 $, $db@var1914 $) $) { $return $; } $do ${ $} $while $(@expr1073768151 $false $)
7256:
|
7261:
7262: ;
7263:
7264: $if $(@expr1073768152 $!@expr1073768153 $assert_ $(@expr1073768154 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7264 $, db@var1914 &&@expr1073768155 db@var1914 .@expr26332 scopeList@var1915 .@expr1073768157 size (@expr1073768158 ) ==@expr1073768159 3 $) $) { $return ; }
7265: std ::@expr1073768160 list < Scope > ::@expr1073768161 const_iterator scope@var1916 ; scope@var1916 =@expr1073768162 db@var1914 .@expr26332 scopeList@var1915 .@expr1073768164 begin (@expr1073768165 ) ;
7266: $if $(@expr1073768166 $!@expr1073768167 $assertEquals $(@expr1073768168 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7266 $, Scope ::@expr1073768169 eGlobal@expr1073768140 $, scope@var1916 .@expr26346 type@var1917 $) $) { $return ; }
7267: ++@expr1073768171 scope@var1916 ;
7268: $if $(@expr1073768172 $!@expr1073768173 $assertEquals $(@expr1073768174 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7268 $, Scope ::@expr1073768175 eFunction@expr1073768141 $, scope@var1916 .@expr26346 type@var1917 $) $) { $return ; }
7269: ++@expr1073768177 scope@var1916 ;
7270: $if $(@expr1073768178 $!@expr1073768179 $assertEquals $(@expr1073768180 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7270 $, Scope ::@expr1073768181 eLambda@expr1073768142 $, scope@var1916 .@expr26346 type@var1917 $) $) { $return ; }
7271: }
7272:
7273:
7274: void lambda3 ( ) {
7275: $Tokenizer $tokenizer@var1918 $(@expr1073768186 $&@expr1073768187 $settings1@var123 $, $this@expr1073768188 $) $; $const $SymbolDatabase $* $db@var1919 $; $db@var1919 $=@expr1073768189 $getSymbolDB_inner $(@expr1073768190 $tokenizer@var1918 $, "void func() {\n    auto f = []() mutable {}\n}" $, $"test.cpp" $) $; $if $(@expr1073768191 $!@expr1073768192 $assert_ $(@expr1073768193 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7275 $, $db@var1919 $) $) { $return $; } $do ${ $} $while $(@expr1073768194 $false $)
7276:
7277: ;
7278:
7279: $if $(@expr1073768195 $!@expr1073768196 $assert_ $(@expr1073768197 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7279 $, db@var1919 &&@expr1073768198 db@var1919 .@expr26375 scopeList@var1920 .@expr1073768200 size (@expr1073768201 ) ==@expr1073768202 3 $) $) { $return ; }
7280: std ::@expr1073768203 list < Scope > ::@expr1073768204 const_iterator scope@var1921 ; scope@var1921 =@expr1073768205 db@var1919 .@expr26375 scopeList@var1920 .@expr1073768207 begin (@expr1073768208 ) ;
7281: $if $(@expr1073768209 $!@expr1073768210 $assertEquals $(@expr1073768211 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7281 $, Scope ::@expr1073768212 eGlobal@expr1073768183 $, scope@var1921 .@expr26389 type@var1922 $) $) { $return ; }
7282: ++@expr1073768214 scope@var1921 ;
7283: $if $(@expr1073768215 $!@expr1073768216 $assertEquals $(@expr1073768217 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7283 $, Scope ::@expr1073768218 eFunction@expr1073768184 $, scope@var1921 .@expr26389 type@var1922 $) $) { $return ; }
7284: ++@expr1073768220 scope@var1921 ;
7285: $if $(@expr1073768221 $!@expr1073768222 $assertEquals $(@expr1073768223 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7285 $, Scope ::@expr1073768224 eLambda@expr1073768185 $, scope@var1921 .@expr26389 type@var1922 $) $) { $return ; }
7286: }
7287:
7288:
7289: void circularDependencies ( ) {
7290: $check_ $(@expr1073768226 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7290 $, "template<template<class> class E,class D> class C : E<D> {\n	public:\n		int f();\n};\nclass E : C<D,int> {\n	public:\n		int f() { return C< ::D,int>::f(); }\n};\nint main() {\n	E c;\n	c.f();\n}" $)
7291:
|
7300:
7301: ;
7302: }
7303:
7304: void executableScopeWithUnknownFunction ( ) {
7305: $Tokenizer $tokenizer@var1923 $(@expr1073768230 $&@expr1073768231 $settings1@var123 $, $this@expr1073768232 $) $; $const $SymbolDatabase $* $db@var1924 $; $db@var1924 $=@expr1073768233 $getSymbolDB_inner $(@expr1073768234 $tokenizer@var1923 $, "class Fred {\n    void foo(const std::string & a = \"\");\n};\nFred::foo(const std::string & b) { }" $, $"test.cpp" $) $; $if $(@expr1073768235 $!@expr1073768236 $assert_ $(@expr1073768237 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7305 $, $db@var1924 $) $) { $return $; } $do ${ $} $while $(@expr1073768238 $false $)
7306:
7307:
7308: ;
7309:
7310: $if $(@expr1073768239 $!@expr1073768240 $assert_ $(@expr1073768241 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7310 $, db@var1924 &&@expr1073768242 db@var1924 .@expr26419 scopeList@var1925 .@expr1073768244 size (@expr1073768245 ) ==@expr1073768246 3 $) $) { $return ; }
7311: std ::@expr1073768247 list < Scope > ::@expr1073768248 const_iterator scope@var1926 ; scope@var1926 =@expr1073768249 db@var1924 .@expr26419 scopeList@var1925 .@expr1073768251 begin (@expr1073768252 ) ;
7312: $if $(@expr1073768253 $!@expr1073768254 $assertEquals $(@expr1073768255 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7312 $, Scope ::@expr1073768256 eGlobal@expr1073768227 $, scope@var1926 .@expr26433 type@var1927 $) $) { $return ; }
7313: ++@expr1073768258 scope@var1926 ;
7314: $if $(@expr1073768259 $!@expr1073768260 $assertEquals $(@expr1073768261 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7314 $, Scope ::@expr1073768262 eClass@expr1073768228 $, scope@var1926 .@expr26433 type@var1927 $) $) { $return ; }
7315: const Scope * class_scope@var1928 ; class_scope@var1928 =@expr1073768264 &@expr26441 *@expr26442 scope@var1926 ;
7316: ++@expr1073768267 scope@var1926 ;
7317: $if $(@expr1073768268 $!@expr1073768269 $assert_ $(@expr1073768270 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7317 $, class_scope@var1928 .@expr26447 functionList@var1929 .@expr1073768272 size (@expr1073768273 ) ==@expr1073768274 1 $) $) { $return ; }
7318: $if $(@expr1073768275 $!@expr1073768276 $assert_ $(@expr1073768277 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7318 $, class_scope@var1928 .@expr26447 functionList@var1929 .@expr26455 begin (@expr26456 ) .@expr1073768281 hasBody (@expr1073768282 ) $) $) { $return ; }
7319: $if $(@expr1073768283 $!@expr1073768284 $assert_ $(@expr1073768285 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7319 $, class_scope@var1928 .@expr26447 functionList@var1929 .@expr26455 begin (@expr26456 ) .@expr1073768289 functionScope@expr1073768229 ==@expr1073768290 &@expr26441 *@expr26442 scope@var1926 $) $) { $return ; }
7320: }
7321:
7322:
7323: std :: string typeOf_ ( const char * file@var1930 , int line@var1931 , const char code@var1932 [ ] , const char pattern@var1933 [ ] , const char filename@var1934 [ 9 ] = "test.cpp" , const Settings * settings@var1935 = nullptr ) {
7324: Tokenizer tokenizer@var1936 (@expr1073768293 settings@var1935 ?@expr1073768294 settings@var1935 :@expr1073768295 &@expr1073768296 settings2@var124 , this@expr1073768297 ) ;
7325: std ::@expr1073768298 istringstream istr@var1937 (@expr1073768299 code@var1932 ) ;
7326: $assert_ $(@expr1073768300 file@var1930 $, line@var1931 $, $(@expr1073768301 tokenizer@var1936 .@expr1073768302 tokenize (@expr1073768303 istr@var1937 , filename@var1934 ) $) $) ;
7327: const Token * tok@var1938 ;
7328: for (@expr1073768304 tok@var1938 =@expr1073768305 tokenizer@var1936 .@expr1073768306 list@var1939 .@expr1073768307 back (@expr1073768308 ) ; tok@var1938 ; tok@var1938 =@expr1073768309 tok@var1938 .@expr1073768310 previous (@expr1073768311 ) ) {
7329: if (@expr1073768312 Token ::@expr1073768313 simpleMatch (@expr1073768314 tok@var1938 , pattern@var1933 , strlen (@expr1073768315 pattern@var1933 ) ) ) {
7330: break ; } }
7331: return tok@var1938 .@expr26492 valueType (@expr26493 ) ?@expr1073768318 tok@var1938 .@expr26492 valueType (@expr26493 ) .@expr1073768321 str (@expr1073768322 ) :@expr1073768323 std ::@expr1073768324 string (@expr1073768325 ) ;
7332: }
7333:
7334: void valuetype ( ) {
7335:
7336: $if $(@expr1073768336 $!@expr1073768337 $assertEquals $(@expr1073768338 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7336 $, "" $, ValueType (@expr1073768339 ) .@expr1073768340 str (@expr1073768341 ) $) $) { $return ; }
7337:
7338: Settings s@var1940 ;
7339: s@var1940 .@expr1073768342 int_bit@var1941 =@expr1073768343 16 ;
7340: s@var1940 .@expr1073768344 long_bit@var1942 =@expr1073768345 32 ;
7341: s@var1940 .@expr1073768346 long_long_bit@var1943 =@expr1073768347 64 ;
7342:
7343: Settings sSameSize@var1944 ;
7344: sSameSize@var1944 .@expr1073768348 int_bit@var1945 =@expr1073768349 32 ;
7345: sSameSize@var1944 .@expr1073768350 long_bit@var1946 =@expr1073768351 64 ;
7346: sSameSize@var1944 .@expr1073768352 long_long_bit@var1947 =@expr1073768353 64 ;
7347:
7348:
7349: $if $(@expr1073768354 $!@expr1073768355 $assertEquals $(@expr1073768356 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7349 $, "signed int" $, $typeOf_ $(@expr1073768357 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7349 $, "1;" , "1" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7350: $if $(@expr1073768359 $!@expr1073768360 $assertEquals $(@expr1073768361 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7350 $, "signed int" $, $typeOf_ $(@expr1073768362 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7350 $, "(-1);" , "-1" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7351: $if $(@expr1073768364 $!@expr1073768365 $assertEquals $(@expr1073768366 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7351 $, "signed int" $, $typeOf_ $(@expr1073768367 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7351 $, "32767;" , "32767" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7352: $if $(@expr1073768369 $!@expr1073768370 $assertEquals $(@expr1073768371 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7352 $, "signed int" $, $typeOf_ $(@expr1073768372 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7352 $, "(-32767);" , "-32767" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7353: $if $(@expr1073768374 $!@expr1073768375 $assertEquals $(@expr1073768376 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7353 $, "signed long" $, $typeOf_ $(@expr1073768377 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7353 $, "32768;" , "32768" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7354: $if $(@expr1073768379 $!@expr1073768380 $assertEquals $(@expr1073768381 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7354 $, "signed long" $, $typeOf_ $(@expr1073768382 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7354 $, "(-32768);" , "-32768" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7355: $if $(@expr1073768384 $!@expr1073768385 $assertEquals $(@expr1073768386 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7355 $, "signed long" $, $typeOf_ $(@expr1073768387 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7355 $, "32768l;" , "32768l" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7356: $if $(@expr1073768389 $!@expr1073768390 $assertEquals $(@expr1073768391 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7356 $, "unsigned int" $, $typeOf_ $(@expr1073768392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7356 $, "32768U;" , "32768U" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7357: $if $(@expr1073768394 $!@expr1073768395 $assertEquals $(@expr1073768396 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7357 $, "signed long long" $, $typeOf_ $(@expr1073768397 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7357 $, "2147483648;" , "2147483648" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7358: $if $(@expr1073768399 $!@expr1073768400 $assertEquals $(@expr1073768401 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7358 $, "unsigned long" $, $typeOf_ $(@expr1073768402 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7358 $, "2147483648u;" , "2147483648u" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7359: $if $(@expr1073768404 $!@expr1073768405 $assertEquals $(@expr1073768406 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7359 $, "signed long long" $, $typeOf_ $(@expr1073768407 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7359 $, "2147483648L;" , "2147483648L" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7360: $if $(@expr1073768409 $!@expr1073768410 $assertEquals $(@expr1073768411 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7360 $, "unsigned long long" $, $typeOf_ $(@expr1073768412 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7360 $, "18446744069414584320;" , "18446744069414584320" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7361: $if $(@expr1073768414 $!@expr1073768415 $assertEquals $(@expr1073768416 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7361 $, "signed int" $, $typeOf_ $(@expr1073768417 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7361 $, "0xFF;" , "0xFF" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7362: $if $(@expr1073768419 $!@expr1073768420 $assertEquals $(@expr1073768421 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7362 $, "unsigned int" $, $typeOf_ $(@expr1073768422 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7362 $, "0xFFU;" , "0xFFU" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7363: $if $(@expr1073768424 $!@expr1073768425 $assertEquals $(@expr1073768426 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7363 $, "unsigned int" $, $typeOf_ $(@expr1073768427 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7363 $, "0xFFFF;" , "0xFFFF" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7364: $if $(@expr1073768429 $!@expr1073768430 $assertEquals $(@expr1073768431 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7364 $, "signed long" $, $typeOf_ $(@expr1073768432 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7364 $, "0xFFFFFF;" , "0xFFFFFF" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7365: $if $(@expr1073768434 $!@expr1073768435 $assertEquals $(@expr1073768436 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7365 $, "unsigned long" $, $typeOf_ $(@expr1073768437 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7365 $, "0xFFFFFFU;" , "0xFFFFFFU" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7366: $if $(@expr1073768439 $!@expr1073768440 $assertEquals $(@expr1073768441 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7366 $, "unsigned long" $, $typeOf_ $(@expr1073768442 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7366 $, "0xFFFFFFFF;" , "0xFFFFFFFF" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7367: $if $(@expr1073768444 $!@expr1073768445 $assertEquals $(@expr1073768446 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7367 $, "signed long long" $, $typeOf_ $(@expr1073768447 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7367 $, "0xFFFFFFFFFFFF;" , "0xFFFFFFFFFFFF" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7368: $if $(@expr1073768449 $!@expr1073768450 $assertEquals $(@expr1073768451 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7368 $, "unsigned long long" $, $typeOf_ $(@expr1073768452 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7368 $, "0xFFFFFFFFFFFFU;" , "0xFFFFFFFFFFFFU" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7369: $if $(@expr1073768454 $!@expr1073768455 $assertEquals $(@expr1073768456 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7369 $, "unsigned long long" $, $typeOf_ $(@expr1073768457 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7369 $, "0xFFFFFFFF00000000;" , "0xFFFFFFFF00000000" , "test.c" , &@expr26534 s@var1940 $) $) $) { $return ; }
7370:
7371: $if $(@expr1073768459 $!@expr1073768460 $assertEquals $(@expr1073768461 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7371 $, "signed long" $, $typeOf_ $(@expr1073768462 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7371 $, "2147483648;" , "2147483648" , "test.c" , &@expr26639 sSameSize@var1944 $) $) $) { $return ; }
7372: $if $(@expr1073768464 $!@expr1073768465 $assertEquals $(@expr1073768466 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7372 $, "unsigned long" $, $typeOf_ $(@expr1073768467 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7372 $, "0xc000000000000000;" , "0xc000000000000000" , "test.c" , &@expr26639 sSameSize@var1944 $) $) $) { $return ; }
7373:
7374: $if $(@expr1073768469 $!@expr1073768470 $assertEquals $(@expr1073768471 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7374 $, "unsigned int" $, $typeOf_ $(@expr1073768472 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7374 $, "1U;" , "1U" $) $) $) { $return ; }
7375: $if $(@expr1073768473 $!@expr1073768474 $assertEquals $(@expr1073768475 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7375 $, "signed long" $, $typeOf_ $(@expr1073768476 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7375 $, "1L;" , "1L" $) $) $) { $return ; }
7376: $if $(@expr1073768477 $!@expr1073768478 $assertEquals $(@expr1073768479 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7376 $, "unsigned long" $, $typeOf_ $(@expr1073768480 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7376 $, "1UL;" , "1UL" $) $) $) { $return ; }
7377: $if $(@expr1073768481 $!@expr1073768482 $assertEquals $(@expr1073768483 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7377 $, "signed long long" $, $typeOf_ $(@expr1073768484 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7377 $, "1LL;" , "1LL" $) $) $) { $return ; }
7378: $if $(@expr1073768485 $!@expr1073768486 $assertEquals $(@expr1073768487 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7378 $, "unsigned long long" $, $typeOf_ $(@expr1073768488 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7378 $, "1ULL;" , "1ULL" $) $) $) { $return ; }
7379: $if $(@expr1073768489 $!@expr1073768490 $assertEquals $(@expr1073768491 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7379 $, "unsigned long long" $, $typeOf_ $(@expr1073768492 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7379 $, "1LLU;" , "1LLU" $) $) $) { $return ; }
7380: $if $(@expr1073768493 $!@expr1073768494 $assertEquals $(@expr1073768495 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7380 $, "signed long long" $, $typeOf_ $(@expr1073768496 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7380 $, "1i64;" , "1i64" $) $) $) { $return ; }
7381: $if $(@expr1073768497 $!@expr1073768498 $assertEquals $(@expr1073768499 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7381 $, "unsigned long long" $, $typeOf_ $(@expr1073768500 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7381 $, "1ui64;" , "1ui64" $) $) $) { $return ; }
7382: $if $(@expr1073768501 $!@expr1073768502 $assertEquals $(@expr1073768503 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7382 $, "unsigned int" $, $typeOf_ $(@expr1073768504 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7382 $, "1u;" , "1u" $) $) $) { $return ; }
7383: $if $(@expr1073768505 $!@expr1073768506 $assertEquals $(@expr1073768507 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7383 $, "signed long" $, $typeOf_ $(@expr1073768508 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7383 $, "1l;" , "1l" $) $) $) { $return ; }
7384: $if $(@expr1073768509 $!@expr1073768510 $assertEquals $(@expr1073768511 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7384 $, "unsigned long" $, $typeOf_ $(@expr1073768512 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7384 $, "1ul;" , "1ul" $) $) $) { $return ; }
7385: $if $(@expr1073768513 $!@expr1073768514 $assertEquals $(@expr1073768515 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7385 $, "signed long long" $, $typeOf_ $(@expr1073768516 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7385 $, "1ll;" , "1ll" $) $) $) { $return ; }
7386: $if $(@expr1073768517 $!@expr1073768518 $assertEquals $(@expr1073768519 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7386 $, "unsigned long long" $, $typeOf_ $(@expr1073768520 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7386 $, "1ull;" , "1ull" $) $) $) { $return ; }
7387: $if $(@expr1073768521 $!@expr1073768522 $assertEquals $(@expr1073768523 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7387 $, "unsigned long long" $, $typeOf_ $(@expr1073768524 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7387 $, "1llu;" , "1llu" $) $) $) { $return ; }
7388: $if $(@expr1073768525 $!@expr1073768526 $assertEquals $(@expr1073768527 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7388 $, "signed int" $, $typeOf_ $(@expr1073768528 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7388 $, "01;" , "01" $) $) $) { $return ; }
7389: $if $(@expr1073768529 $!@expr1073768530 $assertEquals $(@expr1073768531 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7389 $, "unsigned int" $, $typeOf_ $(@expr1073768532 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7389 $, "01U;" , "01U" $) $) $) { $return ; }
7390: $if $(@expr1073768533 $!@expr1073768534 $assertEquals $(@expr1073768535 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7390 $, "signed long" $, $typeOf_ $(@expr1073768536 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7390 $, "01L;" , "01L" $) $) $) { $return ; }
7391: $if $(@expr1073768537 $!@expr1073768538 $assertEquals $(@expr1073768539 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7391 $, "unsigned long" $, $typeOf_ $(@expr1073768540 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7391 $, "01UL;" , "01UL" $) $) $) { $return ; }
7392: $if $(@expr1073768541 $!@expr1073768542 $assertEquals $(@expr1073768543 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7392 $, "signed long long" $, $typeOf_ $(@expr1073768544 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7392 $, "01LL;" , "01LL" $) $) $) { $return ; }
7393: $if $(@expr1073768545 $!@expr1073768546 $assertEquals $(@expr1073768547 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7393 $, "unsigned long long" $, $typeOf_ $(@expr1073768548 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7393 $, "01ULL;" , "01ULL" $) $) $) { $return ; }
7394: $if $(@expr1073768549 $!@expr1073768550 $assertEquals $(@expr1073768551 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7394 $, "signed int" $, $typeOf_ $(@expr1073768552 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7394 $, "0B1;" , "0B1" $) $) $) { $return ; }
7395: $if $(@expr1073768553 $!@expr1073768554 $assertEquals $(@expr1073768555 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7395 $, "signed int" $, $typeOf_ $(@expr1073768556 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7395 $, "0b1;" , "0b1" $) $) $) { $return ; }
7396: $if $(@expr1073768557 $!@expr1073768558 $assertEquals $(@expr1073768559 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7396 $, "unsigned int" $, $typeOf_ $(@expr1073768560 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7396 $, "0b1U;" , "0b1U" $) $) $) { $return ; }
7397: $if $(@expr1073768561 $!@expr1073768562 $assertEquals $(@expr1073768563 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7397 $, "signed long" $, $typeOf_ $(@expr1073768564 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7397 $, "0b1L;" , "0b1L" $) $) $) { $return ; }
7398: $if $(@expr1073768565 $!@expr1073768566 $assertEquals $(@expr1073768567 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7398 $, "unsigned long" $, $typeOf_ $(@expr1073768568 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7398 $, "0b1UL;" , "0b1UL" $) $) $) { $return ; }
7399: $if $(@expr1073768569 $!@expr1073768570 $assertEquals $(@expr1073768571 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7399 $, "signed long long" $, $typeOf_ $(@expr1073768572 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7399 $, "0b1LL;" , "0b1LL" $) $) $) { $return ; }
7400: $if $(@expr1073768573 $!@expr1073768574 $assertEquals $(@expr1073768575 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7400 $, "unsigned long long" $, $typeOf_ $(@expr1073768576 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7400 $, "0b1ULL;" , "0b1ULL" $) $) $) { $return ; }
7401: $if $(@expr1073768577 $!@expr1073768578 $assertEquals $(@expr1073768579 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7401 $, "float" $, $typeOf_ $(@expr1073768580 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7401 $, "1.0F;" , "1.0F" $) $) $) { $return ; }
7402: $if $(@expr1073768581 $!@expr1073768582 $assertEquals $(@expr1073768583 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7402 $, "float" $, $typeOf_ $(@expr1073768584 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7402 $, "1.0f;" , "1.0f" $) $) $) { $return ; }
7403: $if $(@expr1073768585 $!@expr1073768586 $assertEquals $(@expr1073768587 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7403 $, "double" $, $typeOf_ $(@expr1073768588 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7403 $, "1.0;" , "1.0" $) $) $) { $return ; }
7404: $if $(@expr1073768589 $!@expr1073768590 $assertEquals $(@expr1073768591 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7404 $, "double" $, $typeOf_ $(@expr1073768592 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7404 $, "1E3;" , "1E3" $) $) $) { $return ; }
7405: $if $(@expr1073768593 $!@expr1073768594 $assertEquals $(@expr1073768595 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7405 $, "double" $, $typeOf_ $(@expr1073768596 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7405 $, "0x1.2p3;" , "0x1.2p3" $) $) $) { $return ; }
7406: $if $(@expr1073768597 $!@expr1073768598 $assertEquals $(@expr1073768599 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7406 $, "long double" $, $typeOf_ $(@expr1073768600 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7406 $, "1.23L;" , "1.23L" $) $) $) { $return ; }
7407: $if $(@expr1073768601 $!@expr1073768602 $assertEquals $(@expr1073768603 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7407 $, "long double" $, $typeOf_ $(@expr1073768604 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7407 $, "1.23l;" , "1.23l" $) $) $) { $return ; }
7408:
7409:
7410: $if $(@expr1073768605 $!@expr1073768606 $assertEquals $(@expr1073768607 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7410 $, "signed int" $, $typeOf_ $(@expr1073768608 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7410 $, "1 + 2;" , "+" $) $) $) { $return ; }
7411: $if $(@expr1073768609 $!@expr1073768610 $assertEquals $(@expr1073768611 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7411 $, "signed long" $, $typeOf_ $(@expr1073768612 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7411 $, "1L + 2;" , "+" $) $) $) { $return ; }
7412: $if $(@expr1073768613 $!@expr1073768614 $assertEquals $(@expr1073768615 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7412 $, "signed long long" $, $typeOf_ $(@expr1073768616 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7412 $, "1LL + 2;" , "+" $) $) $) { $return ; }
7413: $if $(@expr1073768617 $!@expr1073768618 $assertEquals $(@expr1073768619 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7413 $, "float" $, $typeOf_ $(@expr1073768620 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7413 $, "1.2f + 3;" , "+" $) $) $) { $return ; }
7414: $if $(@expr1073768621 $!@expr1073768622 $assertEquals $(@expr1073768623 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7414 $, "float" $, $typeOf_ $(@expr1073768624 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7414 $, "1 + 2.3f;" , "+" $) $) $) { $return ; }
7415:
7416:
7417: $if $(@expr1073768625 $!@expr1073768626 $assertEquals $(@expr1073768627 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7417 $, "signed int" $, $typeOf_ $(@expr1073768628 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7417 $, "(char)1 +  (char)2;" , "+" $) $) $) { $return ; }
7418: $if $(@expr1073768629 $!@expr1073768630 $assertEquals $(@expr1073768631 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7418 $, "signed int" $, $typeOf_ $(@expr1073768632 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7418 $, "(short)1 + (short)2;" , "+" $) $) $) { $return ; }
7419: $if $(@expr1073768633 $!@expr1073768634 $assertEquals $(@expr1073768635 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7419 $, "signed int" $, $typeOf_ $(@expr1073768636 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7419 $, "(signed int)1 + (signed char)2;" , "+" $) $) $) { $return ; }
7420: $if $(@expr1073768637 $!@expr1073768638 $assertEquals $(@expr1073768639 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7420 $, "signed int" $, $typeOf_ $(@expr1073768640 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7420 $, "(signed int)1 + (unsigned char)2;" , "+" $) $) $) { $return ; }
7421: $if $(@expr1073768641 $!@expr1073768642 $assertEquals $(@expr1073768643 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7421 $, "unsigned int" $, $typeOf_ $(@expr1073768644 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7421 $, "(unsigned int)1 + (signed char)2;" , "+" $) $) $) { $return ; }
7422: $if $(@expr1073768645 $!@expr1073768646 $assertEquals $(@expr1073768647 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7422 $, "unsigned int" $, $typeOf_ $(@expr1073768648 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7422 $, "(unsigned int)1 + (unsigned char)2;" , "+" $) $) $) { $return ; }
7423: $if $(@expr1073768649 $!@expr1073768650 $assertEquals $(@expr1073768651 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7423 $, "unsigned int" $, $typeOf_ $(@expr1073768652 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7423 $, "(unsigned int)1 + (signed int)2;" , "+" $) $) $) { $return ; }
7424: $if $(@expr1073768653 $!@expr1073768654 $assertEquals $(@expr1073768655 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7424 $, "unsigned int" $, $typeOf_ $(@expr1073768656 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7424 $, "(unsigned int)1 + (unsigned int)2;" , "+" $) $) $) { $return ; }
7425: $if $(@expr1073768657 $!@expr1073768658 $assertEquals $(@expr1073768659 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7425 $, "signed long" $, $typeOf_ $(@expr1073768660 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7425 $, "(signed long)1 + (unsigned int)2;" , "+" $) $) $) { $return ; }
7426: $if $(@expr1073768661 $!@expr1073768662 $assertEquals $(@expr1073768663 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7426 $, "unsigned long" $, $typeOf_ $(@expr1073768664 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7426 $, "(unsigned long)1 + (signed int)2;" , "+" $) $) $) { $return ; }
7427:
7428:
7429: $if $(@expr1073768665 $!@expr1073768666 $assertEquals $(@expr1073768667 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7429 $, "char" $, $typeOf_ $(@expr1073768668 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7429 $, "'a';" , "'a'" , "test.cpp" $) $) $) { $return ; }
7430: $if $(@expr1073768669 $!@expr1073768670 $assertEquals $(@expr1073768671 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7430 $, "signed int" $, $typeOf_ $(@expr1073768672 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7430 $, "'a';" , "'a'" , "test.c" $) $) $) { $return ; }
7431: $if $(@expr1073768673 $!@expr1073768674 $assertEquals $(@expr1073768675 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7431 $, "wchar_t" $, $typeOf_ $(@expr1073768676 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7431 $, "L'a';" , "L'a'" , "test.cpp" $) $) $) { $return ; }
7432: $if $(@expr1073768677 $!@expr1073768678 $assertEquals $(@expr1073768679 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7432 $, "wchar_t" $, $typeOf_ $(@expr1073768680 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7432 $, "L'a';" , "L'a'" , "test.c" $) $) $) { $return ; }
7433: $if $(@expr1073768681 $!@expr1073768682 $assertEquals $(@expr1073768683 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7433 $, "signed int" $, $typeOf_ $(@expr1073768684 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7433 $, "'aaa';" , "'aaa'" , "test.cpp" $) $) $) { $return ; }
7434: $if $(@expr1073768685 $!@expr1073768686 $assertEquals $(@expr1073768687 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7434 $, "signed int" $, $typeOf_ $(@expr1073768688 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7434 $, "'aaa';" , "'aaa'" , "test.c" $) $) $) { $return ; }
7435:
7436:
7437: $if $(@expr1073768689 $!@expr1073768690 $assertEquals $(@expr1073768691 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7437 $, "const char *" $, $typeOf_ $(@expr1073768692 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7437 $, "\"hello\" + 1;" , "+" $) $) $) { $return ; }
7438: $if $(@expr1073768693 $!@expr1073768694 $assertEquals $(@expr1073768695 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7438 $, "const char" $, $typeOf_ $(@expr1073768696 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7438 $, "\"hello\"[1];" , "[" $) $) $) { $return ; }
7439: $if $(@expr1073768697 $!@expr1073768698 $assertEquals $(@expr1073768699 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7439 $, "const char" $, $typeOf_ $(@expr1073768700 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7439 $, ";*\"hello\";" , "*" $) $) $) { $return ; }
7440: $if $(@expr1073768701 $!@expr1073768702 $assertEquals $(@expr1073768703 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7440 $, "const wchar_t *" $, $typeOf_ $(@expr1073768704 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7440 $, "L\"hello\" + 1;" , "+" $) $) $) { $return ; }
7441:
7442:
7443: $if $(@expr1073768705 $!@expr1073768706 $assertEquals $(@expr1073768707 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7443 $, "void *" $, $typeOf_ $(@expr1073768708 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7443 $, "void *p; a = p + 1;" , "+" $) $) $) { $return ; }
7444: $if $(@expr1073768709 $!@expr1073768710 $assertEquals $(@expr1073768711 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7444 $, "signed int" $, $typeOf_ $(@expr1073768712 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7444 $, "int x; a = x + 1;" , "+" $) $) $) { $return ; }
7445: $if $(@expr1073768713 $!@expr1073768714 $assertEquals $(@expr1073768715 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7445 $, "signed int" $, $typeOf_ $(@expr1073768716 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7445 $, "int x; a = x | 1;" , "|" $) $) $) { $return ; }
7446: $if $(@expr1073768717 $!@expr1073768718 $assertEquals $(@expr1073768719 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7446 $, "float" $, $typeOf_ $(@expr1073768720 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7446 $, "float x; a = x + 1;" , "+" $) $) $) { $return ; }
7447: $if $(@expr1073768721 $!@expr1073768722 $assertEquals $(@expr1073768723 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7447 $, "signed int" $, $typeOf_ $(@expr1073768724 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7447 $, "signed x; a = x + 1;" , "x +" $) $) $) { $return ; }
7448: $if $(@expr1073768725 $!@expr1073768726 $assertEquals $(@expr1073768727 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7448 $, "unsigned int" $, $typeOf_ $(@expr1073768728 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7448 $, "unsigned x; a = x + 1;" , "x +" $) $) $) { $return ; }
7449: $if $(@expr1073768729 $!@expr1073768730 $assertEquals $(@expr1073768731 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7449 $, "unsigned int" $, $typeOf_ $(@expr1073768732 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7449 $, "unsigned int u1, u2; a = u1 + 1;" , "u1 +" $) $) $) { $return ; }
7450: $if $(@expr1073768733 $!@expr1073768734 $assertEquals $(@expr1073768735 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7450 $, "unsigned int" $, $typeOf_ $(@expr1073768736 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7450 $, "unsigned int u1, u2; a = u1 + 1U;" , "u1 +" $) $) $) { $return ; }
7451: $if $(@expr1073768737 $!@expr1073768738 $assertEquals $(@expr1073768739 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7451 $, "unsigned int" $, $typeOf_ $(@expr1073768740 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7451 $, "unsigned int u1, u2; a = u1 + u2;" , "u1 +" $) $) $) { $return ; }
7452: $if $(@expr1073768741 $!@expr1073768742 $assertEquals $(@expr1073768743 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7452 $, "unsigned int" $, $typeOf_ $(@expr1073768744 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7452 $, "unsigned int u1, u2; a = u1 * 2;" , "u1 *" $) $) $) { $return ; }
7453: $if $(@expr1073768745 $!@expr1073768746 $assertEquals $(@expr1073768747 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7453 $, "unsigned int" $, $typeOf_ $(@expr1073768748 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7453 $, "unsigned int u1, u2; a = u1 * u2;" , "u1 *" $) $) $) { $return ; }
7454: $if $(@expr1073768749 $!@expr1073768750 $assertEquals $(@expr1073768751 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7454 $, "signed int *" $, $typeOf_ $(@expr1073768752 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7454 $, "int x; a = &x;" , "&" $) $) $) { $return ; }
7455: $if $(@expr1073768753 $!@expr1073768754 $assertEquals $(@expr1073768755 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7455 $, "signed int *" $, $typeOf_ $(@expr1073768756 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7455 $, "int x; a = &x;" , "&" $) $) $) { $return ; }
7456: $if $(@expr1073768757 $!@expr1073768758 $assertEquals $(@expr1073768759 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7456 $, "long double" $, $typeOf_ $(@expr1073768760 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7456 $, "long double x; dostuff(x,1);" , "x ," $) $) $) { $return ; }
7457: $if $(@expr1073768761 $!@expr1073768762 $assertEquals $(@expr1073768763 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7457 $, "long double *" $, $typeOf_ $(@expr1073768764 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7457 $, "long double x; dostuff(&x,1);" , "& x ," $) $) $) { $return ; }
7458: $if $(@expr1073768765 $!@expr1073768766 $assertEquals $(@expr1073768767 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7458 $, "signed int" $, $typeOf_ $(@expr1073768768 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7458 $, "struct X {int i;}; void f(struct X x) { x.i }" , "." $) $) $) { $return ; }
7459: $if $(@expr1073768769 $!@expr1073768770 $assertEquals $(@expr1073768771 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7459 $, "signed int *" $, $typeOf_ $(@expr1073768772 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7459 $, "int *p; a = p++;" , "++" $) $) $) { $return ; }
7460: $if $(@expr1073768773 $!@expr1073768774 $assertEquals $(@expr1073768775 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7460 $, "signed int" $, $typeOf_ $(@expr1073768776 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7460 $, "int x; a = x++;" , "++" $) $) $) { $return ; }
7461: $if $(@expr1073768777 $!@expr1073768778 $assertEquals $(@expr1073768779 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7461 $, "signed int *" $, $typeOf_ $(@expr1073768780 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7461 $, "enum AB {A,B}; AB *ab; x=ab+2;" , "+" $) $) $) { $return ; }
7462: $if $(@expr1073768781 $!@expr1073768782 $assertEquals $(@expr1073768783 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7462 $, "signed int *" $, $typeOf_ $(@expr1073768784 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7462 $, "enum AB {A,B}; enum AB *ab; x=ab+2;" , "+" $) $) $) { $return ; }
7463: $if $(@expr1073768785 $!@expr1073768786 $assertEquals $(@expr1073768787 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7463 $, "AB *" $, $typeOf_ $(@expr1073768788 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7463 $, "struct AB {int a; int b;}; AB ab; x=&ab;" , "&" $) $) $) { $return ; }
7464: $if $(@expr1073768789 $!@expr1073768790 $assertEquals $(@expr1073768791 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7464 $, "AB *" $, $typeOf_ $(@expr1073768792 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7464 $, "struct AB {int a; int b;}; struct AB ab; x=&ab;" , "&" $) $) $) { $return ; }
7465: $if $(@expr1073768793 $!@expr1073768794 $assertEquals $(@expr1073768795 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7465 $, "A::BC *" $, $typeOf_ $(@expr1073768796 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7465 $, "namespace A { struct BC { int b; int c; }; }; struct A::BC abc; x=&abc;" , "&" $) $) $) { $return ; }
7466: $if $(@expr1073768797 $!@expr1073768798 $assertEquals $(@expr1073768799 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7466 $, "A::BC *" $, $typeOf_ $(@expr1073768800 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7466 $, "namespace A { struct BC { int b; int c; }; }; struct A::BC *abc; x=abc+1;" , "+" $) $) $) { $return ; }
7467: $if $(@expr1073768801 $!@expr1073768802 $assertEquals $(@expr1073768803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7467 $, "signed int" $, $typeOf_ $(@expr1073768804 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7467 $, "auto a(int& x, int& y) { return x + y; }" , "+" $) $) $) { $return ; }
7468: $if $(@expr1073768805 $!@expr1073768806 $assertEquals $(@expr1073768807 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7468 $, "signed int" $, $typeOf_ $(@expr1073768808 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7468 $, "auto a(int& x) { return x << 1; }" , "<<" $) $) $) { $return ; }
7469: $if $(@expr1073768809 $!@expr1073768810 $assertEquals $(@expr1073768811 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7469 $, "signed int" $, $typeOf_ $(@expr1073768812 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7469 $, "void a(int& x, int& y) { x = y; }" , "=" $) $) $) { $return ; }
7470: $if $(@expr1073768813 $!@expr1073768814 $assertEquals $(@expr1073768815 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7470 $, "signed int" $, $typeOf_ $(@expr1073768816 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7470 $, "auto a(int* y) { return *y; }" , "*" $) $) $) { $return ; }
7471:
7472:
7473: $if $(@expr1073768817 $!@expr1073768818 $assertEquals $(@expr1073768819 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7473 $, "signed int" $, $typeOf_ $(@expr1073768820 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7473 $, "int x; a = -x;" , "-" $) $) $) { $return ; }
7474: $if $(@expr1073768821 $!@expr1073768822 $assertEquals $(@expr1073768823 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7474 $, "signed int" $, $typeOf_ $(@expr1073768824 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7474 $, "int x; a = ~x;" , "~" $) $) $) { $return ; }
7475: $if $(@expr1073768825 $!@expr1073768826 $assertEquals $(@expr1073768827 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7475 $, "double" $, $typeOf_ $(@expr1073768828 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7475 $, "double x; a = -x;" , "-" $) $) $) { $return ; }
7476:
7477:
7478: $if $(@expr1073768829 $!@expr1073768830 $assertEquals $(@expr1073768831 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7478 $, "signed int" $, $typeOf_ $(@expr1073768832 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7478 $, "int x; a = (b ? x : x);" , "?" $) $) $) { $return ; }
7479: $if $(@expr1073768833 $!@expr1073768834 $assertEquals $(@expr1073768835 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7479 $, "" $, $typeOf_ $(@expr1073768836 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7479 $, "int x; a = (b ? x : y);" , "?" $) $) $) { $return ; }
7480: $if $(@expr1073768837 $!@expr1073768838 $assertEquals $(@expr1073768839 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7480 $, "double" $, $typeOf_ $(@expr1073768840 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7480 $, "int x; double y; a = (b ? x : y);" , "?" $) $) $) { $return ; }
7481: $if $(@expr1073768841 $!@expr1073768842 $assertEquals $(@expr1073768843 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7481 $, "const char *" $, $typeOf_ $(@expr1073768844 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7481 $, "int x; double y; a = (b ? \"a\" : \"b\");" , "?" $) $) $) { $return ; }
7482: $if $(@expr1073768845 $!@expr1073768846 $assertEquals $(@expr1073768847 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7482 $, "" $, $typeOf_ $(@expr1073768848 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7482 $, "int x; double y; a = (b ? \"a\" : std::string(\"b\"));" , "?" $) $) $) { $return ; }
7483: $if $(@expr1073768849 $!@expr1073768850 $assertEquals $(@expr1073768851 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7483 $, "bool" $, $typeOf_ $(@expr1073768852 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7483 $, "int x; a = (b ? false : true);" , "?" $) $) $) { $return ; }
7484:
7485:
7486: $if $(@expr1073768853 $!@expr1073768854 $assertEquals $(@expr1073768855 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7486 $, "bool" $, $typeOf_ $(@expr1073768856 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7486 $, "a > b;" , ">" $) $) $) { $return ; }
7487: $if $(@expr1073768857 $!@expr1073768858 $assertEquals $(@expr1073768859 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7487 $, "bool" $, $typeOf_ $(@expr1073768860 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7487 $, ";!b;" , "!" $) $) $) { $return ; }
7488: $if $(@expr1073768861 $!@expr1073768862 $assertEquals $(@expr1073768863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7488 $, "bool" $, $typeOf_ $(@expr1073768864 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7488 $, "c = a && b;" , "&&" $) $) $) { $return ; }
7489: $if $(@expr1073768865 $!@expr1073768866 $assertEquals $(@expr1073768867 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7489 $, "bool" $, $typeOf_ $(@expr1073768868 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7489 $, "a = false;" , "false" $) $) $) { $return ; }
7490: $if $(@expr1073768869 $!@expr1073768870 $assertEquals $(@expr1073768871 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7490 $, "bool" $, $typeOf_ $(@expr1073768872 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7490 $, "a = true;" , "true" $) $) $) { $return ; }
7491:
7492:
7493: $if $(@expr1073768873 $!@expr1073768874 $assertEquals $(@expr1073768875 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7493 $, "signed int" $, $typeOf_ $(@expr1073768876 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7493 $, "int x; a = x << 1U;" , "<<" $) $) $) { $return ; }
7494: $if $(@expr1073768877 $!@expr1073768878 $assertEquals $(@expr1073768879 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7494 $, "signed int" $, $typeOf_ $(@expr1073768880 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7494 $, "int x; a = x >> 1U;" , ">>" $) $) $) { $return ; }
7495: $if $(@expr1073768881 $!@expr1073768882 $assertEquals $(@expr1073768883 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7495 $, "" $, $typeOf_ $(@expr1073768884 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7495 $, "a = 12 >> x;" , ">>" , "test.cpp" $) $) $) { $return ; }
7496: $if $(@expr1073768885 $!@expr1073768886 $assertEquals $(@expr1073768887 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7496 $, "signed int" $, $typeOf_ $(@expr1073768888 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7496 $, "a = 12 >> x;" , ">>" , "test.c" $) $) $) { $return ; }
7497: $if $(@expr1073768889 $!@expr1073768890 $assertEquals $(@expr1073768891 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7497 $, "" $, $typeOf_ $(@expr1073768892 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7497 $, "a = 12 << x;" , "<<" , "test.cpp" $) $) $) { $return ; }
7498: $if $(@expr1073768893 $!@expr1073768894 $assertEquals $(@expr1073768895 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7498 $, "signed int" $, $typeOf_ $(@expr1073768896 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7498 $, "a = 12 << x;" , "<<" , "test.c" $) $) $) { $return ; }
7499: $if $(@expr1073768897 $!@expr1073768898 $assertEquals $(@expr1073768899 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7499 $, "signed int" $, $typeOf_ $(@expr1073768900 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7499 $, "a = true << 1U;" , "<<" $) $) $) { $return ; }
7500:
7501:
7502: $if $(@expr1073768901 $!@expr1073768902 $assertEquals $(@expr1073768903 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7502 $, "unsigned short" $, $typeOf_ $(@expr1073768904 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7502 $, "unsigned short x; x = 3;" , "=" $) $) $) { $return ; }
7503:
7504:
7505: $if $(@expr1073768905 $!@expr1073768906 $assertEquals $(@expr1073768907 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7505 $, "void * *" $, $typeOf_ $(@expr1073768908 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7505 $, "void * x[10]; a = x + 0;" , "+" $) $) $) { $return ; }
7506: $if $(@expr1073768909 $!@expr1073768910 $assertEquals $(@expr1073768911 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7506 $, "signed int *" $, $typeOf_ $(@expr1073768912 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7506 $, "int x[10]; a = x + 1;" , "+" $) $) $) { $return ; }
7507: $if $(@expr1073768913 $!@expr1073768914 $assertEquals $(@expr1073768915 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7507 $, "signed int" $, $typeOf_ $(@expr1073768916 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7507 $, "int x[10]; a = x[0] + 1;" , "+" $) $) $) { $return ; }
7508: $if $(@expr1073768917 $!@expr1073768918 $assertEquals $(@expr1073768919 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7508 $, "" $, $typeOf_ $(@expr1073768920 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7508 $, "a = x[\"hello\"];" , "[" , "test.cpp" $) $) $) { $return ; }
7509: $if $(@expr1073768921 $!@expr1073768922 $assertEquals $(@expr1073768923 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7509 $, "const char" $, $typeOf_ $(@expr1073768924 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7509 $, "a = x[\"hello\"];" , "[" , "test.c" $) $) $) { $return ; }
7510:
7511:
7512: $if $(@expr1073768925 $!@expr1073768926 $assertEquals $(@expr1073768927 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7512 $, "void *" $, $typeOf_ $(@expr1073768928 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7512 $, "a = (void *)0;" , "(" $) $) $) { $return ; }
7513: $if $(@expr1073768929 $!@expr1073768930 $assertEquals $(@expr1073768931 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7513 $, "char" $, $typeOf_ $(@expr1073768932 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7513 $, "a = (char)32;" , "(" $) $) $) { $return ; }
7514: $if $(@expr1073768933 $!@expr1073768934 $assertEquals $(@expr1073768935 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7514 $, "signed long" $, $typeOf_ $(@expr1073768936 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7514 $, "a = (long)32;" , "(" $) $) $) { $return ; }
7515: $if $(@expr1073768937 $!@expr1073768938 $assertEquals $(@expr1073768939 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7515 $, "signed long" $, $typeOf_ $(@expr1073768940 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7515 $, "a = (long int)32;" , "(" $) $) $) { $return ; }
7516: $if $(@expr1073768941 $!@expr1073768942 $assertEquals $(@expr1073768943 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7516 $, "signed long long" $, $typeOf_ $(@expr1073768944 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7516 $, "a = (long long)32;" , "(" $) $) $) { $return ; }
7517: $if $(@expr1073768945 $!@expr1073768946 $assertEquals $(@expr1073768947 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7517 $, "long double" $, $typeOf_ $(@expr1073768948 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7517 $, "a = (long double)32;" , "(" $) $) $) { $return ; }
7518: $if $(@expr1073768949 $!@expr1073768950 $assertEquals $(@expr1073768951 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7518 $, "char" $, $typeOf_ $(@expr1073768952 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7518 $, "a = static_cast<char>(32);" , "(" $) $) $) { $return ; }
7519: $if $(@expr1073768953 $!@expr1073768954 $assertEquals $(@expr1073768955 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7519 $, "" $, $typeOf_ $(@expr1073768956 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7519 $, "a = (unsigned x)0;" , "(" $) $) $) { $return ; }
7520: $if $(@expr1073768957 $!@expr1073768958 $assertEquals $(@expr1073768959 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7520 $, "unsigned int" $, $typeOf_ $(@expr1073768960 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7520 $, "a = unsigned(123);" , "(" $) $) $) { $return ; }
7521:
7522:
7523: $if $(@expr1073768961 $!@expr1073768962 $assertEquals $(@expr1073768963 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7523 $, "char" $, $typeOf_ $(@expr1073768964 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7523 $, "sizeof(char);" , "char" $) $) $) { $return ; }
7524:
7525:
7526: $if $(@expr1073768965 $!@expr1073768966 $assertEquals $(@expr1073768967 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7526 $, "const char *" $, $typeOf_ $(@expr1073768968 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7526 $, "a = \"123\";" , "\"123\"" $) $) $) { $return ; }
7527: $if $(@expr1073768969 $!@expr1073768970 $assertEquals $(@expr1073768971 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7527 $, "const signed int *" $, $typeOf_ $(@expr1073768972 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7527 $, "const int *a; x = a + 1;" , "a +" $) $) $) { $return ; }
7528: $if $(@expr1073768973 $!@expr1073768974 $assertEquals $(@expr1073768975 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7528 $, "signed int * const" $, $typeOf_ $(@expr1073768976 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7528 $, "int * const a; x = a + 1;" , "+" $) $) $) { $return ; }
7529: $if $(@expr1073768977 $!@expr1073768978 $assertEquals $(@expr1073768979 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7529 $, "const signed int *" $, $typeOf_ $(@expr1073768980 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7529 $, "const int a[20]; x = a + 1;" , "+" $) $) $) { $return ; }
7530: $if $(@expr1073768981 $!@expr1073768982 $assertEquals $(@expr1073768983 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7530 $, "const signed int *" $, $typeOf_ $(@expr1073768984 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7530 $, "const int x; a = &x;" , "&" $) $) $) { $return ; }
7531: $if $(@expr1073768985 $!@expr1073768986 $assertEquals $(@expr1073768987 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7531 $, "signed int" $, $typeOf_ $(@expr1073768988 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7531 $, "int * const a; x = *a;" , "*" $) $) $) { $return ; }
7532: $if $(@expr1073768989 $!@expr1073768990 $assertEquals $(@expr1073768991 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7532 $, "const signed int" $, $typeOf_ $(@expr1073768992 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7532 $, "const int * const a; x = *a;" , "*" $) $) $) { $return ; }
7533:
7534:
7535: $if $(@expr1073768993 $!@expr1073768994 $assertEquals $(@expr1073768995 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7535 $, "signed int" $, $typeOf_ $(@expr1073768996 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7535 $, "int a(int); a(5);" , "( 5" $) $) $) { $return ; }
7536: $if $(@expr1073768997 $!@expr1073768998 $assertEquals $(@expr1073768999 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7536 $, "signed int" $, $typeOf_ $(@expr1073769000 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7536 $, "auto a(int) -> int; a(5);" , "( 5" $) $) $) { $return ; }
7537: $if $(@expr1073769001 $!@expr1073769002 $assertEquals $(@expr1073769003 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7537 $, "unsigned long" $, $typeOf_ $(@expr1073769004 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7537 $, "sizeof(x);" , "(" $) $) $) { $return ; }
7538: $if $(@expr1073769005 $!@expr1073769006 $assertEquals $(@expr1073769007 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7538 $, "signed int" $, $typeOf_ $(@expr1073769008 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7538 $, "int (*a)(int); a(5);" , "( 5" $) $) $) { $return ; }
7539: $if $(@expr1073769009 $!@expr1073769010 $assertEquals $(@expr1073769011 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7539 $, "s" $, $typeOf_ $(@expr1073769012 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7539 $, "struct s { s foo(); s(int, int); }; s s::foo() { return s(1, 2); } " , "( 1 , 2 )" $) $) $) { $return ; }
7540:
7541: $if $(@expr1073769013 $!@expr1073769014 $assertEquals $(@expr1073769015 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7541 $, "signed int &&" $, $typeOf_ $(@expr1073769016 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7541 $, "std::move(5);" , "( 5 )" $) $) $) { $return ; }
7542:
7543:
7544: $if $(@expr1073769017 $!@expr1073769018 $assertEquals $(@expr1073769019 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7544 $, "signed int" $, $typeOf_ $(@expr1073769020 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7544 $, "struct AB { int a; int b; } ab; x = ab.a;" , "." $) $) $) { $return ; }
7545: $if $(@expr1073769021 $!@expr1073769022 $assertEquals $(@expr1073769023 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7545 $, "signed int" $, $typeOf_ $(@expr1073769024 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7545 $, "struct AB { int a; int b; } *ab; x = ab[1].a;" , "." $) $) $) { $return ; }
7546:
7547:
7548: $if $(@expr1073769025 $!@expr1073769026 $assertEquals $(@expr1073769027 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7548 $, "Fred &" $, $typeOf_ $(@expr1073769028 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7548 $, "class Fred { Fred& operator<(int); }; void f() { Fred fred; x=fred<123; }" , "<" $) $) $) { $return ; }
7549:
7550:
7551: $if $(@expr1073769029 $!@expr1073769030 $assertEquals $(@expr1073769031 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7551 $, "signed int" $, $typeOf_ $(@expr1073769032 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7551 $, "struct AB { static int a; }; x = AB::a;" , "::" $) $) $) { $return ; }
7552:
7553:
7554: $if $(@expr1073769033 $!@expr1073769034 $assertEquals $(@expr1073769035 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7554 $, "*" $, $typeOf_ $(@expr1073769036 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7554 $, "Bar* b;" , "b" $) $) $) { $return ; }
7555:
7556:
7557: $if $(@expr1073769037 $!@expr1073769038 $assertEquals $(@expr1073769039 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7557 $, "char" $, $typeOf_ $(@expr1073769040 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7557 $, "enum E : char { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7558: $if $(@expr1073769041 $!@expr1073769042 $assertEquals $(@expr1073769043 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7558 $, "signed char" $, $typeOf_ $(@expr1073769044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7558 $, "enum E : signed char { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7559: $if $(@expr1073769045 $!@expr1073769046 $assertEquals $(@expr1073769047 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7559 $, "unsigned char" $, $typeOf_ $(@expr1073769048 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7559 $, "enum E : unsigned char { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7560: $if $(@expr1073769049 $!@expr1073769050 $assertEquals $(@expr1073769051 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7560 $, "signed short" $, $typeOf_ $(@expr1073769052 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7560 $, "enum E : short { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7561: $if $(@expr1073769053 $!@expr1073769054 $assertEquals $(@expr1073769055 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7561 $, "unsigned short" $, $typeOf_ $(@expr1073769056 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7561 $, "enum E : unsigned short { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7562: $if $(@expr1073769057 $!@expr1073769058 $assertEquals $(@expr1073769059 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7562 $, "signed int" $, $typeOf_ $(@expr1073769060 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7562 $, "enum E : int { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7563: $if $(@expr1073769061 $!@expr1073769062 $assertEquals $(@expr1073769063 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7563 $, "unsigned int" $, $typeOf_ $(@expr1073769064 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7563 $, "enum E : unsigned int { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7564: $if $(@expr1073769065 $!@expr1073769066 $assertEquals $(@expr1073769067 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7564 $, "signed long" $, $typeOf_ $(@expr1073769068 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7564 $, "enum E : long { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7565: $if $(@expr1073769069 $!@expr1073769070 $assertEquals $(@expr1073769071 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7565 $, "unsigned long" $, $typeOf_ $(@expr1073769072 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7565 $, "enum E : unsigned long { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7566: $if $(@expr1073769073 $!@expr1073769074 $assertEquals $(@expr1073769075 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7566 $, "signed long long" $, $typeOf_ $(@expr1073769076 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7566 $, "enum E : long long { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7567: $if $(@expr1073769077 $!@expr1073769078 $assertEquals $(@expr1073769079 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7567 $, "unsigned long long" $, $typeOf_ $(@expr1073769080 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7567 $, "enum E : unsigned long long { }; void foo() { E e[3]; bar(e[0]); }" , "[ 0" $) $) $) { $return ; }
7568:
|
7582:
7583: $do ${ $Settings $sF@var1948 $; $const $char $xmldata@var1949 $[@expr1073769081 94 $] $=@expr1073769082 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"bool\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769083 $XMLDocument $doc@var1950 $; $doc@var1950 $.@expr1073769084 $Parse $(@expr1073769085 $xmldata@var1949 $, $sizeof $(@expr1073769086 $xmldata@var1949 $) $) $; $sF@var1948 $.@expr1073769087 $library@var1951 $.@expr1073769088 $load $(@expr1073769089 $doc@var1950 $) $; $if $(@expr1073769090 $!@expr1073769091 $assertEquals $(@expr1073769092 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7583 $, "bool" $, $typeOf_ $(@expr1073769093 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7583 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769094 $sF@var1948 $) $) $) { $return $; } $} $while $(@expr1073769095 $false $) ;
7584: $do ${ $Settings $sF@var1952 $; $const $char $xmldata@var1953 $[@expr1073769096 100 $] $=@expr1073769097 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedchar\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769098 $XMLDocument $doc@var1954 $; $doc@var1954 $.@expr1073769099 $Parse $(@expr1073769100 $xmldata@var1953 $, $sizeof $(@expr1073769101 $xmldata@var1953 $) $) $; $sF@var1952 $.@expr1073769102 $library@var1955 $.@expr1073769103 $load $(@expr1073769104 $doc@var1954 $) $; $if $(@expr1073769105 $!@expr1073769106 $assertEquals $(@expr1073769107 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7584 $, "signedchar" $, $typeOf_ $(@expr1073769108 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7584 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769109 $sF@var1952 $) $) $) { $return $; } $} $while $(@expr1073769110 $false $) ;
7585: $do ${ $Settings $sF@var1956 $; $const $char $xmldata@var1957 $[@expr1073769111 102 $] $=@expr1073769112 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedchar\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769113 $XMLDocument $doc@var1958 $; $doc@var1958 $.@expr1073769114 $Parse $(@expr1073769115 $xmldata@var1957 $, $sizeof $(@expr1073769116 $xmldata@var1957 $) $) $; $sF@var1956 $.@expr1073769117 $library@var1959 $.@expr1073769118 $load $(@expr1073769119 $doc@var1958 $) $; $if $(@expr1073769120 $!@expr1073769121 $assertEquals $(@expr1073769122 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7585 $, "unsignedchar" $, $typeOf_ $(@expr1073769123 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7585 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769124 $sF@var1956 $) $) $) { $return $; } $} $while $(@expr1073769125 $false $) ;
7586: $do ${ $Settings $sF@var1960 $; $const $char $xmldata@var1961 $[@expr1073769126 101 $] $=@expr1073769127 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedshort\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769128 $XMLDocument $doc@var1962 $; $doc@var1962 $.@expr1073769129 $Parse $(@expr1073769130 $xmldata@var1961 $, $sizeof $(@expr1073769131 $xmldata@var1961 $) $) $; $sF@var1960 $.@expr1073769132 $library@var1963 $.@expr1073769133 $load $(@expr1073769134 $doc@var1962 $) $; $if $(@expr1073769135 $!@expr1073769136 $assertEquals $(@expr1073769137 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7586 $, "signedshort" $, $typeOf_ $(@expr1073769138 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7586 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769139 $sF@var1960 $) $) $) { $return $; } $} $while $(@expr1073769140 $false $) ;
7587: $do ${ $Settings $sF@var1964 $; $const $char $xmldata@var1965 $[@expr1073769141 103 $] $=@expr1073769142 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedshort\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769143 $XMLDocument $doc@var1966 $; $doc@var1966 $.@expr1073769144 $Parse $(@expr1073769145 $xmldata@var1965 $, $sizeof $(@expr1073769146 $xmldata@var1965 $) $) $; $sF@var1964 $.@expr1073769147 $library@var1967 $.@expr1073769148 $load $(@expr1073769149 $doc@var1966 $) $; $if $(@expr1073769150 $!@expr1073769151 $assertEquals $(@expr1073769152 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7587 $, "unsignedshort" $, $typeOf_ $(@expr1073769153 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7587 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769154 $sF@var1964 $) $) $) { $return $; } $} $while $(@expr1073769155 $false $) ;
7588: $do ${ $Settings $sF@var1968 $; $const $char $xmldata@var1969 $[@expr1073769156 99 $] $=@expr1073769157 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedint\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769158 $XMLDocument $doc@var1970 $; $doc@var1970 $.@expr1073769159 $Parse $(@expr1073769160 $xmldata@var1969 $, $sizeof $(@expr1073769161 $xmldata@var1969 $) $) $; $sF@var1968 $.@expr1073769162 $library@var1971 $.@expr1073769163 $load $(@expr1073769164 $doc@var1970 $) $; $if $(@expr1073769165 $!@expr1073769166 $assertEquals $(@expr1073769167 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7588 $, "signedint" $, $typeOf_ $(@expr1073769168 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7588 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769169 $sF@var1968 $) $) $) { $return $; } $} $while $(@expr1073769170 $false $) ;
7589: $do ${ $Settings $sF@var1972 $; $const $char $xmldata@var1973 $[@expr1073769171 101 $] $=@expr1073769172 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedint\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769173 $XMLDocument $doc@var1974 $; $doc@var1974 $.@expr1073769174 $Parse $(@expr1073769175 $xmldata@var1973 $, $sizeof $(@expr1073769176 $xmldata@var1973 $) $) $; $sF@var1972 $.@expr1073769177 $library@var1975 $.@expr1073769178 $load $(@expr1073769179 $doc@var1974 $) $; $if $(@expr1073769180 $!@expr1073769181 $assertEquals $(@expr1073769182 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7589 $, "unsignedint" $, $typeOf_ $(@expr1073769183 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7589 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769184 $sF@var1972 $) $) $) { $return $; } $} $while $(@expr1073769185 $false $) ;
7590: $do ${ $Settings $sF@var1976 $; $const $char $xmldata@var1977 $[@expr1073769186 100 $] $=@expr1073769187 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlong\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769188 $XMLDocument $doc@var1978 $; $doc@var1978 $.@expr1073769189 $Parse $(@expr1073769190 $xmldata@var1977 $, $sizeof $(@expr1073769191 $xmldata@var1977 $) $) $; $sF@var1976 $.@expr1073769192 $library@var1979 $.@expr1073769193 $load $(@expr1073769194 $doc@var1978 $) $; $if $(@expr1073769195 $!@expr1073769196 $assertEquals $(@expr1073769197 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7590 $, "signedlong" $, $typeOf_ $(@expr1073769198 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7590 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769199 $sF@var1976 $) $) $) { $return $; } $} $while $(@expr1073769200 $false $) ;
7591: $do ${ $Settings $sF@var1980 $; $const $char $xmldata@var1981 $[@expr1073769201 102 $] $=@expr1073769202 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlong\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769203 $XMLDocument $doc@var1982 $; $doc@var1982 $.@expr1073769204 $Parse $(@expr1073769205 $xmldata@var1981 $, $sizeof $(@expr1073769206 $xmldata@var1981 $) $) $; $sF@var1980 $.@expr1073769207 $library@var1983 $.@expr1073769208 $load $(@expr1073769209 $doc@var1982 $) $; $if $(@expr1073769210 $!@expr1073769211 $assertEquals $(@expr1073769212 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7591 $, "unsignedlong" $, $typeOf_ $(@expr1073769213 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7591 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769214 $sF@var1980 $) $) $) { $return $; } $} $while $(@expr1073769215 $false $) ;
7592: $do ${ $Settings $sF@var1984 $; $const $char $xmldata@var1985 $[@expr1073769216 104 $] $=@expr1073769217 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlonglong\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769218 $XMLDocument $doc@var1986 $; $doc@var1986 $.@expr1073769219 $Parse $(@expr1073769220 $xmldata@var1985 $, $sizeof $(@expr1073769221 $xmldata@var1985 $) $) $; $sF@var1984 $.@expr1073769222 $library@var1987 $.@expr1073769223 $load $(@expr1073769224 $doc@var1986 $) $; $if $(@expr1073769225 $!@expr1073769226 $assertEquals $(@expr1073769227 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7592 $, "signedlonglong" $, $typeOf_ $(@expr1073769228 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7592 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769229 $sF@var1984 $) $) $) { $return $; } $} $while $(@expr1073769230 $false $) ;
7593: $do ${ $Settings $sF@var1988 $; $const $char $xmldata@var1989 $[@expr1073769231 106 $] $=@expr1073769232 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlonglong\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769233 $XMLDocument $doc@var1990 $; $doc@var1990 $.@expr1073769234 $Parse $(@expr1073769235 $xmldata@var1989 $, $sizeof $(@expr1073769236 $xmldata@var1989 $) $) $; $sF@var1988 $.@expr1073769237 $library@var1991 $.@expr1073769238 $load $(@expr1073769239 $doc@var1990 $) $; $if $(@expr1073769240 $!@expr1073769241 $assertEquals $(@expr1073769242 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7593 $, "unsignedlonglong" $, $typeOf_ $(@expr1073769243 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7593 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769244 $sF@var1988 $) $) $) { $return $; } $} $while $(@expr1073769245 $false $) ;
7594: $do ${ $Settings $sF@var1992 $; $const $char $xmldata@var1993 $[@expr1073769246 95 $] $=@expr1073769247 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void*\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769248 $XMLDocument $doc@var1994 $; $doc@var1994 $.@expr1073769249 $Parse $(@expr1073769250 $xmldata@var1993 $, $sizeof $(@expr1073769251 $xmldata@var1993 $) $) $; $sF@var1992 $.@expr1073769252 $library@var1995 $.@expr1073769253 $load $(@expr1073769254 $doc@var1994 $) $; $if $(@expr1073769255 $!@expr1073769256 $assertEquals $(@expr1073769257 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7594 $, "void*" $, $typeOf_ $(@expr1073769258 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7594 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769259 $sF@var1992 $) $) $) { $return $; } $} $while $(@expr1073769260 $false $) ;
7595: $do ${ $Settings $sF@var1996 $; $const $char $xmldata@var1997 $[@expr1073769261 96 $] $=@expr1073769262 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void**\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769263 $XMLDocument $doc@var1998 $; $doc@var1998 $.@expr1073769264 $Parse $(@expr1073769265 $xmldata@var1997 $, $sizeof $(@expr1073769266 $xmldata@var1997 $) $) $; $sF@var1996 $.@expr1073769267 $library@var1999 $.@expr1073769268 $load $(@expr1073769269 $doc@var1998 $) $; $if $(@expr1073769270 $!@expr1073769271 $assertEquals $(@expr1073769272 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7595 $, "void**" $, $typeOf_ $(@expr1073769273 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7595 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769274 $sF@var1996 $) $) $) { $return $; } $} $while $(@expr1073769275 $false $) ;
7596: $do ${ $Settings $sF@var2000 $; $const $char $xmldata@var2001 $[@expr1073769276 100 $] $=@expr1073769277 $"<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"constvoid*\"/>\n</function>\n</def>" $; $tinyxml2 $::@expr1073769278 $XMLDocument $doc@var2002 $; $doc@var2002 $.@expr1073769279 $Parse $(@expr1073769280 $xmldata@var2001 $, $sizeof $(@expr1073769281 $xmldata@var2001 $) $) $; $sF@var2000 $.@expr1073769282 $library@var2003 $.@expr1073769283 $load $(@expr1073769284 $doc@var2002 $) $; $if $(@expr1073769285 $!@expr1073769286 $assertEquals $(@expr1073769287 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7596 $, "constvoid*" $, $typeOf_ $(@expr1073769288 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7596 $, $"void f() { auto x = g(); }" $, $"x" $, $"test.cpp" $, $&@expr1073769289 $sF@var2000 $) $) $) { $return $; } $} $while $(@expr1073769290 $false $) ;
7597:
|
7600:
7601: {
7602:
7603: Settings settings@var2004 ;
7604: const Library ::@expr27467 PodType char8@var2005 =@expr1073769292 {@expr1073769293 1 , 'u' } ;
7605: const Library ::@expr27467 PodType char16@var2006 =@expr1073769295 {@expr1073769296 2 , 'u' } ;
7606: const Library ::@expr27467 PodType char32@var2007 =@expr1073769298 {@expr1073769299 4 , 'u' } ;
7607: settings@var2004 .@expr27476 library@var2008 .@expr27477 mPodTypes@var2009 [@expr1073769302 "char8_t" ] =@expr1073769303 char8@var2005 ;
7608: settings@var2004 .@expr27476 library@var2008 .@expr27477 mPodTypes@var2009 [@expr1073769306 "char16_t" ] =@expr1073769307 char16@var2006 ;
7609: settings@var2004 .@expr27476 library@var2008 .@expr27477 mPodTypes@var2009 [@expr1073769310 "char32_t" ] =@expr1073769311 char32@var2007 ;
7610: settings@var2004 .@expr1073769312 sizeof_short@var2010 =@expr1073769313 2 ;
7611: settings@var2004 .@expr1073769314 sizeof_int@var2011 =@expr1073769315 4 ;
7612:
7613: $if $(@expr1073769316 $!@expr1073769317 $assertEquals $(@expr1073769318 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7613 $, "unsigned char" $, $typeOf_ $(@expr1073769319 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7613 $, "u8'a';" , "u8'a'" , "test.cpp" , &@expr27496 settings@var2004 $) $) $) { $return ; }
7614: $if $(@expr1073769321 $!@expr1073769322 $assertEquals $(@expr1073769323 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7614 $, "unsigned short" $, $typeOf_ $(@expr1073769324 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7614 $, "u'a';" , "u'a'" , "test.cpp" , &@expr27496 settings@var2004 $) $) $) { $return ; }
7615: $if $(@expr1073769326 $!@expr1073769327 $assertEquals $(@expr1073769328 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7615 $, "unsigned int" $, $typeOf_ $(@expr1073769329 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7615 $, "U'a';" , "U'a'" , "test.cpp" , &@expr27496 settings@var2004 $) $) $) { $return ; }
7616: $if $(@expr1073769331 $!@expr1073769332 $assertEquals $(@expr1073769333 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7616 $, "const unsigned char *" $, $typeOf_ $(@expr1073769334 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7616 $, "u8\"a\";" , "u8\"a\"" , "test.cpp" , &@expr27496 settings@var2004 $) $) $) { $return ; }
7617: $if $(@expr1073769336 $!@expr1073769337 $assertEquals $(@expr1073769338 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7617 $, "const unsigned short *" $, $typeOf_ $(@expr1073769339 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7617 $, "u\"a\";" , "u\"a\"" , "test.cpp" , &@expr27496 settings@var2004 $) $) $) { $return ; }
7618: $if $(@expr1073769341 $!@expr1073769342 $assertEquals $(@expr1073769343 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7618 $, "const unsigned int *" $, $typeOf_ $(@expr1073769344 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7618 $, "U\"a\";" , "U\"a\"" , "test.cpp" , &@expr27496 settings@var2004 $) $) $) { $return ; }
7619: }
7620: {
7621:
7622: Settings settingsWin64@var2012 ;
7623: settingsWin64@var2012 .@expr1073769346 platformType@var2013 =@expr1073769347 Settings ::@expr27524 Win64@expr26502 ;
7624: const Library ::@expr27467 PodType u32@var2014 =@expr1073769350 {@expr1073769351 4 , 'u' } ;
7625: const Library ::@expr27467 PodType podtype2@var2015 =@expr1073769353 {@expr1073769354 0 , 'u' , Library ::@expr1073769355 PodType ::@expr1073769356 Type ::@expr1073769357 INT@expr1073768327 } ;
7626: settingsWin64@var2012 .@expr27534 library@var2016 .@expr27535 mPodTypes@var2017 [@expr1073769360 "u32" ] =@expr1073769361 u32@var2014 ;
7627: settingsWin64@var2012 .@expr27534 library@var2016 .@expr27535 mPodTypes@var2017 [@expr1073769364 "xyz::x" ] =@expr1073769365 u32@var2014 ;
7628: settingsWin64@var2012 .@expr27534 library@var2016 .@expr27535 mPodTypes@var2017 [@expr1073769368 "podtype2" ] =@expr1073769369 podtype2@var2015 ;
7629: ValueType vt@var2018 ;
7630: $if $(@expr1073769370 $!@expr1073769371 $assertEquals $(@expr1073769372 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7630 $, true $, $(@expr1073769373 vt@var2018 .@expr27550 fromLibraryType (@expr1073769375 "u32" , &@expr27552 settingsWin64@var2012 ) $) $) $) { $return ; }
7631: $if $(@expr1073769377 $!@expr1073769378 $assertEquals $(@expr1073769379 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7631 $, true $, $(@expr1073769380 vt@var2018 .@expr27550 fromLibraryType (@expr1073769382 "xyz::x" , &@expr27552 settingsWin64@var2012 ) $) $) $) { $return ; }
7632: $if $(@expr1073769384 $!@expr1073769385 $assertEquals $(@expr1073769386 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7632 $, ValueType ::@expr27563 Type ::@expr27564 INT@expr26504 $, vt@var2018 .@expr1073769389 type@var2019 $) $) { $return ; }
7633: ValueType vt2@var2020 ;
7634: $if $(@expr1073769390 $!@expr1073769391 $assertEquals $(@expr1073769392 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7634 $, true $, $(@expr1073769393 vt2@var2020 .@expr1073769394 fromLibraryType (@expr1073769395 "podtype2" , &@expr27552 settingsWin64@var2012 ) $) $) $) { $return ; }
7635: $if $(@expr1073769397 $!@expr1073769398 $assertEquals $(@expr1073769399 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7635 $, ValueType ::@expr27563 Type ::@expr27564 INT@expr26504 $, vt2@var2020 .@expr1073769402 type@var2021 $) $) { $return ; }
7636: $if $(@expr1073769403 $!@expr1073769404 $assertEquals $(@expr1073769405 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7636 $, "unsigned int *" $, $typeOf_ $(@expr1073769406 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7636 $, ";void *data = new u32[10];" , "new" , "test.cpp" , &@expr27552 settingsWin64@var2012 $) $) $) { $return ; }
7637: $if $(@expr1073769408 $!@expr1073769409 $assertEquals $(@expr1073769410 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7637 $, "unsigned int *" $, $typeOf_ $(@expr1073769411 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7637 $, ";void *data = new xyz::x[10];" , "new" , "test.cpp" , &@expr27552 settingsWin64@var2012 $) $) $) { $return ; }
7638: $if $(@expr1073769413 $!@expr1073769414 $assertEquals $(@expr1073769415 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7638 $, "unsigned int" $, $typeOf_ $(@expr1073769416 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7638 $, "; x = (xyz::x)12;" , "(" , "test.cpp" , &@expr27552 settingsWin64@var2012 $) $) $) { $return ; }
7639: $if $(@expr1073769418 $!@expr1073769419 $assertEquals $(@expr1073769420 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7639 $, "unsigned int" $, $typeOf_ $(@expr1073769421 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7639 $, ";u32(12);" , "(" , "test.cpp" , &@expr27552 settingsWin64@var2012 $) $) $) { $return ; }
7640: $if $(@expr1073769423 $!@expr1073769424 $assertEquals $(@expr1073769425 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7640 $, "unsigned int" $, $typeOf_ $(@expr1073769426 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7640 $, "x = u32(y[i]);" , "(" , "test.cpp" , &@expr27552 settingsWin64@var2012 $) $) $) { $return ; }
7641: }
7642: {
7643:
7644: Settings settingsUnix32@var2022 ;
7645: settingsUnix32@var2022 .@expr1073769428 platformType@var2023 =@expr1073769429 Settings ::@expr1073769430 Unix32@expr1073768329 ;
7646: Library ::@expr1073769431 PlatformType s32@var2024 ;
7647: s32@var2024 .@expr1073769432 mType@var2025 =@expr1073769433 "int" ;
7648: settingsUnix32@var2022 .@expr1073769434 library@var2026 .@expr1073769435 mPlatforms@var2027 [@expr1073769436 settingsUnix32@var2022 .@expr1073769437 platformString (@expr1073769438 ) ] .@expr1073769439 mPlatformTypes@expr1073768330 [@expr1073769440 "s32" ] =@expr1073769441 s32@var2024 ;
7649: ValueType vt@var2028 ;
7650: $if $(@expr1073769442 $!@expr1073769443 $assertEquals $(@expr1073769444 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7650 $, true $, $(@expr1073769445 vt@var2028 .@expr1073769446 fromLibraryType (@expr1073769447 "s32" , &@expr1073769448 settingsUnix32@var2022 ) $) $) $) { $return ; }
7651: $if $(@expr1073769449 $!@expr1073769450 $assertEquals $(@expr1073769451 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7651 $, ValueType ::@expr27563 Type ::@expr27564 INT@expr26504 $, vt@var2028 .@expr1073769454 type@var2029 $) $) { $return ; }
7652: }
7653: {
7654:
7655: Settings settingsWin64@var2030 ;
7656: settingsWin64@var2030 .@expr1073769455 platformType@var2031 =@expr1073769456 Settings ::@expr27524 Win64@expr26502 ;
7657: Library ::@expr1073769458 PlatformType lpctstr@var2032 ;
7658: lpctstr@var2032 .@expr1073769459 mType@var2033 =@expr1073769460 "wchar_t" ;
7659: settingsWin64@var2030 .@expr1073769461 library@var2034 .@expr1073769462 mPlatforms@var2035 [@expr1073769463 settingsWin64@var2030 .@expr1073769464 platformString (@expr1073769465 ) ] .@expr1073769466 mPlatformTypes@expr1073768331 [@expr1073769467 "LPCTSTR" ] =@expr1073769468 lpctstr@var2032 ;
7660: ValueType vt@var2036 ;
7661: $if $(@expr1073769469 $!@expr1073769470 $assertEquals $(@expr1073769471 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7661 $, true $, $(@expr1073769472 vt@var2036 .@expr1073769473 fromLibraryType (@expr1073769474 "LPCTSTR" , &@expr1073769475 settingsWin64@var2030 ) $) $) $) { $return ; }
7662: $if $(@expr1073769476 $!@expr1073769477 $assertEquals $(@expr1073769478 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7662 $, ValueType ::@expr27563 Type ::@expr1073769480 WCHAR_T@expr1073768332 $, vt@var2036 .@expr1073769481 type@var2037 $) $) { $return ; }
7663: }
7664: {
7665:
7666: Settings sC@var2038 ;
7667: Library ::@expr1073769482 Container c@var2039 ;
7668: c@var2039 .@expr1073769483 startPattern@var2040 =@expr1073769484 "C" ;
7669: c@var2039 .@expr1073769485 startPattern2@var2041 =@expr1073769486 "C !!::" ;
7670: sC@var2038 .@expr1073769487 library@var2042 .@expr1073769488 containers@var2043 [@expr1073769489 "C" ] =@expr1073769490 c@var2039 ;
7671: $if $(@expr1073769491 $!@expr1073769492 $assertEquals $(@expr1073769493 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7671 $, "container(C) *" $, $typeOf_ $(@expr1073769494 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7671 $, "C*c=new C;" , "new" , "test.cpp" , &@expr27671 sC@var2038 $) $) $) { $return ; }
7672: $if $(@expr1073769496 $!@expr1073769497 $assertEquals $(@expr1073769498 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7672 $, "container(C) *" $, $typeOf_ $(@expr1073769499 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7672 $, "x=(C*)c;" , "(" , "test.cpp" , &@expr27671 sC@var2038 $) $) $) { $return ; }
7673: $if $(@expr1073769501 $!@expr1073769502 $assertEquals $(@expr1073769503 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7673 $, "container(C)" $, $typeOf_ $(@expr1073769504 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7673 $, "C c = C();" , "(" , "test.cpp" , &@expr27671 sC@var2038 $) $) $) { $return ; }
7674: }
7675: {
7676:
7677: Settings set@var2044 ;
7678: Library ::@expr1073769506 Container vector@var2045 ;
7679: vector@var2045 .@expr1073769507 startPattern@var2046 =@expr1073769508 "Vector <" ;
7680: vector@var2045 .@expr1073769509 startPattern2@var2047 =@expr1073769510 "Vector !!::" ;
7681: vector@var2045 .@expr1073769511 type_templateArgNo@var2048 =@expr1073769512 0 ;
7682: vector@var2045 .@expr1073769513 arrayLike_indexOp@var2049 =@expr1073769514 true ;
7683: vector@var2045 .@expr27691 functions@var2050 [@expr1073769516 "front" ] =@expr1073769517
7684: Library ::@expr27694 Container ::@expr27695 Function {@expr1073769520 Library ::@expr27694 Container ::@expr27698 Action ::@expr27699 NO_ACTION , Library ::@expr27694 Container ::@expr27701 Yield ::@expr1073769526 ITEM@expr1073768333 } ;
7685: vector@var2045 .@expr27691 functions@var2050 [@expr1073769528 "data" ] =@expr1073769529
7686: Library ::@expr27694 Container ::@expr27695 Function {@expr1073769532 Library ::@expr27694 Container ::@expr27698 Action ::@expr27699 NO_ACTION , Library ::@expr27694 Container ::@expr27701 Yield ::@expr1073769538 BUFFER@expr1073768334 } ;
7687: vector@var2045 .@expr27691 functions@var2050 [@expr1073769540 "begin" ] =@expr1073769541 Library ::@expr27694 Container ::@expr27695 Function {@expr1073769544 Library ::@expr27694 Container ::@expr27698 Action ::@expr27699 NO_ACTION ,
7688: Library ::@expr27694 Container ::@expr27701 Yield ::@expr1073769550 START_ITERATOR@expr1073768335 } ;
7689: set@var2044 .@expr27727 library@var2051 .@expr27728 containers@var2052 [@expr1073769553 "Vector" ] =@expr1073769554 vector@var2045 ;
7690: Library ::@expr1073769555 Container string@var2053 ;
7691: string@var2053 .@expr1073769556 startPattern@var2054 =@expr1073769557 "test :: string" ;
7692: string@var2053 .@expr1073769558 startPattern2@var2055 =@expr1073769559 "test :: string !!::" ;
7693: string@var2053 .@expr1073769560 arrayLike_indexOp@var2056 =@expr1073769561 string@var2053 .@expr1073769562 stdStringLike@var2057 =@expr1073769563 true ;
7694: set@var2044 .@expr27727 library@var2051 .@expr27728 containers@var2052 [@expr1073769566 "test::string" ] =@expr1073769567 string@var2053 ;
7695: $if $(@expr1073769568 $!@expr1073769569 $assertEquals $(@expr1073769570 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7695 $, "signed int" $, $typeOf_ $(@expr1073769571 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7695 $, "Vector<int> v; v[0]=3;" , "[" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return ; }
7696: $if $(@expr1073769573 $!@expr1073769574 $assertEquals $(@expr1073769575 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7696 $, "container(test :: string)" $, $typeOf_ $(@expr1073769576 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7696 $, "{return test::string();}" , "(" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return ; }
7697: $if $(@expr1073769578 $!@expr1073769579 $assertEquals $(@expr1073769580 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7697 $, "container(test :: string)" $, $typeOf_ $(@expr1073769581 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7697 $, "void foo(Vector<test::string> v) { for (auto s: v) { x=s+s; } }" , "s" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return
7698:
7699: ; }
7700: $if $(@expr1073769583 $!@expr1073769584 $assertEquals $(@expr1073769585 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7700 $, "container(test :: string)" $, $typeOf_ $(@expr1073769586 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7700 $, "void foo(Vector<test::string> v) { for (auto s: v) { x=s+s; } }" , "+" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return
7701:
7702: ; }
7703: $if $(@expr1073769588 $!@expr1073769589 $assertEquals $(@expr1073769590 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7703 $, "container(test :: string) &" $, $typeOf_ $(@expr1073769591 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7703 $, "Vector<test::string> v; x = v.front();" , "(" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return
7704: ; }
7705: $if $(@expr1073769593 $!@expr1073769594 $assertEquals $(@expr1073769595 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7705 $, "container(test :: string) *" $, $typeOf_ $(@expr1073769596 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7705 $, "Vector<test::string> v; x = v.data();" , "(" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return
7706: ; }
7707: $if $(@expr1073769598 $!@expr1073769599 $assertEquals $(@expr1073769600 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7707 $, "signed int &" $, $typeOf_ $(@expr1073769601 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7707 $, "Vector<int> v; x = v.front();" , "(" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return ; }
7708: $if $(@expr1073769603 $!@expr1073769604 $assertEquals $(@expr1073769605 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7708 $, "signed int *" $, $typeOf_ $(@expr1073769606 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7708 $, "Vector<int> v; x = v.data();" , "(" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return ; }
7709: $if $(@expr1073769608 $!@expr1073769609 $assertEquals $(@expr1073769610 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7709 $, "signed int * *" $, $typeOf_ $(@expr1073769611 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7709 $, "Vector<int*> v; x = v.data();" , "(" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return ; }
7710: $if $(@expr1073769613 $!@expr1073769614 $assertEquals $(@expr1073769615 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7710 $, "iterator(Vector <)" $, $typeOf_ $(@expr1073769616 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7710 $, "Vector<int> v; x = v.begin();" , "(" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return ; }
7711: $if $(@expr1073769618 $!@expr1073769619 $assertEquals $(@expr1073769620 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7711 $, "signed int &" $, $typeOf_ $(@expr1073769621 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7711 $, "Vector<int> v; x = *v.begin();" , "*" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return ; }
7712: $if $(@expr1073769623 $!@expr1073769624 $assertEquals $(@expr1073769625 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7712 $, "container(test :: string)" $, $typeOf_ $(@expr1073769626 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7712 $, "void foo(){test::string s; return \"x\"+s;}" , "+" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return
7713: ; }
7714: $if $(@expr1073769628 $!@expr1073769629 $assertEquals $(@expr1073769630 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7714 $, "container(test :: string)" $, $typeOf_ $(@expr1073769631 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7714 $, "void foo(){test::string s; return s+\"x\";}" , "+" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return
7715: ; }
7716: $if $(@expr1073769633 $!@expr1073769634 $assertEquals $(@expr1073769635 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7716 $, "container(test :: string)" $, $typeOf_ $(@expr1073769636 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7716 $, "void foo(){test::string s; return 'x'+s;}" , "+" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return
7717: ; }
7718: $if $(@expr1073769638 $!@expr1073769639 $assertEquals $(@expr1073769640 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7718 $, "container(test :: string)" $, $typeOf_ $(@expr1073769641 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7718 $, "void foo(){test::string s; return s+'x';}" , "+" , "test.cpp" , &@expr27748 set@var2044 $) $) $) { $return
7719: ; }
7720: }
7721:
7722:
7723: $if $(@expr1073769643 $!@expr1073769644 $assertEquals $(@expr1073769645 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7723 $, "C *" $, $typeOf_ $(@expr1073769646 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7723 $, "class C {}; x = new C();" , "new" $) $) $) { $return ; }
7724:
7725:
7726: $if $(@expr1073769647 $!@expr1073769648 $assertEquals $(@expr1073769649 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7726 $, "signed int" $, $typeOf_ $(@expr1073769650 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7726 $, "; auto x = 3;" , "x" $) $) $) { $return ; }
7727: $if $(@expr1073769651 $!@expr1073769652 $assertEquals $(@expr1073769653 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7727 $, "signed int *" $, $typeOf_ $(@expr1073769654 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7727 $, "; auto *p = (int *)0;" , "p" $) $) $) { $return ; }
7728: $if $(@expr1073769655 $!@expr1073769656 $assertEquals $(@expr1073769657 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7728 $, "const signed int *" $, $typeOf_ $(@expr1073769658 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7728 $, "; auto *p = (const int *)0;" , "p" $) $) $) { $return ; }
7729: $if $(@expr1073769659 $!@expr1073769660 $assertEquals $(@expr1073769661 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7729 $, "const signed int *" $, $typeOf_ $(@expr1073769662 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7729 $, "; auto *p = (constexpr int *)0;" , "p" $) $) $) { $return ; }
7730: $if $(@expr1073769663 $!@expr1073769664 $assertEquals $(@expr1073769665 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7730 $, "const signed int *" $, $typeOf_ $(@expr1073769666 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7730 $, "; const auto *p = (int *)0;" , "p" $) $) $) { $return ; }
7731: $if $(@expr1073769667 $!@expr1073769668 $assertEquals $(@expr1073769669 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7731 $, "const signed int *" $, $typeOf_ $(@expr1073769670 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7731 $, "; constexpr auto *p = (int *)0;" , "p" $) $) $) { $return ; }
7732: $if $(@expr1073769671 $!@expr1073769672 $assertEquals $(@expr1073769673 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7732 $, "const signed int *" $, $typeOf_ $(@expr1073769674 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7732 $, "; const auto *p = (const int *)0;" , "p" $) $) $) { $return ; }
7733: $if $(@expr1073769675 $!@expr1073769676 $assertEquals $(@expr1073769677 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7733 $, "const signed int *" $, $typeOf_ $(@expr1073769678 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7733 $, "; constexpr auto *p = (constexpr int *)0;" , "p" $) $) $) { $return ; }
7734: $if $(@expr1073769679 $!@expr1073769680 $assertEquals $(@expr1073769681 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7734 $, "const signed int *" $, $typeOf_ $(@expr1073769682 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7734 $, "; const constexpr auto *p = (int *)0;" , "p" $) $) $) { $return ; }
7735: $if $(@expr1073769683 $!@expr1073769684 $assertEquals $(@expr1073769685 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7735 $, "signed int *" $, $typeOf_ $(@expr1073769686 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7735 $, "; auto data = new int[100];" , "data" $) $) $) { $return ; }
7736: $if $(@expr1073769687 $!@expr1073769688 $assertEquals $(@expr1073769689 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7736 $, "signed int" $, $typeOf_ $(@expr1073769690 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7736 $, "; auto data = new X::Y; int x=1000; x=x/5;" , "/" $) $) $) { $return ; }
7737: $if $(@expr1073769691 $!@expr1073769692 $assertEquals $(@expr1073769693 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7737 $, "signed int *" $, $typeOf_ $(@expr1073769694 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7737 $, "; auto data = new (nothrow) int[100];" , "data" $) $) $) { $return ; }
7738: $if $(@expr1073769695 $!@expr1073769696 $assertEquals $(@expr1073769697 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7738 $, "signed int *" $, $typeOf_ $(@expr1073769698 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7738 $, "; auto data = new (std::nothrow) int[100];" , "data" $) $) $) { $return ; }
7739: $if $(@expr1073769699 $!@expr1073769700 $assertEquals $(@expr1073769701 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7739 $, "const signed short" $, $typeOf_ $(@expr1073769702 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7739 $, "short values[10]; void f() { for (const auto x : values); }" , "x" $) $) $) { $return ; }
7740: $if $(@expr1073769703 $!@expr1073769704 $assertEquals $(@expr1073769705 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7740 $, "const signed short &" $, $typeOf_ $(@expr1073769706 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7740 $, "short values[10]; void f() { for (const auto& x : values); }" , "x" $) $) $) { $return ; }
7741: $if $(@expr1073769707 $!@expr1073769708 $assertEquals $(@expr1073769709 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7741 $, "signed short &" $, $typeOf_ $(@expr1073769710 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7741 $, "short values[10]; void f() { for (auto& x : values); }" , "x" $) $) $) { $return ; }
7742: $if $(@expr1073769711 $!@expr1073769712 $assertEquals $(@expr1073769713 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7742 $, "signed int * &" $, $typeOf_ $(@expr1073769714 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7742 $, "int* values[10]; void f() { for (auto& p : values); }" , "p" $) $) $) { $return ; }
7743: $if $(@expr1073769715 $!@expr1073769716 $assertEquals $(@expr1073769717 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7743 $, "signed int * const &" $, $typeOf_ $(@expr1073769718 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7743 $, "int* values[10]; void f() { for (const auto& p : values); }" , "p" $) $) $) { $return ; }
7744: $if $(@expr1073769719 $!@expr1073769720 $assertEquals $(@expr1073769721 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7744 $, "const signed int" $, $typeOf_ $(@expr1073769722 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7744 $, "; const auto x = 3;" , "x" $) $) $) { $return ; }
7745: $if $(@expr1073769723 $!@expr1073769724 $assertEquals $(@expr1073769725 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7745 $, "const signed int" $, $typeOf_ $(@expr1073769726 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7745 $, "; constexpr auto x = 3;" , "x" $) $) $) { $return ; }
7746: $if $(@expr1073769727 $!@expr1073769728 $assertEquals $(@expr1073769729 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7746 $, "const signed int" $, $typeOf_ $(@expr1073769730 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7746 $, "; const constexpr auto x = 3;" , "x" $) $) $) { $return ; }
7747:
7748:
7749: $if $(@expr1073769731 $!@expr1073769732 $assertEquals $(@expr1073769733 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7749 $, "char *" $, $typeOf_ $(@expr1073769734 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7749 $, "; char abc[] = \"abc\";" , "[" $) $) $) { $return ; }
7750: $if $(@expr1073769735 $!@expr1073769736 $assertEquals $(@expr1073769737 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7750 $, "" $, $typeOf_ $(@expr1073769738 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7750 $, "; int x[10] = { [3]=1 };" , "[ 3 ]" $) $) $) { $return ; }
7751:
7752:
7753: {
7754: Settings set@var2058 ;
7755: Library ::@expr1073769739 SmartPointer sharedPtr@var2059 ;
7756: sharedPtr@var2059 .@expr1073769740 name@var2060 =@expr1073769741 "std::shared_ptr" ;
7757: set@var2058 .@expr1073769742 library@var2061 .@expr1073769743 smartPointers@var2062 [@expr1073769744 "std::shared_ptr" ] =@expr1073769745 sharedPtr@var2059 ;
7758: $if $(@expr1073769746 $!@expr1073769747 $assertEquals $(@expr1073769748 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7758 $, "smart-pointer(std::shared_ptr)" $, $typeOf_ $(@expr1073769749 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7758 $, "class C {}; x = std::make_shared<C>();" , "(" , "test.cpp" , &@expr1073769750 set@var2058 $) $) $) { $return
7759: ; }
7760: }
7761:
7762:
7763: {
7764:
7765: Settings sC@var2063 ;
7766: Library ::@expr1073769751 Container c@var2064 ;
7767: c@var2064 .@expr1073769752 startPattern@var2065 =@expr1073769753 "C" ;
7768: c@var2064 .@expr1073769754 startPattern2@var2066 =@expr1073769755 "C !!::" ;
7769: sC@var2063 .@expr1073769756 library@var2067 .@expr1073769757 containers@var2068 [@expr1073769758 "C" ] =@expr1073769759 c@var2064 ;
7770: $if $(@expr1073769760 $!@expr1073769761 $assertEquals $(@expr1073769762 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7770 $, "container(C)" $, $typeOf_ $(@expr1073769763 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7770 $, "C f(char *p) { char data[10]; return data; }" , "return" , "test.cpp" , &@expr1073769764 sC@var2063 $) $) $) { $return ; }
7771: }
7772:
7773: {
7774: Settings set@var2069 ;
7775: Library ::@expr1073769765 SmartPointer myPtr@var2070 ;
7776: myPtr@var2070 .@expr1073769766 name@var2071 =@expr1073769767 "MyPtr" ;
7777: set@var2069 .@expr1073769768 library@var2072 .@expr1073769769 smartPointers@var2073 [@expr1073769770 "MyPtr" ] =@expr1073769771 myPtr@var2070 ;
7778: $if $(@expr1073769772 $!@expr1073769773 $assertEquals $(@expr1073769774 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7778 $, "smart-pointer(MyPtr)" $, $typeOf_ $(@expr1073769775 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7778 $, "void f() { MyPtr<int> p; return p; }" , "p ;" , "test.cpp" , &@expr27952 set@var2069 $) $) $) { $return
7779: ; }
7780: $if $(@expr1073769777 $!@expr1073769778 $assertEquals $(@expr1073769779 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7780 $, "signed int" $, $typeOf_ $(@expr1073769780 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7780 $, "void f() { MyPtr<int> p; return *p; }" , "* p ;" , "test.cpp" , &@expr27952 set@var2069 $) $) $) { $return ; }
7781: $if $(@expr1073769782 $!@expr1073769783 $assertEquals $(@expr1073769784 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7781 $, "smart-pointer(MyPtr)" $, $typeOf_ $(@expr1073769785 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7781 $, "void f() {return MyPtr<int>();}" , "(" , "test.cpp" , &@expr27952 set@var2069 $) $) $) { $return ; }
7782: }
7783: }
7784:
7785: void variadic1 ( ) {
7786: {
7787: $Tokenizer $tokenizer@var2074 $(@expr1073769787 $&@expr1073769788 $settings1@var123 $, $this@expr27965 $) $; $const $SymbolDatabase $* $db@var2075 $; $db@var2075 $=@expr1073769790 $getSymbolDB_inner $(@expr1073769791 $tokenizer@var2074 $, "CBase* create(const char *c1, ...);\nint    create(COther& ot, const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(ot, \"AAAA\", 44, (char*)0);\n}" $, $"test.cpp" $) $; $if $(@expr1073769792 $!@expr1073769793 $assert_ $(@expr1073769794 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7787 $, $db@var2075 $) $) { $return $; } $do ${ $} $while $(@expr1073769795 $false $)
7788:
|
7792:
7793: ;
7794:
7795: const Token * f@var2076 ; f@var2076 =@expr1073769796 Token ::@expr27973 findsimplematch (@expr1073769798 tokenizer@var2074 .@expr27975 tokens (@expr27976 ) , "create ( \"AAAA\"" ) ;
7796: $if $(@expr1073769801 $!@expr1073769802 $assertEquals $(@expr1073769803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7796 $, true $, db@var2075 &&@expr27980 f@var2076 &&@expr27981 f@var2076 .@expr27982 function (@expr27983 ) &&@expr1073769808 f@var2076 .@expr27982 function (@expr27983 ) .@expr27987 tokenDef .@expr27988 linenr (@expr27989 ) ==@expr1073769814 1 $) $) { $return ; }
7797: f@var2076 =@expr1073769815 Token ::@expr27973 findsimplematch (@expr1073769817 tokenizer@var2074 .@expr27975 tokens (@expr27976 ) , "create ( ot" ) ;
7798: $if $(@expr1073769820 $!@expr1073769821 $assertEquals $(@expr1073769822 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7798 $, true $, db@var2075 &&@expr27980 f@var2076 &&@expr27981 f@var2076 .@expr27982 function (@expr27983 ) &&@expr1073769827 f@var2076 .@expr27982 function (@expr27983 ) .@expr27987 tokenDef .@expr27988 linenr (@expr27989 ) ==@expr1073769833 2 $) $) { $return ; }
7799: }
7800: {
7801: $Tokenizer $tokenizer@var2077 $(@expr1073769834 $&@expr1073769835 $settings1@var123 $, $this@expr27965 $) $; $const $SymbolDatabase $* $db@var2078 $; $db@var2078 $=@expr1073769836 $getSymbolDB_inner $(@expr1073769837 $tokenizer@var2077 $, "int    create(COther& ot, const char *c1, ...);\nCBase* create(const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(ot, \"AAAA\", 44, (char*)0);\n}" $, $"test.cpp" $) $; $if $(@expr1073769838 $!@expr1073769839 $assert_ $(@expr1073769840 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7801 $, $db@var2078 $) $) { $return $; } $do ${ $} $while $(@expr1073769841 $false $)
7802:
|
7806:
7807: ;
7808:
7809: const Token * f@var2079 ; f@var2079 =@expr1073769842 Token ::@expr27973 findsimplematch (@expr1073769844 tokenizer@var2077 .@expr28021 tokens (@expr28022 ) , "create ( \"AAAA\"" ) ;
7810: $if $(@expr1073769847 $!@expr1073769848 $assertEquals $(@expr1073769849 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7810 $, true $, db@var2078 &&@expr28026 f@var2079 &&@expr28027 f@var2079 .@expr28028 function (@expr28029 ) &&@expr1073769854 f@var2079 .@expr28028 function (@expr28029 ) .@expr28033 tokenDef .@expr28034 linenr (@expr28035 ) ==@expr1073769860 2 $) $) { $return ; }
7811: f@var2079 =@expr1073769861 Token ::@expr27973 findsimplematch (@expr1073769863 tokenizer@var2077 .@expr28021 tokens (@expr28022 ) , "create ( ot" ) ;
7812: $if $(@expr1073769866 $!@expr1073769867 $assertEquals $(@expr1073769868 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7812 $, true $, db@var2078 &&@expr28026 f@var2079 &&@expr28027 f@var2079 .@expr28028 function (@expr28029 ) &&@expr1073769873 f@var2079 .@expr28028 function (@expr28029 ) .@expr28033 tokenDef .@expr28034 linenr (@expr28035 ) ==@expr1073769879 1 $) $) { $return ; }
7813: }
7814: }
7815:
7816: void variadic2 ( ) {
7817: {
7818: $Tokenizer $tokenizer@var2080 $(@expr1073769880 $&@expr1073769881 $settings1@var123 $, $this@expr28058 $) $; $const $SymbolDatabase $* $db@var2081 $; $db@var2081 $=@expr1073769883 $getSymbolDB_inner $(@expr1073769884 $tokenizer@var2080 $, "CBase* create(const char *c1, ...);\nCBase* create(const wchar_t *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(L\"AAAA\", 44, (char*)0);\n}" $, $"test.cpp" $) $; $if $(@expr1073769885 $!@expr1073769886 $assert_ $(@expr1073769887 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7818 $, $db@var2081 $) $) { $return $; } $do ${ $} $while $(@expr1073769888 $false $)
7819:
|
7823:
7824: ;
7825:
7826: const Token * f@var2082 ; f@var2082 =@expr1073769889 Token ::@expr28066 findsimplematch (@expr1073769891 tokenizer@var2080 .@expr28068 tokens (@expr28069 ) , "cp1 = create (" ) ;
7827: $if $(@expr1073769894 $!@expr1073769895 $assertEquals $(@expr1073769896 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7827 $, true $, db@var2081 &&@expr28073 f@var2082 &&@expr28074 f@var2082 .@expr28075 tokAt (@expr28076 2 ) &&@expr28077 f@var2082 .@expr28075 tokAt (@expr28076 2 ) .@expr28080 function (@expr28081 ) &&@expr1073769906 f@var2082 .@expr28075 tokAt (@expr28076 2 ) .@expr28080 function (@expr28081 ) .@expr28087 tokenDef .@expr28088 linenr (@expr28089 ) ==@expr1073769914 1 $) $) { $return ; }
7828: f@var2082 =@expr1073769915 Token ::@expr28066 findsimplematch (@expr1073769917 tokenizer@var2080 .@expr28068 tokens (@expr28069 ) , "cp2 = create (" ) ;
7829: $if $(@expr1073769920 $!@expr1073769921 $assertEquals $(@expr1073769922 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7829 $, true $, db@var2081 &&@expr28073 f@var2082 &&@expr28074 f@var2082 .@expr28075 tokAt (@expr28076 2 ) &&@expr28077 f@var2082 .@expr28075 tokAt (@expr28076 2 ) .@expr28080 function (@expr28081 ) &&@expr1073769932 f@var2082 .@expr28075 tokAt (@expr28076 2 ) .@expr28080 function (@expr28081 ) .@expr28087 tokenDef .@expr28088 linenr (@expr28089 ) ==@expr1073769940 2 $) $) { $return ; }
7830: }
7831: {
7832: $Tokenizer $tokenizer@var2083 $(@expr1073769941 $&@expr1073769942 $settings1@var123 $, $this@expr28058 $) $; $const $SymbolDatabase $* $db@var2084 $; $db@var2084 $=@expr1073769943 $getSymbolDB_inner $(@expr1073769944 $tokenizer@var2083 $, "CBase* create(const wchar_t *c1, ...);\nCBase* create(const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(L\"AAAA\", 44, (char*)0);\n}" $, $"test.cpp" $) $; $if $(@expr1073769945 $!@expr1073769946 $assert_ $(@expr1073769947 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7832 $, $db@var2084 $) $) { $return $; } $do ${ $} $while $(@expr1073769948 $false $)
7833:
|
7837:
7838: ;
7839:
7840: const Token * f@var2085 ; f@var2085 =@expr1073769949 Token ::@expr28066 findsimplematch (@expr1073769951 tokenizer@var2083 .@expr28128 tokens (@expr28129 ) , "cp1 = create (" ) ;
7841: $if $(@expr1073769954 $!@expr1073769955 $assertEquals $(@expr1073769956 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7841 $, true $, db@var2084 &&@expr28133 f@var2085 &&@expr28134 f@var2085 .@expr28135 tokAt (@expr28136 2 ) &&@expr28137 f@var2085 .@expr28135 tokAt (@expr28136 2 ) .@expr28140 function (@expr28141 ) &&@expr1073769966 f@var2085 .@expr28135 tokAt (@expr28136 2 ) .@expr28140 function (@expr28141 ) .@expr28147 tokenDef .@expr28148 linenr (@expr28149 ) ==@expr1073769974 2 $) $) { $return ; }
7842: f@var2085 =@expr1073769975 Token ::@expr28066 findsimplematch (@expr1073769977 tokenizer@var2083 .@expr28128 tokens (@expr28129 ) , "cp2 = create (" ) ;
7843: $if $(@expr1073769980 $!@expr1073769981 $assertEquals $(@expr1073769982 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7843 $, true $, db@var2084 &&@expr28133 f@var2085 &&@expr28134 f@var2085 .@expr28135 tokAt (@expr28136 2 ) &&@expr28137 f@var2085 .@expr28135 tokAt (@expr28136 2 ) .@expr28140 function (@expr28141 ) &&@expr1073769992 f@var2085 .@expr28135 tokAt (@expr28136 2 ) .@expr28140 function (@expr28141 ) .@expr28147 tokenDef .@expr28148 linenr (@expr28149 ) ==@expr1073770000 1 $) $) { $return ; }
7844: }
7845: }
7846:
7847: void variadic3 ( ) {
7848: {
7849: $Tokenizer $tokenizer@var2086 $(@expr1073770001 $&@expr1073770002 $settings1@var123 $, $this@expr28179 $) $; $const $SymbolDatabase $* $db@var2087 $; $db@var2087 $=@expr1073770004 $getSymbolDB_inner $(@expr1073770005 $tokenizer@var2086 $, "int zdcalc(const XYZ & per, short rs = 0);\ndouble zdcalc(long& length, const XYZ * per);\nlong mycalc( ) {\n    long length;\n    XYZ per;\n    zdcalc(length, &per);\n}" $, $"test.cpp" $) $; $if $(@expr1073770006 $!@expr1073770007 $assert_ $(@expr1073770008 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7849 $, $db@var2087 $) $) { $return $; } $do ${ $} $while $(@expr1073770009 $false $)
7850:
|
7854:
7855: ;
7856:
7857: const Token * f@var2088 ; f@var2088 =@expr1073770010 Token ::@expr28187 findsimplematch (@expr1073770012 tokenizer@var2086 .@expr1073770013 tokens (@expr1073770014 ) , "zdcalc ( length" ) ;
7858: $if $(@expr1073770015 $!@expr1073770016 $assertEquals $(@expr1073770017 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7858 $, true $, db@var2087 &&@expr1073770018 f@var2088 &&@expr1073770019 f@var2088 .@expr28196 function (@expr28197 ) &&@expr1073770022 f@var2088 .@expr28196 function (@expr28197 ) .@expr1073770025 tokenDef .@expr1073770026 linenr (@expr1073770027 ) ==@expr1073770028 2 $) $) { $return ; }
7859: }
7860: {
7861: $Tokenizer $tokenizer@var2089 $(@expr1073770029 $&@expr1073770030 $settings1@var123 $, $this@expr28179 $) $; $const $SymbolDatabase $* $db@var2090 $; $db@var2090 $=@expr1073770031 $getSymbolDB_inner $(@expr1073770032 $tokenizer@var2089 $, "double zdcalc(long& length, const XYZ * per);\nint zdcalc(const XYZ & per, short rs = 0);\nlong mycalc( ) {\n    long length;\n    XYZ per;\n    zdcalc(length, &per);\n}" $, $"test.cpp" $) $; $if $(@expr1073770033 $!@expr1073770034 $assert_ $(@expr1073770035 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7861 $, $db@var2090 $) $) { $return $; } $do ${ $} $while $(@expr1073770036 $false $)
7862:
|
7866:
7867: ;
7868:
7869: const Token * f@var2091 ; f@var2091 =@expr1073770037 Token ::@expr28187 findsimplematch (@expr1073770039 tokenizer@var2089 .@expr1073770040 tokens (@expr1073770041 ) , "zdcalc ( length" ) ;
7870: $if $(@expr1073770042 $!@expr1073770043 $assertEquals $(@expr1073770044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7870 $, true $, db@var2090 &&@expr1073770045 f@var2091 &&@expr1073770046 f@var2091 .@expr28223 function (@expr28224 ) &&@expr1073770049 f@var2091 .@expr28223 function (@expr28224 ) .@expr1073770052 tokenDef .@expr1073770053 linenr (@expr1073770054 ) ==@expr1073770055 1 $) $) { $return ; }
7871: }
7872: }
7873:
7874: void noReturnType ( ) {
7875: $Tokenizer $tokenizer@var2092 $(@expr1073770058 $&@expr1073770059 $settings1@var123 $, $this@expr1073770060 $) $; $const $SymbolDatabase $* $db@var2093 $; $db@var2093 $=@expr1073770061 $getSymbolDB_inner $(@expr1073770062 $tokenizer@var2092 $, "func() { }" $, $"test.c" $) $; $do ${ $} $while $(@expr1073770063 $false $) ;
7876:
7877: $if $(@expr1073770064 $!@expr1073770065 $assert_ $(@expr1073770066 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7877 $, db@var2093 &&@expr1073770067 db@var2093 .@expr28244 functionScopes@var2094 .@expr1073770069 size (@expr1073770070 ) ==@expr1073770071 1 $) $) { $return ; }
7878: $if $(@expr1073770072 $!@expr1073770073 $assert_ $(@expr1073770074 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7878 $, db@var2093 .@expr28244 functionScopes@var2094 [@expr28252 0 ] .@expr28253 function@expr1073770056 !=@expr1073770078 nullptr $) $) { $return ; }
7879: const Token * retDef@var2095 ; retDef@var2095 =@expr1073770079 db@var2093 .@expr28244 functionScopes@var2094 [@expr28252 0 ] .@expr28253 function .@expr1073770083 retDef@expr1073770057 ;
7880: $if $(@expr1073770084 $!@expr1073770085 $assertEquals $(@expr1073770086 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7880 $, "func" $, retDef@var2095 ?@expr1073770087 retDef@var2095 .@expr1073770088 str (@expr1073770089 ) :@expr1073770090 "" $) $) { $return ; }
7881: }
7882:
7883: void auto1 ( ) {
7884: $Tokenizer $tokenizer@var2096 $(@expr1073770091 $&@expr1073770092 $settings1@var123 $, $this@expr1073770093 $) $; $const $SymbolDatabase $* $db@var2097 $; $db@var2097 $=@expr1073770094 $getSymbolDB_inner $(@expr1073770095 $tokenizer@var2096 $, "; auto x = \"abc\";" $, $"test.cpp" $) $; $if $(@expr1073770096 $!@expr1073770097 $assert_ $(@expr1073770098 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7884 $, $db@var2097 $) $) { $return $; } $do ${ $} $while $(@expr1073770099 $false $) ;
7885: const Token * autotok@var2098 ; autotok@var2098 =@expr1073770100 tokenizer@var2096 .@expr1073770101 tokens (@expr1073770102 ) .@expr1073770103 next (@expr1073770104 ) ;
7886: $if $(@expr1073770105 $!@expr1073770106 $assert_ $(@expr1073770107 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7886 $, autotok@var2098 &&@expr1073770108 autotok@var2098 .@expr1073770109 isStandardType (@expr1073770110 ) $) $) { $return ; }
7887: const Variable * var@var2099 ; var@var2099 =@expr1073770111 db@var2097 ?@expr1073770112 db@var2097 .@expr1073770113 getVariableFromVarId (@expr1073770114 1 ) :@expr1073770115 nullptr ;
7888: $if $(@expr1073770116 $!@expr1073770117 $assert_ $(@expr1073770118 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7888 $, var@var2099 &&@expr1073770119 var@var2099 .@expr1073770120 isPointer (@expr1073770121 ) &&@expr1073770122 !@expr1073770123 var@var2099 .@expr1073770124 isConst (@expr1073770125 ) $) $) { $return ; }
7889: }
7890:
7891: void auto2 ( ) {
7892: $Tokenizer $tokenizer@var2100 $(@expr1073770127 $&@expr1073770128 $settings1@var123 $, $this@expr1073770129 $) $; $const $SymbolDatabase $* $db@var2101 $; $db@var2101 $=@expr1073770130 $getSymbolDB_inner $(@expr1073770131 $tokenizer@var2100 $, "struct S { int i; };\nint foo() {\n    auto a = new S;\n    auto * b = new S;\n    auto c = new S[10];\n    auto * d = new S[10];\n    return a->i + b->i + c[0]->i + d[0]->i;\n}" $, $"test.cpp" $) $; $if $(@expr1073770132 $!@expr1073770133 $assert_ $(@expr1073770134 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7892 $, $db@var2101 $) $) { $return $; } $do ${ $} $while $(@expr1073770135 $false $)
7893:
|
7898:
7899: ;
7900: const Token * autotok@var2102 ; autotok@var2102 =@expr1073770136 Token ::@expr28313 findsimplematch (@expr1073770138 tokenizer@var2100 .@expr28315 tokens (@expr28316 ) , "auto" ) ;
7901: $if $(@expr1073770141 $!@expr1073770142 $assert_ $(@expr1073770143 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7901 $, db@var2101 &&@expr28320 autotok@var2102 &&@expr28321 autotok@var2102 .@expr28322 valueType (@expr28323 ) &&@expr28324 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28327 pointer@expr28302 ==@expr28328 1 &&@expr28329 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope &&@expr28333 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope .@expr28337 definedType &&@expr28338 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope .@expr28337 definedType .@expr28343 name (@expr28344 ) ==@expr28345 "S" &&@expr28346 autotok@var2102 .@expr28347 type (@expr28348 ) ==@expr28349 nullptr $) $) { $return ; }
7902:
7903: autotok@var2102 =@expr1073770174 Token ::@expr28313 findsimplematch (@expr28352 autotok@var2102 .@expr28353 next (@expr28354 ) , "auto" ) ;
7904: $if $(@expr1073770179 $!@expr1073770180 $assert_ $(@expr1073770181 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7904 $, db@var2101 &&@expr28320 autotok@var2102 &&@expr28321 autotok@var2102 .@expr28322 valueType (@expr28323 ) &&@expr28362 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28327 pointer@expr28302 ==@expr28366 0 &&@expr28367 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope &&@expr28371 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope .@expr28337 definedType &&@expr28376 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope .@expr28337 definedType .@expr28343 name (@expr28344 ) ==@expr28345 "S" &&@expr28384 autotok@var2102 .@expr28347 type (@expr28348 ) &&@expr28387 autotok@var2102 .@expr28347 type (@expr28348 ) .@expr28390 name (@expr28391 ) ==@expr28392 "S" $) $) { $return ; }
7905:
7906: autotok@var2102 =@expr1073770217 Token ::@expr28313 findsimplematch (@expr28352 autotok@var2102 .@expr28353 next (@expr28354 ) , "auto" ) ;
7907: $if $(@expr1073770222 $!@expr1073770223 $assert_ $(@expr1073770224 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7907 $, db@var2101 &&@expr28320 autotok@var2102 &&@expr28321 autotok@var2102 .@expr28322 valueType (@expr28323 ) &&@expr28324 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28327 pointer@expr28302 ==@expr28328 1 &&@expr28329 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope &&@expr28333 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope .@expr28337 definedType &&@expr28338 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope .@expr28337 definedType .@expr28343 name (@expr28344 ) ==@expr28345 "S" &&@expr28346 autotok@var2102 .@expr28347 type (@expr28348 ) ==@expr28349 nullptr $) $) { $return ; }
7908:
7909: autotok@var2102 =@expr1073770255 Token ::@expr28313 findsimplematch (@expr28352 autotok@var2102 .@expr28353 next (@expr28354 ) , "auto" ) ;
7910: $if $(@expr1073770260 $!@expr1073770261 $assert_ $(@expr1073770262 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7910 $, db@var2101 &&@expr28320 autotok@var2102 &&@expr28321 autotok@var2102 .@expr28322 valueType (@expr28323 ) &&@expr28362 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28327 pointer@expr28302 ==@expr28366 0 &&@expr28367 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope &&@expr28371 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope .@expr28337 definedType &&@expr28376 autotok@var2102 .@expr28322 valueType (@expr28323 ) .@expr28332 typeScope .@expr28337 definedType .@expr28343 name (@expr28344 ) ==@expr28345 "S" &&@expr28384 autotok@var2102 .@expr28347 type (@expr28348 ) &&@expr28387 autotok@var2102 .@expr28347 type (@expr28348 ) .@expr28390 name (@expr28391 ) ==@expr28392 "S" $) $) { $return ; }
7911:
7912: vartok@var121 =@expr1073770298 Token ::@expr28313 findsimplematch (@expr1073770300 tokenizer@var2100 .@expr28315 tokens (@expr28316 ) , "a =" ) ;
7913: $if $(@expr1073770303 $!@expr1073770304 $assert_ $(@expr1073770305 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7913 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28486 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28489 isPointer (@expr28490 ) &&@expr28491 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) &&@expr28496 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) .@expr28501 name (@expr28502 ) ==@expr28503 "S" $) $) { $return ; }
7914:
7915: vartok@var121 =@expr1073770328 Token ::@expr28313 findsimplematch (@expr1073770330 vartok@var121 .@expr28507 next (@expr28508 ) , "b =" ) ;
7916: $if $(@expr1073770333 $!@expr1073770334 $assert_ $(@expr1073770335 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7916 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28486 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28489 isPointer (@expr28490 ) &&@expr28491 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) &&@expr28496 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) .@expr28501 name (@expr28502 ) ==@expr28503 "S" $) $) { $return ; }
7917:
7918: vartok@var121 =@expr1073770358 Token ::@expr28313 findsimplematch (@expr1073770360 vartok@var121 .@expr28507 next (@expr28508 ) , "c =" ) ;
7919: $if $(@expr1073770363 $!@expr1073770364 $assert_ $(@expr1073770365 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7919 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28486 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28489 isPointer (@expr28490 ) &&@expr28491 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) &&@expr28496 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) .@expr28501 name (@expr28502 ) ==@expr28503 "S" $) $) { $return ; }
7920:
7921: vartok@var121 =@expr1073770388 Token ::@expr28313 findsimplematch (@expr1073770390 vartok@var121 .@expr28507 next (@expr28508 ) , "d =" ) ;
7922: $if $(@expr1073770393 $!@expr1073770394 $assert_ $(@expr1073770395 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7922 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28486 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28489 isPointer (@expr28490 ) &&@expr28491 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) &&@expr28496 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) .@expr28501 name (@expr28502 ) ==@expr28503 "S" $) $) { $return ; }
7923:
7924: vartok@var121 =@expr1073770418 Token ::@expr28313 findsimplematch (@expr28596 tokenizer@var2100 .@expr28315 tokens (@expr28316 ) , "return" ) ;
7925:
7926: vartok@var121 =@expr1073770423 Token ::@expr28313 findsimplematch (@expr1073770425 vartok@var121 , "a" ) ;
7927: $if $(@expr1073770426 $!@expr1073770427 $assert_ $(@expr1073770428 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7927 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28486 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28489 isPointer (@expr28490 ) &&@expr28491 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) &&@expr28496 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) .@expr28501 name (@expr28502 ) ==@expr28503 "S" $) $) { $return ; }
7928:
7929: vartok@var121 =@expr1073770451 Token ::@expr28313 findsimplematch (@expr1073770453 vartok@var121 .@expr28507 next (@expr28508 ) , "b" ) ;
7930: $if $(@expr1073770456 $!@expr1073770457 $assert_ $(@expr1073770458 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7930 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28486 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28489 isPointer (@expr28490 ) &&@expr28491 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) &&@expr28496 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) .@expr28501 name (@expr28502 ) ==@expr28503 "S" $) $) { $return ; }
7931:
7932: vartok@var121 =@expr1073770481 Token ::@expr28313 findsimplematch (@expr1073770483 vartok@var121 .@expr28507 next (@expr28508 ) , "c" ) ;
7933: $if $(@expr1073770486 $!@expr1073770487 $assert_ $(@expr1073770488 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7933 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28486 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28489 isPointer (@expr28490 ) &&@expr28491 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) &&@expr28496 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) .@expr28501 name (@expr28502 ) ==@expr28503 "S" $) $) { $return ; }
7934:
7935: vartok@var121 =@expr1073770511 Token ::@expr28313 findsimplematch (@expr1073770513 vartok@var121 .@expr28507 next (@expr28508 ) , "d" ) ;
7936: $if $(@expr1073770516 $!@expr1073770517 $assert_ $(@expr1073770518 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7936 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28486 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28489 isPointer (@expr28490 ) &&@expr28491 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) &&@expr28496 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28494 type (@expr28495 ) .@expr28501 name (@expr28502 ) ==@expr28503 "S" $) $) { $return ; }
7937:
7938: vartok@var121 =@expr1073770541 Token ::@expr28313 findsimplematch (@expr28596 tokenizer@var2100 .@expr28315 tokens (@expr28316 ) , "return" ) ;
7939:
7940: vartok@var121 =@expr1073770546 Token ::@expr28313 findsimplematch (@expr1073770548 vartok@var121 , "i" ) ;
7941: $if $(@expr1073770549 $!@expr1073770550 $assert_ $(@expr1073770551 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7941 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28732 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28735 typeStartToken (@expr28736 ) .@expr28737 str (@expr28738 ) ==@expr28739 "int" $) $) { $return ; }
7942:
7943: vartok@var121 =@expr1073770564 Token ::@expr28313 findsimplematch (@expr28742 vartok@var121 .@expr28507 next (@expr28508 ) , "i" ) ;
7944: $if $(@expr1073770569 $!@expr1073770570 $assert_ $(@expr1073770571 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7944 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28732 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28735 typeStartToken (@expr28736 ) .@expr28737 str (@expr28738 ) ==@expr28739 "int" $) $) { $return ; }
7945:
7946: vartok@var121 =@expr1073770584 Token ::@expr28313 findsimplematch (@expr28742 vartok@var121 .@expr28507 next (@expr28508 ) , "i" ) ;
7947: $if $(@expr1073770589 $!@expr1073770590 $assert_ $(@expr1073770591 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7947 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28732 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28735 typeStartToken (@expr28736 ) .@expr28737 str (@expr28738 ) ==@expr28739 "int" $) $) { $return ; }
7948:
7949: vartok@var121 =@expr1073770604 Token ::@expr28313 findsimplematch (@expr28742 vartok@var121 .@expr28507 next (@expr28508 ) , "i" ) ;
7950: $if $(@expr1073770609 $!@expr1073770610 $assert_ $(@expr1073770611 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7950 $, db@var2101 &&@expr28482 vartok@var121 &&@expr28483 vartok@var121 .@expr28484 variable (@expr28485 ) &&@expr28732 vartok@var121 .@expr28484 variable (@expr28485 ) .@expr28735 typeStartToken (@expr28736 ) .@expr28737 str (@expr28738 ) ==@expr28739 "int" $) $) { $return ; }
7951: }
7952:
7953: void auto3 ( ) {
7954: $Tokenizer $tokenizer@var2103 $(@expr1073770625 $&@expr1073770626 $settings1@var123 $, $this@expr1073770627 $) $; $const $SymbolDatabase $* $db@var2104 $; $db@var2104 $=@expr1073770628 $getSymbolDB_inner $(@expr1073770629 $tokenizer@var2103 $, "enum E : unsigned short { A, B, C };\nint foo() {\n    auto a = new E;\n    auto * b = new E;\n    auto c = new E[10];\n    auto * d = new E[10];\n    return *a + *b + c[0] + d[0];\n}" $, $"test.cpp" $) $; $if $(@expr1073770630 $!@expr1073770631 $assert_ $(@expr1073770632 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7954 $, $db@var2104 $) $) { $return $; } $do ${ $} $while $(@expr1073770633 $false $)
7955:
|
7960:
7961: ;
7962: const Token * autotok@var2105 ; autotok@var2105 =@expr1073770634 Token ::@expr28811 findsimplematch (@expr1073770636 tokenizer@var2103 .@expr28813 tokens (@expr28814 ) , "auto" ) ;
7963: $if $(@expr1073770639 $!@expr1073770640 $assert_ $(@expr1073770641 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7963 $, db@var2104 &&@expr28818 autotok@var2105 &&@expr28819 autotok@var2105 .@expr28820 valueType (@expr28821 ) &&@expr28822 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28825 pointer@expr28800 ==@expr28826 1 &&@expr28827 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope &&@expr28831 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope .@expr28835 definedType &&@expr28836 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope .@expr28835 definedType .@expr28841 name (@expr28842 ) ==@expr28843 "E" &&@expr28844 autotok@var2105 .@expr28845 type (@expr28846 ) ==@expr28847 nullptr $) $) { $return ; }
7964:
7965: autotok@var2105 =@expr1073770672 Token ::@expr28811 findsimplematch (@expr28850 autotok@var2105 .@expr28851 next (@expr28852 ) , "auto" ) ;
7966: $if $(@expr1073770677 $!@expr1073770678 $assert_ $(@expr1073770679 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7966 $, db@var2104 &&@expr28818 autotok@var2105 &&@expr28819 autotok@var2105 .@expr28820 valueType (@expr28821 ) &&@expr28860 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28825 pointer@expr28800 ==@expr28864 0 &&@expr28865 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope &&@expr28869 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope .@expr28835 definedType &&@expr28874 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope .@expr28835 definedType .@expr28841 name (@expr28842 ) ==@expr28843 "E" &&@expr28882 autotok@var2105 .@expr28845 type (@expr28846 ) &&@expr28885 autotok@var2105 .@expr28845 type (@expr28846 ) .@expr28888 name (@expr28889 ) ==@expr28890 "E" $) $) { $return ; }
7967:
7968: autotok@var2105 =@expr1073770715 Token ::@expr28811 findsimplematch (@expr28850 autotok@var2105 .@expr28851 next (@expr28852 ) , "auto" ) ;
7969: $if $(@expr1073770720 $!@expr1073770721 $assert_ $(@expr1073770722 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7969 $, db@var2104 &&@expr28818 autotok@var2105 &&@expr28819 autotok@var2105 .@expr28820 valueType (@expr28821 ) &&@expr28822 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28825 pointer@expr28800 ==@expr28826 1 &&@expr28827 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope &&@expr28831 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope .@expr28835 definedType &&@expr28836 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope .@expr28835 definedType .@expr28841 name (@expr28842 ) ==@expr28843 "E" &&@expr28844 autotok@var2105 .@expr28845 type (@expr28846 ) ==@expr28847 nullptr $) $) { $return ; }
7970:
7971: autotok@var2105 =@expr1073770753 Token ::@expr28811 findsimplematch (@expr28850 autotok@var2105 .@expr28851 next (@expr28852 ) , "auto" ) ;
7972: $if $(@expr1073770758 $!@expr1073770759 $assert_ $(@expr1073770760 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7972 $, db@var2104 &&@expr28818 autotok@var2105 &&@expr28819 autotok@var2105 .@expr28820 valueType (@expr28821 ) &&@expr28860 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28825 pointer@expr28800 ==@expr28864 0 &&@expr28865 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope &&@expr28869 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope .@expr28835 definedType &&@expr28874 autotok@var2105 .@expr28820 valueType (@expr28821 ) .@expr28830 typeScope .@expr28835 definedType .@expr28841 name (@expr28842 ) ==@expr28843 "E" &&@expr28882 autotok@var2105 .@expr28845 type (@expr28846 ) &&@expr28885 autotok@var2105 .@expr28845 type (@expr28846 ) .@expr28888 name (@expr28889 ) ==@expr28890 "E" $) $) { $return ; }
7973:
7974: vartok@var121 =@expr1073770796 Token ::@expr28811 findsimplematch (@expr1073770798 tokenizer@var2103 .@expr28813 tokens (@expr28814 ) , "a =" ) ;
7975: $if $(@expr1073770801 $!@expr1073770802 $assert_ $(@expr1073770803 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7975 $, db@var2104 &&@expr28980 vartok@var121 &&@expr28981 vartok@var121 .@expr28982 variable (@expr28983 ) &&@expr28984 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28987 isPointer (@expr28988 ) &&@expr28989 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) &&@expr28994 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) .@expr28999 name (@expr29000 ) ==@expr29001 "E" $) $) { $return ; }
7976:
7977: vartok@var121 =@expr1073770826 Token ::@expr28811 findsimplematch (@expr1073770828 vartok@var121 .@expr29005 next (@expr29006 ) , "b =" ) ;
7978: $if $(@expr1073770831 $!@expr1073770832 $assert_ $(@expr1073770833 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7978 $, db@var2104 &&@expr28980 vartok@var121 &&@expr28981 vartok@var121 .@expr28982 variable (@expr28983 ) &&@expr28984 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28987 isPointer (@expr28988 ) &&@expr28989 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) &&@expr28994 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) .@expr28999 name (@expr29000 ) ==@expr29001 "E" $) $) { $return ; }
7979:
7980: vartok@var121 =@expr1073770856 Token ::@expr28811 findsimplematch (@expr1073770858 vartok@var121 .@expr29005 next (@expr29006 ) , "c =" ) ;
7981: $if $(@expr1073770861 $!@expr1073770862 $assert_ $(@expr1073770863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7981 $, db@var2104 &&@expr28980 vartok@var121 &&@expr28981 vartok@var121 .@expr28982 variable (@expr28983 ) &&@expr28984 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28987 isPointer (@expr28988 ) &&@expr28989 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) &&@expr28994 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) .@expr28999 name (@expr29000 ) ==@expr29001 "E" $) $) { $return ; }
7982:
7983: vartok@var121 =@expr1073770886 Token ::@expr28811 findsimplematch (@expr1073770888 vartok@var121 .@expr29005 next (@expr29006 ) , "d =" ) ;
7984: $if $(@expr1073770891 $!@expr1073770892 $assert_ $(@expr1073770893 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7984 $, db@var2104 &&@expr28980 vartok@var121 &&@expr28981 vartok@var121 .@expr28982 variable (@expr28983 ) &&@expr28984 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28987 isPointer (@expr28988 ) &&@expr28989 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) &&@expr28994 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) .@expr28999 name (@expr29000 ) ==@expr29001 "E" $) $) { $return ; }
7985:
7986: vartok@var121 =@expr1073770916 Token ::@expr28811 findsimplematch (@expr1073770918 tokenizer@var2103 .@expr28813 tokens (@expr28814 ) , "return" ) ;
7987:
7988: vartok@var121 =@expr1073770921 Token ::@expr28811 findsimplematch (@expr1073770923 vartok@var121 , "a" ) ;
7989: $if $(@expr1073770924 $!@expr1073770925 $assert_ $(@expr1073770926 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7989 $, db@var2104 &&@expr28980 vartok@var121 &&@expr28981 vartok@var121 .@expr28982 variable (@expr28983 ) &&@expr28984 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28987 isPointer (@expr28988 ) &&@expr28989 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) &&@expr28994 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) .@expr28999 name (@expr29000 ) ==@expr29001 "E" $) $) { $return ; }
7990:
7991: vartok@var121 =@expr1073770949 Token ::@expr28811 findsimplematch (@expr1073770951 vartok@var121 .@expr29005 next (@expr29006 ) , "b" ) ;
7992: $if $(@expr1073770954 $!@expr1073770955 $assert_ $(@expr1073770956 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7992 $, db@var2104 &&@expr28980 vartok@var121 &&@expr28981 vartok@var121 .@expr28982 variable (@expr28983 ) &&@expr28984 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28987 isPointer (@expr28988 ) &&@expr28989 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) &&@expr28994 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) .@expr28999 name (@expr29000 ) ==@expr29001 "E" $) $) { $return ; }
7993:
7994: vartok@var121 =@expr1073770979 Token ::@expr28811 findsimplematch (@expr1073770981 vartok@var121 .@expr29005 next (@expr29006 ) , "c" ) ;
7995: $if $(@expr1073770984 $!@expr1073770985 $assert_ $(@expr1073770986 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7995 $, db@var2104 &&@expr28980 vartok@var121 &&@expr28981 vartok@var121 .@expr28982 variable (@expr28983 ) &&@expr28984 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28987 isPointer (@expr28988 ) &&@expr28989 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) &&@expr28994 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) .@expr28999 name (@expr29000 ) ==@expr29001 "E" $) $) { $return ; }
7996:
7997: vartok@var121 =@expr1073771009 Token ::@expr28811 findsimplematch (@expr1073771011 vartok@var121 .@expr29005 next (@expr29006 ) , "d" ) ;
7998: $if $(@expr1073771014 $!@expr1073771015 $assert_ $(@expr1073771016 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 7998 $, db@var2104 &&@expr28980 vartok@var121 &&@expr28981 vartok@var121 .@expr28982 variable (@expr28983 ) &&@expr28984 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28987 isPointer (@expr28988 ) &&@expr28989 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) &&@expr28994 vartok@var121 .@expr28982 variable (@expr28983 ) .@expr28992 type (@expr28993 ) .@expr28999 name (@expr29000 ) ==@expr29001 "E" $) $) { $return ; }
7999: }
8000:
8001: void auto4 ( ) {
8002: $Tokenizer $tokenizer@var2106 $(@expr1073771041 $&@expr1073771042 $settings1@var123 $, $this@expr1073771043 $) $; $const $SymbolDatabase $* $db@var2107 $; $db@var2107 $=@expr1073771044 $getSymbolDB_inner $(@expr1073771045 $tokenizer@var2106 $, "struct S { int i; };\nint foo() {\n    S array[10];\n    for (auto a : array)\n        a.i = 0;\n    for (auto & b : array)\n        b.i = 1;\n    for (const auto & c : array)\n        auto ci = c.i;\n    for (auto * d : array)\n        d->i = 0;\n    for (const auto * e : array)\n        auto ei = e->i;\n    return array[0].i;\n}" $, $"test.cpp" $) $; $if $(@expr1073771046 $!@expr1073771047 $assert_ $(@expr1073771048 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8002 $, $db@var2107 $) $) { $return $; } $do ${ $} $while $(@expr1073771049 $false $)
8003:
|
8015:
8016: ;
8017: const Token * autotok@var2108 ; autotok@var2108 =@expr1073771050 Token ::@expr29227 findsimplematch (@expr1073771052 tokenizer@var2106 .@expr29229 tokens (@expr29230 ) , "auto a" ) ;
8018: $if $(@expr1073771055 $!@expr1073771056 $assert_ $(@expr1073771057 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8018 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29235 autotok@var2108 .@expr29236 valueType (@expr29237 ) &&@expr29238 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29241 pointer@expr29215 ==@expr29242 0 &&@expr29243 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29246 constness@expr29216 ==@expr29247 0 &&@expr29248 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope &&@expr29252 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType &&@expr29257 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType .@expr29262 name (@expr29263 ) ==@expr29264 "S" $) $) { $return ; }
8019: $if $(@expr1073771089 $!@expr1073771090 $assert_ $(@expr1073771091 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8019 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29269 autotok@var2108 .@expr29270 type (@expr29271 ) &&@expr29272 autotok@var2108 .@expr29270 type (@expr29271 ) .@expr29275 name (@expr29276 ) ==@expr29277 "S" $) $) { $return ; }
8020:
8021: autotok@var2108 =@expr1073771102 Token ::@expr29227 findsimplematch (@expr1073771104 autotok@var2108 .@expr29281 next (@expr29282 ) , "auto & b" ) ;
8022: $if $(@expr1073771107 $!@expr1073771108 $assert_ $(@expr1073771109 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8022 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29235 autotok@var2108 .@expr29236 valueType (@expr29237 ) &&@expr29238 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29241 pointer@expr29215 ==@expr29242 0 &&@expr29243 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29246 constness@expr29216 ==@expr29247 0 &&@expr29248 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope &&@expr29252 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType &&@expr29257 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType .@expr29262 name (@expr29263 ) ==@expr29264 "S" $) $) { $return ; }
8023: $if $(@expr1073771141 $!@expr1073771142 $assert_ $(@expr1073771143 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8023 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29269 autotok@var2108 .@expr29270 type (@expr29271 ) &&@expr29272 autotok@var2108 .@expr29270 type (@expr29271 ) .@expr29275 name (@expr29276 ) ==@expr29277 "S" $) $) { $return ; }
8024:
8025: autotok@var2108 =@expr1073771154 Token ::@expr29227 findsimplematch (@expr1073771156 autotok@var2108 .@expr29281 next (@expr29282 ) , "auto & c" ) ;
8026: $if $(@expr1073771159 $!@expr1073771160 $assert_ $(@expr1073771161 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8026 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29235 autotok@var2108 .@expr29236 valueType (@expr29237 ) &&@expr29238 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29241 pointer@expr29215 ==@expr29242 0 &&@expr29243 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29246 constness@expr29216 ==@expr29247 0 &&@expr29248 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope &&@expr29252 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType &&@expr29257 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType .@expr29262 name (@expr29263 ) ==@expr29264 "S" $) $) { $return ; }
8027: $if $(@expr1073771193 $!@expr1073771194 $assert_ $(@expr1073771195 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8027 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29269 autotok@var2108 .@expr29270 type (@expr29271 ) &&@expr29272 autotok@var2108 .@expr29270 type (@expr29271 ) .@expr29275 name (@expr29276 ) ==@expr29277 "S" $) $) { $return ; }
8028:
8029: autotok@var2108 =@expr1073771206 Token ::@expr29227 findsimplematch (@expr1073771208 autotok@var2108 .@expr29281 next (@expr29282 ) , "auto * d" ) ;
8030: $if $(@expr1073771211 $!@expr1073771212 $assert_ $(@expr1073771213 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8030 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29235 autotok@var2108 .@expr29236 valueType (@expr29237 ) &&@expr29238 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29241 pointer@expr29215 ==@expr29242 0 &&@expr29243 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29246 constness@expr29216 ==@expr29247 0 &&@expr29248 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope &&@expr29252 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType &&@expr29257 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType .@expr29262 name (@expr29263 ) ==@expr29264 "S" $) $) { $return ; }
8031: $if $(@expr1073771245 $!@expr1073771246 $assert_ $(@expr1073771247 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8031 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29269 autotok@var2108 .@expr29270 type (@expr29271 ) &&@expr29272 autotok@var2108 .@expr29270 type (@expr29271 ) .@expr29275 name (@expr29276 ) ==@expr29277 "S" $) $) { $return ; }
8032:
8033: autotok@var2108 =@expr1073771258 Token ::@expr29227 findsimplematch (@expr1073771260 autotok@var2108 .@expr29281 next (@expr29282 ) , "auto * e" ) ;
8034: $if $(@expr1073771263 $!@expr1073771264 $assert_ $(@expr1073771265 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8034 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29235 autotok@var2108 .@expr29236 valueType (@expr29237 ) &&@expr29238 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29241 pointer@expr29215 ==@expr29242 0 &&@expr29243 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29246 constness@expr29216 ==@expr29247 0 &&@expr29248 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope &&@expr29252 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType &&@expr29257 autotok@var2108 .@expr29236 valueType (@expr29237 ) .@expr29251 typeScope .@expr29256 definedType .@expr29262 name (@expr29263 ) ==@expr29264 "S" $) $) { $return ; }
8035: $if $(@expr1073771297 $!@expr1073771298 $assert_ $(@expr1073771299 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8035 $, db@var2107 &&@expr29234 autotok@var2108 &&@expr29269 autotok@var2108 .@expr29270 type (@expr29271 ) &&@expr29272 autotok@var2108 .@expr29270 type (@expr29271 ) .@expr29275 name (@expr29276 ) ==@expr29277 "S" $) $) { $return ; }
8036:
8037: vartok@var121 =@expr1073771310 Token ::@expr29227 findsimplematch (@expr1073771312 tokenizer@var2106 .@expr29229 tokens (@expr29230 ) , "a :" ) ;
8038: $if $(@expr1073771315 $!@expr1073771316 $assert_ $(@expr1073771317 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8038 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29495 vartok@var121 .@expr29496 valueType (@expr29497 ) &&@expr29498 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope &&@expr29502 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType &&@expr29507 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType .@expr29512 name (@expr29513 ) ==@expr29514 "S" $) $) { $return ; }
8039: $if $(@expr1073771339 $!@expr1073771340 $assert_ $(@expr1073771341 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8039 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29522 !@expr29523 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr1073771352 !@expr29529 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) $) $) { $return ; }
8040: $if $(@expr1073771358 $!@expr1073771359 $assert_ $(@expr1073771360 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8040 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr1073771365 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) &&@expr1073771370 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) .@expr29551 name (@expr29552 ) ==@expr29553 "S" $) $) { $return ; }
8041:
8042: vartok@var121 =@expr1073771378 Token ::@expr29227 findsimplematch (@expr1073771380 vartok@var121 .@expr29557 next (@expr29558 ) , "b :" ) ;
8043: $if $(@expr1073771383 $!@expr1073771384 $assert_ $(@expr1073771385 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8043 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29495 vartok@var121 .@expr29496 valueType (@expr29497 ) &&@expr29498 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope &&@expr29502 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType &&@expr29507 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType .@expr29512 name (@expr29513 ) ==@expr29514 "S" $) $) { $return ; }
8044: $if $(@expr1073771407 $!@expr1073771408 $assert_ $(@expr1073771409 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8044 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29590 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr29595 !@expr29529 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr1073771425 !@expr29602 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29605 isConst (@expr29606 ) $) $) { $return ; }
8045:
8046: vartok@var121 =@expr1073771431 Token ::@expr29227 findsimplematch (@expr1073771433 vartok@var121 .@expr29557 next (@expr29558 ) , "c :" ) ;
8047: $if $(@expr1073771436 $!@expr1073771437 $assert_ $(@expr1073771438 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8047 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29495 vartok@var121 .@expr29496 valueType (@expr29497 ) &&@expr29498 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope &&@expr29502 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType &&@expr29507 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType .@expr29512 name (@expr29513 ) ==@expr29514 "S" $) $) { $return ; }
8048: $if $(@expr1073771460 $!@expr1073771461 $assert_ $(@expr1073771462 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8048 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29590 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr29595 !@expr29529 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr1073771478 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29605 isConst (@expr29606 ) $) $) { $return ; }
8049:
8050: vartok@var121 =@expr1073771483 Token ::@expr29227 findsimplematch (@expr1073771485 vartok@var121 .@expr29557 next (@expr29558 ) , "d :" ) ;
8051: $if $(@expr1073771488 $!@expr1073771489 $assert_ $(@expr1073771490 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8051 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29495 vartok@var121 .@expr29496 valueType (@expr29497 ) &&@expr29498 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope &&@expr29502 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType &&@expr29507 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType .@expr29512 name (@expr29513 ) ==@expr29514 "S" $) $) { $return ; }
8052: $if $(@expr1073771512 $!@expr1073771513 $assert_ $(@expr1073771514 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8052 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29522 !@expr29523 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr29701 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr1073771530 !@expr29602 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29605 isConst (@expr29606 ) $) $) { $return ; }
8053:
8054: vartok@var121 =@expr1073771536 Token ::@expr29227 findsimplematch (@expr1073771538 vartok@var121 .@expr29557 next (@expr29558 ) , "e :" ) ;
8055: $if $(@expr1073771541 $!@expr1073771542 $assert_ $(@expr1073771543 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8055 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29495 vartok@var121 .@expr29496 valueType (@expr29497 ) &&@expr29498 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope &&@expr29502 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType &&@expr29507 vartok@var121 .@expr29496 valueType (@expr29497 ) .@expr29501 typeScope .@expr29506 definedType .@expr29512 name (@expr29513 ) ==@expr29514 "S" $) $) { $return ; }
8056: $if $(@expr1073771565 $!@expr1073771566 $assert_ $(@expr1073771567 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8056 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29522 !@expr29523 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr29701 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr1073771583 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29605 isConst (@expr29606 ) $) $) { $return ; }
8057:
8058: vartok@var121 =@expr1073771588 Token ::@expr29227 findsimplematch (@expr1073771590 tokenizer@var2106 .@expr29229 tokens (@expr29230 ) , "a . i" ) ;
8059: $if $(@expr1073771593 $!@expr1073771594 $assert_ $(@expr1073771595 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8059 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29776 !@expr29529 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr1073771606 !@expr29523 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr1073771612 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) &&@expr1073771617 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) .@expr29551 name (@expr29552 ) ==@expr29553 "S" $) $) { $return ; }
8060:
8061: vartok@var121 =@expr1073771625 Token ::@expr29227 findsimplematch (@expr1073771627 vartok@var121 , "i" ) ;
8062: $if $(@expr1073771628 $!@expr1073771629 $assert_ $(@expr1073771630 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8062 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29811 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29814 typeStartToken (@expr29815 ) .@expr29816 str (@expr29817 ) ==@expr29818 "int" $) $) { $return ; }
8063:
8064: vartok@var121 =@expr1073771643 Token ::@expr29227 findsimplematch (@expr1073771645 vartok@var121 .@expr29557 next (@expr29558 ) , "b . i" ) ;
8065: $if $(@expr1073771648 $!@expr1073771649 $assert_ $(@expr1073771650 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8065 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29776 !@expr29529 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr29837 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr29842 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) &&@expr29847 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) .@expr29551 name (@expr29552 ) ==@expr29553 "S" $) $) { $return ; }
8066:
8067: vartok@var121 =@expr1073771679 Token ::@expr29227 findsimplematch (@expr29857 vartok@var121 .@expr29557 next (@expr29558 ) , "i" ) ;
8068: $if $(@expr1073771684 $!@expr1073771685 $assert_ $(@expr1073771686 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8068 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29811 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29814 typeStartToken (@expr29815 ) .@expr29816 str (@expr29817 ) ==@expr29818 "int" $) $) { $return ; }
8069:
8070: vartok@var121 =@expr1073771699 Token ::@expr29227 findsimplematch (@expr1073771701 vartok@var121 .@expr29557 next (@expr29558 ) , "c . i" ) ;
8071: $if $(@expr1073771704 $!@expr1073771705 $assert_ $(@expr1073771706 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8071 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29776 !@expr29529 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr29837 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr29842 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) &&@expr29847 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) .@expr29551 name (@expr29552 ) ==@expr29553 "S" $) $) { $return ; }
8072:
8073: vartok@var121 =@expr1073771735 Token ::@expr29227 findsimplematch (@expr29857 vartok@var121 .@expr29557 next (@expr29558 ) , "i" ) ;
8074: $if $(@expr1073771740 $!@expr1073771741 $assert_ $(@expr1073771742 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8074 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29811 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29814 typeStartToken (@expr29815 ) .@expr29816 str (@expr29817 ) ==@expr29818 "int" $) $) { $return ; }
8075:
8076: vartok@var121 =@expr1073771755 Token ::@expr29227 findsimplematch (@expr1073771757 vartok@var121 .@expr29557 next (@expr29558 ) , "d . i" ) ;
8077: $if $(@expr1073771760 $!@expr1073771761 $assert_ $(@expr1073771762 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8077 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29943 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr29948 !@expr29523 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr29954 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) &&@expr29959 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) .@expr29551 name (@expr29552 ) ==@expr29553 "S" $) $) { $return ; }
8078:
8079: vartok@var121 =@expr1073771791 Token ::@expr29227 findsimplematch (@expr29857 vartok@var121 .@expr29557 next (@expr29558 ) , "i" ) ;
8080: $if $(@expr1073771796 $!@expr1073771797 $assert_ $(@expr1073771798 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8080 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29811 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29814 typeStartToken (@expr29815 ) .@expr29816 str (@expr29817 ) ==@expr29818 "int" $) $) { $return ; }
8081:
8082: vartok@var121 =@expr1073771811 Token ::@expr29227 findsimplematch (@expr1073771813 vartok@var121 .@expr29557 next (@expr29558 ) , "e . i" ) ;
8083: $if $(@expr1073771816 $!@expr1073771817 $assert_ $(@expr1073771818 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8083 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29943 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29532 isPointer (@expr29533 ) &&@expr29948 !@expr29523 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29526 isReference (@expr29527 ) &&@expr29954 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) &&@expr29959 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29544 type (@expr29545 ) .@expr29551 name (@expr29552 ) ==@expr29553 "S" $) $) { $return ; }
8084:
8085: vartok@var121 =@expr1073771847 Token ::@expr29227 findsimplematch (@expr29857 vartok@var121 .@expr29557 next (@expr29558 ) , "i" ) ;
8086: $if $(@expr1073771852 $!@expr1073771853 $assert_ $(@expr1073771854 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8086 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29811 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29814 typeStartToken (@expr29815 ) .@expr29816 str (@expr29817 ) ==@expr29818 "int" $) $) { $return ; }
8087:
8088: vartok@var121 =@expr1073771867 Token ::@expr29227 findsimplematch (@expr29857 vartok@var121 .@expr29557 next (@expr29558 ) , "i" ) ;
8089: $if $(@expr1073771872 $!@expr1073771873 $assert_ $(@expr1073771874 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8089 $, db@var2107 &&@expr29494 vartok@var121 &&@expr29519 vartok@var121 .@expr29520 variable (@expr29521 ) &&@expr29811 vartok@var121 .@expr29520 variable (@expr29521 ) .@expr29814 typeStartToken (@expr29815 ) .@expr29816 str (@expr29817 ) ==@expr29818 "int" $) $) { $return ; }
8090: }
8091:
8092: void auto5 ( ) {
8093: $Tokenizer $tokenizer@var2109 $(@expr1073771889 $&@expr1073771890 $settings1@var123 $, $this@expr1073771891 $) $; $const $SymbolDatabase $* $db@var2110 $; $db@var2110 $=@expr1073771892 $getSymbolDB_inner $(@expr1073771893 $tokenizer@var2109 $, "struct S { int i; };\nint foo() {\n    std::vector<S> vec(10);\n    for (auto a : vec)\n        a.i = 0;\n    for (auto & b : vec)\n        b.i = 0;\n    for (const auto & c : vec)\n        auto ci = c.i;\n    for (auto * d : vec)\n        d.i = 0;\n    for (const auto * e : vec)\n        auto ei = e->i;\n    return vec[0].i;\n}" $, $"test.cpp" $) $; $if $(@expr1073771894 $!@expr1073771895 $assert_ $(@expr1073771896 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8093 $, $db@var2110 $) $) { $return $; } $do ${ $} $while $(@expr1073771897 $false $)
8094:
|
8106:
8107: ;
8108: const Token * autotok@var2111 ; autotok@var2111 =@expr1073771898 Token ::@expr30075 findsimplematch (@expr1073771900 tokenizer@var2109 .@expr30077 tokens (@expr30078 ) , "auto a" ) ;
8109: $if $(@expr1073771903 $!@expr1073771904 $assert_ $(@expr1073771905 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8109 $, autotok@var2111 &&@expr30082 autotok@var2111 .@expr30083 valueType (@expr30084 ) &&@expr30085 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30088 pointer@expr30063 ==@expr30089 0 &&@expr30090 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30093 constness@expr30064 ==@expr30094 0 &&@expr30095 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope &&@expr30099 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType &&@expr30104 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType .@expr30109 name (@expr30110 ) ==@expr30111 "S" $) $) { $return ; }
8110: $if $(@expr1073771936 $!@expr1073771937 $assert_ $(@expr1073771938 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8110 $, autotok@var2111 &&@expr30115 autotok@var2111 .@expr30116 type (@expr30117 ) &&@expr30118 autotok@var2111 .@expr30116 type (@expr30117 ) .@expr30121 name (@expr30122 ) ==@expr30123 "S" $) $) { $return ; }
8111:
8112: autotok@var2111 =@expr1073771948 Token ::@expr30075 findsimplematch (@expr1073771950 autotok@var2111 .@expr30127 next (@expr30128 ) , "auto & b" ) ;
8113: $if $(@expr1073771953 $!@expr1073771954 $assert_ $(@expr1073771955 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8113 $, autotok@var2111 &&@expr30082 autotok@var2111 .@expr30083 valueType (@expr30084 ) &&@expr30085 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30088 pointer@expr30063 ==@expr30089 0 &&@expr30090 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30093 constness@expr30064 ==@expr30094 0 &&@expr30095 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope &&@expr30099 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType &&@expr30104 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType .@expr30109 name (@expr30110 ) ==@expr30111 "S" $) $) { $return ; }
8114: $if $(@expr1073771986 $!@expr1073771987 $assert_ $(@expr1073771988 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8114 $, autotok@var2111 &&@expr30115 autotok@var2111 .@expr30116 type (@expr30117 ) &&@expr30118 autotok@var2111 .@expr30116 type (@expr30117 ) .@expr30121 name (@expr30122 ) ==@expr30123 "S" $) $) { $return ; }
8115:
8116: autotok@var2111 =@expr1073771998 Token ::@expr30075 findsimplematch (@expr1073772000 autotok@var2111 .@expr30127 next (@expr30128 ) , "auto & c" ) ;
8117: $if $(@expr1073772003 $!@expr1073772004 $assert_ $(@expr1073772005 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8117 $, autotok@var2111 &&@expr30082 autotok@var2111 .@expr30083 valueType (@expr30084 ) &&@expr30085 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30088 pointer@expr30063 ==@expr30089 0 &&@expr30090 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30093 constness@expr30064 ==@expr30094 0 &&@expr30095 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope &&@expr30099 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType &&@expr30104 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType .@expr30109 name (@expr30110 ) ==@expr30111 "S" $) $) { $return ; }
8118: $if $(@expr1073772036 $!@expr1073772037 $assert_ $(@expr1073772038 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8118 $, autotok@var2111 &&@expr30115 autotok@var2111 .@expr30116 type (@expr30117 ) &&@expr30118 autotok@var2111 .@expr30116 type (@expr30117 ) .@expr30121 name (@expr30122 ) ==@expr30123 "S" $) $) { $return ; }
8119:
8120: autotok@var2111 =@expr1073772048 Token ::@expr30075 findsimplematch (@expr1073772050 autotok@var2111 .@expr30127 next (@expr30128 ) , "auto * d" ) ;
8121: $if $(@expr1073772053 $!@expr1073772054 $assert_ $(@expr1073772055 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8121 $, autotok@var2111 &&@expr30082 autotok@var2111 .@expr30083 valueType (@expr30084 ) &&@expr30085 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30088 pointer@expr30063 ==@expr30089 0 &&@expr30090 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30093 constness@expr30064 ==@expr30094 0 &&@expr30095 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope &&@expr30099 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType &&@expr30104 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType .@expr30109 name (@expr30110 ) ==@expr30111 "S" $) $) { $return ; }
8122: $if $(@expr1073772086 $!@expr1073772087 $assert_ $(@expr1073772088 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8122 $, autotok@var2111 &&@expr30115 autotok@var2111 .@expr30116 type (@expr30117 ) &&@expr30118 autotok@var2111 .@expr30116 type (@expr30117 ) .@expr30121 name (@expr30122 ) ==@expr30123 "S" $) $) { $return ; }
8123:
8124: autotok@var2111 =@expr1073772098 Token ::@expr30075 findsimplematch (@expr1073772100 autotok@var2111 .@expr30127 next (@expr30128 ) , "auto * e" ) ;
8125: $if $(@expr1073772103 $!@expr1073772104 $assert_ $(@expr1073772105 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8125 $, autotok@var2111 &&@expr30082 autotok@var2111 .@expr30083 valueType (@expr30084 ) &&@expr30085 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30088 pointer@expr30063 ==@expr30089 0 &&@expr30090 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30093 constness@expr30064 ==@expr30094 0 &&@expr30095 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope &&@expr30099 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType &&@expr30104 autotok@var2111 .@expr30083 valueType (@expr30084 ) .@expr30098 typeScope .@expr30103 definedType .@expr30109 name (@expr30110 ) ==@expr30111 "S" $) $) { $return ; }
8126: $if $(@expr1073772136 $!@expr1073772137 $assert_ $(@expr1073772138 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8126 $, autotok@var2111 &&@expr30115 autotok@var2111 .@expr30116 type (@expr30117 ) &&@expr30118 autotok@var2111 .@expr30116 type (@expr30117 ) .@expr30121 name (@expr30122 ) ==@expr30123 "S" $) $) { $return ; }
8127:
8128: vartok@var121 =@expr1073772148 Token ::@expr30075 findsimplematch (@expr1073772150 tokenizer@var2109 .@expr30077 tokens (@expr30078 ) , "a :" ) ;
8129: $if $(@expr1073772153 $!@expr1073772154 $assert_ $(@expr1073772155 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8129 $, vartok@var121 &&@expr30332 vartok@var121 .@expr30333 valueType (@expr30334 ) &&@expr30335 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope &&@expr30339 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType &&@expr30344 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType .@expr30349 name (@expr30350 ) ==@expr30351 "S" $) $) { $return ; }
8130: $if $(@expr1073772176 $!@expr1073772177 $assert_ $(@expr1073772178 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8130 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30358 !@expr30359 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr1073772188 !@expr30365 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) $) $) { $return ; }
8131: $if $(@expr1073772194 $!@expr1073772195 $assert_ $(@expr1073772196 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8131 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr1073772200 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) &&@expr1073772205 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) .@expr30386 name (@expr30387 ) ==@expr30388 "S" $) $) { $return ; }
8132:
8133: vartok@var121 =@expr1073772213 Token ::@expr30075 findsimplematch (@expr1073772215 vartok@var121 .@expr30392 next (@expr30393 ) , "b :" ) ;
8134: $if $(@expr1073772218 $!@expr1073772219 $assert_ $(@expr1073772220 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8134 $, vartok@var121 &&@expr30332 vartok@var121 .@expr30333 valueType (@expr30334 ) &&@expr30335 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope &&@expr30339 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType &&@expr30344 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType .@expr30349 name (@expr30350 ) ==@expr30351 "S" $) $) { $return ; }
8135: $if $(@expr1073772241 $!@expr1073772242 $assert_ $(@expr1073772243 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8135 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30423 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr30428 !@expr30365 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr1073772258 !@expr30435 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30438 isConst (@expr30439 ) $) $) { $return ; }
8136:
8137: vartok@var121 =@expr1073772264 Token ::@expr30075 findsimplematch (@expr1073772266 vartok@var121 .@expr30392 next (@expr30393 ) , "c :" ) ;
8138: $if $(@expr1073772269 $!@expr1073772270 $assert_ $(@expr1073772271 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8138 $, vartok@var121 &&@expr30332 vartok@var121 .@expr30333 valueType (@expr30334 ) &&@expr30335 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope &&@expr30339 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType &&@expr30344 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType .@expr30349 name (@expr30350 ) ==@expr30351 "S" $) $) { $return ; }
8139: $if $(@expr1073772292 $!@expr1073772293 $assert_ $(@expr1073772294 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8139 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30423 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr30428 !@expr30365 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr1073772309 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30438 isConst (@expr30439 ) $) $) { $return ; }
8140:
8141: vartok@var121 =@expr1073772314 Token ::@expr30075 findsimplematch (@expr1073772316 vartok@var121 .@expr30392 next (@expr30393 ) , "d :" ) ;
8142: $if $(@expr1073772319 $!@expr1073772320 $assert_ $(@expr1073772321 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8142 $, vartok@var121 &&@expr30332 vartok@var121 .@expr30333 valueType (@expr30334 ) &&@expr30335 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope &&@expr30339 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType &&@expr30344 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType .@expr30349 name (@expr30350 ) ==@expr30351 "S" $) $) { $return ; }
8143: $if $(@expr1073772342 $!@expr1073772343 $assert_ $(@expr1073772344 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8143 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30358 !@expr30359 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr30530 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr1073772359 !@expr30435 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30438 isConst (@expr30439 ) $) $) { $return ; }
8144:
8145: vartok@var121 =@expr1073772365 Token ::@expr30075 findsimplematch (@expr1073772367 vartok@var121 .@expr30392 next (@expr30393 ) , "e :" ) ;
8146: $if $(@expr1073772370 $!@expr1073772371 $assert_ $(@expr1073772372 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8146 $, vartok@var121 &&@expr30332 vartok@var121 .@expr30333 valueType (@expr30334 ) &&@expr30335 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope &&@expr30339 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType &&@expr30344 vartok@var121 .@expr30333 valueType (@expr30334 ) .@expr30338 typeScope .@expr30343 definedType .@expr30349 name (@expr30350 ) ==@expr30351 "S" $) $) { $return ; }
8147: $if $(@expr1073772393 $!@expr1073772394 $assert_ $(@expr1073772395 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8147 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30358 !@expr30359 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr30530 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr1073772410 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30438 isConst (@expr30439 ) $) $) { $return ; }
8148:
8149:
8150: vartok@var121 =@expr1073772415 Token ::@expr30075 findsimplematch (@expr1073772417 tokenizer@var2109 .@expr30077 tokens (@expr30078 ) , "a . i" ) ;
8151: $if $(@expr1073772420 $!@expr1073772421 $assert_ $(@expr1073772422 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8151 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30602 !@expr30365 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr1073772432 !@expr30359 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr1073772438 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) &&@expr1073772443 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) .@expr30386 name (@expr30387 ) ==@expr30388 "S" $) $) { $return ; }
8152:
8153: vartok@var121 =@expr1073772451 Token ::@expr30075 findsimplematch (@expr1073772453 vartok@var121 , "i" ) ;
8154: $if $(@expr1073772454 $!@expr1073772455 $assert_ $(@expr1073772456 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8154 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30636 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30639 typeStartToken (@expr30640 ) .@expr30641 str (@expr30642 ) ==@expr30643 "int" $) $) { $return ; }
8155:
8156: vartok@var121 =@expr1073772468 Token ::@expr30075 findsimplematch (@expr1073772470 vartok@var121 .@expr30392 next (@expr30393 ) , "b . i" ) ;
8157: $if $(@expr1073772473 $!@expr1073772474 $assert_ $(@expr1073772475 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8157 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30602 !@expr30365 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr30661 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr30666 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) &&@expr30671 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) .@expr30386 name (@expr30387 ) ==@expr30388 "S" $) $) { $return ; }
8158:
8159: vartok@var121 =@expr1073772503 Token ::@expr30075 findsimplematch (@expr30681 vartok@var121 .@expr30392 next (@expr30393 ) , "i" ) ;
8160: $if $(@expr1073772508 $!@expr1073772509 $assert_ $(@expr1073772510 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8160 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30636 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30639 typeStartToken (@expr30640 ) .@expr30641 str (@expr30642 ) ==@expr30643 "int" $) $) { $return ; }
8161:
8162: vartok@var121 =@expr1073772522 Token ::@expr30075 findsimplematch (@expr1073772524 vartok@var121 .@expr30392 next (@expr30393 ) , "c . i" ) ;
8163: $if $(@expr1073772527 $!@expr1073772528 $assert_ $(@expr1073772529 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8163 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30602 !@expr30365 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr30661 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr30666 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) &&@expr30671 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) .@expr30386 name (@expr30387 ) ==@expr30388 "S" $) $) { $return ; }
8164:
8165: vartok@var121 =@expr1073772557 Token ::@expr30075 findsimplematch (@expr30681 vartok@var121 .@expr30392 next (@expr30393 ) , "i" ) ;
8166: $if $(@expr1073772562 $!@expr1073772563 $assert_ $(@expr1073772564 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8166 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30636 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30639 typeStartToken (@expr30640 ) .@expr30641 str (@expr30642 ) ==@expr30643 "int" $) $) { $return ; }
8167:
8168: vartok@var121 =@expr1073772576 Token ::@expr30075 findsimplematch (@expr1073772578 vartok@var121 .@expr30392 next (@expr30393 ) , "d . i" ) ;
8169: $if $(@expr1073772581 $!@expr1073772582 $assert_ $(@expr1073772583 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8169 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30763 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr30768 !@expr30359 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr30774 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) &&@expr30779 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) .@expr30386 name (@expr30387 ) ==@expr30388 "S" $) $) { $return ; }
8170:
8171: vartok@var121 =@expr1073772611 Token ::@expr30075 findsimplematch (@expr30681 vartok@var121 .@expr30392 next (@expr30393 ) , "i" ) ;
8172: $if $(@expr1073772616 $!@expr1073772617 $assert_ $(@expr1073772618 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8172 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30636 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30639 typeStartToken (@expr30640 ) .@expr30641 str (@expr30642 ) ==@expr30643 "int" $) $) { $return ; }
8173:
8174: vartok@var121 =@expr1073772630 Token ::@expr30075 findsimplematch (@expr1073772632 vartok@var121 .@expr30392 next (@expr30393 ) , "e . i" ) ;
8175: $if $(@expr1073772635 $!@expr1073772636 $assert_ $(@expr1073772637 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8175 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30763 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30368 isPointer (@expr30369 ) &&@expr30768 !@expr30359 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30362 isReference (@expr30363 ) &&@expr30774 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) &&@expr30779 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30379 type (@expr30380 ) .@expr30386 name (@expr30387 ) ==@expr30388 "S" $) $) { $return ; }
8176:
8177: vartok@var121 =@expr1073772665 Token ::@expr30075 findsimplematch (@expr30681 vartok@var121 .@expr30392 next (@expr30393 ) , "i" ) ;
8178: $if $(@expr1073772670 $!@expr1073772671 $assert_ $(@expr1073772672 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8178 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30636 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30639 typeStartToken (@expr30640 ) .@expr30641 str (@expr30642 ) ==@expr30643 "int" $) $) { $return ; }
8179:
8180: vartok@var121 =@expr1073772684 Token ::@expr30075 findsimplematch (@expr30681 vartok@var121 .@expr30392 next (@expr30393 ) , "i" ) ;
8181: $if $(@expr1073772689 $!@expr1073772690 $assert_ $(@expr1073772691 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8181 $, vartok@var121 &&@expr30355 vartok@var121 .@expr30356 variable (@expr30357 ) &&@expr30636 vartok@var121 .@expr30356 variable (@expr30357 ) .@expr30639 typeStartToken (@expr30640 ) .@expr30641 str (@expr30642 ) ==@expr30643 "int" $) $) { $return ; }
8182: }
8183:
8184: void auto6 ( ) {
8185: $Tokenizer $tokenizer@var2112 $(@expr1073772703 $&@expr1073772704 $settings1@var123 $, $this@expr1073772705 $) $; $const $SymbolDatabase $* $db@var2113 $; $db@var2113 $=@expr1073772706 $getSymbolDB_inner $(@expr1073772707 $tokenizer@var2112 $, "class WebGLTransformFeedback final\n: public nsWrapperCache\n, public WebGLRefCountedObject < WebGLTransformFeedback >\n, public LinkedListElement < WebGLTransformFeedback >\n{\nprivate :\nstd :: vector < IndexedBufferBinding > mIndexedBindings ;\n} ;\nstruct IndexedBufferBinding\n{\nIndexedBufferBinding ( ) ;\n} ;\nconst decltype ( WebGLTransformFeedback :: mBuffersForTF ) &\nWebGLTransformFeedback :: BuffersForTF ( ) const\n{\nmBuffersForTF . clear ( ) ;\nfor ( const auto & cur : mIndexedBindings ) {}\nreturn mBuffersForTF ;\n}" $, $"test.cpp" $) $; $if $(@expr1073772708 $!@expr1073772709 $assert_ $(@expr1073772710 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8185 $, $db@var2113 $) $) { $return $; } $do ${ $} $while $(@expr1073772711 $false $)
8186:
|
8202:
8203: ;
8204: }
8205:
8206: void auto7 ( ) {
8207: $Tokenizer $tokenizer@var2114 $(@expr1073772722 $&@expr1073772723 $settings1@var123 $, $this@expr1073772724 $) $; $const $SymbolDatabase $* $db@var2115 $; $db@var2115 $=@expr1073772725 $getSymbolDB_inner $(@expr1073772726 $tokenizer@var2114 $, "struct Foo { int a; int b[10]; };\nclass Bar {\n    Foo foo1;\n    Foo foo2[10];\npublic:\n    const Foo & getFoo1() { return foo1; }\n    const Foo * getFoo2() { return foo2; }\n};\nint main() {\n    Bar bar;\n    auto v1 = bar.getFoo1().a;\n    auto v2 = bar.getFoo1().b[0];\n    auto v3 = bar.getFoo1().b;\n    const auto v4 = bar.getFoo1().b;\n    const auto * v5 = bar.getFoo1().b;\n    auto v6 = bar.getFoo2()[0].a;\n    auto v7 = bar.getFoo2()[0].b[0];\n    auto v8 = bar.getFoo2()[0].b;\n    const auto v9 = bar.getFoo2()[0].b;\n    const auto * v10 = bar.getFoo2()[0].b;\n    auto v11 = v1 + v2 + v3[0] + v4[0] + v5[0] + v6 + v7 + v8[0] + v9[0] + v10[0];\n    return v11;\n}" $, $"test.cpp" $) $; $if $(@expr1073772727 $!@expr1073772728 $assert_ $(@expr1073772729 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8207 $, $db@var2115 $) $) { $return $; } $do ${ $} $while $(@expr1073772730 $false $)
8208:
|
8228:
8229: ;
8230: const Token * autotok@var2116 ; autotok@var2116 =@expr1073772731 Token ::@expr30908 findsimplematch (@expr1073772733 tokenizer@var2114 .@expr1073772734 tokens (@expr1073772735 ) , "auto v1" ) ;
8231:
8232:
8233: $if $(@expr1073772736 $!@expr1073772737 $assert_ $(@expr1073772738 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8233 $, autotok@var2116 $) $) { $return ; }
8234: $if $(@expr1073772739 $!@expr1073772740 $assert_ $(@expr1073772741 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8234 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8235: $if $(@expr1073772744 $!@expr1073772745 $assertEquals $(@expr1073772746 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8235 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) $) { $return ; }
8236: $if $(@expr1073772750 $!@expr1073772751 $assertEquals $(@expr1073772752 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8236 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8237: $if $(@expr1073772756 $!@expr1073772757 $assertEquals $(@expr1073772758 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8237 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8238: $if $(@expr1073772763 $!@expr1073772764 $assertEquals $(@expr1073772765 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8238 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8239: vartok@var121 =@expr1073772770 Token ::@expr30908 findsimplematch (@expr1073772772 autotok@var2116 , "v1 =" ) ;
8240: $if $(@expr1073772773 $!@expr1073772774 $assert_ $(@expr1073772775 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8240 $, autotok@var2116 $) $) { $return ; }
8241: $if $(@expr1073772776 $!@expr1073772777 $assert_ $(@expr1073772778 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8241 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8242: $if $(@expr1073772781 $!@expr1073772782 $assertEquals $(@expr1073772783 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8242 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8243: $if $(@expr1073772787 $!@expr1073772788 $assertEquals $(@expr1073772789 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8243 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8244: $if $(@expr1073772793 $!@expr1073772794 $assertEquals $(@expr1073772795 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8244 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8245: $if $(@expr1073772800 $!@expr1073772801 $assertEquals $(@expr1073772802 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8245 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8246:
8247:
8248: autotok@var2116 =@expr1073772807 Token ::@expr30908 findsimplematch (@expr1073772809 autotok@var2116 , "auto v2" ) ;
8249: $if $(@expr1073772810 $!@expr1073772811 $assert_ $(@expr1073772812 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8249 $, autotok@var2116 $) $) { $return ; }
8250: $if $(@expr1073772813 $!@expr1073772814 $assert_ $(@expr1073772815 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8250 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8251: $if $(@expr1073772818 $!@expr1073772819 $assertEquals $(@expr1073772820 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8251 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) $) { $return ; }
8252: $if $(@expr1073772824 $!@expr1073772825 $assertEquals $(@expr1073772826 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8252 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8253: $if $(@expr1073772830 $!@expr1073772831 $assertEquals $(@expr1073772832 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8253 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8254: $if $(@expr1073772837 $!@expr1073772838 $assertEquals $(@expr1073772839 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8254 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8255: vartok@var121 =@expr1073772844 Token ::@expr30908 findsimplematch (@expr1073772846 autotok@var2116 , "v2 =" ) ;
8256: $if $(@expr1073772847 $!@expr1073772848 $assert_ $(@expr1073772849 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8256 $, autotok@var2116 $) $) { $return ; }
8257: $if $(@expr1073772850 $!@expr1073772851 $assert_ $(@expr1073772852 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8257 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8258: $if $(@expr1073772855 $!@expr1073772856 $assertEquals $(@expr1073772857 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8258 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8259: $if $(@expr1073772861 $!@expr1073772862 $assertEquals $(@expr1073772863 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8259 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8260: $if $(@expr1073772867 $!@expr1073772868 $assertEquals $(@expr1073772869 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8260 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8261: $if $(@expr1073772874 $!@expr1073772875 $assertEquals $(@expr1073772876 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8261 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8262:
8263:
8264: autotok@var2116 =@expr1073772881 Token ::@expr30908 findsimplematch (@expr1073772883 autotok@var2116 , "auto v3" ) ;
8265: $if $(@expr1073772884 $!@expr1073772885 $assert_ $(@expr1073772886 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8265 $, autotok@var2116 $) $) { $return ; }
8266: $if $(@expr1073772887 $!@expr1073772888 $assert_ $(@expr1073772889 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8266 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8267: $if $(@expr1073772892 $!@expr1073772893 $assertEquals $(@expr1073772894 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8267 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) $) { $return ; }
8268: $if $(@expr1073772898 $!@expr1073772899 $assertEquals $(@expr1073772900 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8268 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8269: $if $(@expr1073772904 $!@expr1073772905 $assertEquals $(@expr1073772906 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8269 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8270: $if $(@expr1073772911 $!@expr1073772912 $assertEquals $(@expr1073772913 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8270 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8271: vartok@var121 =@expr1073772918 Token ::@expr30908 findsimplematch (@expr1073772920 autotok@var2116 , "v3 =" ) ;
8272: $if $(@expr1073772921 $!@expr1073772922 $assert_ $(@expr1073772923 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8272 $, autotok@var2116 $) $) { $return ; }
8273: $if $(@expr1073772924 $!@expr1073772925 $assert_ $(@expr1073772926 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8273 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8274: $if $(@expr1073772929 $!@expr1073772930 $assertEquals $(@expr1073772931 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8274 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8275: $if $(@expr1073772935 $!@expr1073772936 $assertEquals $(@expr1073772937 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8275 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8276: $if $(@expr1073772941 $!@expr1073772942 $assertEquals $(@expr1073772943 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8276 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8277: $if $(@expr1073772948 $!@expr1073772949 $assertEquals $(@expr1073772950 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8277 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8278:
8279:
8280: autotok@var2116 =@expr1073772955 Token ::@expr30908 findsimplematch (@expr1073772957 autotok@var2116 , "auto v4" ) ;
8281: $if $(@expr1073772958 $!@expr1073772959 $assert_ $(@expr1073772960 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8281 $, autotok@var2116 $) $) { $return ; }
8282: $if $(@expr1073772961 $!@expr1073772962 $assert_ $(@expr1073772963 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8282 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8283: $todoAssertEquals $(@expr1073772966 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8283 $, 0 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) ;
8284: $if $(@expr1073772970 $!@expr1073772971 $assertEquals $(@expr1073772972 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8284 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8285: $if $(@expr1073772976 $!@expr1073772977 $assertEquals $(@expr1073772978 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8285 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8286: $if $(@expr1073772983 $!@expr1073772984 $assertEquals $(@expr1073772985 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8286 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8287: vartok@var121 =@expr1073772990 Token ::@expr30908 findsimplematch (@expr1073772992 autotok@var2116 , "v4 =" ) ;
8288: $if $(@expr1073772993 $!@expr1073772994 $assert_ $(@expr1073772995 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8288 $, autotok@var2116 $) $) { $return ; }
8289: $if $(@expr1073772996 $!@expr1073772997 $assert_ $(@expr1073772998 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8289 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8290: $if $(@expr1073773001 $!@expr1073773002 $assertEquals $(@expr1073773003 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8290 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8291: $if $(@expr1073773007 $!@expr1073773008 $assertEquals $(@expr1073773009 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8291 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8292: $if $(@expr1073773013 $!@expr1073773014 $assertEquals $(@expr1073773015 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8292 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8293: $if $(@expr1073773020 $!@expr1073773021 $assertEquals $(@expr1073773022 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8293 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8294:
8295:
8296: autotok@var2116 =@expr1073773027 Token ::@expr30908 findsimplematch (@expr1073773029 autotok@var2116 , "auto * v5" ) ;
8297: $if $(@expr1073773030 $!@expr1073773031 $assert_ $(@expr1073773032 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8297 $, autotok@var2116 $) $) { $return ; }
8298: $if $(@expr1073773033 $!@expr1073773034 $assert_ $(@expr1073773035 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8298 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8299: $todoAssertEquals $(@expr1073773038 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8299 $, 0 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) ;
8300: $if $(@expr1073773042 $!@expr1073773043 $assertEquals $(@expr1073773044 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8300 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8301: $if $(@expr1073773048 $!@expr1073773049 $assertEquals $(@expr1073773050 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8301 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8302: $if $(@expr1073773055 $!@expr1073773056 $assertEquals $(@expr1073773057 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8302 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8303: vartok@var121 =@expr1073773062 Token ::@expr30908 findsimplematch (@expr1073773064 autotok@var2116 , "v5 =" ) ;
8304: $if $(@expr1073773065 $!@expr1073773066 $assert_ $(@expr1073773067 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8304 $, autotok@var2116 $) $) { $return ; }
8305: $if $(@expr1073773068 $!@expr1073773069 $assert_ $(@expr1073773070 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8305 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8306: $if $(@expr1073773073 $!@expr1073773074 $assertEquals $(@expr1073773075 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8306 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8307: $if $(@expr1073773079 $!@expr1073773080 $assertEquals $(@expr1073773081 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8307 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8308: $if $(@expr1073773085 $!@expr1073773086 $assertEquals $(@expr1073773087 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8308 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8309: $if $(@expr1073773092 $!@expr1073773093 $assertEquals $(@expr1073773094 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8309 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8310:
8311:
8312: autotok@var2116 =@expr1073773099 Token ::@expr30908 findsimplematch (@expr1073773101 autotok@var2116 , "auto v6" ) ;
8313: $if $(@expr1073773102 $!@expr1073773103 $assert_ $(@expr1073773104 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8313 $, autotok@var2116 $) $) { $return ; }
8314: $if $(@expr1073773105 $!@expr1073773106 $assert_ $(@expr1073773107 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8314 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8315: $if $(@expr1073773110 $!@expr1073773111 $assertEquals $(@expr1073773112 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8315 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) $) { $return ; }
8316: $if $(@expr1073773116 $!@expr1073773117 $assertEquals $(@expr1073773118 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8316 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8317: $if $(@expr1073773122 $!@expr1073773123 $assertEquals $(@expr1073773124 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8317 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8318: $if $(@expr1073773129 $!@expr1073773130 $assertEquals $(@expr1073773131 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8318 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8319: vartok@var121 =@expr1073773136 Token ::@expr30908 findsimplematch (@expr1073773138 autotok@var2116 , "v6 =" ) ;
8320: $if $(@expr1073773139 $!@expr1073773140 $assert_ $(@expr1073773141 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8320 $, autotok@var2116 $) $) { $return ; }
8321: $if $(@expr1073773142 $!@expr1073773143 $assert_ $(@expr1073773144 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8321 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8322: $if $(@expr1073773147 $!@expr1073773148 $assertEquals $(@expr1073773149 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8322 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8323: $if $(@expr1073773153 $!@expr1073773154 $assertEquals $(@expr1073773155 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8323 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8324: $if $(@expr1073773159 $!@expr1073773160 $assertEquals $(@expr1073773161 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8324 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8325: $if $(@expr1073773166 $!@expr1073773167 $assertEquals $(@expr1073773168 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8325 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8326:
8327:
8328: autotok@var2116 =@expr1073773173 Token ::@expr30908 findsimplematch (@expr1073773175 autotok@var2116 , "auto v7" ) ;
8329: $if $(@expr1073773176 $!@expr1073773177 $assert_ $(@expr1073773178 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8329 $, autotok@var2116 $) $) { $return ; }
8330: $if $(@expr1073773179 $!@expr1073773180 $assert_ $(@expr1073773181 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8330 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8331: $if $(@expr1073773184 $!@expr1073773185 $assertEquals $(@expr1073773186 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8331 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) $) { $return ; }
8332: $if $(@expr1073773190 $!@expr1073773191 $assertEquals $(@expr1073773192 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8332 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8333: $if $(@expr1073773196 $!@expr1073773197 $assertEquals $(@expr1073773198 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8333 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8334: $if $(@expr1073773203 $!@expr1073773204 $assertEquals $(@expr1073773205 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8334 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8335: vartok@var121 =@expr1073773210 Token ::@expr30908 findsimplematch (@expr1073773212 autotok@var2116 , "v7 =" ) ;
8336: $if $(@expr1073773213 $!@expr1073773214 $assert_ $(@expr1073773215 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8336 $, autotok@var2116 $) $) { $return ; }
8337: $if $(@expr1073773216 $!@expr1073773217 $assert_ $(@expr1073773218 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8337 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8338: $if $(@expr1073773221 $!@expr1073773222 $assertEquals $(@expr1073773223 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8338 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8339: $if $(@expr1073773227 $!@expr1073773228 $assertEquals $(@expr1073773229 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8339 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8340: $if $(@expr1073773233 $!@expr1073773234 $assertEquals $(@expr1073773235 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8340 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8341: $if $(@expr1073773240 $!@expr1073773241 $assertEquals $(@expr1073773242 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8341 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8342:
8343:
8344: autotok@var2116 =@expr1073773247 Token ::@expr30908 findsimplematch (@expr1073773249 autotok@var2116 , "auto v8" ) ;
8345: $if $(@expr1073773250 $!@expr1073773251 $assert_ $(@expr1073773252 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8345 $, autotok@var2116 $) $) { $return ; }
8346: $if $(@expr1073773253 $!@expr1073773254 $assert_ $(@expr1073773255 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8346 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8347: $if $(@expr1073773258 $!@expr1073773259 $assertEquals $(@expr1073773260 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8347 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) $) { $return ; }
8348: $if $(@expr1073773264 $!@expr1073773265 $assertEquals $(@expr1073773266 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8348 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8349: $if $(@expr1073773270 $!@expr1073773271 $assertEquals $(@expr1073773272 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8349 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8350: $if $(@expr1073773277 $!@expr1073773278 $assertEquals $(@expr1073773279 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8350 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8351: vartok@var121 =@expr1073773284 Token ::@expr30908 findsimplematch (@expr1073773286 autotok@var2116 , "v8 =" ) ;
8352: $if $(@expr1073773287 $!@expr1073773288 $assert_ $(@expr1073773289 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8352 $, autotok@var2116 $) $) { $return ; }
8353: $if $(@expr1073773290 $!@expr1073773291 $assert_ $(@expr1073773292 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8353 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8354: $if $(@expr1073773295 $!@expr1073773296 $assertEquals $(@expr1073773297 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8354 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8355: $if $(@expr1073773301 $!@expr1073773302 $assertEquals $(@expr1073773303 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8355 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8356: $if $(@expr1073773307 $!@expr1073773308 $assertEquals $(@expr1073773309 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8356 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8357: $if $(@expr1073773314 $!@expr1073773315 $assertEquals $(@expr1073773316 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8357 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8358:
8359:
8360: autotok@var2116 =@expr1073773321 Token ::@expr30908 findsimplematch (@expr1073773323 autotok@var2116 , "auto v9" ) ;
8361: $if $(@expr1073773324 $!@expr1073773325 $assert_ $(@expr1073773326 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8361 $, autotok@var2116 $) $) { $return ; }
8362: $if $(@expr1073773327 $!@expr1073773328 $assert_ $(@expr1073773329 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8362 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8363: $todoAssertEquals $(@expr1073773332 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8363 $, 0 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) ;
8364: $if $(@expr1073773336 $!@expr1073773337 $assertEquals $(@expr1073773338 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8364 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8365: $if $(@expr1073773342 $!@expr1073773343 $assertEquals $(@expr1073773344 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8365 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8366: $if $(@expr1073773349 $!@expr1073773350 $assertEquals $(@expr1073773351 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8366 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8367: vartok@var121 =@expr1073773356 Token ::@expr30908 findsimplematch (@expr1073773358 autotok@var2116 , "v9 =" ) ;
8368: $if $(@expr1073773359 $!@expr1073773360 $assert_ $(@expr1073773361 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8368 $, autotok@var2116 $) $) { $return ; }
8369: $if $(@expr1073773362 $!@expr1073773363 $assert_ $(@expr1073773364 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8369 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8370: $if $(@expr1073773367 $!@expr1073773368 $assertEquals $(@expr1073773369 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8370 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8371: $if $(@expr1073773373 $!@expr1073773374 $assertEquals $(@expr1073773375 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8371 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8372: $if $(@expr1073773379 $!@expr1073773380 $assertEquals $(@expr1073773381 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8372 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8373: $if $(@expr1073773386 $!@expr1073773387 $assertEquals $(@expr1073773388 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8373 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8374:
8375:
8376: autotok@var2116 =@expr1073773393 Token ::@expr30908 findsimplematch (@expr1073773395 autotok@var2116 , "auto * v10" ) ;
8377: $if $(@expr1073773396 $!@expr1073773397 $assert_ $(@expr1073773398 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8377 $, autotok@var2116 $) $) { $return ; }
8378: $if $(@expr1073773399 $!@expr1073773400 $assert_ $(@expr1073773401 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8378 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8379: $todoAssertEquals $(@expr1073773404 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8379 $, 0 $, 1 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) ;
8380: $if $(@expr1073773408 $!@expr1073773409 $assertEquals $(@expr1073773410 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8380 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8381: $if $(@expr1073773414 $!@expr1073773415 $assertEquals $(@expr1073773416 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8381 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8382: $if $(@expr1073773421 $!@expr1073773422 $assertEquals $(@expr1073773423 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8382 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8383: vartok@var121 =@expr1073773428 Token ::@expr30908 findsimplematch (@expr1073773430 autotok@var2116 , "v10 =" ) ;
8384: $if $(@expr1073773431 $!@expr1073773432 $assert_ $(@expr1073773433 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8384 $, autotok@var2116 $) $) { $return ; }
8385: $if $(@expr1073773434 $!@expr1073773435 $assert_ $(@expr1073773436 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8385 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8386: $if $(@expr1073773439 $!@expr1073773440 $assertEquals $(@expr1073773441 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8386 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8387: $if $(@expr1073773445 $!@expr1073773446 $assertEquals $(@expr1073773447 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8387 $, 1 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8388: $if $(@expr1073773451 $!@expr1073773452 $assertEquals $(@expr1073773453 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8388 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8389: $if $(@expr1073773458 $!@expr1073773459 $assertEquals $(@expr1073773460 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8389 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8390:
8391:
8392: autotok@var2116 =@expr1073773465 Token ::@expr30908 findsimplematch (@expr1073773467 autotok@var2116 , "auto v11" ) ;
8393: $if $(@expr1073773468 $!@expr1073773469 $assert_ $(@expr1073773470 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8393 $, autotok@var2116 $) $) { $return ; }
8394: $if $(@expr1073773471 $!@expr1073773472 $assert_ $(@expr1073773473 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8394 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8395: $if $(@expr1073773476 $!@expr1073773477 $assertEquals $(@expr1073773478 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8395 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30925 constness@expr30888 $) $) { $return ; }
8396: $if $(@expr1073773482 $!@expr1073773483 $assertEquals $(@expr1073773484 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8396 $, 0 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30931 pointer@expr30889 $) $) { $return ; }
8397: $if $(@expr1073773488 $!@expr1073773489 $assertEquals $(@expr1073773490 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8397 $, ValueType ::@expr30935 SIGNED@expr30890 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30938 sign@expr30891 $) $) { $return ; }
8398: $if $(@expr1073773495 $!@expr1073773496 $assertEquals $(@expr1073773497 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8398 $, ValueType ::@expr30942 INT@expr30892 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) .@expr30945 type@expr30893 $) $) { $return ; }
8399:
8400: vartok@var121 =@expr1073773502 autotok@var2116 .@expr1073773503 next (@expr1073773504 ) ;
8401: $if $(@expr1073773505 $!@expr1073773506 $assert_ $(@expr1073773507 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8401 $, autotok@var2116 $) $) { $return ; }
8402: $if $(@expr1073773508 $!@expr1073773509 $assert_ $(@expr1073773510 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8402 $, autotok@var2116 .@expr30918 valueType (@expr30919 ) $) $) { $return ; }
8403: $if $(@expr1073773513 $!@expr1073773514 $assertEquals $(@expr1073773515 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8403 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30962 constness@expr30894 $) $) { $return ; }
8404: $if $(@expr1073773519 $!@expr1073773520 $assertEquals $(@expr1073773521 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8404 $, 0 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30968 pointer@expr30895 $) $) { $return ; }
8405: $if $(@expr1073773525 $!@expr1073773526 $assertEquals $(@expr1073773527 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8405 $, ValueType ::@expr30935 SIGNED@expr30890 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30975 sign@expr30896 $) $) { $return ; }
8406: $if $(@expr1073773532 $!@expr1073773533 $assertEquals $(@expr1073773534 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8406 $, ValueType ::@expr30942 INT@expr30892 $, vartok@var121 .@expr30960 valueType (@expr30961 ) .@expr30982 type@expr30897 $) $) { $return ; }
8407: }
8408:
8409: void auto8 ( ) {
8410: $Tokenizer $tokenizer@var2117 $(@expr1073773549 $&@expr1073773550 $settings1@var123 $, $this@expr1073773551 $) $; $const $SymbolDatabase $* $db@var2118 $; $db@var2118 $=@expr1073773552 $getSymbolDB_inner $(@expr1073773553 $tokenizer@var2117 $, "std::vector<int> vec;\nvoid foo() {\n    for (auto it = vec.begin(); it != vec.end(); ++it) { }\n}" $, $"test.cpp" $) $; $if $(@expr1073773554 $!@expr1073773555 $assert_ $(@expr1073773556 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8410 $, $db@var2118 $) $) { $return $; } $do ${ $} $while $(@expr1073773557 $false $)
8411:
8412:
8413: ;
8414: const Token * autotok@var2119 ; autotok@var2119 =@expr1073773558 Token ::@expr31735 findsimplematch (@expr1073773560 tokenizer@var2117 .@expr1073773561 tokens (@expr1073773562 ) , "auto it" ) ;
8415:
8416: $if $(@expr1073773563 $!@expr1073773564 $assert_ $(@expr1073773565 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8416 $, autotok@var2119 $) $) { $return ; }
8417: $if $(@expr1073773566 $!@expr1073773567 $assert_ $(@expr1073773568 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8417 $, autotok@var2119 .@expr31745 valueType (@expr31746 ) $) $) { $return ; }
8418: $if $(@expr1073773571 $!@expr1073773572 $assertEquals $(@expr1073773573 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8418 $, 0 $, autotok@var2119 .@expr31745 valueType (@expr31746 ) .@expr1073773576 constness@expr1073773539 $) $) { $return ; }
8419: $if $(@expr1073773577 $!@expr1073773578 $assertEquals $(@expr1073773579 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8419 $, 0 $, autotok@var2119 .@expr31745 valueType (@expr31746 ) .@expr1073773582 pointer@expr1073773540 $) $) { $return ; }
8420: $if $(@expr1073773583 $!@expr1073773584 $assertEquals $(@expr1073773585 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8420 $, ValueType ::@expr31762 UNKNOWN_SIGN@expr31717 $, autotok@var2119 .@expr31745 valueType (@expr31746 ) .@expr1073773589 sign@expr1073773542 $) $) { $return ; }
8421: $if $(@expr1073773590 $!@expr1073773591 $assertEquals $(@expr1073773592 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8421 $, ValueType ::@expr31769 ITERATOR@expr31719 $, autotok@var2119 .@expr31745 valueType (@expr31746 ) .@expr1073773596 type@expr1073773544 $) $) { $return ; }
8422:
8423: vartok@var121 =@expr1073773597 Token ::@expr31735 findsimplematch (@expr1073773599 autotok@var2119 , "it =" ) ;
8424: $if $(@expr1073773600 $!@expr1073773601 $assert_ $(@expr1073773602 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8424 $, vartok@var121 $) $) { $return ; }
8425: $if $(@expr1073773603 $!@expr1073773604 $assert_ $(@expr1073773605 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8425 $, vartok@var121 .@expr31782 valueType (@expr31783 ) $) $) { $return ; }
8426: $if $(@expr1073773608 $!@expr1073773609 $assertEquals $(@expr1073773610 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8426 $, 0 $, vartok@var121 .@expr31782 valueType (@expr31783 ) .@expr1073773613 constness@expr1073773545 $) $) { $return ; }
8427: $if $(@expr1073773614 $!@expr1073773615 $assertEquals $(@expr1073773616 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8427 $, 0 $, vartok@var121 .@expr31782 valueType (@expr31783 ) .@expr1073773619 pointer@expr1073773546 $) $) { $return ; }
8428: $if $(@expr1073773620 $!@expr1073773621 $assertEquals $(@expr1073773622 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8428 $, ValueType ::@expr31762 UNKNOWN_SIGN@expr31717 $, vartok@var121 .@expr31782 valueType (@expr31783 ) .@expr1073773626 sign@expr1073773547 $) $) { $return ; }
8429: $if $(@expr1073773627 $!@expr1073773628 $assertEquals $(@expr1073773629 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8429 $, ValueType ::@expr31769 ITERATOR@expr31719 $, vartok@var121 .@expr31782 valueType (@expr31783 ) .@expr1073773633 type@expr1073773548 $) $) { $return ; }
8430: }
8431:
8432: void auto9 ( ) {
8433: $Tokenizer $tokenizer@var2120 $(@expr1073773634 $&@expr1073773635 $settings1@var123 $, $this@expr1073773636 $) $; $const $SymbolDatabase $* $db@var2121 $; $db@var2121 $=@expr1073773637 $getSymbolDB_inner $(@expr1073773638 $tokenizer@var2120 $, "class DHTTokenTracker {\n  static const size_t SECRET_SIZE = 4;\n  unsigned char secret_[2][SECRET_SIZE];\n  void validateToken();\n};\ntemplate <typename T> struct DerefEqual<T> derefEqual(const T& t) {\n  return DerefEqual<T>(t);\n}\ntemplate <typename T>\nstruct RefLess {\n  bool operator()(const std::shared_ptr<T>& lhs,\n                  const std::shared_ptr<T>& rhs)\n  {\n    return lhs.get() < rhs.get();\n  }\n};\nvoid DHTTokenTracker::validateToken()\n{\n  for (auto& elem : secret_) {\n  }\n}" $, $"test.cpp" $) $; $if $(@expr1073773639 $!@expr1073773640 $assert_ $(@expr1073773641 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8433 $, $db@var2121 $) $) { $return $; } $do ${ $} $while $(@expr1073773642 $false $)
8434:
|
8452:
8453: ;
8454: }
8455:
8456: void auto10 ( ) {
8457: $Tokenizer $tokenizer@var2122 $(@expr1073773649 $&@expr1073773650 $settings1@var123 $, $this@expr1073773651 $) $; $const $SymbolDatabase $* $db@var2123 $; $db@var2123 $=@expr1073773652 $getSymbolDB_inner $(@expr1073773653 $tokenizer@var2122 $, "void f() {\n    std::vector<int> ints(4);\n    auto iter = ints.begin() + (ints.size() - 1);\n}" $, $"test.cpp" $) $; $if $(@expr1073773654 $!@expr1073773655 $assert_ $(@expr1073773656 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8457 $, $db@var2123 $) $) { $return $; } $do ${ $} $while $(@expr1073773657 $false $)
8458:
8459:
8460: ;
8461: const Token * autotok@var2124 ; autotok@var2124 =@expr1073773658 Token ::@expr1073773659 findsimplematch (@expr1073773660 tokenizer@var2122 .@expr1073773661 tokens (@expr1073773662 ) , "auto iter" ) ;
8462:
8463: $if $(@expr1073773663 $!@expr1073773664 $assert_ $(@expr1073773665 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8463 $, autotok@var2124 $) $) { $return ; }
8464: $if $(@expr1073773666 $!@expr1073773667 $assert_ $(@expr1073773668 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8464 $, autotok@var2124 .@expr31845 valueType (@expr31846 ) $) $) { $return ; }
8465: $if $(@expr1073773671 $!@expr1073773672 $assertEquals $(@expr1073773673 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8465 $, 0 $, autotok@var2124 .@expr31845 valueType (@expr31846 ) .@expr1073773676 constness@expr1073773643 $) $) { $return ; }
8466: $if $(@expr1073773677 $!@expr1073773678 $assertEquals $(@expr1073773679 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8466 $, 0 $, autotok@var2124 .@expr31845 valueType (@expr31846 ) .@expr1073773682 pointer@expr1073773644 $) $) { $return ; }
8467: $if $(@expr1073773683 $!@expr1073773684 $assertEquals $(@expr1073773685 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8467 $, ValueType ::@expr1073773686 UNKNOWN_SIGN@expr1073773645 $, autotok@var2124 .@expr31845 valueType (@expr31846 ) .@expr1073773689 sign@expr1073773646 $) $) { $return ; }
8468: $if $(@expr1073773690 $!@expr1073773691 $assertEquals $(@expr1073773692 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8468 $, ValueType ::@expr1073773693 ITERATOR@expr1073773647 $, autotok@var2124 .@expr31845 valueType (@expr31846 ) .@expr1073773696 type@expr1073773648 $) $) { $return ; }
8469: }
8470:
8471: void auto11 ( ) {
8472: $Tokenizer $tokenizer@var2125 $(@expr1073773697 $&@expr1073773698 $settings1@var123 $, $this@expr1073773699 $) $; $const $SymbolDatabase $* $db@var2126 $; $db@var2126 $=@expr1073773700 $getSymbolDB_inner $(@expr1073773701 $tokenizer@var2125 $, "void f() {\n  const auto v1 = 3;\n  const auto *v2 = 0;\n}" $, $"test.cpp" $) $; $if $(@expr1073773702 $!@expr1073773703 $assert_ $(@expr1073773704 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8472 $, $db@var2126 $) $) { $return $; } $do ${ $} $while $(@expr1073773705 $false $)
8473:
8474:
8475: ;
8476:
8477: const Token * v1tok@var2127 ; v1tok@var2127 =@expr1073773706 Token ::@expr31883 findsimplematch (@expr1073773708 tokenizer@var2125 .@expr31885 tokens (@expr31886 ) , "v1" ) ;
8478: $if $(@expr1073773711 $!@expr1073773712 $assert_ $(@expr1073773713 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8478 $, v1tok@var2127 &&@expr1073773714 v1tok@var2127 .@expr31891 variable (@expr31892 ) &&@expr1073773717 v1tok@var2127 .@expr31891 variable (@expr31892 ) .@expr1073773720 isConst (@expr1073773721 ) $) $) { $return ; }
8479:
8480: const Token * v2tok@var2128 ; v2tok@var2128 =@expr1073773722 Token ::@expr31883 findsimplematch (@expr1073773724 tokenizer@var2125 .@expr31885 tokens (@expr31886 ) , "v2" ) ;
8481: $if $(@expr1073773727 $!@expr1073773728 $assert_ $(@expr1073773729 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8481 $, v2tok@var2128 &&@expr1073773730 v2tok@var2128 .@expr31907 variable (@expr31908 ) &&@expr1073773733 !@expr1073773734 v2tok@var2128 .@expr31907 variable (@expr31908 ) .@expr1073773737 isConst (@expr1073773738 ) $) $) { $return ; }
8482: }
8483:
8484: void auto12 ( ) {
8485: $Tokenizer $tokenizer@var2129 $(@expr1073773740 $&@expr1073773741 $settings1@var123 $, $this@expr1073773742 $) $; $const $SymbolDatabase $* $db@var2130 $; $db@var2130 $=@expr1073773743 $getSymbolDB_inner $(@expr1073773744 $tokenizer@var2129 $, "void f(const std::string &x) {\n  auto y = x;\n  if (y.empty()) {}\n}" $, $"test.cpp" $) $; $if $(@expr1073773745 $!@expr1073773746 $assert_ $(@expr1073773747 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8485 $, $db@var2130 $) $) { $return $; } $do ${ $} $while $(@expr1073773748 $false $)
8486:
8487:
8488: ;
8489:
8490: const Token * tok@var2131 ;
8491:
8492: tok@var2131 =@expr1073773749 Token ::@expr31926 findsimplematch (@expr1073773751 tokenizer@var2129 .@expr31928 tokens (@expr31929 ) , "y =" ) ;
8493: $if $(@expr1073773754 $!@expr1073773755 $assert_ $(@expr1073773756 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8493 $, tok@var2131 &&@expr31933 tok@var2131 .@expr31934 valueType (@expr31935 ) &&@expr31936 tok@var2131 .@expr31934 valueType (@expr31935 ) .@expr31939 container@expr31915 $) $) { $return ; }
8494:
8495: tok@var2131 =@expr1073773764 Token ::@expr31926 findsimplematch (@expr1073773766 tokenizer@var2129 .@expr31928 tokens (@expr31929 ) , "y ." ) ;
8496: $if $(@expr1073773769 $!@expr1073773770 $assert_ $(@expr1073773771 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8496 $, tok@var2131 &&@expr31933 tok@var2131 .@expr31934 valueType (@expr31935 ) &&@expr31936 tok@var2131 .@expr31934 valueType (@expr31935 ) .@expr31939 container@expr31915 $) $) { $return ; }
8497: }
8498:
8499: void auto13 ( ) {
8500: $Tokenizer $tokenizer@var2132 $(@expr1073773781 $&@expr1073773782 $settings1@var123 $, $this@expr1073773783 $) $; $const $SymbolDatabase $* $db@var2133 $; $db@var2133 $=@expr1073773784 $getSymbolDB_inner $(@expr1073773785 $tokenizer@var2132 $, "uint8_t *get();\n\nuint8_t *test()\n{\n    auto *next = get();\n    return next;\n}" $, $"test.cpp" $) $; $if $(@expr1073773786 $!@expr1073773787 $assert_ $(@expr1073773788 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8500 $, $db@var2133 $) $) { $return $; } $do ${ $} $while $(@expr1073773789 $false $)
8501:
|
8505:
8506: ;
8507:
8508: const Token * tok@var2134 ;
8509:
8510: tok@var2134 =@expr1073773790 Token ::@expr1073773791 findsimplematch (@expr1073773792 tokenizer@var2132 .@expr1073773793 tokens (@expr1073773794 ) , "return" ) .@expr1073773795 next (@expr1073773796 ) ;
8511: $if $(@expr1073773797 $!@expr1073773798 $assert_ $(@expr1073773799 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8511 $, tok@var2134 $) $) { $return ; }
8512: $if $(@expr1073773800 $!@expr1073773801 $assert_ $(@expr1073773802 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8512 $, tok@var2134 .@expr31979 valueType (@expr31980 ) $) $) { $return ; }
8513: $if $(@expr1073773805 $!@expr1073773806 $assert_ $(@expr1073773807 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8513 $, tok@var2134 .@expr31979 valueType (@expr31980 ) .@expr1073773810 pointer@expr1073773779 $) $) { $return ; }
8514: $if $(@expr1073773811 $!@expr1073773812 $assert_ $(@expr1073773813 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8514 $, tok@var2134 .@expr31990 variable (@expr31991 ) .@expr31992 valueType (@expr31993 ) $) $) { $return ; }
8515: $if $(@expr1073773818 $!@expr1073773819 $assert_ $(@expr1073773820 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8515 $, tok@var2134 .@expr31990 variable (@expr31991 ) .@expr31992 valueType (@expr31993 ) .@expr1073773825 pointer@expr1073773780 $) $) { $return ; }
8516: }
8517:
8518: void auto14 ( ) {
8519: $Tokenizer $tokenizer@var2135 $(@expr1073773826 $&@expr1073773827 $settings1@var123 $, $this@expr1073773828 $) $; $const $SymbolDatabase $* $db@var2136 $; $db@var2136 $=@expr1073773829 $getSymbolDB_inner $(@expr1073773830 $tokenizer@var2135 $, "static void foo() {\n    auto combo = widget->combo = new Combo{};\n    combo->addItem();\n}" $, $"test.cpp" $) $; $if $(@expr1073773831 $!@expr1073773832 $assert_ $(@expr1073773833 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8519 $, $db@var2136 $) $) { $return $; } $do ${ $} $while $(@expr1073773834 $false $)
8520:
8521:
8522: ;
8523:
8524: const Token * tok@var2137 ;
8525:
8526: tok@var2137 =@expr1073773835 Token ::@expr1073773836 findsimplematch (@expr1073773837 tokenizer@var2135 .@expr1073773838 tokens (@expr1073773839 ) , "combo =" ) ;
8527: $if $(@expr1073773840 $!@expr1073773841 $assert_ $(@expr1073773842 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8527 $, tok@var2137 &&@expr1073773843 !@expr1073773844 tok@var2137 .@expr1073773845 valueType (@expr1073773846 ) $) $) { $return ; }
8528: }
8529:
8530: void auto15 ( ) {
8531: $Tokenizer $tokenizer@var2138 $(@expr1073773851 $&@expr1073773852 $settings1@var123 $, $this@expr1073773853 $) $; $const $SymbolDatabase $* $db@var2139 $; $db@var2139 $=@expr1073773854 $getSymbolDB_inner $(@expr1073773855 $tokenizer@var2138 $, "auto var1{3};\nauto var2{4.0};" $, $"test.cpp" $) $; $if $(@expr1073773856 $!@expr1073773857 $assert_ $(@expr1073773858 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8531 $, $db@var2139 $) $) { $return $; } $do ${ $} $while $(@expr1073773859 $false $)
8532: ;
8533: $if $(@expr1073773860 $!@expr1073773861 $assertEquals $(@expr1073773862 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8533 $, 3 $, db@var2139 .@expr32039 variableList (@expr32040 ) .@expr1073773865 size (@expr1073773866 ) $) $) { $return ; }
8534: const Variable * var1@var2140 ; var1@var2140 =@expr1073773867 db@var2139 .@expr32039 variableList (@expr32040 ) [@expr1073773870 1 ] ;
8535: $if $(@expr1073773871 $!@expr1073773872 $assert_ $(@expr1073773873 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8535 $, var1@var2140 .@expr32050 valueType (@expr32051 ) $) $) { $return ; }
8536: $if $(@expr1073773876 $!@expr1073773877 $assertEquals $(@expr1073773878 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8536 $, ValueType ::@expr32055 Type ::@expr1073773880 INT@expr1073773847 $, var1@var2140 .@expr32050 valueType (@expr32051 ) .@expr1073773883 type@expr1073773848 $) $) { $return ; }
8537: const Variable * var2@var2141 ; var2@var2141 =@expr1073773884 db@var2139 .@expr32039 variableList (@expr32040 ) [@expr1073773887 2 ] ;
8538: $if $(@expr1073773888 $!@expr1073773889 $assert_ $(@expr1073773890 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8538 $, var2@var2141 .@expr32067 valueType (@expr32068 ) $) $) { $return ; }
8539: $if $(@expr1073773893 $!@expr1073773894 $assertEquals $(@expr1073773895 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8539 $, ValueType ::@expr32055 Type ::@expr1073773897 DOUBLE@expr1073773849 $, var2@var2141 .@expr32067 valueType (@expr32068 ) .@expr1073773900 type@expr1073773850 $) $) { $return ; }
8540: }
8541:
8542: void auto16 ( ) {
8543: $Tokenizer $tokenizer@var2142 $(@expr1073773903 $&@expr1073773904 $settings1@var123 $, $this@expr1073773905 $) $; $const $SymbolDatabase $* $db@var2143 $; $db@var2143 $=@expr1073773906 $getSymbolDB_inner $(@expr1073773907 $tokenizer@var2142 $, "void foo(std::map<std::string, bool> x) {\n    for (const auto& i: x) {}\n}\n" $, $"test.cpp" $) $; $if $(@expr1073773908 $!@expr1073773909 $assert_ $(@expr1073773910 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8543 $, $db@var2143 $) $) { $return $; } $do ${ $} $while $(@expr1073773911 $false $)
8544:
8545: ;
8546: $if $(@expr1073773912 $!@expr1073773913 $assertEquals $(@expr1073773914 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8546 $, 3 $, db@var2143 .@expr32091 variableList (@expr32092 ) .@expr1073773917 size (@expr1073773918 ) $) $) { $return ; }
8547: const Variable * i@var2144 ; i@var2144 =@expr1073773919 db@var2143 .@expr32091 variableList (@expr32092 ) .@expr1073773922 back (@expr1073773923 ) ;
8548: $if $(@expr1073773924 $!@expr1073773925 $assert_ $(@expr1073773926 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8548 $, i@var2144 .@expr32103 valueType (@expr32104 ) $) $) { $return ; }
8549: $if $(@expr1073773929 $!@expr1073773930 $assertEquals $(@expr1073773931 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8549 $, ValueType ::@expr1073773932 Type ::@expr1073773933 RECORD@expr1073773901 $, i@var2144 .@expr32103 valueType (@expr32104 ) .@expr1073773936 type@expr1073773902 $) $) { $return ; }
8550: }
8551:
8552: void unionWithConstructor ( ) {
8553: $Tokenizer $tokenizer@var2145 $(@expr1073773937 $&@expr1073773938 $settings1@var123 $, $this@expr1073773939 $) $; $const $SymbolDatabase $* $db@var2146 $; $db@var2146 $=@expr1073773940 $getSymbolDB_inner $(@expr1073773941 $tokenizer@var2145 $, "union Fred {\n    Fred(int x) : i(x) { }\n    Fred(float x) : f(x) { }\n    int i;\n    float f;\n};" $, $"test.cpp" $) $; $if $(@expr1073773942 $!@expr1073773943 $assert_ $(@expr1073773944 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8553 $, $db@var2146 $) $) { $return $; } $do ${ $} $while $(@expr1073773945 $false $)
8554:
|
8557:
8558: ;
8559:
8560: $if $(@expr1073773946 $!@expr1073773947 $assertEquals $(@expr1073773948 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8560 $, "" $, errout@var100 .@expr1073773949 str (@expr1073773950 ) $) $) { $return ; }
8561:
8562: const Token * f@var2147 ; f@var2147 =@expr1073773951 Token ::@expr32128 findsimplematch (@expr1073773953 tokenizer@var2145 .@expr32130 tokens (@expr32131 ) , "Fred ( int" ) ;
8563: $if $(@expr1073773956 $!@expr1073773957 $assert_ $(@expr1073773958 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8563 $, f@var2147 &&@expr32135 f@var2147 .@expr32136 function (@expr32137 ) &&@expr1073773962 f@var2147 .@expr32136 function (@expr32137 ) .@expr32141 tokenDef .@expr32142 linenr (@expr32143 ) ==@expr1073773968 2 $) $) { $return ; }
8564:
8565: f@var2147 =@expr1073773969 Token ::@expr32128 findsimplematch (@expr1073773971 tokenizer@var2145 .@expr32130 tokens (@expr32131 ) , "Fred ( float" ) ;
8566: $if $(@expr1073773974 $!@expr1073773975 $assert_ $(@expr1073773976 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8566 $, f@var2147 &&@expr32135 f@var2147 .@expr32136 function (@expr32137 ) &&@expr1073773980 f@var2147 .@expr32136 function (@expr32137 ) .@expr32141 tokenDef .@expr32142 linenr (@expr32143 ) ==@expr1073773986 3 $) $) { $return ; }
8567: }
8568:
8569: void incomplete_type ( ) {
8570: $Tokenizer $tokenizer@var2148 $(@expr1073773987 $&@expr1073773988 $settings1@var123 $, $this@expr1073773989 $) $; $const $SymbolDatabase $* $db@var2149 $; $db@var2149 $=@expr1073773990 $getSymbolDB_inner $(@expr1073773991 $tokenizer@var2148 $, "template<class _Ty,\n  class _Alloc = std::allocator<_Ty>>\n  class SLSurfaceLayerData\n  : public _Vector_alloc<_Vec_base_types<_Ty, _Alloc>>\n{     // varying size array of values\n\n  using reverse_iterator = _STD reverse_iterator<iterator>;\n  using const_reverse_iterator = _STD reverse_iterator<const_iterator>;\n  const_reverse_iterator crend() const noexcept\n  {   // return iterator for end of reversed nonmutable sequence\n    return (rend());\n  }\n};" $, $"test.cpp" $) $; $if $(@expr1073773992 $!@expr1073773993 $assert_ $(@expr1073773994 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8570 $, $db@var2149 $) $) { $return $; } $do ${ $} $while $(@expr1073773995 $false $)
8571:
|
8581:
8582: ;
8583:
8584: $if $(@expr1073773996 $!@expr1073773997 $assertEquals $(@expr1073773998 "cppcheck-2.8/test/testsymboldatabase.cpp" $, 8584 $, "" $, errout@var100 .@expr1073773999 str (@expr1073774000 ) $) $) { $return ; }
8585: }
8586: } ;
8587:
8588: $namespace ${ TestSymbolDatabase instance_TestSymbolDatabase@var2150 $; $}



##Value flow
Line 37
  countTests always !<=-1
Line 38
  fails_counter always !<=-1
Line 39
  todos_counter always !<=-1
Line 40
  succeeded_todos_counter always !<=-1
Line 42
  mVerbose always {!<=-1,!>=2}
Line 50
  quiet_tests always {!<=-1,!>=2}
Line 52
  = always 0
  0 always 0
Line 54
  ( always {!<=-1,!>=2}
Line 55
  , always !<=-1
  linenr always !<=-1
Line 57
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
  , always {!<=-1,!>=2}
  condition always {!<=-1,!>=2}
Line 60
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 61
  != always {!<=-1,!>=2}
Line 63
  expected always !symbolic=(actual)
Line 65
  actual always !symbolic=(expected)
Line 67
  linenr always !<=-1
Line 69
  return always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
Line 74
  , always !<=-1
  linenr always !<=-1
Line 76
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 77
  , always !<=-1
  linenr always !<=-1
Line 78
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 79
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 80
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 81
  ( always {!<=-1,!>=2}
  , always !<=-1
  linenr always !<=-1
Line 82
  , always !<=-1
  linenr always !<=-1
Line 84
  , always !<=-1
  linenr always !<=-1
Line 86
  , always !<=-1
  linenr always !<=-1
Line 88
  , always !<=-1
  linenr always !<=-1
Line 90
  , always !<=-1
  linenr always !<=-1
Line 91
  , always !<=-1
  linenr always !<=-1
Line 92
  , always !<=-1
  linenr always !<=-1
Line 96
  v always {!<=-1,!>=2}
Line 97
  mVerbose always {!<=-1,!>=2}
  = {!<=-1,!>=2,0@39}
  v {!<=-1,!>=2,0@39}
Line 101
  = always "{file}:{line}:{severity}:{message}"
  "{file}:{line}:{severity}:{message}" always "{file}:{line}:{severity}:{message}"
Line 102
  = always "{file}:{line}:note:{info}"
  "{file}:{line}:note:{info}" always "{file}:{line}:note:{info}"
Line 116
  ( always !<=-1
Line 43
  createOnly always {!<=-1,!>=2}
  = always 0
  false always 0
  cpp always {!<=-1,!>=2}
  = always 1
  true always 1
Line 44
  & {lifetime[Address]=(settings),!0}
  nullptr always 0
Line 46
  createOnly always {!<=-1,!>=2}
Line 47
  cpp always {!<=-1,!>=2}
  ? possible {"test.cpp","test.c"}
  "test.cpp" always "test.cpp"
  : always "test.c"
  "test.c" always "test.c"
Line 49
  cpp always {!<=-1,!>=2}
  ? possible {"test.cpp","test.c"}
  "test.cpp" always "test.cpp"
  : always "test.c"
  "test.c" always "test.c"
Line 60
  ( possible lifetime[SubObject]=(Settings&settings)
Line 66
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
Line 82
  ( {lifetime[Object]=(mName),!0}
Line 69
  "TestSymbolDatabase" always "TestSymbolDatabase"
Line 70
  nullptr always 0
Line 71
  nullptr always 0
Line 80
  = always 0
  nullptr always 0
Line 81
  = always 0
  nullptr always 0
Line 85
  "" always ""
Line 86
  code possible {"template<class _Ty,\n  class _Alloc = std::allocator<_Ty>>\n  class SLSurfaceLayerData\n  : public _Vector_alloc<_Vec_base_types<_Ty, _Alloc>>\n{     // varying size array of values\n\n  using reverse_iterator = _STD reverse_iterator<iterator>;\n  using const_reverse_iterator = _STD reverse_iterator<const_iterator>;\n  const_reverse_iterator crend() const noexcept\n  {   // return iterator for end of reversed nonmutable sequence\n    return (rend());\n  }\n};"@1,"union Fred {\n    Fred(int x) : i(x) { }\n    Fred(float x) : f(x) { }\n    int i;\n    float f;\n};"@2,"void foo(std::map<std::string, bool> x) {\n    for (const auto& i: x) {}\n}\n"@3,"auto var1{3};\nauto var2{4.0};"@4,"static void foo() {\n    auto combo = widget->combo = new Combo{};\n    combo->addItem();\n}"@5,"uint8_t *get();\n\nuint8_t *test()\n{\n    auto *next = get();\n    return next;\n}"@6,"void f(const std::string &x) {\n  auto y = x;\n  if (y.empty()) {}\n}"@7,"void f() {\n  const auto v1 = 3;\n  const auto *v2 = 0;\n}"@8,"void f() {\n    std::vector<int> ints(4);\n    auto iter = ints.begin() + (ints.size() - 1);\n}"@9,"class DHTTokenTracker {\n  static const size_t SECRET_SIZE = 4;\n  unsigned char secret_[2][SECRET_SIZE];\n  void validateToken();\n};\ntemplate <typename T> struct DerefEqual<T> derefEqual(const T& t) {\n  return DerefEqual<T>(t);\n}\ntemplate <typename T>\nstruct RefLess {\n  bool operator()(const std::shared_ptr<T>& lhs,\n                  const std::shared_ptr<T>& rhs)\n  {\n    return lhs.get() < rhs.get();\n  }\n};\nvoid DHTTokenTracker::validateToken()\n{\n  for (auto& elem : secret_) {\n  }\n}"@10}
Line 87
  filename inconclusive {"test.cpp"@1,"test.cpp"@2,"test.cpp"@3,"test.cpp"@4,"test.cpp"@5,"test.cpp"@6,"test.cpp"@7,"test.cpp"@8,"test.cpp"@9,"test.cpp"@10}
  : always 0
  nullptr always 0
Line 93
  != always {!<=-1,!>=2}
Line 94
  == always {!<=-1,!>=2}
Line 95
  == always {!<=-1,!>=2}
Line 96
  & {lifetime[Address]=(*scope),!0}
Line 99
  nullptr always 0
Line 103
  = possible {lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38,lifetime[Address]=(db->scopeList.front())@39,lifetime[Address]=(db->scopeList.front())@40}
  startScope possible {lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38,lifetime[Address]=(db->scopeList.front())@39,lifetime[Address]=(db->scopeList.front())@40}
Line 104
  currScope possible {symbolic=(startScope),lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38,lifetime[Address]=(db->scopeList.front())@39}
  && always {!<=-1,!>=2}
  currScope {symbolic=(startScope),!0,lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38}
Line 105
  currScope {!0,lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38,lifetime[Address]=(db->scopeList.front())@39}
Line 106
  = always !0
  currScope {!0,lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38,lifetime[Address]=(db->scopeList.front())@39}
  . always !0
Line 108
  currScope {!0,lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38,lifetime[Address]=(db->scopeList.front())@39}
Line 110
  currScope possible {symbolic=(startScope),0,lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38}
Line 111
  currScope {!0,lifetime[Address]=(db->scopeList.front())@30,lifetime[Address]=(db->scopeList.front())@31,lifetime[Address]=(db->scopeList.front())@32,lifetime[Address]=(db->scopeList.front())@33,lifetime[Address]=(db->scopeList.front())@34,lifetime[Address]=(db->scopeList.front())@35,lifetime[Address]=(db->scopeList.front())@37,lifetime[Address]=(db->scopeList.front())@38,lifetime[Address]=(db->scopeList.front())@39}
Line 112
  == always {!<=-1,!>=2}
  str possible {"func1"@30,"func2"@31,"func3"@32,"func4"@33,"func5"@34,"func6"@35,"func1"@37,"func2"@38,"func3"@39,"func4"@40}
Line 113
  & always !0
Line 117
  nullptr always 0
Line 121
  ( {lifetime[Object]=(exename),!0}
  "std.cfg" always "std.cfg"
  != always {!<=-1,!>=2}
  "std.cfg" always "std.cfg"
  false always 0
Line 125
  = always 1
  true always 1
Line 126
  = always 1
  true always 1
Line 128
  ( always {!<=-1,!>=2}
  "array" always "array"
  false always 0
  false always 0
Line 129
  ( always {!<=-1,!>=2}
  "stlarray1" always "stlarray1"
  false always 0
  false always 0
Line 130
  ( always {!<=-1,!>=2}
  "stlarray2" always "stlarray2"
  false always 0
  false always 0
Line 132
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationCanHandleNull" always "test_isVariableDeclarationCanHandleNull"
  false always 0
  false always 0
Line 133
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesSimpleDeclaration" always "test_isVariableDeclarationIdentifiesSimpleDeclaration"
  false always 0
  false always 0
Line 134
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesInitialization" always "test_isVariableDeclarationIdentifiesInitialization"
  false always 0
  false always 0
Line 135
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesCpp11Initialization" always "test_isVariableDeclarationIdentifiesCpp11Initialization"
  false always 0
  false always 0
Line 136
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesScopedDeclaration" always "test_isVariableDeclarationIdentifiesScopedDeclaration"
  false always 0
  false always 0
Line 137
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesStdDeclaration" always "test_isVariableDeclarationIdentifiesStdDeclaration"
  false always 0
  false always 0
Line 138
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesScopedStdDeclaration" always "test_isVariableDeclarationIdentifiesScopedStdDeclaration"
  false always 0
  false always 0
Line 139
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesManyScopes" always "test_isVariableDeclarationIdentifiesManyScopes"
  false always 0
  false always 0
Line 140
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesPointers" always "test_isVariableDeclarationIdentifiesPointers"
  false always 0
  false always 0
Line 141
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesPointers2" always "test_isVariableDeclarationIdentifiesPointers2"
  false always 0
  false always 0
Line 142
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationDoesNotIdentifyConstness" always "test_isVariableDeclarationDoesNotIdentifyConstness"
  false always 0
  false always 0
Line 143
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesFirstOfManyVariables" always "test_isVariableDeclarationIdentifiesFirstOfManyVariables"
  false always 0
  false always 0
Line 144
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesScopedPointerDeclaration" always "test_isVariableDeclarationIdentifiesScopedPointerDeclaration"
  false always 0
  false always 0
Line 145
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesDeclarationWithIndirection" always "test_isVariableDeclarationIdentifiesDeclarationWithIndirection"
  false always 0
  false always 0
Line 146
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesDeclarationWithMultipleIndirection" always "test_isVariableDeclarationIdentifiesDeclarationWithMultipleIndirection"
  false always 0
  false always 0
Line 147
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesArray" always "test_isVariableDeclarationIdentifiesArray"
  false always 0
  false always 0
Line 148
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesPointerArray" always "test_isVariableDeclarationIdentifiesPointerArray"
  false always 0
  false always 0
Line 149
  ( always {!<=-1,!>=2}
  "test_isVariableDeclarationIdentifiesOfArrayPointers" always "test_isVariableDeclarationIdentifiesOfArrayPointers"
  false always 0
  false always 0
Line 150
  ( always {!<=-1,!>=2}
  "isVariableDeclarationIdentifiesTemplatedPointerVariable" always "isVariableDeclarationIdentifiesTemplatedPointerVariable"
  false always 0
  false always 0
Line 151
  ( always {!<=-1,!>=2}
  "isVariableDeclarationIdentifiesTemplatedPointerToPointerVariable" always "isVariableDeclarationIdentifiesTemplatedPointerToPointerVariable"
  false always 0
  false always 0
Line 152
  ( always {!<=-1,!>=2}
  "isVariableDeclarationIdentifiesTemplatedArrayVariable" always "isVariableDeclarationIdentifiesTemplatedArrayVariable"
  false always 0
  false always 0
Line 153
  ( always {!<=-1,!>=2}
  "isVariableDeclarationIdentifiesTemplatedVariable" always "isVariableDeclarationIdentifiesTemplatedVariable"
  false always 0
  false always 0
Line 154
  ( always {!<=-1,!>=2}
  "isVariableDeclarationIdentifiesTemplatedVariableIterator" always "isVariableDeclarationIdentifiesTemplatedVariableIterator"
  false always 0
  false always 0
Line 155
  ( always {!<=-1,!>=2}
  "isVariableDeclarationIdentifiesNestedTemplateVariable" always "isVariableDeclarationIdentifiesNestedTemplateVariable"
  false always 0
  false always 0
Line 156
  ( always {!<=-1,!>=2}
  "isVariableDeclarationIdentifiesReference" always "isVariableDeclarationIdentifiesReference"
  false always 0
  false always 0
Line 157
  ( always {!<=-1,!>=2}
  "isVariableDeclarationDoesNotIdentifyTemplateClass" always "isVariableDeclarationDoesNotIdentifyTemplateClass"
  false always 0
  false always 0
Line 158
  ( always {!<=-1,!>=2}
  "isVariableDeclarationDoesNotIdentifyCppCast" always "isVariableDeclarationDoesNotIdentifyCppCast"
  false always 0
  false always 0
Line 159
  ( always {!<=-1,!>=2}
  "isVariableDeclarationPointerConst" always "isVariableDeclarationPointerConst"
  false always 0
  false always 0
Line 160
  ( always {!<=-1,!>=2}
  "isVariableDeclarationRValueRef" always "isVariableDeclarationRValueRef"
  false always 0
  false always 0
Line 161
  ( always {!<=-1,!>=2}
  "isVariableDeclarationDoesNotIdentifyCase" always "isVariableDeclarationDoesNotIdentifyCase"
  false always 0
  false always 0
Line 162
  ( always {!<=-1,!>=2}
  "isVariableDeclarationIf" always "isVariableDeclarationIf"
  false always 0
  false always 0
Line 163
  ( always {!<=-1,!>=2}
  "isVariableStlType" always "isVariableStlType"
  false always 0
  false always 0
Line 164
  ( always {!<=-1,!>=2}
  "isVariablePointerToConstPointer" always "isVariablePointerToConstPointer"
  false always 0
  false always 0
Line 165
  ( always {!<=-1,!>=2}
  "isVariablePointerToVolatilePointer" always "isVariablePointerToVolatilePointer"
  false always 0
  false always 0
Line 166
  ( always {!<=-1,!>=2}
  "isVariablePointerToConstVolatilePointer" always "isVariablePointerToConstVolatilePointer"
  false always 0
  false always 0
Line 167
  ( always {!<=-1,!>=2}
  "isVariableMultiplePointersAndQualifiers" always "isVariableMultiplePointersAndQualifiers"
  false always 0
  false always 0
Line 168
  ( always {!<=-1,!>=2}
  "variableVolatile" always "variableVolatile"
  false always 0
  false always 0
Line 169
  ( always {!<=-1,!>=2}
  "variableConstexpr" always "variableConstexpr"
  false always 0
  false always 0
Line 170
  ( always {!<=-1,!>=2}
  "isVariableDecltype" always "isVariableDecltype"
  false always 0
  false always 0
Line 172
  ( always {!<=-1,!>=2}
  "VariableValueType1" always "VariableValueType1"
  false always 0
  false always 0
Line 173
  ( always {!<=-1,!>=2}
  "VariableValueType2" always "VariableValueType2"
  false always 0
  false always 0
Line 174
  ( always {!<=-1,!>=2}
  "VariableValueType3" always "VariableValueType3"
  false always 0
  false always 0
Line 175
  ( always {!<=-1,!>=2}
  "VariableValueType4" always "VariableValueType4"
  false always 0
  false always 0
Line 176
  ( always {!<=-1,!>=2}
  "VariableValueType5" always "VariableValueType5"
  false always 0
  false always 0
Line 177
  ( always {!<=-1,!>=2}
  "VariableValueTypeReferences" always "VariableValueTypeReferences"
  false always 0
  false always 0
Line 179
  ( always {!<=-1,!>=2}
  "findVariableType1" always "findVariableType1"
  false always 0
  false always 0
Line 180
  ( always {!<=-1,!>=2}
  "findVariableType2" always "findVariableType2"
  false always 0
  false always 0
Line 181
  ( always {!<=-1,!>=2}
  "findVariableType3" always "findVariableType3"
  false always 0
  false always 0
Line 182
  ( always {!<=-1,!>=2}
  "findVariableTypeExternC" always "findVariableTypeExternC"
  false always 0
  false always 0
Line 184
  ( always {!<=-1,!>=2}
  "rangeBasedFor" always "rangeBasedFor"
  false always 0
  false always 0
Line 186
  ( always {!<=-1,!>=2}
  "arrayMemberVar1" always "arrayMemberVar1"
  false always 0
  false always 0
Line 187
  ( always {!<=-1,!>=2}
  "arrayMemberVar2" always "arrayMemberVar2"
  false always 0
  false always 0
Line 188
  ( always {!<=-1,!>=2}
  "arrayMemberVar3" always "arrayMemberVar3"
  false always 0
  false always 0
Line 189
  ( always {!<=-1,!>=2}
  "arrayMemberVar4" always "arrayMemberVar4"
  false always 0
  false always 0
Line 190
  ( always {!<=-1,!>=2}
  "staticMemberVar" always "staticMemberVar"
  false always 0
  false always 0
Line 191
  ( always {!<=-1,!>=2}
  "getVariableFromVarIdBoundsCheck" always "getVariableFromVarIdBoundsCheck"
  false always 0
  false always 0
Line 193
  ( always {!<=-1,!>=2}
  "hasRegularFunction" always "hasRegularFunction"
  false always 0
  false always 0
Line 194
  ( always {!<=-1,!>=2}
  "hasRegularFunction_trailingReturnType" always "hasRegularFunction_trailingReturnType"
  false always 0
  false always 0
Line 195
  ( always {!<=-1,!>=2}
  "hasInlineClassFunction" always "hasInlineClassFunction"
  false always 0
  false always 0
Line 196
  ( always {!<=-1,!>=2}
  "hasInlineClassFunction_trailingReturnType" always "hasInlineClassFunction_trailingReturnType"
  false always 0
  false always 0
Line 197
  ( always {!<=-1,!>=2}
  "hasMissingInlineClassFunction" always "hasMissingInlineClassFunction"
  false always 0
  false always 0
Line 198
  ( always {!<=-1,!>=2}
  "hasClassFunction" always "hasClassFunction"
  false always 0
  false always 0
Line 199
  ( always {!<=-1,!>=2}
  "hasClassFunction_trailingReturnType" always "hasClassFunction_trailingReturnType"
  false always 0
  false always 0
Line 200
  ( always {!<=-1,!>=2}
  "hasClassFunction_decltype_auto" always "hasClassFunction_decltype_auto"
  false always 0
  false always 0
Line 202
  ( always {!<=-1,!>=2}
  "hasRegularFunctionReturningFunctionPointer" always "hasRegularFunctionReturningFunctionPointer"
  false always 0
  false always 0
Line 203
  ( always {!<=-1,!>=2}
  "hasInlineClassFunctionReturningFunctionPointer" always "hasInlineClassFunctionReturningFunctionPointer"
  false always 0
  false always 0
Line 204
  ( always {!<=-1,!>=2}
  "hasMissingInlineClassFunctionReturningFunctionPointer" always "hasMissingInlineClassFunctionReturningFunctionPointer"
  false always 0
  false always 0
Line 205
  ( always {!<=-1,!>=2}
  "hasInlineClassOperatorTemplate" always "hasInlineClassOperatorTemplate"
  false always 0
  false always 0
Line 206
  ( always {!<=-1,!>=2}
  "hasClassFunctionReturningFunctionPointer" always "hasClassFunctionReturningFunctionPointer"
  false always 0
  false always 0
Line 207
  ( always {!<=-1,!>=2}
  "methodWithRedundantScope" always "methodWithRedundantScope"
  false always 0
  false always 0
Line 208
  ( always {!<=-1,!>=2}
  "complexFunctionArrayPtr" always "complexFunctionArrayPtr"
  false always 0
  false always 0
Line 209
  ( always {!<=-1,!>=2}
  "pointerToMemberFunction" always "pointerToMemberFunction"
  false always 0
  false always 0
Line 210
  ( always {!<=-1,!>=2}
  "hasSubClassConstructor" always "hasSubClassConstructor"
  false always 0
  false always 0
Line 211
  ( always {!<=-1,!>=2}
  "testConstructors" always "testConstructors"
  false always 0
  false always 0
Line 212
  ( always {!<=-1,!>=2}
  "functionDeclarationTemplate" always "functionDeclarationTemplate"
  false always 0
  false always 0
Line 213
  ( always {!<=-1,!>=2}
  "functionDeclarations" always "functionDeclarations"
  false always 0
  false always 0
Line 214
  ( always {!<=-1,!>=2}
  "functionDeclarations2" always "functionDeclarations2"
  false always 0
  false always 0
Line 215
  ( always {!<=-1,!>=2}
  "constexprFunction" always "constexprFunction"
  false always 0
  false always 0
Line 216
  ( always {!<=-1,!>=2}
  "constructorInitialization" always "constructorInitialization"
  false always 0
  false always 0
Line 217
  ( always {!<=-1,!>=2}
  "memberFunctionOfUnknownClassMacro1" always "memberFunctionOfUnknownClassMacro1"
  false always 0
  false always 0
Line 218
  ( always {!<=-1,!>=2}
  "memberFunctionOfUnknownClassMacro2" always "memberFunctionOfUnknownClassMacro2"
  false always 0
  false always 0
Line 219
  ( always {!<=-1,!>=2}
  "memberFunctionOfUnknownClassMacro3" always "memberFunctionOfUnknownClassMacro3"
  false always 0
  false always 0
Line 220
  ( always {!<=-1,!>=2}
  "functionLinkage" always "functionLinkage"
  false always 0
  false always 0
Line 222
  ( always {!<=-1,!>=2}
  "classWithFriend" always "classWithFriend"
  false always 0
  false always 0
Line 224
  ( always {!<=-1,!>=2}
  "parseFunctionCorrect" always "parseFunctionCorrect"
  false always 0
  false always 0
Line 225
  ( always {!<=-1,!>=2}
  "parseFunctionDeclarationCorrect" always "parseFunctionDeclarationCorrect"
  false always 0
  false always 0
Line 226
  ( always {!<=-1,!>=2}
  "Cpp11InitInInitList" always "Cpp11InitInInitList"
  false always 0
  false always 0
Line 228
  ( always {!<=-1,!>=2}
  "hasGlobalVariables1" always "hasGlobalVariables1"
  false always 0
  false always 0
Line 229
  ( always {!<=-1,!>=2}
  "hasGlobalVariables2" always "hasGlobalVariables2"
  false always 0
  false always 0
Line 230
  ( always {!<=-1,!>=2}
  "hasGlobalVariables3" always "hasGlobalVariables3"
  false always 0
  false always 0
Line 232
  ( always {!<=-1,!>=2}
  "checkTypeStartEndToken1" always "checkTypeStartEndToken1"
  false always 0
  false always 0
Line 233
  ( always {!<=-1,!>=2}
  "checkTypeStartEndToken2" always "checkTypeStartEndToken2"
  false always 0
  false always 0
Line 234
  ( always {!<=-1,!>=2}
  "checkTypeStartEndToken3" always "checkTypeStartEndToken3"
  false always 0
  false always 0
Line 236
  ( always {!<=-1,!>=2}
  "functionArgs1" always "functionArgs1"
  false always 0
  false always 0
Line 237
  ( always {!<=-1,!>=2}
  "functionArgs2" always "functionArgs2"
  false always 0
  false always 0
Line 238
  ( always {!<=-1,!>=2}
  "functionArgs4" always "functionArgs4"
  false always 0
  false always 0
Line 239
  ( always {!<=-1,!>=2}
  "functionArgs5" always "functionArgs5"
  false always 0
  false always 0
Line 240
  ( always {!<=-1,!>=2}
  "functionArgs6" always "functionArgs6"
  false always 0
  false always 0
Line 241
  ( always {!<=-1,!>=2}
  "functionArgs7" always "functionArgs7"
  false always 0
  false always 0
Line 242
  ( always {!<=-1,!>=2}
  "functionArgs8" always "functionArgs8"
  false always 0
  false always 0
Line 243
  ( always {!<=-1,!>=2}
  "functionArgs9" always "functionArgs9"
  false always 0
  false always 0
Line 244
  ( always {!<=-1,!>=2}
  "functionArgs10" always "functionArgs10"
  false always 0
  false always 0
Line 245
  ( always {!<=-1,!>=2}
  "functionArgs11" always "functionArgs11"
  false always 0
  false always 0
Line 246
  ( always {!<=-1,!>=2}
  "functionArgs12" always "functionArgs12"
  false always 0
  false always 0
Line 247
  ( always {!<=-1,!>=2}
  "functionArgs13" always "functionArgs13"
  false always 0
  false always 0
Line 248
  ( always {!<=-1,!>=2}
  "functionArgs14" always "functionArgs14"
  false always 0
  false always 0
Line 249
  ( always {!<=-1,!>=2}
  "functionArgs15" always "functionArgs15"
  false always 0
  false always 0
Line 250
  ( always {!<=-1,!>=2}
  "functionArgs16" always "functionArgs16"
  false always 0
  false always 0
Line 251
  ( always {!<=-1,!>=2}
  "functionArgs17" always "functionArgs17"
  false always 0
  false always 0
Line 252
  ( always {!<=-1,!>=2}
  "functionArgs18" always "functionArgs18"
  false always 0
  false always 0
Line 254
  ( always {!<=-1,!>=2}
  "functionImplicitlyVirtual" always "functionImplicitlyVirtual"
  false always 0
  false always 0
Line 256
  ( always {!<=-1,!>=2}
  "functionIsInlineKeyword" always "functionIsInlineKeyword"
  false always 0
  false always 0
Line 258
  ( always {!<=-1,!>=2}
  "functionStatic" always "functionStatic"
  false always 0
  false always 0
Line 260
  ( always {!<=-1,!>=2}
  "functionReturnsReference" always "functionReturnsReference"
  false always 0
  false always 0
Line 262
  ( always {!<=-1,!>=2}
  "namespaces1" always "namespaces1"
  false always 0
  false always 0
Line 263
  ( always {!<=-1,!>=2}
  "namespaces2" always "namespaces2"
  false always 0
  false always 0
Line 264
  ( always {!<=-1,!>=2}
  "namespaces3" always "namespaces3"
  false always 0
  false always 0
Line 265
  ( always {!<=-1,!>=2}
  "namespaces4" always "namespaces4"
  false always 0
  false always 0
Line 267
  ( always {!<=-1,!>=2}
  "tryCatch1" always "tryCatch1"
  false always 0
  false always 0
Line 269
  ( always {!<=-1,!>=2}
  "symboldatabase1" always "symboldatabase1"
  false always 0
  false always 0
Line 270
  ( always {!<=-1,!>=2}
  "symboldatabase2" always "symboldatabase2"
  false always 0
  false always 0
Line 271
  ( always {!<=-1,!>=2}
  "symboldatabase3" always "symboldatabase3"
  false always 0
  false always 0
Line 272
  ( always {!<=-1,!>=2}
  "symboldatabase4" always "symboldatabase4"
  false always 0
  false always 0
Line 273
  ( always {!<=-1,!>=2}
  "symboldatabase5" always "symboldatabase5"
  false always 0
  false always 0
Line 274
  ( always {!<=-1,!>=2}
  "symboldatabase6" always "symboldatabase6"
  false always 0
  false always 0
Line 275
  ( always {!<=-1,!>=2}
  "symboldatabase7" always "symboldatabase7"
  false always 0
  false always 0
Line 276
  ( always {!<=-1,!>=2}
  "symboldatabase8" always "symboldatabase8"
  false always 0
  false always 0
Line 277
  ( always {!<=-1,!>=2}
  "symboldatabase9" always "symboldatabase9"
  false always 0
  false always 0
Line 278
  ( always {!<=-1,!>=2}
  "symboldatabase10" always "symboldatabase10"
  false always 0
  false always 0
Line 279
  ( always {!<=-1,!>=2}
  "symboldatabase11" always "symboldatabase11"
  false always 0
  false always 0
Line 280
  ( always {!<=-1,!>=2}
  "symboldatabase12" always "symboldatabase12"
  false always 0
  false always 0
Line 281
  ( always {!<=-1,!>=2}
  "symboldatabase13" always "symboldatabase13"
  false always 0
  false always 0
Line 282
  ( always {!<=-1,!>=2}
  "symboldatabase14" always "symboldatabase14"
  false always 0
  false always 0
Line 283
  ( always {!<=-1,!>=2}
  "symboldatabase17" always "symboldatabase17"
  false always 0
  false always 0
Line 284
  ( always {!<=-1,!>=2}
  "symboldatabase19" always "symboldatabase19"
  false always 0
  false always 0
Line 285
  ( always {!<=-1,!>=2}
  "symboldatabase20" always "symboldatabase20"
  false always 0
  false always 0
Line 286
  ( always {!<=-1,!>=2}
  "symboldatabase21" always "symboldatabase21"
  false always 0
  false always 0
Line 287
  ( always {!<=-1,!>=2}
  "symboldatabase22" always "symboldatabase22"
  false always 0
  false always 0
Line 288
  ( always {!<=-1,!>=2}
  "symboldatabase23" always "symboldatabase23"
  false always 0
  false always 0
Line 289
  ( always {!<=-1,!>=2}
  "symboldatabase24" always "symboldatabase24"
  false always 0
  false always 0
Line 290
  ( always {!<=-1,!>=2}
  "symboldatabase25" always "symboldatabase25"
  false always 0
  false always 0
Line 291
  ( always {!<=-1,!>=2}
  "symboldatabase26" always "symboldatabase26"
  false always 0
  false always 0
Line 292
  ( always {!<=-1,!>=2}
  "symboldatabase27" always "symboldatabase27"
  false always 0
  false always 0
Line 293
  ( always {!<=-1,!>=2}
  "symboldatabase28" always "symboldatabase28"
  false always 0
  false always 0
Line 294
  ( always {!<=-1,!>=2}
  "symboldatabase29" always "symboldatabase29"
  false always 0
  false always 0
Line 295
  ( always {!<=-1,!>=2}
  "symboldatabase30" always "symboldatabase30"
  false always 0
  false always 0
Line 296
  ( always {!<=-1,!>=2}
  "symboldatabase31" always "symboldatabase31"
  false always 0
  false always 0
Line 297
  ( always {!<=-1,!>=2}
  "symboldatabase32" always "symboldatabase32"
  false always 0
  false always 0
Line 298
  ( always {!<=-1,!>=2}
  "symboldatabase33" always "symboldatabase33"
  false always 0
  false always 0
Line 299
  ( always {!<=-1,!>=2}
  "symboldatabase34" always "symboldatabase34"
  false always 0
  false always 0
Line 300
  ( always {!<=-1,!>=2}
  "symboldatabase35" always "symboldatabase35"
  false always 0
  false always 0
Line 301
  ( always {!<=-1,!>=2}
  "symboldatabase36" always "symboldatabase36"
  false always 0
  false always 0
Line 302
  ( always {!<=-1,!>=2}
  "symboldatabase37" always "symboldatabase37"
  false always 0
  false always 0
Line 303
  ( always {!<=-1,!>=2}
  "symboldatabase38" always "symboldatabase38"
  false always 0
  false always 0
Line 304
  ( always {!<=-1,!>=2}
  "symboldatabase40" always "symboldatabase40"
  false always 0
  false always 0
Line 305
  ( always {!<=-1,!>=2}
  "symboldatabase41" always "symboldatabase41"
  false always 0
  false always 0
Line 306
  ( always {!<=-1,!>=2}
  "symboldatabase42" always "symboldatabase42"
  false always 0
  false always 0
Line 307
  ( always {!<=-1,!>=2}
  "symboldatabase43" always "symboldatabase43"
  false always 0
  false always 0
Line 308
  ( always {!<=-1,!>=2}
  "symboldatabase44" always "symboldatabase44"
  false always 0
  false always 0
Line 309
  ( always {!<=-1,!>=2}
  "symboldatabase45" always "symboldatabase45"
  false always 0
  false always 0
Line 310
  ( always {!<=-1,!>=2}
  "symboldatabase46" always "symboldatabase46"
  false always 0
  false always 0
Line 311
  ( always {!<=-1,!>=2}
  "symboldatabase47" always "symboldatabase47"
  false always 0
  false always 0
Line 312
  ( always {!<=-1,!>=2}
  "symboldatabase48" always "symboldatabase48"
  false always 0
  false always 0
Line 313
  ( always {!<=-1,!>=2}
  "symboldatabase49" always "symboldatabase49"
  false always 0
  false always 0
Line 314
  ( always {!<=-1,!>=2}
  "symboldatabase50" always "symboldatabase50"
  false always 0
  false always 0
Line 315
  ( always {!<=-1,!>=2}
  "symboldatabase51" always "symboldatabase51"
  false always 0
  false always 0
Line 316
  ( always {!<=-1,!>=2}
  "symboldatabase52" always "symboldatabase52"
  false always 0
  false always 0
Line 317
  ( always {!<=-1,!>=2}
  "symboldatabase53" always "symboldatabase53"
  false always 0
  false always 0
Line 318
  ( always {!<=-1,!>=2}
  "symboldatabase54" always "symboldatabase54"
  false always 0
  false always 0
Line 319
  ( always {!<=-1,!>=2}
  "symboldatabase55" always "symboldatabase55"
  false always 0
  false always 0
Line 320
  ( always {!<=-1,!>=2}
  "symboldatabase56" always "symboldatabase56"
  false always 0
  false always 0
Line 321
  ( always {!<=-1,!>=2}
  "symboldatabase57" always "symboldatabase57"
  false always 0
  false always 0
Line 322
  ( always {!<=-1,!>=2}
  "symboldatabase58" always "symboldatabase58"
  false always 0
  false always 0
Line 323
  ( always {!<=-1,!>=2}
  "symboldatabase59" always "symboldatabase59"
  false always 0
  false always 0
Line 324
  ( always {!<=-1,!>=2}
  "symboldatabase60" always "symboldatabase60"
  false always 0
  false always 0
Line 325
  ( always {!<=-1,!>=2}
  "symboldatabase61" always "symboldatabase61"
  false always 0
  false always 0
Line 326
  ( always {!<=-1,!>=2}
  "symboldatabase62" always "symboldatabase62"
  false always 0
  false always 0
Line 327
  ( always {!<=-1,!>=2}
  "symboldatabase63" always "symboldatabase63"
  false always 0
  false always 0
Line 328
  ( always {!<=-1,!>=2}
  "symboldatabase64" always "symboldatabase64"
  false always 0
  false always 0
Line 329
  ( always {!<=-1,!>=2}
  "symboldatabase65" always "symboldatabase65"
  false always 0
  false always 0
Line 330
  ( always {!<=-1,!>=2}
  "symboldatabase66" always "symboldatabase66"
  false always 0
  false always 0
Line 331
  ( always {!<=-1,!>=2}
  "symboldatabase67" always "symboldatabase67"
  false always 0
  false always 0
Line 332
  ( always {!<=-1,!>=2}
  "symboldatabase68" always "symboldatabase68"
  false always 0
  false always 0
Line 333
  ( always {!<=-1,!>=2}
  "symboldatabase69" always "symboldatabase69"
  false always 0
  false always 0
Line 334
  ( always {!<=-1,!>=2}
  "symboldatabase70" always "symboldatabase70"
  false always 0
  false always 0
Line 335
  ( always {!<=-1,!>=2}
  "symboldatabase71" always "symboldatabase71"
  false always 0
  false always 0
Line 336
  ( always {!<=-1,!>=2}
  "symboldatabase72" always "symboldatabase72"
  false always 0
  false always 0
Line 337
  ( always {!<=-1,!>=2}
  "symboldatabase74" always "symboldatabase74"
  false always 0
  false always 0
Line 338
  ( always {!<=-1,!>=2}
  "symboldatabase75" always "symboldatabase75"
  false always 0
  false always 0
Line 339
  ( always {!<=-1,!>=2}
  "symboldatabase76" always "symboldatabase76"
  false always 0
  false always 0
Line 340
  ( always {!<=-1,!>=2}
  "symboldatabase77" always "symboldatabase77"
  false always 0
  false always 0
Line 341
  ( always {!<=-1,!>=2}
  "symboldatabase78" always "symboldatabase78"
  false always 0
  false always 0
Line 342
  ( always {!<=-1,!>=2}
  "symboldatabase79" always "symboldatabase79"
  false always 0
  false always 0
Line 343
  ( always {!<=-1,!>=2}
  "symboldatabase80" always "symboldatabase80"
  false always 0
  false always 0
Line 344
  ( always {!<=-1,!>=2}
  "symboldatabase81" always "symboldatabase81"
  false always 0
  false always 0
Line 345
  ( always {!<=-1,!>=2}
  "symboldatabase82" always "symboldatabase82"
  false always 0
  false always 0
Line 346
  ( always {!<=-1,!>=2}
  "symboldatabase83" always "symboldatabase83"
  false always 0
  false always 0
Line 347
  ( always {!<=-1,!>=2}
  "symboldatabase84" always "symboldatabase84"
  false always 0
  false always 0
Line 348
  ( always {!<=-1,!>=2}
  "symboldatabase85" always "symboldatabase85"
  false always 0
  false always 0
Line 349
  ( always {!<=-1,!>=2}
  "symboldatabase86" always "symboldatabase86"
  false always 0
  false always 0
Line 350
  ( always {!<=-1,!>=2}
  "symboldatabase87" always "symboldatabase87"
  false always 0
  false always 0
Line 351
  ( always {!<=-1,!>=2}
  "symboldatabase88" always "symboldatabase88"
  false always 0
  false always 0
Line 352
  ( always {!<=-1,!>=2}
  "symboldatabase89" always "symboldatabase89"
  false always 0
  false always 0
Line 353
  ( always {!<=-1,!>=2}
  "symboldatabase90" always "symboldatabase90"
  false always 0
  false always 0
Line 354
  ( always {!<=-1,!>=2}
  "symboldatabase91" always "symboldatabase91"
  false always 0
  false always 0
Line 355
  ( always {!<=-1,!>=2}
  "symboldatabase92" always "symboldatabase92"
  false always 0
  false always 0
Line 356
  ( always {!<=-1,!>=2}
  "symboldatabase93" always "symboldatabase93"
  false always 0
  false always 0
Line 357
  ( always {!<=-1,!>=2}
  "symboldatabase94" always "symboldatabase94"
  false always 0
  false always 0
Line 358
  ( always {!<=-1,!>=2}
  "symboldatabase95" always "symboldatabase95"
  false always 0
  false always 0
Line 359
  ( always {!<=-1,!>=2}
  "symboldatabase96" always "symboldatabase96"
  false always 0
  false always 0
Line 360
  ( always {!<=-1,!>=2}
  "symboldatabase97" always "symboldatabase97"
  false always 0
  false always 0
Line 361
  ( always {!<=-1,!>=2}
  "symboldatabase98" always "symboldatabase98"
  false always 0
  false always 0
Line 362
  ( always {!<=-1,!>=2}
  "symboldatabase99" always "symboldatabase99"
  false always 0
  false always 0
Line 363
  ( always {!<=-1,!>=2}
  "symboldatabase100" always "symboldatabase100"
  false always 0
  false always 0
Line 365
  ( always {!<=-1,!>=2}
  "createSymbolDatabaseFindAllScopes1" always "createSymbolDatabaseFindAllScopes1"
  false always 0
  false always 0
Line 366
  ( always {!<=-1,!>=2}
  "createSymbolDatabaseFindAllScopes2" always "createSymbolDatabaseFindAllScopes2"
  false always 0
  false always 0
Line 367
  ( always {!<=-1,!>=2}
  "createSymbolDatabaseFindAllScopes3" always "createSymbolDatabaseFindAllScopes3"
  false always 0
  false always 0
Line 368
  ( always {!<=-1,!>=2}
  "createSymbolDatabaseFindAllScopes4" always "createSymbolDatabaseFindAllScopes4"
  false always 0
  false always 0
Line 370
  ( always {!<=-1,!>=2}
  "enum1" always "enum1"
  false always 0
  false always 0
Line 371
  ( always {!<=-1,!>=2}
  "enum2" always "enum2"
  false always 0
  false always 0
Line 372
  ( always {!<=-1,!>=2}
  "enum3" always "enum3"
  false always 0
  false always 0
Line 373
  ( always {!<=-1,!>=2}
  "enum4" always "enum4"
  false always 0
  false always 0
Line 374
  ( always {!<=-1,!>=2}
  "enum5" always "enum5"
  false always 0
  false always 0
Line 375
  ( always {!<=-1,!>=2}
  "enum6" always "enum6"
  false always 0
  false always 0
Line 376
  ( always {!<=-1,!>=2}
  "enum7" always "enum7"
  false always 0
  false always 0
Line 377
  ( always {!<=-1,!>=2}
  "enum8" always "enum8"
  false always 0
  false always 0
Line 378
  ( always {!<=-1,!>=2}
  "enum9" always "enum9"
  false always 0
  false always 0
Line 379
  ( always {!<=-1,!>=2}
  "enum10" always "enum10"
  false always 0
  false always 0
Line 381
  ( always {!<=-1,!>=2}
  "sizeOfType" always "sizeOfType"
  false always 0
  false always 0
Line 383
  ( always {!<=-1,!>=2}
  "isImplicitlyVirtual" always "isImplicitlyVirtual"
  false always 0
  false always 0
Line 384
  ( always {!<=-1,!>=2}
  "isPure" always "isPure"
  false always 0
  false always 0
Line 386
  ( always {!<=-1,!>=2}
  "isFunction1" always "isFunction1"
  false always 0
  false always 0
Line 387
  ( always {!<=-1,!>=2}
  "isFunction2" always "isFunction2"
  false always 0
  false always 0
Line 389
  ( always {!<=-1,!>=2}
  "findFunction1" always "findFunction1"
  false always 0
  false always 0
Line 390
  ( always {!<=-1,!>=2}
  "findFunction2" always "findFunction2"
  false always 0
  false always 0
Line 391
  ( always {!<=-1,!>=2}
  "findFunction3" always "findFunction3"
  false always 0
  false always 0
Line 392
  ( always {!<=-1,!>=2}
  "findFunction4" always "findFunction4"
  false always 0
  false always 0
Line 393
  ( always {!<=-1,!>=2}
  "findFunction5" always "findFunction5"
  false always 0
  false always 0
Line 394
  ( always {!<=-1,!>=2}
  "findFunction6" always "findFunction6"
  false always 0
  false always 0
Line 395
  ( always {!<=-1,!>=2}
  "findFunction7" always "findFunction7"
  false always 0
  false always 0
Line 396
  ( always {!<=-1,!>=2}
  "findFunction8" always "findFunction8"
  false always 0
  false always 0
Line 397
  ( always {!<=-1,!>=2}
  "findFunction9" always "findFunction9"
  false always 0
  false always 0
Line 398
  ( always {!<=-1,!>=2}
  "findFunction10" always "findFunction10"
  false always 0
  false always 0
Line 399
  ( always {!<=-1,!>=2}
  "findFunction11" always "findFunction11"
  false always 0
  false always 0
Line 400
  ( always {!<=-1,!>=2}
  "findFunction12" always "findFunction12"
  false always 0
  false always 0
Line 401
  ( always {!<=-1,!>=2}
  "findFunction13" always "findFunction13"
  false always 0
  false always 0
Line 402
  ( always {!<=-1,!>=2}
  "findFunction14" always "findFunction14"
  false always 0
  false always 0
Line 403
  ( always {!<=-1,!>=2}
  "findFunction15" always "findFunction15"
  false always 0
  false always 0
Line 404
  ( always {!<=-1,!>=2}
  "findFunction16" always "findFunction16"
  false always 0
  false always 0
Line 405
  ( always {!<=-1,!>=2}
  "findFunction17" always "findFunction17"
  false always 0
  false always 0
Line 406
  ( always {!<=-1,!>=2}
  "findFunction18" always "findFunction18"
  false always 0
  false always 0
Line 407
  ( always {!<=-1,!>=2}
  "findFunction19" always "findFunction19"
  false always 0
  false always 0
Line 408
  ( always {!<=-1,!>=2}
  "findFunction20" always "findFunction20"
  false always 0
  false always 0
Line 409
  ( always {!<=-1,!>=2}
  "findFunction21" always "findFunction21"
  false always 0
  false always 0
Line 410
  ( always {!<=-1,!>=2}
  "findFunction22" always "findFunction22"
  false always 0
  false always 0
Line 411
  ( always {!<=-1,!>=2}
  "findFunction23" always "findFunction23"
  false always 0
  false always 0
Line 412
  ( always {!<=-1,!>=2}
  "findFunction24" always "findFunction24"
  false always 0
  false always 0
Line 413
  ( always {!<=-1,!>=2}
  "findFunction25" always "findFunction25"
  false always 0
  false always 0
Line 414
  ( always {!<=-1,!>=2}
  "findFunction26" always "findFunction26"
  false always 0
  false always 0
Line 415
  ( always {!<=-1,!>=2}
  "findFunction27" always "findFunction27"
  false always 0
  false always 0
Line 416
  ( always {!<=-1,!>=2}
  "findFunction28" always "findFunction28"
  false always 0
  false always 0
Line 417
  ( always {!<=-1,!>=2}
  "findFunction29" always "findFunction29"
  false always 0
  false always 0
Line 418
  ( always {!<=-1,!>=2}
  "findFunction30" always "findFunction30"
  false always 0
  false always 0
Line 419
  ( always {!<=-1,!>=2}
  "findFunction31" always "findFunction31"
  false always 0
  false always 0
Line 420
  ( always {!<=-1,!>=2}
  "findFunction32" always "findFunction32"
  false always 0
  false always 0
Line 421
  ( always {!<=-1,!>=2}
  "findFunction33" always "findFunction33"
  false always 0
  false always 0
Line 422
  ( always {!<=-1,!>=2}
  "findFunction34" always "findFunction34"
  false always 0
  false always 0
Line 423
  ( always {!<=-1,!>=2}
  "findFunction35" always "findFunction35"
  false always 0
  false always 0
Line 424
  ( always {!<=-1,!>=2}
  "findFunction36" always "findFunction36"
  false always 0
  false always 0
Line 425
  ( always {!<=-1,!>=2}
  "findFunction37" always "findFunction37"
  false always 0
  false always 0
Line 426
  ( always {!<=-1,!>=2}
  "findFunction38" always "findFunction38"
  false always 0
  false always 0
Line 427
  ( always {!<=-1,!>=2}
  "findFunction39" always "findFunction39"
  false always 0
  false always 0
Line 428
  ( always {!<=-1,!>=2}
  "findFunction40" always "findFunction40"
  false always 0
  false always 0
Line 429
  ( always {!<=-1,!>=2}
  "findFunction41" always "findFunction41"
  false always 0
  false always 0
Line 430
  ( always {!<=-1,!>=2}
  "findFunction42" always "findFunction42"
  false always 0
  false always 0
Line 431
  ( always {!<=-1,!>=2}
  "findFunction43" always "findFunction43"
  false always 0
  false always 0
Line 432
  ( always {!<=-1,!>=2}
  "findFunctionContainer" always "findFunctionContainer"
  false always 0
  false always 0
Line 433
  ( always {!<=-1,!>=2}
  "findFunctionExternC" always "findFunctionExternC"
  false always 0
  false always 0
Line 434
  ( always {!<=-1,!>=2}
  "findFunctionGlobalScope" always "findFunctionGlobalScope"
  false always 0
  false always 0
Line 436
  ( always {!<=-1,!>=2}
  "overloadedFunction1" always "overloadedFunction1"
  false always 0
  false always 0
Line 438
  ( always {!<=-1,!>=2}
  "valueTypeMatchParameter" always "valueTypeMatchParameter"
  false always 0
  false always 0
Line 440
  ( always {!<=-1,!>=2}
  "noexceptFunction1" always "noexceptFunction1"
  false always 0
  false always 0
Line 441
  ( always {!<=-1,!>=2}
  "noexceptFunction2" always "noexceptFunction2"
  false always 0
  false always 0
Line 442
  ( always {!<=-1,!>=2}
  "noexceptFunction3" always "noexceptFunction3"
  false always 0
  false always 0
Line 443
  ( always {!<=-1,!>=2}
  "noexceptFunction4" always "noexceptFunction4"
  false always 0
  false always 0
Line 445
  ( always {!<=-1,!>=2}
  "throwFunction1" always "throwFunction1"
  false always 0
  false always 0
Line 446
  ( always {!<=-1,!>=2}
  "throwFunction2" always "throwFunction2"
  false always 0
  false always 0
Line 448
  ( always {!<=-1,!>=2}
  "nothrowAttributeFunction" always "nothrowAttributeFunction"
  false always 0
  false always 0
Line 449
  ( always {!<=-1,!>=2}
  "nothrowDeclspecFunction" always "nothrowDeclspecFunction"
  false always 0
  false always 0
Line 451
  ( always {!<=-1,!>=2}
  "noreturnAttributeFunction" always "noreturnAttributeFunction"
  false always 0
  false always 0
Line 452
  ( always {!<=-1,!>=2}
  "nodiscardAttributeFunction" always "nodiscardAttributeFunction"
  false always 0
  false always 0
Line 454
  ( always {!<=-1,!>=2}
  "varTypesIntegral" always "varTypesIntegral"
  false always 0
  false always 0
Line 455
  ( always {!<=-1,!>=2}
  "varTypesFloating" always "varTypesFloating"
  false always 0
  false always 0
Line 456
  ( always {!<=-1,!>=2}
  "varTypesOther" always "varTypesOther"
  false always 0
  false always 0
Line 458
  ( always {!<=-1,!>=2}
  "functionPrototype" always "functionPrototype"
  false always 0
  false always 0
Line 460
  ( always {!<=-1,!>=2}
  "lambda" always "lambda"
  false always 0
  false always 0
Line 461
  ( always {!<=-1,!>=2}
  "lambda2" always "lambda2"
  false always 0
  false always 0
Line 462
  ( always {!<=-1,!>=2}
  "lambda3" always "lambda3"
  false always 0
  false always 0
Line 464
  ( always {!<=-1,!>=2}
  "circularDependencies" always "circularDependencies"
  false always 0
  false always 0
Line 466
  ( always {!<=-1,!>=2}
  "executableScopeWithUnknownFunction" always "executableScopeWithUnknownFunction"
  false always 0
  false always 0
Line 468
  ( always {!<=-1,!>=2}
  "valuetype" always "valuetype"
  false always 0
  false always 0
Line 470
  ( always {!<=-1,!>=2}
  "variadic1" always "variadic1"
  false always 0
  false always 0
Line 471
  ( always {!<=-1,!>=2}
  "variadic2" always "variadic2"
  false always 0
  false always 0
Line 472
  ( always {!<=-1,!>=2}
  "variadic3" always "variadic3"
  false always 0
  false always 0
Line 474
  ( always {!<=-1,!>=2}
  "noReturnType" always "noReturnType"
  false always 0
  false always 0
Line 476
  ( always {!<=-1,!>=2}
  "auto1" always "auto1"
  false always 0
  false always 0
Line 477
  ( always {!<=-1,!>=2}
  "auto2" always "auto2"
  false always 0
  false always 0
Line 478
  ( always {!<=-1,!>=2}
  "auto3" always "auto3"
  false always 0
  false always 0
Line 479
  ( always {!<=-1,!>=2}
  "auto4" always "auto4"
  false always 0
  false always 0
Line 480
  ( always {!<=-1,!>=2}
  "auto5" always "auto5"
  false always 0
  false always 0
Line 481
  ( always {!<=-1,!>=2}
  "auto6" always "auto6"
  false always 0
  false always 0
Line 482
  ( always {!<=-1,!>=2}
  "auto7" always "auto7"
  false always 0
  false always 0
Line 483
  ( always {!<=-1,!>=2}
  "auto8" always "auto8"
  false always 0
  false always 0
Line 484
  ( always {!<=-1,!>=2}
  "auto9" always "auto9"
  false always 0
  false always 0
Line 485
  ( always {!<=-1,!>=2}
  "auto10" always "auto10"
  false always 0
  false always 0
Line 486
  ( always {!<=-1,!>=2}
  "auto11" always "auto11"
  false always 0
  false always 0
Line 487
  ( always {!<=-1,!>=2}
  "auto12" always "auto12"
  false always 0
  false always 0
Line 488
  ( always {!<=-1,!>=2}
  "auto13" always "auto13"
  false always 0
  false always 0
Line 489
  ( always {!<=-1,!>=2}
  "auto14" always "auto14"
  false always 0
  false always 0
Line 490
  ( always {!<=-1,!>=2}
  "auto15" always "auto15"
  false always 0
  false always 0
Line 491
  ( always {!<=-1,!>=2}
  "auto16" always "auto16"
  false always 0
  false always 0
Line 493
  ( always {!<=-1,!>=2}
  "unionWithConstructor" always "unionWithConstructor"
  false always 0
  false always 0
Line 495
  ( always {!<=-1,!>=2}
  "incomplete_type" always "incomplete_type"
  false always 0
  false always 0
Line 499
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int a[10+2];" always "int a[10+2];"
  "test.c" always "test.c"
  false always 0
Line 500
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  500 always 500
  != always {!<=-1,!>=2}
  nullptr always 0
Line 502
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  502 always 502
  == always {!<=-1,!>=2}
  2 always 2
Line 503
  1 always 1
Line 504
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  504 always 504
  != always {!<=-1,!>=2}
  nullptr always 0
Line 506
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  506 always 506
Line 507
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  507 always 507
  1U always 1
Line 508
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  508 always 508
  12U always 12
  0 always 0
Line 512
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::array<int, 16 + 4> arr;" always "std::array<int, 16 + 4> arr;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  512 always 512
  false always 0
Line 513
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  513 always 513
  != always {!<=-1,!>=2}
  nullptr always 0
Line 515
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  515 always 515
  2 always 2
Line 516
  1 always 1
Line 517
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  517 always 517
  != always {!<=-1,!>=2}
  nullptr always 0
Line 519
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  519 always 519
Line 520
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  520 always 520
  1U always 1
Line 521
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  521 always 521
  20U always 20
  0 always 0
Line 525
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "constexpr int sz = 16; std::array<int, sz + 4> arr;" always "constexpr int sz = 16; std::array<int, sz + 4> arr;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  525 always 525
  false always 0
Line 526
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  526 always 526
  != always {!<=-1,!>=2}
  nullptr always 0
Line 528
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  528 always 528
  3 always 3
Line 529
  2 always 2
Line 530
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  530 always 530
  != always {!<=-1,!>=2}
  nullptr always 0
Line 532
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  532 always 532
Line 533
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  533 always 533
  1U always 1
Line 534
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  534 always 534
  20U always 20
  0 always 0
Line 539
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void main(){}" always "void main(){}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  539 always 539
  false always 0
Line 540
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
  nullptr always 0
Line 541
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  541 always 541
  false always 0
  result always {!<=-1,!>=2}
Line 542
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  542 always 542
  nullptr always 0
  == always {!<=-1,!>=2}
Line 543
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  543 always 543
  nullptr always 0
  == always {!<=-1,!>=2}
Line 544
  nullptr always 0
  nullptr always 0
  nullptr always 0
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 549
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int x;" always "int x;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  549 always 549
  false always 0
Line 550
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 551
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  551 always 551
  true always 1
  result always {!<=-1,!>=2}
Line 552
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  552 always 552
  "x" always "x"
Line 553
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  553 always 553
  "int" always "int"
Line 554
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 555
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  555 always 555
  false always 0
  == always {!<=-1,!>=2}
Line 556
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  556 always 556
  false always 0
  == always {!<=-1,!>=2}
Line 557
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  557 always 557
  false always 0
  == always {!<=-1,!>=2}
Line 562
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int x (1);" always "int x (1);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  562 always 562
  false always 0
Line 563
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 564
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  564 always 564
  true always 1
  result always {!<=-1,!>=2}
Line 565
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  565 always 565
  "x" always "x"
Line 566
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  566 always 566
  "int" always "int"
Line 567
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 568
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  568 always 568
  false always 0
  == always {!<=-1,!>=2}
Line 569
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  569 always 569
  false always 0
  == always {!<=-1,!>=2}
Line 570
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  570 always 570
  false always 0
  == always {!<=-1,!>=2}
Line 575
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int x {1};" always "int x {1};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  575 always 575
  false always 0
Line 576
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 577
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  577 always 577
  true always 1
  result always {!<=-1,!>=2}
Line 578
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  578 always 578
  "x" always "x"
Line 579
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  579 always 579
  "int" always "int"
Line 580
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 581
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  581 always 581
  false always 0
  == always {!<=-1,!>=2}
Line 582
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  582 always 582
  false always 0
  == always {!<=-1,!>=2}
Line 583
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  583 always 583
  false always 0
  == always {!<=-1,!>=2}
Line 588
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "::int x;" always "::int x;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  588 always 588
  false always 0
Line 589
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 590
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  590 always 590
  true always 1
  result always {!<=-1,!>=2}
Line 591
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  591 always 591
  "x" always "x"
Line 592
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  592 always 592
  "int" always "int"
Line 593
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 594
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  594 always 594
  false always 0
  == always {!<=-1,!>=2}
Line 595
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  595 always 595
  false always 0
  == always {!<=-1,!>=2}
Line 596
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  596 always 596
  false always 0
  == always {!<=-1,!>=2}
Line 601
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::string x;" always "std::string x;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  601 always 601
  false always 0
Line 602
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 603
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  603 always 603
  true always 1
  result always {!<=-1,!>=2}
Line 604
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  604 always 604
  "x" always "x"
Line 605
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  605 always 605
  "string" always "string"
Line 606
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 607
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  607 always 607
  false always 0
  == always {!<=-1,!>=2}
Line 608
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  608 always 608
  false always 0
  == always {!<=-1,!>=2}
Line 609
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  609 always 609
  false always 0
  == always {!<=-1,!>=2}
Line 614
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "::std::string x;" always "::std::string x;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  614 always 614
  false always 0
Line 615
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 616
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  616 always 616
  true always 1
  result always {!<=-1,!>=2}
Line 617
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  617 always 617
  "x" always "x"
Line 618
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  618 always 618
  "string" always "string"
Line 619
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 620
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  620 always 620
  false always 0
  == always {!<=-1,!>=2}
Line 621
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  621 always 621
  false always 0
  == always {!<=-1,!>=2}
Line 622
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  622 always 622
  false always 0
  == always {!<=-1,!>=2}
Line 627
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "AA::BB::CC::DD::EE x;" always "AA::BB::CC::DD::EE x;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  627 always 627
  false always 0
Line 628
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 629
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  629 always 629
  true always 1
  result always {!<=-1,!>=2}
Line 630
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  630 always 630
  "x" always "x"
Line 631
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  631 always 631
  "EE" always "EE"
Line 632
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 633
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  633 always 633
  false always 0
  == always {!<=-1,!>=2}
Line 634
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  634 always 634
  false always 0
  == always {!<=-1,!>=2}
Line 635
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  635 always 635
  false always 0
  == always {!<=-1,!>=2}
Line 641
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int* p;" always "int* p;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  641 always 641
  false always 0
Line 642
  result1 always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 643
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  643 always 643
  true always 1
  result1 always {!<=-1,!>=2}
Line 644
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  644 always 644
  "p" always "p"
Line 645
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  645 always 645
  "int" always "int"
Line 646
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 647
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  647 always 647
  false always 0
  == always {!<=-1,!>=2}
Line 648
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  648 always 648
  true always 1
  == always {!<=-1,!>=2}
Line 649
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  649 always 649
  false always 0
  == always {!<=-1,!>=2}
Line 653
  "const int* p;" always "const int* p;"
Line 654
  3 always 3
  2 always 2
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 655
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  655 always 655
  false always 0
  == always {!<=-1,!>=2}
Line 656
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  656 always 656
  true always 1
  == always {!<=-1,!>=2}
Line 657
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  657 always 657
  false always 0
  == always {!<=-1,!>=2}
Line 658
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  658 always 658
  false always 0
  == always {!<=-1,!>=2}
Line 662
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int* const p;" always "int* const p;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  662 always 662
  false always 0
Line 663
  result2 always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 664
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  664 always 664
  true always 1
  result2 always {!<=-1,!>=2}
Line 665
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  665 always 665
  "p" always "p"
Line 666
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  666 always 666
  "int" always "int"
Line 667
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 668
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  668 always 668
  false always 0
  == always {!<=-1,!>=2}
Line 669
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  669 always 669
  true always 1
  == always {!<=-1,!>=2}
Line 670
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  670 always 670
  true always 1
  == always {!<=-1,!>=2}
Line 671
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  671 always 671
  false always 0
  == always {!<=-1,!>=2}
Line 677
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void slurpInManifest() {\n  std::string tmpiostring(*tI);\n  if(tmpiostring==\"infoonly\"){}\n}" always "void slurpInManifest() {\n  std::string tmpiostring(*tI);\n  if(tmpiostring==\"infoonly\"){}\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  677 always 677
  false always 0
Line 682
  "tmpiostring ==" always "tmpiostring =="
Line 683
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  683 always 683
Line 684
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  684 always 684
  ! always {!<=-1,!>=2}
Line 689
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "const int* cp;" always "const int* cp;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  689 always 689
  false always 0
Line 690
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 691
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  691 always 691
  false always 0
  result always {!<=-1,!>=2}
Line 692
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  692 always 692
  nullptr always 0
  == always {!<=-1,!>=2}
Line 693
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  693 always 693
  nullptr always 0
  == always {!<=-1,!>=2}
Line 698
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int first, second;" always "int first, second;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  698 always 698
  false always 0
Line 699
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 700
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  700 always 700
  true always 1
  result always {!<=-1,!>=2}
Line 701
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  701 always 701
  "first" always "first"
Line 702
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  702 always 702
  "int" always "int"
Line 703
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 704
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  704 always 704
  false always 0
  == always {!<=-1,!>=2}
Line 705
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  705 always 705
  false always 0
  == always {!<=-1,!>=2}
Line 706
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  706 always 706
  false always 0
  == always {!<=-1,!>=2}
Line 711
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "AA::BB::CC::DD::EE* p;" always "AA::BB::CC::DD::EE* p;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  711 always 711
  false always 0
Line 712
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 713
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  713 always 713
  true always 1
  result always {!<=-1,!>=2}
Line 714
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  714 always 714
  "p" always "p"
Line 715
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  715 always 715
  "EE" always "EE"
Line 716
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 717
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  717 always 717
  false always 0
  == always {!<=-1,!>=2}
Line 718
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  718 always 718
  true always 1
  == always {!<=-1,!>=2}
Line 719
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  719 always 719
  false always 0
  == always {!<=-1,!>=2}
Line 724
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int** pp;" always "int** pp;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  724 always 724
  false always 0
Line 725
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 726
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  726 always 726
  true always 1
  result always {!<=-1,!>=2}
Line 727
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  727 always 727
  "pp" always "pp"
Line 728
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  728 always 728
  "int" always "int"
Line 729
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 730
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  730 always 730
  false always 0
  == always {!<=-1,!>=2}
Line 731
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  731 always 731
  true always 1
  == always {!<=-1,!>=2}
Line 732
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  732 always 732
  false always 0
  == always {!<=-1,!>=2}
Line 737
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int***** p;" always "int***** p;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  737 always 737
  false always 0
Line 738
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 739
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  739 always 739
  true always 1
  result always {!<=-1,!>=2}
Line 740
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  740 always 740
  "p" always "p"
Line 741
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  741 always 741
  "int" always "int"
Line 742
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 743
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  743 always 743
  false always 0
  == always {!<=-1,!>=2}
Line 744
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  744 always 744
  true always 1
  == always {!<=-1,!>=2}
Line 745
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  745 always 745
  false always 0
  == always {!<=-1,!>=2}
Line 750
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "::std::string v[3];" always "::std::string v[3];"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  750 always 750
  false always 0
Line 751
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 752
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  752 always 752
  true always 1
  result always {!<=-1,!>=2}
Line 753
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  753 always 753
  "v" always "v"
Line 754
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  754 always 754
  "string" always "string"
Line 755
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 756
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  756 always 756
  true always 1
  == always {!<=-1,!>=2}
Line 757
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  757 always 757
  false always 0
  == always {!<=-1,!>=2}
Line 758
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  758 always 758
  false always 0
  == always {!<=-1,!>=2}
Line 759
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  759 always 759
  false always 0
  == always {!<=-1,!>=2}
Line 764
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "A *a[5];" always "A *a[5];"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  764 always 764
  false always 0
Line 765
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 766
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  766 always 766
  true always 1
  result always {!<=-1,!>=2}
Line 767
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  767 always 767
  "a" always "a"
Line 768
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  768 always 768
  "A" always "A"
Line 769
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 770
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  770 always 770
  false always 0
  == always {!<=-1,!>=2}
Line 771
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  771 always 771
  true always 1
  == always {!<=-1,!>=2}
Line 772
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  772 always 772
  false always 0
  == always {!<=-1,!>=2}
Line 773
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  773 always 773
  true always 1
  == always {!<=-1,!>=2}
Line 774
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  774 always 774
  false always 0
  == always {!<=-1,!>=2}
Line 779
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "A (*a)[5];" always "A (*a)[5];"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  779 always 779
  false always 0
Line 780
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 781
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  781 always 781
  true always 1
  result always {!<=-1,!>=2}
Line 782
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  782 always 782
  "a" always "a"
Line 783
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  783 always 783
  "A" always "A"
Line 784
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 785
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  785 always 785
  true always 1
  == always {!<=-1,!>=2}
Line 786
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  786 always 786
  false always 0
  == always {!<=-1,!>=2}
Line 787
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  787 always 787
  true always 1
  == always {!<=-1,!>=2}
Line 788
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  788 always 788
  false always 0
  == always {!<=-1,!>=2}
Line 789
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  789 always 789
  false always 0
  == always {!<=-1,!>=2}
Line 794
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::set<char>* chars;" always "std::set<char>* chars;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  794 always 794
  false always 0
Line 795
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 796
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  796 always 796
  true always 1
  result always {!<=-1,!>=2}
Line 797
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  797 always 797
  "chars" always "chars"
Line 798
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  798 always 798
  "set" always "set"
Line 799
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 800
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  800 always 800
  false always 0
  == always {!<=-1,!>=2}
Line 801
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  801 always 801
  true always 1
  == always {!<=-1,!>=2}
Line 802
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  802 always 802
  false always 0
  == always {!<=-1,!>=2}
Line 807
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::deque<int>*** ints;" always "std::deque<int>*** ints;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  807 always 807
  false always 0
Line 808
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 809
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  809 always 809
  true always 1
  result always {!<=-1,!>=2}
Line 810
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  810 always 810
  "ints" always "ints"
Line 811
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  811 always 811
  "deque" always "deque"
Line 812
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 813
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  813 always 813
  false always 0
  == always {!<=-1,!>=2}
Line 814
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  814 always 814
  true always 1
  == always {!<=-1,!>=2}
Line 815
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  815 always 815
  false always 0
  == always {!<=-1,!>=2}
Line 820
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::deque<int> ints[3];" always "std::deque<int> ints[3];"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  820 always 820
  false always 0
Line 821
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 822
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  822 always 822
  true always 1
  result always {!<=-1,!>=2}
Line 823
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  823 always 823
  "ints" always "ints"
Line 824
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  824 always 824
  "deque" always "deque"
Line 825
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 826
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  826 always 826
  true always 1
  == always {!<=-1,!>=2}
Line 827
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  827 always 827
  false always 0
  == always {!<=-1,!>=2}
Line 828
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  828 always 828
  false always 0
  == always {!<=-1,!>=2}
Line 833
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::vector<int> ints;" always "std::vector<int> ints;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  833 always 833
  false always 0
Line 834
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 835
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  835 always 835
  true always 1
  result always {!<=-1,!>=2}
Line 836
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  836 always 836
  "ints" always "ints"
Line 837
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  837 always 837
  "vector" always "vector"
Line 838
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 839
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  839 always 839
  false always 0
  == always {!<=-1,!>=2}
Line 840
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  840 always 840
  false always 0
  == always {!<=-1,!>=2}
Line 841
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  841 always 841
  false always 0
  == always {!<=-1,!>=2}
Line 846
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::list<int>::const_iterator floats;" always "std::list<int>::const_iterator floats;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  846 always 846
  false always 0
Line 847
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 848
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  848 always 848
  true always 1
  result always {!<=-1,!>=2}
Line 849
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  849 always 849
  "floats" always "floats"
Line 850
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  850 always 850
  "const_iterator" always "const_iterator"
Line 851
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 852
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  852 always 852
  false always 0
  == always {!<=-1,!>=2}
Line 853
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  853 always 853
  false always 0
  == always {!<=-1,!>=2}
Line 854
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  854 always 854
  false always 0
  == always {!<=-1,!>=2}
Line 859
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::deque<std::set<int> > intsets;" always "std::deque<std::set<int> > intsets;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  859 always 859
  false always 0
Line 860
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 861
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  861 always 861
  true always 1
  result always {!<=-1,!>=2}
Line 862
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  862 always 862
  "intsets" always "intsets"
Line 863
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  863 always 863
  "deque" always "deque"
Line 864
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 865
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  865 always 865
  false always 0
  == always {!<=-1,!>=2}
Line 866
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  866 always 866
  false always 0
  == always {!<=-1,!>=2}
Line 867
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  867 always 867
  false always 0
  == always {!<=-1,!>=2}
Line 873
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int& foo;" always "int& foo;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  873 always 873
  false always 0
Line 874
  result1 always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 875
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  875 always 875
  true always 1
  result1 always {!<=-1,!>=2}
Line 876
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 877
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  877 always 877
  false always 0
  == always {!<=-1,!>=2}
Line 878
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  878 always 878
  false always 0
  == always {!<=-1,!>=2}
Line 879
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  879 always 879
  true always 1
  == always {!<=-1,!>=2}
Line 883
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "foo*& bar;" always "foo*& bar;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  883 always 883
  false always 0
Line 884
  result2 always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 885
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  885 always 885
  true always 1
  result2 always {!<=-1,!>=2}
Line 886
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 887
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  887 always 887
  false always 0
  == always {!<=-1,!>=2}
Line 888
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  888 always 888
  true always 1
  == always {!<=-1,!>=2}
Line 889
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  889 always 889
  true always 1
  == always {!<=-1,!>=2}
Line 893
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::vector<int>& foo;" always "std::vector<int>& foo;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  893 always 893
  false always 0
Line 894
  result3 always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 895
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  895 always 895
  true always 1
  result3 always {!<=-1,!>=2}
Line 896
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 897
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  897 always 897
  false always 0
  == always {!<=-1,!>=2}
Line 898
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  898 always 898
  false always 0
  == always {!<=-1,!>=2}
Line 899
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  899 always 899
  true always 1
  == always {!<=-1,!>=2}
Line 905
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <class T> class SomeClass{};" always "template <class T> class SomeClass{};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  905 always 905
  false always 0
Line 906
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 907
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  907 always 907
  false always 0
  result always {!<=-1,!>=2}
Line 912
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "reinterpret_cast <char *> (code)[0] = 0;" always "reinterpret_cast <char *> (code)[0] = 0;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  912 always 912
  false always 0
Line 913
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 914
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  914 always 914
  false always 0
  result always {!<=-1,!>=2}
Line 919
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::string const* s;" always "std::string const* s;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  919 always 919
  false always 0
Line 920
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 921
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  921 always 921
  true always 1
  result always {!<=-1,!>=2}
Line 922
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 923
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  923 always 923
  false always 0
  == always {!<=-1,!>=2}
Line 924
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  924 always 924
  true always 1
  == always {!<=-1,!>=2}
Line 925
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  925 always 925
  false always 0
  == always {!<=-1,!>=2}
Line 930
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int&& i;" always "int&& i;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  930 always 930
  false always 0
Line 931
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 932
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  932 always 932
  true always 1
  result always {!<=-1,!>=2}
Line 933
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 934
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  934 always 934
  false always 0
  == always {!<=-1,!>=2}
Line 935
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  935 always 935
  false always 0
  == always {!<=-1,!>=2}
Line 936
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  936 always 936
  true always 1
  == always {!<=-1,!>=2}
Line 937
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  937 always 937
  true always 1
  == always {!<=-1,!>=2}
Line 938
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  938 always 938
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 942
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "a b;\nvoid f() {\n  switch (c) {\n    case b:;\n  }}" always "a b;\nvoid f() {\n  switch (c) {\n    case b:;\n  }}"
  "test.c" always "test.c"
  false always 0
Line 948
  1 always 1
Line 949
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  949 always 949
  "b" always "b"
Line 950
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  950 always 950
  "a" always "a"
Line 954
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo() {\n    for (auto& elem : items) {\n        if (auto x = bar()) { int y = 3; }\n    }\n}" always "void foo() {\n    for (auto& elem : items) {\n        if (auto x = bar()) { int y = 3; }\n    }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  954 always 954
  false always 0
Line 959
  "x" always "x"
Line 960
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  960 always 960
Line 961
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  961 always 961
Line 962
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  962 always 962
Line 964
  "y" always "y"
Line 965
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  965 always 965
Line 966
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  966 always 966
Line 967
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  967 always 967
Line 971
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "typedef uint8_t u8;\nstatic u8 x;" always "typedef uint8_t u8;\nstatic u8 x;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  971 always 971
  false always 0
Line 973
  1 always 1
Line 974
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  974 always 974
  "x" always "x"
Line 975
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  975 always 975
Line 979
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "using u8 = uint8_t;\nstatic u8 x;" always "using u8 = uint8_t;\nstatic u8 x;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  979 always 979
  false always 0
Line 981
  1 always 1
Line 982
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  982 always 982
  "x" always "x"
Line 983
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  983 always 983
Line 989
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(std::string::size_type x);" always "void f(std::string::size_type x);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  989 always 989
  false always 0
Line 990
  1 always 1
Line 991
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  991 always 991
  "x" always "x"
Line 993
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  993 always 993
Line 994
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  994 always 994
Line 998
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(std::wstring::size_type x);" always "void f(std::wstring::size_type x);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  998 always 998
  false always 0
Line 999
  1 always 1
Line 1000
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1000 always 1000
  "x" always "x"
Line 1002
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1002 always 1002
Line 1003
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1003 always 1003
Line 1007
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(std::u16string::size_type x);" always "void f(std::u16string::size_type x);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1007 always 1007
  false always 0
Line 1008
  1 always 1
Line 1009
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1009 always 1009
  "x" always "x"
Line 1011
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1011 always 1011
Line 1012
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1012 always 1012
Line 1016
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(std::u32string::size_type x);" always "void f(std::u32string::size_type x);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1016 always 1016
  false always 0
Line 1017
  1 always 1
Line 1018
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1018 always 1018
  "x" always "x"
Line 1020
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1020 always 1020
Line 1021
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1021 always 1021
Line 1026
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class C {\npublic:\n  std::shared_ptr<C> x;\n};" always "class C {\npublic:\n  std::shared_ptr<C> x;\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1026 always 1026
  false always 0
Line 1031
  1 always 1
Line 1032
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1032 always 1032
Line 1033
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1033 always 1033
Line 1037
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class C {};\nvoid foo(std::shared_ptr<C>* p) {}" always "class C {};\nvoid foo(std::shared_ptr<C>* p) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1037 always 1037
  false always 0
Line 1040
  1 always 1
Line 1041
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1041 always 1041
Line 1042
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1042 always 1042
Line 1043
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1043 always 1043
  == always {!<=-1,!>=2}
  1 always 1
Line 1048
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int x) {}\n" always "void foo(int x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1048 always 1048
  false always 0
Line 1049
  1 always 1
Line 1050
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1050 always 1050
Line 1051
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1051 always 1051
  == always {!<=-1,!>=2}
  0 always 0
Line 1052
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1052 always 1052
  == always {!<=-1,!>=2}
  0 always 0
Line 1053
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1053 always 1053
  == always {!<=-1,!>=2}
Line 1056
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int* x) {}\n" always "void foo(int* x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1056 always 1056
  false always 0
Line 1057
  1 always 1
Line 1058
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1058 always 1058
Line 1059
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1059 always 1059
  == always {!<=-1,!>=2}
  1 always 1
Line 1060
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1060 always 1060
  == always {!<=-1,!>=2}
  0 always 0
Line 1061
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1061 always 1061
  == always {!<=-1,!>=2}
Line 1064
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int& x) {}\n" always "void foo(int& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1064 always 1064
  false always 0
Line 1065
  1 always 1
Line 1066
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1066 always 1066
Line 1067
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1067 always 1067
  == always {!<=-1,!>=2}
  0 always 0
Line 1068
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1068 always 1068
  == always {!<=-1,!>=2}
  0 always 0
Line 1069
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1069 always 1069
  == always {!<=-1,!>=2}
Line 1072
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int&& x) {}\n" always "void foo(int&& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1072 always 1072
  false always 0
Line 1073
  1 always 1
Line 1074
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1074 always 1074
Line 1075
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1075 always 1075
  == always {!<=-1,!>=2}
  0 always 0
Line 1076
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1076 always 1076
  == always {!<=-1,!>=2}
  0 always 0
Line 1077
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1077 always 1077
  == always {!<=-1,!>=2}
Line 1080
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int*& x) {}\n" always "void foo(int*& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1080 always 1080
  false always 0
Line 1081
  1 always 1
Line 1082
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1082 always 1082
Line 1083
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1083 always 1083
  == always {!<=-1,!>=2}
  1 always 1
Line 1084
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1084 always 1084
  == always {!<=-1,!>=2}
  0 always 0
Line 1085
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1085 always 1085
  == always {!<=-1,!>=2}
Line 1088
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int*&& x) {}\n" always "void foo(int*&& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1088 always 1088
  false always 0
Line 1089
  1 always 1
Line 1090
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1090 always 1090
Line 1091
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1091 always 1091
  == always {!<=-1,!>=2}
  1 always 1
Line 1092
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1092 always 1092
  == always {!<=-1,!>=2}
  0 always 0
Line 1093
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1093 always 1093
  == always {!<=-1,!>=2}
Line 1096
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int**& x) {}\n" always "void foo(int**& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1096 always 1096
  false always 0
Line 1097
  1 always 1
Line 1098
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1098 always 1098
Line 1099
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1099 always 1099
  == always {!<=-1,!>=2}
  2 always 2
Line 1100
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1100 always 1100
  == always {!<=-1,!>=2}
  0 always 0
Line 1101
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1101 always 1101
  == always {!<=-1,!>=2}
Line 1104
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int**&& x) {}\n" always "void foo(int**&& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1104 always 1104
  false always 0
Line 1105
  1 always 1
Line 1106
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1106 always 1106
Line 1107
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1107 always 1107
  == always {!<=-1,!>=2}
  2 always 2
Line 1108
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1108 always 1108
  == always {!<=-1,!>=2}
  0 always 0
Line 1109
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1109 always 1109
  == always {!<=-1,!>=2}
Line 1112
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(const int& x) {}\n" always "void foo(const int& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1112 always 1112
  false always 0
Line 1113
  1 always 1
Line 1114
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1114 always 1114
Line 1115
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1115 always 1115
  == always {!<=-1,!>=2}
  0 always 0
Line 1116
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1116 always 1116
  == always {!<=-1,!>=2}
  1 always 1
Line 1117
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1117 always 1117
  == always {!<=-1,!>=2}
Line 1120
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(const int&& x) {}\n" always "void foo(const int&& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1120 always 1120
  false always 0
Line 1121
  1 always 1
Line 1122
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1122 always 1122
Line 1123
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1123 always 1123
  == always {!<=-1,!>=2}
  0 always 0
Line 1124
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1124 always 1124
  == always {!<=-1,!>=2}
  1 always 1
Line 1125
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1125 always 1125
  == always {!<=-1,!>=2}
Line 1128
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(const int*& x) {}\n" always "void foo(const int*& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1128 always 1128
  false always 0
Line 1129
  1 always 1
Line 1130
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1130 always 1130
Line 1131
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1131 always 1131
  == always {!<=-1,!>=2}
  1 always 1
Line 1132
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1132 always 1132
  == always {!<=-1,!>=2}
  1 always 1
Line 1133
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1133 always 1133
  == always {!<=-1,!>=2}
Line 1136
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(const int*&& x) {}\n" always "void foo(const int*&& x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1136 always 1136
  false always 0
Line 1137
  1 always 1
Line 1138
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1138 always 1138
Line 1139
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1139 always 1139
  == always {!<=-1,!>=2}
  1 always 1
Line 1140
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1140 always 1140
  == always {!<=-1,!>=2}
  1 always 1
Line 1141
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1141 always 1141
  == always {!<=-1,!>=2}
Line 1144
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int* const & x) {}\n" always "void foo(int* const & x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1144 always 1144
  false always 0
Line 1145
  1 always 1
Line 1146
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1146 always 1146
Line 1147
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1147 always 1147
  == always {!<=-1,!>=2}
  1 always 1
Line 1148
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1148 always 1148
  == always {!<=-1,!>=2}
  2 always 2
Line 1149
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1149 always 1149
  == always {!<=-1,!>=2}
Line 1152
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int* const && x) {}\n" always "void foo(int* const && x) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1152 always 1152
  false always 0
Line 1153
  1 always 1
Line 1154
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1154 always 1154
Line 1155
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1155 always 1155
  == always {!<=-1,!>=2}
  1 always 1
Line 1156
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1156 always 1156
  == always {!<=-1,!>=2}
  2 always 2
Line 1157
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1157 always 1157
  == always {!<=-1,!>=2}
Line 1162
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class A {\npublic:\n    struct B {};\n    void f();\n};\n\nvoid f()\n{\n    struct A::B b;\n    b.x = 1;\n}" always "class A {\npublic:\n    struct B {};\n    void f();\n};\n\nvoid f()\n{\n    struct A::B b;\n    b.x = 1;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1162 always 1162
  false always 0
Line 1173
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1173 always 1173
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1175
  1 always 1
Line 1176
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1176 always 1176
  "b" always "b"
Line 1177
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1177 always 1177
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1181
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class A {\npublic:\n    class B {\n    public:\n        struct C {\n            int x;\n            int y;\n        };\n    };\n\n    void f();\n};\n\nvoid A::f()\n{\n    struct B::C c;\n    c.x = 1;\n}" always "class A {\npublic:\n    class B {\n    public:\n        struct C {\n            int x;\n            int y;\n        };\n    };\n\n    void f();\n};\n\nvoid A::f()\n{\n    struct B::C c;\n    c.x = 1;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1181 always 1181
  false always 0
Line 1199
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1199 always 1199
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1201
  3 always 3
Line 1202
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1202 always 1202
  "c" always "c"
Line 1203
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1203 always 1203
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1207
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace {\n    struct A {\n        int x;\n        int y;\n    };\n}\n\nvoid f()\n{\n    struct A a;\n    a.x = 1;\n}" always "namespace {\n    struct A {\n        int x;\n        int y;\n    };\n}\n\nvoid f()\n{\n    struct A a;\n    a.x = 1;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1207 always 1207
  false always 0
Line 1220
  "a" always "a"
Line 1221
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1221 always 1221
Line 1222
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1222 always 1222
  && always {!<=-1,!>=2}
  avar always !0
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1226
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "extern \"C\" { typedef int INT; }\nvoid bar() {\n    INT x = 3;\n}" always "extern \"C\" { typedef int INT; }\nvoid bar() {\n    INT x = 3;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1226 always 1226
  false always 0
Line 1231
  "x" always "x"
Line 1232
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1232 always 1232
Line 1233
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1233 always 1233
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1234
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1234 always 1234
  == always {!<=-1,!>=2}
  "signed int" always "signed int"
Line 1238
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void reset() {\n    for(auto& e : array)\n        foo(e);\n}" always "void reset() {\n    for(auto& e : array)\n        foo(e);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1238 always 1238
  false always 0
Line 1243
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1243 always 1243
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1245
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1245 always 1245
  == always {!<=-1,!>=2}
Line 1246
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1246 always 1246
  2 always 2
Line 1248
  1 always 1
Line 1249
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1249 always 1249
  && always {!<=-1,!>=2}
  e always !0
  && always {!<=-1,!>=2}
  e always !0
Line 1254
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::string s;" always "std::string s;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1254 always 1254
  false always 0
Line 1255
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 1256
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1256 always 1256
  true always 1
  result always {!<=-1,!>=2}
Line 1257
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 1258
  "string" always "string"
  "wstring" always "wstring"
Line 1259
  "set" always "set"
Line 1260
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1260 always 1260
  true always 1
Line 1261
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1261 always 1261
  true always 1
  types always {
Line 1262
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1262 always 1262
  false always 0
  no_types always {
Line 1263
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1263 always 1263
  true always 1
Line 1267
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::vector<int> v;" always "std::vector<int> v;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1267 always 1267
  false always 0
Line 1268
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 1269
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1269 always 1269
  true always 1
  result always {!<=-1,!>=2}
Line 1270
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 1271
  "bitset" always "bitset"
  "set" always "set"
  "vector" always "vector"
  "wstring" always "wstring"
Line 1272
  "bitset" always "bitset"
  "map" always "map"
  "set" always "set"
Line 1273
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1273 always 1273
  true always 1
Line 1274
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1274 always 1274
  true always 1
  types always {
Line 1275
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1275 always 1275
  false always 0
  no_types always {
Line 1276
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1276 always 1276
  false always 0
Line 1280
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "SomeClass s;" always "SomeClass s;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1280 always 1280
  false always 0
Line 1281
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 1282
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1282 always 1282
  true always 1
  result always {!<=-1,!>=2}
Line 1283
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 1284
  "bitset" always "bitset"
  "set" always "set"
  "vector" always "vector"
Line 1285
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1285 always 1285
  false always 0
Line 1286
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1286 always 1286
  false always 0
  types always {
Line 1287
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1287 always 1287
  false always 0
Line 1293
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "char* const * s;" always "char* const * s;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1293 always 1293
  false always 0
Line 1294
  result always {!<=-1,!>=2}
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 1295
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1295 always 1295
  true always 1
  result always {!<=-1,!>=2}
Line 1296
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 1297
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1297 always 1297
  false always 0
  == always {!<=-1,!>=2}
Line 1298
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1298 always 1298
  true always 1
  == always {!<=-1,!>=2}
Line 1299
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1299 always 1299
  false always 0
  == always {!<=-1,!>=2}
Line 1304
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "char* volatile * s;" always "char* volatile * s;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1304 always 1304
  false always 0
Line 1305
  result always {!<=-1,!>=2}
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 1306
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1306 always 1306
  true always 1
  result always {!<=-1,!>=2}
Line 1307
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 1308
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1308 always 1308
  false always 0
  == always {!<=-1,!>=2}
Line 1309
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1309 always 1309
  true always 1
  == always {!<=-1,!>=2}
Line 1310
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1310 always 1310
  false always 0
  == always {!<=-1,!>=2}
Line 1315
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "char* const volatile * s;" always "char* const volatile * s;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1315 always 1315
  false always 0
Line 1316
  result always {!<=-1,!>=2}
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 1317
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1317 always 1317
  true always 1
  result always {!<=-1,!>=2}
Line 1318
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 1319
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1319 always 1319
  false always 0
  == always {!<=-1,!>=2}
Line 1320
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1320 always 1320
  true always 1
  == always {!<=-1,!>=2}
Line 1321
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1321 always 1321
  false always 0
  == always {!<=-1,!>=2}
Line 1326
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "const char* const volatile * const volatile * const volatile * const volatile s;" always "const char* const volatile * const volatile * const volatile * const volatile s;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1326 always 1326
  false always 0
Line 1327
  result always {!<=-1,!>=2}
  result always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 1328
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1328 always 1328
  true always 1
  result always {!<=-1,!>=2}
Line 1329
  0 always 0
  nullptr always 0
  nullptr always 0
  & {lifetime[Address]=(settings1),!0}
Line 1330
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1330 always 1330
  false always 0
  == always {!<=-1,!>=2}
Line 1331
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1331 always 1331
  true always 1
  == always {!<=-1,!>=2}
Line 1332
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1332 always 1332
  false always 0
  == always {!<=-1,!>=2}
Line 1336
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::atomic<int> x;\nvolatile int y;" always "std::atomic<int> x;\nvolatile int y;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1336 always 1336
  false always 0
Line 1339
  "x" always "x"
Line 1340
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1340 always 1340
Line 1341
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1341 always 1341
Line 1342
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1342 always 1342
Line 1344
  "y" always "y"
Line 1345
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1345 always 1345
Line 1346
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1346 always 1346
Line 1347
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1347 always 1347
Line 1351
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "constexpr int x = 16;" always "constexpr int x = 16;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1351 always 1351
  false always 0
Line 1353
  "x" always "x"
Line 1354
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1354 always 1354
Line 1355
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1355 always 1355
Line 1356
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1356 always 1356
Line 1357
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1357 always 1357
Line 1358
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1358 always 1358
Line 1359
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1359 always 1359
  == always {!<=-1,!>=2}
  0 always 0
Line 1360
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1360 always 1360
  == always {!<=-1,!>=2}
  1 always 1
Line 1361
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1361 always 1361
  == always {!<=-1,!>=2}
Line 1365
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int x;\ndecltype(x) a;\nconst decltype(x) b;\ndecltype(x) *c;\n" always "int x;\ndecltype(x) a;\nconst decltype(x) b;\ndecltype(x) *c;\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1365 always 1365
  false always 0
Line 1369
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1369 always 1369
Line 1370
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1370 always 1370
  4 always 4
Line 1372
  "a" always "a"
Line 1373
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1373 always 1373
Line 1374
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1374 always 1374
  "a" always "a"
Line 1375
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1375 always 1375
Line 1376
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1376 always 1376
  "signed int" always "signed int"
Line 1378
  "b" always "b"
Line 1379
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1379 always 1379
Line 1380
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1380 always 1380
  "b" always "b"
Line 1381
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1381 always 1381
Line 1382
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1382 always 1382
  "const signed int" always "const signed int"
Line 1384
  "c" always "c"
Line 1385
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1385 always 1385
Line 1386
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1386 always 1386
  "c" always "c"
Line 1387
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1387 always 1387
Line 1388
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1388 always 1388
  "signed int *" always "signed int *"
Line 1392
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10];\n    foo[1].x = 123;\n}" always "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10];\n    foo[1].x = 123;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1392 always 1392
  false always 0
Line 1400
  ". x" always ". x"
Line 1401
  = possible 0
  ? possible 0
  tok always !0
  : always 0
  nullptr always 0
Line 1402
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1402 always 1402
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1403
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1403 always 1403
  && always {!<=-1,!>=2}
  tok always !0
  && always {!<=-1,!>=2}
  tok always !0
  "int x ;" always "int x ;"
Line 1404
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1404 always 1404
  && always {!<=-1,!>=2}
  tok always !0
  == always {!<=-1,!>=2}
  3U always 3
Line 1408
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10][10];\n    foo[1][2].x = 123;\n}" always "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10][10];\n    foo[1][2].x = 123;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1408 always 1408
  false always 0
Line 1416
  ". x" always ". x"
Line 1417
  = possible 0
  ? possible 0
  tok always !0
  : always 0
  nullptr always 0
Line 1418
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1418 always 1418
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1419
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1419 always 1419
  && always {!<=-1,!>=2}
  tok always !0
  && always {!<=-1,!>=2}
  tok always !0
  "int x ;" always "int x ;"
Line 1420
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1420 always 1420
  && always {!<=-1,!>=2}
  tok always !0
  == always {!<=-1,!>=2}
  3U always 3
Line 1424
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10];\n    (foo[1]).x = 123;\n}" always "struct Foo {\n    int x;\n};\nvoid f() {\n    struct Foo foo[10];\n    (foo[1]).x = 123;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1424 always 1424
  false always 0
Line 1432
  ". x" always ". x"
Line 1433
  = possible 0
  ? possible 0
  tok always !0
  : always 0
  nullptr always 0
Line 1434
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1434 always 1434
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1435
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1435 always 1435
  && always {!<=-1,!>=2}
  tok always !0
  && always {!<=-1,!>=2}
  tok always !0
  "int x ;" always "int x ;"
Line 1436
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1436 always 1436
  && always {!<=-1,!>=2}
  tok always !0
  == always {!<=-1,!>=2}
  3U always 3
Line 1440
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S { unsigned char* s; };\nstruct T { S s[38]; };\nvoid f(T* t) {\n    t->s;\n}\n" always "struct S { unsigned char* s; };\nstruct T { S s[38]; };\nvoid f(T* t) {\n    t->s;\n}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1440 always 1440
  false always 0
Line 1445
  ". s" always ". s"
Line 1446
  = possible 0
  ? possible 0
  tok always !0
  : always 0
  nullptr always 0
Line 1447
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1447 always 1447
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1448
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1448 always 1448
  && always {!<=-1,!>=2}
  tok always !0
  && always {!<=-1,!>=2}
  tok always !0
  "S s [ 38 ] ;" always "S s [ 38 ] ;"
Line 1449
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1449 always 1449
  && always {!<=-1,!>=2}
  tok always !0
  == always {!<=-1,!>=2}
  4U always 4
Line 1453
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo {\n    static const double d;\n};\nconst double Foo::d = 5.0;" always "class Foo {\n    static const double d;\n};\nconst double Foo::d = 5.0;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1453 always 1453
  false always 0
Line 1458
  1 always 1
Line 1459
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1459 always 1459
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 1460
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1460 always 1460
  && always {!<=-1,!>=2}
  v always !0
  && always {!<=-1,!>=2}
  v always !0
  && always {!<=-1,!>=2}
Line 1464
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int x;\nint y;" always "int x;\nint y;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1464 always 1464
  false always 0
Line 1467
  2 always 2
Line 1469
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1469 always 1469
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  3 always 3
Line 1471
  3 always 3
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1471 always 1471
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1471 always 1471
  false always 0
Line 1475
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func() { }" always "void func() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1475 always 1475
  false always 0
Line 1478
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1478 always 1478
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 1482
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1482 always 1482
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1484
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1484 always 1484
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1486
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 1488
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1488 always 1488
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1489
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1489 always 1489
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1490
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1490 always 1490
  && always {!<=-1,!>=2}
  function always !0
Line 1491
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1491 always 1491
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
  == always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always symbolic=(scope->function)
  != always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
Line 1492
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1492 always 1492
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1496
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "auto func() -> int { }" always "auto func() -> int { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1496 always 1496
  false always 0
Line 1499
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1499 always 1499
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 1503
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1503 always 1503
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1505
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1505 always 1505
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1507
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 1509
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1509 always 1509
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1510
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1510 always 1510
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1511
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1511 always 1511
  && always {!<=-1,!>=2}
  function always !0
Line 1512
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1512 always 1512
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
  == always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always symbolic=(scope->function)
  != always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
Line 1513
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1513 always 1513
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 1517
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { void func() { } };" always "class Fred { void func() { } };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1517 always 1517
  false always 0
Line 1520
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1520 always 1520
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1522
  "func" always "func"
Line 1526
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1526 always 1526
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1528
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1528 always 1528
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1530
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1532
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1532 always 1532
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1533
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1533 always 1533
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1534
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1534 always 1534
  && always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always !0
Line 1535
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1535 always 1535
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
  == always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always symbolic=(scope->function)
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1536
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1536 always 1536
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1538
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1538 always 1538
  && always {!<=-1,!>=2}
  db always !0
  "Fred" always "Fred"
  && always {!<=-1,!>=2}
  db always !0
  "Fred" always "Fred"
  "func" always "func"
  == always {!<=-1,!>=2}
Line 1543
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { auto func() -> int { } };" always "class Fred { auto func() -> int { } };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1543 always 1543
  false always 0
Line 1546
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1546 always 1546
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1548
  "func" always "func"
Line 1552
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1552 always 1552
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1554
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1554 always 1554
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1556
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1558
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1558 always 1558
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1559
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1559 always 1559
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1560
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1560 always 1560
  && always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always !0
Line 1561
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1561 always 1561
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
  == always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always symbolic=(scope->function)
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1562
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1562 always 1562
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 1564
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1564 always 1564
  && always {!<=-1,!>=2}
  db always !0
  "Fred" always "Fred"
  && always {!<=-1,!>=2}
  db always !0
  "Fred" always "Fred"
  "func" always "func"
  == always {!<=-1,!>=2}
Line 1568
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { void func(); };" always "class Fred { void func(); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1568 always 1568
  false always 0
Line 1571
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1571 always 1571
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 1573
  "func" always "func"
Line 1577
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1577 always 1577
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1579
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1581
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1581 always 1581
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1582
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1582 always 1582
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1583
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1583 always 1583
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  function always !0
Line 1587
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred { template<typename T> Foo & operator=(const Foo &) { return *this; } };" always "struct Fred { template<typename T> Foo & operator=(const Foo &) { return *this; } };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1587 always 1587
  false always 0
Line 1590
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1590 always 1590
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1592
  "operator=" always "operator="
Line 1596
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1596 always 1596
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "operator=" always "operator="
Line 1598
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1598 always 1598
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1600
  "operator=" always "operator="
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1602
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1602 always 1602
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "operator=" always "operator="
Line 1603
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1603 always 1603
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1604
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1604 always 1604
  && always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always !0
Line 1605
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1605 always 1605
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
  == always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always symbolic=(scope->function)
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1606
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1606 always 1606
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  -2 always -2
Line 1608
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1608 always 1608
  && always {!<=-1,!>=2}
  db always !0
  "Fred" always "Fred"
  && always {!<=-1,!>=2}
  db always !0
  "Fred" always "Fred"
  "operator=" always "operator="
  == always {!<=-1,!>=2}
Line 1612
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { void func(); }; void Fred::func() { }" always "class Fred { void func(); }; void Fred::func() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1612 always 1612
  false always 0
Line 1615
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1615 always 1615
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1617
  2 always 2
  "func" always "func"
Line 1621
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1621 always 1621
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1623
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1623 always 1623
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1625
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1627
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1627 always 1627
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1628
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1628 always 1628
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1629
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1629 always 1629
  && always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  function always !0
Line 1630
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1630 always 1630
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
  == always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always symbolic=(scope->function)
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1634
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { auto func() -> int; }; auto Fred::func() -> int { }" always "class Fred { auto func() -> int; }; auto Fred::func() -> int { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1634 always 1634
  false always 0
Line 1637
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1637 always 1637
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1639
  2 always 2
  "func" always "func"
Line 1643
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1643 always 1643
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1645
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1645 always 1645
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1647
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1649
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1649 always 1649
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1650
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1650 always 1650
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1651
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1651 always 1651
  && always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  function always !0
Line 1652
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1652 always 1652
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  scope always symbolic=(function->functionScope)
  == always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always symbolic=(scope->function)
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 1657
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct d { decltype(auto) f() {} };" always "struct d { decltype(auto) f() {} };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1657 always 1657
  false always 0
Line 1660
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1660 always 1660
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1662
  "f" always "f"
Line 1666
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1666 always 1666
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "f" always "f"
Line 1668
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1668 always 1668
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "d" always "d"
Line 1670
  "f" always "f"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1672
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1672 always 1672
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "f" always "f"
Line 1673
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1673 always 1673
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1674
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1674 always 1674
  && always {!<=-1,!>=2}
  function always !0
Line 1678
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void (*func(int f))(char) { }" always "void (*func(int f))(char) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1678 always 1678
  false always 0
Line 1681
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1681 always 1681
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 1683
  "func" always "func"
Line 1687
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1687 always 1687
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1689
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 1691
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1691 always 1691
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1692
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1692 always 1692
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1693
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1693 always 1693
  && always {!<=-1,!>=2}
  function always !0
Line 1697
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { void (*func(int f))(char) { } };" always "class Fred { void (*func(int f))(char) { } };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1697 always 1697
  false always 0
Line 1700
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1700 always 1700
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1702
  "func" always "func"
Line 1706
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1706 always 1706
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1708
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1710
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1710 always 1710
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1711
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1711 always 1711
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1712
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1712 always 1712
  && always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always !0
Line 1716
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { void (*func(int f))(char); };" always "class Fred { void (*func(int f))(char); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1716 always 1716
  false always 0
Line 1719
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1719 always 1719
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 1721
  "func" always "func"
Line 1725
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1725 always 1725
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1727
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1729
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1729 always 1729
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1730
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1730 always 1730
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1731
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1731 always 1731
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  function always !0
Line 1735
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { void (*func(int f))(char); }; void (*Fred::func(int f))(char) { }" always "class Fred { void (*func(int f))(char); }; void (*Fred::func(int f))(char) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1735 always 1735
  false always 0
Line 1738
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1738 always 1738
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1740
  2 always 2
  "func" always "func"
Line 1744
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1744 always 1744
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1746
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1748
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1748 always 1748
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1749
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1749 always 1749
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1750
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1750 always 1750
  && always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  function always !0
Line 1754
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { void Fred::func() {} };" always "class Fred { void Fred::func() {} };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1754 always 1754
  false always 0
Line 1757
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1757 always 1757
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 1759
  "func" always "func"
Line 1763
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1763 always 1763
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1765
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
Line 1767
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1767 always 1767
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "func" always "func"
Line 1768
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1768 always 1768
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
Line 1769
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1769 always 1769
  && always {!<=-1,!>=2}
  function always !0
  && always {!<=-1,!>=2}
  function always !0
Line 1773
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int(*p1)[10]; \nvoid(*p2)(char); \nint(*(*p3)(char))[10];\nfloat(*(*p4)(char))(long); \nshort(*(*(*p5) (char))(long))(double);\nint(*a1[10])(void); \nfloat(*(*a2[10])(char))(long);\nshort(*(*(*a3[10])(char))(long))(double);\n::boost::rational(&r_)[9];\n::boost::rational<T>(&r_)[9];" always "int(*p1)[10]; \nvoid(*p2)(char); \nint(*(*p3)(char))[10];\nfloat(*(*p4)(char))(long); \nshort(*(*(*p5) (char))(long))(double);\nint(*a1[10])(void); \nfloat(*(*a2[10])(char))(long);\nshort(*(*(*a3[10])(char))(long))(double);\n::boost::rational(&r_)[9];\n::boost::rational<T>(&r_)[9];"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1773 always 1773
  false always 0
Line 1784
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1784 always 1784
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1786
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1786 always 1786
  10 always 10
  1 always 1
Line 1787
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1787 always 1787
  true always 1
  1 always 1
  && always {!<=-1,!>=2}
  1 always 1
  == always {!<=-1,!>=2}
  1 always 1
Line 1788
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1788 always 1788
  true always 1
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1789
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1789 always 1789
  true always 1
  3 always 3
  && always {!<=-1,!>=2}
  3 always 3
  == always {!<=-1,!>=2}
  0 always 0
Line 1790
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1790 always 1790
  true always 1
  4 always 4
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1791
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1791 always 1791
  true always 1
  5 always 5
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1792
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1792 always 1792
  true always 1
  6 always 6
  && always {!<=-1,!>=2}
  6 always 6
  == always {!<=-1,!>=2}
  1 always 1
Line 1793
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1793 always 1793
  true always 1
  7 always 7
  && always {!<=-1,!>=2}
  7 always 7
  == always {!<=-1,!>=2}
  1 always 1
Line 1794
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1794 always 1794
  true always 1
  8 always 8
  && always {!<=-1,!>=2}
  8 always 8
  == always {!<=-1,!>=2}
  1 always 1
Line 1795
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1795 always 1795
  true always 1
  9 always 9
  && always {!<=-1,!>=2}
  9 always 9
  == always {!<=-1,!>=2}
  1 always 1
Line 1796
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1796 always 1796
  true always 1
  10 always 10
  && always {!<=-1,!>=2}
  10 always 10
  == always {!<=-1,!>=2}
  1 always 1
Line 1797
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1797 always 1797
  "" always ""
Line 1801
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "bool (A::*pFun)();" always "bool (A::*pFun)();"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1801 always 1801
  false always 0
Line 1803
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1803 always 1803
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1805
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1805 always 1805
  1 always 1
  1 always 1
Line 1806
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1806 always 1806
  true always 1
  1 always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1808
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1808 always 1808
  "pFun" always "pFun"
  1 always 1
Line 1809
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1809 always 1809
  "" always ""
Line 1813
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { class Sub; }; class Foo::Sub { Sub() {} };" always "class Foo { class Sub; }; class Foo::Sub { Sub() {} };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1813 always 1813
  false always 0
Line 1814
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1814 always 1814
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1816
  seen_something always {!<=-1,!>=2}
  seen_something always {!<=-1,!>=2}
  = always 0
  false always 0
Line 1818
  != always {!<=-1,!>=2}
Line 1819
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1819 always 1819
  "Sub" always "Sub"
Line 1820
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1820 always 1820
  true always 1
Line 1821
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1821 always 1821
Line 1822
  seen_something always {!<=-1,!>=2}
  = always 1
  true always 1
Line 1825
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1825 always 1825
  true always 1
  seen_something always {!<=-1,!>=2}
Line 1830
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(); };" always "class Foo { Foo(); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1830 always 1830
  false always 0
Line 1831
  3 always 3
Line 1832
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1832 always 1832
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1833
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1833 always 1833
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1836
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(Foo f); };" always "class Foo { Foo(Foo f); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1836 always 1836
  false always 0
Line 1837
  3 always 3
Line 1838
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1838 always 1838
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  ctor always !0
Line 1839
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1839 always 1839
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1842
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { explicit Foo(Foo f); };" always "class Foo { explicit Foo(Foo f); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1842 always 1842
  false always 0
Line 1843
  4 always 4
Line 1844
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1844 always 1844
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
Line 1845
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1845 always 1845
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1848
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(Bar& f); };" always "class Foo { Foo(Bar& f); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1848 always 1848
  false always 0
Line 1849
  3 always 3
Line 1850
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1850 always 1850
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1851
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1851 always 1851
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1854
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(Foo& f); };" always "class Foo { Foo(Foo& f); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1854 always 1854
  false always 0
Line 1855
  3 always 3
Line 1856
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1856 always 1856
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1857
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1857 always 1857
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1860
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(const Foo &f); };" always "class Foo { Foo(const Foo &f); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1860 always 1860
  false always 0
Line 1861
  3 always 3
Line 1862
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1862 always 1862
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1863
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1863 always 1863
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1866
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <T> class Foo { Foo(Foo<T>& f); };" always "template <T> class Foo { Foo(Foo<T>& f); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1866 always 1866
  false always 0
Line 1867
  7 always 7
Line 1868
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1868 always 1868
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1869
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1869 always 1869
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1872
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(Foo& f, int default = 0); };" always "class Foo { Foo(Foo& f, int default = 0); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1872 always 1872
  false always 0
Line 1873
  3 always 3
Line 1874
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1874 always 1874
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1875
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1875 always 1875
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1878
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(Foo& f, char noDefault); };" always "class Foo { Foo(Foo& f, char noDefault); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1878 always 1878
  false always 0
Line 1879
  3 always 3
Line 1880
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1880 always 1880
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1881
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1881 always 1881
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1884
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(Foo&& f); };" always "class Foo { Foo(Foo&& f); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1884 always 1884
  false always 0
Line 1885
  3 always 3
Line 1886
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1886 always 1886
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1887
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1887 always 1887
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1890
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo { Foo(Foo&& f, int default = 1, bool defaultToo = true); };" always "class Foo { Foo(Foo&& f, int default = 1, bool defaultToo = true); };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1890 always 1890
  false always 0
Line 1891
  3 always 3
Line 1892
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1892 always 1892
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
Line 1893
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1893 always 1893
  && always {!<=-1,!>=2}
  ctor always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 1898
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::map<int, string> foo() {}" always "std::map<int, string> foo() {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1898 always 1898
  false always 0
Line 1901
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1901 always 1901
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  "foo" always "foo"
  & {lifetime[Address]=(db->scopeList.back()),!0}
  db always !0
Line 1903
  = {lifetime[Address]=(db->scopeList.front()),!0}
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 1905
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1905 always 1905
  scope {1,lifetime[Address]=(db->scopeList.front())}
  && always {!<=-1,!>=2}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  1 always 1
Line 1907
  = {lifetime[Address]=(scope->functionList.front()),!0}
  & {lifetime[Address]=(scope->functionList.front()),!0}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
Line 1909
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1909 always 1909
  foo {1,lifetime[Address]=(scope->functionList.front())}
  && always {!<=-1,!>=2}
  foo {lifetime[Address]=(scope->functionList.front()),!0}
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 1910
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1910 always 1910
  foo {1,lifetime[Address]=(scope->functionList.front())}
  && always {!<=-1,!>=2}
  foo {lifetime[Address]=(scope->functionList.front()),!0}
Line 1914
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo();\nvoid foo();\nint foo(int i);\nvoid foo() {}" always "void foo();\nvoid foo();\nint foo(int i);\nvoid foo() {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1914 always 1914
  false always 0
Line 1917
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1917 always 1917
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  "foo" always "foo"
  & {lifetime[Address]=(db->scopeList.back()),!0}
  db always !0
Line 1919
  = {lifetime[Address]=(db->scopeList.front()),!0}
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 1921
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1921 always 1921
  scope {1,lifetime[Address]=(db->scopeList.front())}
  && always {!<=-1,!>=2}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  2 always 2
Line 1923
  = {lifetime[Address]=(scope->functionList.front()),!0}
  & {lifetime[Address]=(scope->functionList.front()),!0}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
Line 1924
  = {lifetime[Address]=(scope->functionList.back()),!0}
  & {lifetime[Address]=(scope->functionList.back()),!0}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
Line 1926
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1926 always 1926
  foo {1,lifetime[Address]=(scope->functionList.front())}
  && always {!<=-1,!>=2}
  foo {lifetime[Address]=(scope->functionList.front()),!0}
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 1927
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1927 always 1927
  foo {1,lifetime[Address]=(scope->functionList.front())}
  && always {!<=-1,!>=2}
  foo {lifetime[Address]=(scope->functionList.front()),!0}
Line 1928
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1928 always 1928
  && always {!<=-1,!>=2}
  foo always !0
  2 always 2
  == always {!<=-1,!>=2}
  ")" always ")"
Line 1930
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1930 always 1930
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  foo_int always !0
Line 1931
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1931 always 1931
  && always {!<=-1,!>=2}
  foo_int always !0
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 1932
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1932 always 1932
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  foo_int always !0
Line 1933
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1933 always 1933
  && always {!<=-1,!>=2}
  foo_int always !0
  2 always 2
  == always {!<=-1,!>=2}
  "int" always "int"
Line 1935
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1935 always 1935
  & {lifetime[Address]=(foo_int->argumentList.front()),!0}
  == always {!<=-1,!>=2}
  1 always 1
Line 1939
  & {lifetime[Address]=(settings1),!0}
  this always !0
  ( {lifetime[Object]=(exename),!0}
  "std.cfg" always "std.cfg"
  != always {!<=-1,!>=2}
  "std.cfg" always "std.cfg"
  false always 0
  "std::array<int,2> foo(int x);" always "std::array<int,2> foo(int x);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1939 always 1939
  false always 0
Line 1942
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1942 always 1942
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 1944
  = {lifetime[Address]=(db->scopeList.front()),!0}
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 1946
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1946 always 1946
  scope {1,lifetime[Address]=(db->scopeList.front())}
  && always {!<=-1,!>=2}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  1 always 1
Line 1948
  = {lifetime[Address]=(scope->functionList.front()),!0}
  & {lifetime[Address]=(scope->functionList.front()),!0}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
Line 1950
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1950 always 1950
  foo {1,lifetime[Address]=(scope->functionList.front())}
Line 1951
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1951 always 1951
  foo {lifetime[Address]=(scope->functionList.front()),!0}
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 1952
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1952 always 1952
  ! always {!<=-1,!>=2}
Line 1955
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1955 always 1955
  == always {!<=-1,!>=2}
  "(" always "("
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 1956
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1956 always 1956
  == always {!<=-1,!>=2}
Line 1960
  & {lifetime[Address]=(settings1),!0}
  this always !0
  ( {lifetime[Object]=(exename),!0}
  "std.cfg" always "std.cfg"
  != always {!<=-1,!>=2}
  "std.cfg" always "std.cfg"
  false always 0
  "constexpr int foo();" always "constexpr int foo();"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1960 always 1960
  false always 0
Line 1963
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1963 always 1963
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 1965
  = {lifetime[Address]=(db->scopeList.front()),!0}
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 1967
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1967 always 1967
  scope {1,lifetime[Address]=(db->scopeList.front())}
  && always {!<=-1,!>=2}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  1 always 1
Line 1969
  = {lifetime[Address]=(scope->functionList.front()),!0}
  & {lifetime[Address]=(scope->functionList.front()),!0}
  scope {lifetime[Address]=(db->scopeList.front()),!0}
Line 1971
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1971 always 1971
  foo {1,lifetime[Address]=(scope->functionList.front())}
Line 1972
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1972 always 1972
  foo {lifetime[Address]=(scope->functionList.front()),!0}
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 1973
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1973 always 1973
  ! always {!<=-1,!>=2}
Line 1974
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1974 always 1974
Line 1978
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::string logfile;\nstd::ofstream log(logfile.c_str(), std::ios::out);" always "std::string logfile;\nstd::ofstream log(logfile.c_str(), std::ios::out);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1978 always 1978
  false always 0
Line 1982
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1982 always 1982
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 1985
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1985 always 1985
Line 1989
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class ScVbaFormatCondition { OUString getServiceImplName() SAL_OVERRIDE; };\nvoid ScVbaValidation::getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}" always "class ScVbaFormatCondition { OUString getServiceImplName() SAL_OVERRIDE; };\nvoid ScVbaValidation::getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1989 always 1989
  false always 0
Line 1995
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1995 always 1995
  && always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
Line 1997
  "getFormula1" always "getFormula1"
Line 1998
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1998 always 1998
  != always {!<=-1,!>=2}
  nullptr always 0
Line 1999
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  1999 always 1999
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 2003
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class ScVbaFormatCondition { OUString getServiceImplName() SAL_OVERRIDE {} };\nvoid getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}" always "class ScVbaFormatCondition { OUString getServiceImplName() SAL_OVERRIDE {} };\nvoid getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2003 always 2003
  false always 0
Line 2009
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2009 always 2009
  && always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
Line 2011
  "getFormula1" always "getFormula1"
Line 2012
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2012 always 2012
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2013
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2013 always 2013
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 2015
  "getServiceImplName" always "getServiceImplName"
Line 2016
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2016 always 2016
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2017
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2017 always 2017
  && always {!<=-1,!>=2}
  scope always !0
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  "ScVbaFormatCondition" always "ScVbaFormatCondition"
Line 2021
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class ScVbaFormatCondition { OUString getServiceImplName() THROW(whatever); };\nvoid ScVbaValidation::getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}" always "class ScVbaFormatCondition { OUString getServiceImplName() THROW(whatever); };\nvoid ScVbaValidation::getFormula1() {\n    sal_uInt16 nFlags = 0;\n    if (pDocSh && !getCellRangesForAddress(nFlags)) ;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2021 always 2021
  false always 0
Line 2027
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2027 always 2027
  && always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
Line 2029
  "getFormula1" always "getFormula1"
Line 2030
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2030 always 2030
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2031
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2031 always 2031
  && always {!<=-1,!>=2}
  scope always !0
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 2035
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "static void f1() { }\nvoid f2();\nextern void f3();\nvoid f4();\nextern void f5() { };\nvoid f6() { }" always "static void f1() { }\nvoid f2();\nextern void f3();\nvoid f4();\nextern void f5() { };\nvoid f6() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2035 always 2035
  false always 0
Line 2042
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2042 always 2042
  && always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
Line 2044
  "f1" always "f1"
Line 2045
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2045 always 2045
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "void" always "void"
Line 2047
  "f2" always "f2"
Line 2048
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2048 always 2048
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "void" always "void"
Line 2050
  "f3" always "f3"
Line 2051
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2051 always 2051
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "void" always "void"
Line 2053
  "f4" always "f4"
Line 2054
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2054 always 2054
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "void" always "void"
Line 2056
  "f5" always "f5"
Line 2057
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2057 always 2057
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "void" always "void"
Line 2059
  "f6" always "f6"
Line 2060
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2060 always 2060
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "void" always "void"
Line 2064
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo {}; class Bar1 { friend class Foo; }; class Bar2 { friend Foo; };" always "class Foo {}; class Bar1 { friend class Foo; }; class Bar2 { friend Foo; };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2064 always 2064
  false always 0
Line 2066
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2066 always 2066
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 2068
  "Foo" always "Foo"
Line 2069
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2069 always 2069
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2070
  "Bar1" always "Bar1"
Line 2071
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2071 always 2071
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2072
  "Bar2" always "Bar2"
Line 2073
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2073 always 2073
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2075
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2075 always 2075
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Foo" always "Foo"
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
Line 2076
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2076 always 2076
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Foo" always "Foo"
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
Line 2081
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func(i) int i; { if (i == 1) return; }" always "void func(i) int i; { if (i == 1) return; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2081 always 2081
  false always 0
Line 2082
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2082 always 2082
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2085
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2085 always 2085
  3 always 3
Line 2087
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2087 always 2087
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.back()),!0}
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2088
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2088 always 2088
  "if" always "if"
  & {lifetime[Address]=(db->scopeList.back()),!0}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 2092
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func();\nint bar() {}\nvoid func() {}" always "void func();\nint bar() {}\nvoid func() {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2092 always 2092
  false always 0
Line 2095
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2095 always 2095
  3 always 3
  "func" always "func"
Line 2099
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo {\n    std::vector<std::string> bar;\n    Foo() : bar({\"a\", \"b\"})\n    {}\n};" always "class Foo {\n    std::vector<std::string> bar;\n    Foo() : bar({\"a\", \"b\"})\n    {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2099 always 2099
  false always 0
Line 2104
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2104 always 2104
  4 always 4
Line 2108
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int i;" always "int i;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2108 always 2108
  false always 0
Line 2110
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2110 always 2110
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 2113
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2113 always 2113
  == always {!<=-1,!>=2}
  1 always 1
Line 2115
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2115 always 2115
  == always {!<=-1,!>=2}
  "i" always "i"
Line 2116
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2116 always 2116
  == always {!<=-1,!>=2}
  "int" always "int"
Line 2120
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int array[2][2];" always "int array[2][2];"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2120 always 2120
  false always 0
Line 2122
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2122 always 2122
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 2125
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2125 always 2125
  == always {!<=-1,!>=2}
  1 always 1
Line 2128
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2128 always 2128
  == always {!<=-1,!>=2}
  "array" always "array"
Line 2129
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2129 always 2129
  == always {!<=-1,!>=2}
  "int" always "int"
Line 2133
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int array[2][2] = { { 0, 0 }, { 0, 0 } };" always "int array[2][2] = { { 0, 0 }, { 0, 0 } };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2133 always 2133
  false always 0
Line 2135
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2135 always 2135
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 2138
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2138 always 2138
  == always {!<=-1,!>=2}
  1 always 1
Line 2141
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2141 always 2141
  == always {!<=-1,!>=2}
  "array" always "array"
Line 2142
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2142 always 2142
  == always {!<=-1,!>=2}
  "int" always "int"
Line 2146
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "static std::string i;\nstatic const std::string j;\nconst std::string* k;\nconst char m[];\nvoid f(const char* const l;) {}" always "static std::string i;\nstatic const std::string j;\nconst std::string* k;\nconst char m[];\nvoid f(const char* const l;) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2146 always 2146
  false always 0
Line 2152
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2152 always 2152
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  db always !0
  1 always 1
  && always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  3 always 3
  && always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  5 always 5
Line 2154
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2154 always 2154
  "std" always "std"
  1 always 1
Line 2155
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2155 always 2155
  "std" always "std"
  2 always 2
Line 2156
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2156 always 2156
  "std" always "std"
  3 always 3
Line 2157
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2157 always 2157
  "char" always "char"
  4 always 4
Line 2158
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2158 always 2158
  "char" always "char"
  5 always 5
Line 2160
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2160 always 2160
  "string" always "string"
  1 always 1
Line 2161
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2161 always 2161
  "string" always "string"
  2 always 2
Line 2162
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2162 always 2162
  "*" always "*"
  3 always 3
Line 2163
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2163 always 2163
  "char" always "char"
  4 always 4
Line 2164
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2164 always 2164
  "*" always "*"
  5 always 5
Line 2168
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class CodeGenerator {\n  DiagnosticsEngine Diags;\npublic:\n  void Initialize() {\n    Builder.reset(Diags);\n  }\n\n  void HandleTagDeclRequiredDefinition() LLVM_OVERRIDE {\n    if (Diags.hasErrorOccurred())\n      return;\n  }\n};" always "class CodeGenerator {\n  DiagnosticsEngine Diags;\npublic:\n  void Initialize() {\n    Builder.reset(Diags);\n  }\n\n  void HandleTagDeclRequiredDefinition() LLVM_OVERRIDE {\n    if (Diags.hasErrorOccurred())\n      return;\n  }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2168 always 2168
  false always 0
Line 2180
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2180 always 2180
  "DiagnosticsEngine" always "DiagnosticsEngine"
  1 always 1
Line 2184
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(const char) {}" always "void f(const char) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2184 always 2184
  false always 0
Line 2186
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2186 always 2186
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1U always 1
Line 2189
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2189 always 2189
  1U always 1
Line 2190
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2190 always 2190
  0U always 0
Line 2191
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2191 always 2191
  1U always 1
Line 2192
  0 always 0
Line 2193
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2193 always 2193
  "char" always "char"
Line 2194
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2194 always 2194
  "char" always "char"
Line 2198
  , always 1
  debug always {!<=-1,!>=2}
  = always 1
  true always 1
  , always "test.cpp"
  9 always 9
  = always "test.cpp"
  "test.cpp" always "test.cpp"
Line 2200
  "" always ""
Line 2203
  = {!<=-1,!>=2,1@23,0@45}
  debug {!<=-1,!>=2,1@23,0@45}
Line 2206
  & {lifetime[Address]=(settings1),!0}
  this always !0
Line 2207
  code possible {"template<template<class> class E,class D> class C : E<D> {\n	public:\n		int f();\n};\nclass E : C<D,int> {\n	public:\n		int f() { return C< ::D,int>::f(); }\n};\nint main() {\n	E c;\n	c.f();\n}"@19,"int foo(int x) {\n    extern int func1();\n    extern int func2(int);\n    int func3();\n    int func4(int);\n    return func4(x);\n}\n"@23,"void f() { std::map<std::string, int> m; }"@175,"namespace external {\nnamespace ns {\nenum class s { O };\n}\n}\nnamespace internal {\nnamespace ns1 {\ntemplate <typename T>\nvoid make(external::ns::s) {\n}\n}\n}\nusing namespace external::ns;\nstruct A { };\nstatic void make(external::ns::s ss) {\n  internal::ns1::make<A>(ss);\n}\n"@187,"int ( * X0 ) ( long ) < int ( ) ( long ) > :: f0 ( int * ) { return 0 ; }"@216,"void f() {\n    new int;\n}"@15,"void f() {\n    try {  }\n    catch (std::bad_alloc) {  }\n}"@18,"template <typename T = class service> struct scoped_service;\nstruct service {};\ntemplate <> struct scoped_service<service> {};\ntemplate <typename T>\nstruct scoped_service : scoped_service<service>\n{\n  scoped_service( T* ptr ) : scoped_service<service>(ptr), m_ptr(ptr) {}\n  T* const m_ptr;\n};"@19,"void struct ( ) { if ( 1 ) } int main ( ) { }"@21,"class FragmentQueue : public CL_NS(util)::PriorityQueue<CL_NS(util)::Deletor::Object<TextFragment> >\n{};"@22}
Line 2208
  ( always {!<=-1,!>=2}
  file inconclusive {"cppcheck-2.8/test/testsymboldatabase.cpp"@19,"cppcheck-2.8/test/testsymboldatabase.cpp"@23,"cppcheck-2.8/test/testsymboldatabase.cpp"@175,"cppcheck-2.8/test/testsymboldatabase.cpp"@187,"cppcheck-2.8/test/testsymboldatabase.cpp"@216,"cppcheck-2.8/test/testsymboldatabase.cpp"@15,"cppcheck-2.8/test/testsymboldatabase.cpp"@18,"cppcheck-2.8/test/testsymboldatabase.cpp"@19,"cppcheck-2.8/test/testsymboldatabase.cpp"@21,"cppcheck-2.8/test/testsymboldatabase.cpp"@22}
  line inconclusive {7290@19,7224@23,4901@175,4750@187,4341@216,3153@15,3132@18,3120@19,3087@21,3081@22}
  filename inconclusive "test.c"@51
Line 2213
  = always 0
  false always 0
Line 2218
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(std::vector<std::string>, const std::vector<int> & v) { }" always "void f(std::vector<std::string>, const std::vector<int> & v) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2218 always 2218
  false always 0
Line 2219
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2219 always 2219
  1 always 1
  + always 2
  1 always 1
Line 2220
  1 always 1
Line 2221
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2221 always 2221
  && always {!<=-1,!>=2}
  v always !0
  && always {!<=-1,!>=2}
  v always !0
  && always {!<=-1,!>=2}
Line 2222
  "f" always "f"
Line 2223
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2223 always 2223
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
Line 2225
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2225 always 2225
  == always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
Line 2226
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2226 always 2226
  "" always ""
Line 2229
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void g(std::map<std::string, std::vector<int> > m) { }" always "void g(std::map<std::string, std::vector<int> > m) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2229 always 2229
  false always 0
Line 2230
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2230 always 2230
  1 always 1
  + always 2
  1 always 1
Line 2231
  1 always 1
Line 2232
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2232 always 2232
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  m always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  m always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
Line 2233
  "g" always "g"
Line 2234
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2234 always 2234
  && always {!<=-1,!>=2}
  g always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  g always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
Line 2235
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2235 always 2235
  "" always ""
Line 2238
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void g(std::map<int, int> m = std::map<int, int>()) { }" always "void g(std::map<int, int> m = std::map<int, int>()) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2238 always 2238
  false always 0
Line 2239
  "g" always "g"
Line 2240
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2240 always 2240
  && always {!<=-1,!>=2}
  g always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  g always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
Line 2241
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2241 always 2241
  "" always ""
Line 2244
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void g(int = 0) { }" always "void g(int = 0) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2244 always 2244
  false always 0
Line 2245
  "g" always "g"
Line 2246
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2246 always 2246
  && always {!<=-1,!>=2}
  g always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  g always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2247
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2247 always 2247
  "" always ""
Line 2250
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void g(int*) { }" always "void g(int*) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2250 always 2250
  false always 0
Line 2251
  "g" always "g"
Line 2252
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2252 always 2252
  && always {!<=-1,!>=2}
  g always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  g always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  nullptr always 0
  && always {!<=-1,!>=2}
Line 2253
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2253 always 2253
  "" always ""
Line 2256
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void g(int* const) { }" always "void g(int* const) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2256 always 2256
  false always 0
Line 2257
  "g" always "g"
Line 2258
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2258 always 2258
  && always {!<=-1,!>=2}
  g always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  g always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 2259
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2259 always 2259
  "" always ""
Line 2264
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(int a[][4]) { }" always "void f(int a[][4]) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2264 always 2264
  false always 0
Line 2265
  1 always 1
Line 2266
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2266 always 2266
  "a" always "a"
Line 2267
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2267 always 2267
  2UL always 2
Line 2268
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2268 always 2268
  0UL always 0
  0 always 0
Line 2269
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2269 always 2269
  false always 0
  0 always 0
Line 2270
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2270 always 2270
  4UL always 4
  1 always 1
Line 2271
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2271 always 2271
  true always 1
  1 always 1
Line 2275
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f1(char [10], struct foo [10]);" always "void f1(char [10], struct foo [10]);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2275 always 2275
  false always 0
Line 2276
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2276 always 2276
  true always 1
  == always {!<=-1,!>=2}
  1UL always 1
Line 2277
  = {lifetime[Address]=(db->scopeList.front().functionList.front()),!0}
  & {lifetime[Address]=(db->scopeList.front().functionList.front()),!0}
Line 2278
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2278 always 2278
  true always 1
  func {1,lifetime[Address]=(db->scopeList.front().functionList.front())}
  && always {!<=-1,!>=2}
  func {lifetime[Address]=(db->scopeList.front().functionList.front()),!0}
  == always {!<=-1,!>=2}
  2UL always 2
Line 2280
  = {lifetime[Address]=(func->argumentList.front()),!0}
  & {lifetime[Address]=(func->argumentList.front()),!0}
  func {lifetime[Address]=(db->scopeList.front().functionList.front()),!0}
Line 2281
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2281 always 2281
  0UL always 0
  first {lifetime[Address]=(func->argumentList.front()),!0}
Line 2282
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2282 always 2282
  1UL always 1
  first {lifetime[Address]=(func->argumentList.front()),!0}
Line 2283
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2283 always 2283
  10UL always 10
  0 always 0
Line 2284
  = {lifetime[Address]=(func->argumentList.back()),!0}
  & {lifetime[Address]=(func->argumentList.back()),!0}
Line 2285
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2285 always 2285
  0UL always 0
  second {lifetime[Address]=(func->argumentList.back()),!0}
Line 2286
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2286 always 2286
  1UL always 1
  second {lifetime[Address]=(func->argumentList.back()),!0}
Line 2287
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2287 always 2287
  10UL always 10
  0 always 0
Line 2291
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class ABC {};\nclass Y {\n  enum ABC {A,B,C};\n  void f(enum ABC abc) {}\n};" always "class ABC {};\nclass Y {\n  enum ABC {A,B,C};\n  void f(enum ABC abc) {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2291 always 2291
  false always 0
Line 2296
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2296 always 2296
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2297
  "f ( enum" always "f ( enum"
Line 2298
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2298 always 2298
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2300
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2300 always 2300
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2302
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2302 always 2302
  true always 1
Line 2306
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class ABC {};\nclass Y {\n  enum ABC {A,B,C};\n  void f(ABC abc) {}\n};" always "class ABC {};\nclass Y {\n  enum ABC {A,B,C};\n  void f(ABC abc) {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2306 always 2306
  false always 0
Line 2311
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2311 always 2311
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2312
  "f ( ABC" always "f ( ABC"
Line 2313
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2313 always 2313
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2315
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2315 always 2315
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2317
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2317 always 2317
  true always 1
Line 2322
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct AB { int a; int b; };\nint foo(struct AB *ab);\nvoid bar() {\n  struct AB ab;\n  foo(&ab);\n};" always "struct AB { int a; int b; };\nint foo(struct AB *ab);\nvoid bar() {\n  struct AB ab;\n  foo(&ab);\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2322 always 2322
  false always 0
Line 2328
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2328 always 2328
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2329
  "foo ( & ab" always "foo ( & ab"
Line 2330
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2330 always 2330
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2332
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2332 always 2332
  true always 1
  == always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2334
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2334 always 2334
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
Line 2337
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct AB { int a; int b; };\nint foo(AB *ab);\nvoid bar() {\n  struct AB ab;\n  foo(&ab);\n};" always "struct AB { int a; int b; };\nint foo(AB *ab);\nvoid bar() {\n  struct AB ab;\n  foo(&ab);\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2337 always 2337
  false always 0
Line 2343
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2343 always 2343
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2344
  "foo ( & ab" always "foo ( & ab"
Line 2345
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2345 always 2345
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2347
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2347 always 2347
  true always 1
  == always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2349
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2349 always 2349
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
Line 2352
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct AB { int a; int b; };\nint foo(struct AB *ab);\nvoid bar() {\n  AB ab;\n  foo(&ab);\n};" always "struct AB { int a; int b; };\nint foo(struct AB *ab);\nvoid bar() {\n  AB ab;\n  foo(&ab);\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2352 always 2352
  false always 0
Line 2358
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2358 always 2358
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2359
  "foo ( & ab" always "foo ( & ab"
Line 2360
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2360 always 2360
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2362
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2362 always 2362
  true always 1
  == always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2364
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2364 always 2364
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
Line 2367
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct AB { int a; int b; };\nint foo(AB *ab);\nvoid bar() {\n  AB ab;\n  foo(&ab);\n};" always "struct AB { int a; int b; };\nint foo(AB *ab);\nvoid bar() {\n  AB ab;\n  foo(&ab);\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2367 always 2367
  false always 0
Line 2373
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2373 always 2373
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2374
  "foo ( & ab" always "foo ( & ab"
Line 2375
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2375 always 2375
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2377
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2377 always 2377
  true always 1
  == always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2379
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2379 always 2379
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
Line 2384
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A { int i; };\nstruct B { double d; };\nint    foo(struct A a);\ndouble foo(struct B b);\nvoid bar() {\n  struct B b;\n  foo(b);\n}" always "struct A { int i; };\nstruct B { double d; };\nint    foo(struct A a);\ndouble foo(struct B b);\nvoid bar() {\n  struct B b;\n  foo(b);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2384 always 2384
  false always 0
Line 2392
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2392 always 2392
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2393
  "foo ( b" always "foo ( b"
Line 2394
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2394 always 2394
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2396
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2396 always 2396
  true always 1
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2398
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2398 always 2398
  true always 1
Line 2402
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {\n  struct B {\n    enum C { };\n  };\n};\nvoid foo(A::B::C c) { }" always "struct A {\n  struct B {\n    enum C { };\n  };\n};\nvoid foo(A::B::C c) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2402 always 2402
  false always 0
Line 2408
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2408 always 2408
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2409
  "foo (" always "foo ("
Line 2410
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2410 always 2410
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2412
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2412 always 2412
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2414
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2414 always 2414
  true always 1
Line 2418
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred {\npublic:\n  Fred(Whitespace = PRESERVE_WHITESPACE);\n};\nFred::Fred(Whitespace whitespace) { }" always "class Fred {\npublic:\n  Fred(Whitespace = PRESERVE_WHITESPACE);\n};\nFred::Fred(Whitespace whitespace) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2418 always 2418
  false always 0
Line 2423
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2423 always 2423
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2424
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2424 always 2424
  3 always 3
Line 2427
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2427 always 2427
  ( always !<=-1
  ( always !<=-1
Line 2428
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2428 always 2428
  1 always 1
Line 2429
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2429 always 2429
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2432
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2432 always 2432
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 2436
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred {\npublic:\n  void foo(char a[16]);\n};\nvoid Fred::foo(char b[16]) { }" always "class Fred {\npublic:\n  void foo(char a[16]);\n};\nvoid Fred::foo(char b[16]) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2436 always 2436
  false always 0
Line 2441
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2441 always 2441
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2442
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2442 always 2442
  3 always 3
Line 2445
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2445 always 2445
  ( always !<=-1
  ( always !<=-1
Line 2446
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2446 always 2446
  1 always 1
Line 2447
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2447 always 2447
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2450
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2450 always 2450
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 2454
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {\n    enum E { };\n    int a[10];\n};\nstruct B : public A {\n    void foo(B::E e) { }\n};" always "struct A {\n    enum E { };\n    int a[10];\n};\nstruct B : public A {\n    void foo(B::E e) { }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2454 always 2454
  false always 0
Line 2462
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2462 always 2462
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2463
  "foo (" always "foo ("
Line 2464
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2464 always 2464
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2466
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2466 always 2466
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2468
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2468 always 2468
  true always 1
Line 2472
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {\n    enum E { };\n    struct S { };\n};\nstruct B : public A {\n    B(E e);\n    B(S s);\n};\nB::B(A::E e) { }\nB::B(A::S s) { }" always "struct A {\n    enum E { };\n    struct S { };\n};\nstruct B : public A {\n    B(E e);\n    B(S s);\n};\nB::B(A::E e) { }\nB::B(A::S s) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2472 always 2472
  false always 0
Line 2483
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2483 always 2483
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2484
  "B ( A :: E" always "B ( A :: E"
Line 2485
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2485 always 2485
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2487
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2487 always 2487
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2489
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2489 always 2489
  true always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 2491
  "B ( A :: S" always "B ( A :: S"
Line 2492
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2492 always 2492
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 2494
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2494 always 2494
  true always 1
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
Line 2496
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2496 always 2496
  true always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 2500
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(int (&a)[10], int (&b)[10]);" always "void f(int (&a)[10], int (&b)[10]);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2500 always 2500
  false always 0
Line 2503
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2503 always 2503
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2504
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2504 always 2504
  2 always 2
  ? possible 0
  : always 0
  0 always 0
Line 2505
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2505 always 2505
  0 always 0
  ? possible 1
  : always 1
  1 always 1
Line 2506
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2506 always 2506
  2 always 2
  ? possible 0
  : always 0
  0 always 0
Line 2510
  134 always 134
  = always "class Class {\n    void Method(\n        char c = []()->char {\n            int d = rand();\n            return d;\n        }()\n    );\n};\n"
Line 2511
  "class Class {\n    void Method(\n        char c = []()->char {\n            int d = rand();\n            return d;\n        }()\n    );\n};\n" always "class Class {\n    void Method(\n        char c = []()->char {\n            int d = rand();\n            return d;\n        }()\n    );\n};\n"
Line 2519
  & {lifetime[Address]=(settings1),!0}
  this always !0
  code always "class Class {\n    void Method(\n        char c = []()->char {\n            int d = rand();\n            return d;\n        }()\n    );\n};\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2519 always 2519
  false always 0
Line 2520
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2520 always 2520
Line 2521
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2521 always 2521
  2 always 2
Line 2523
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2523 always 2523
Line 2524
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2524 always 2524
  "Class" always "Class"
Line 2525
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2525 always 2525
  1 always 1
Line 2527
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2527 always 2527
  "Method" always "Method"
Line 2528
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2528 always 2528
  1 always 1
Line 2529
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2529 always 2529
  1 always 1
Line 2530
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2530 always 2530
  0 always 0
Line 2534
  64 always 64
  = always "struct A { int var; };\nvoid foo(int x, decltype(A::var) *&p) {}"
Line 2535
  "struct A { int var; };\nvoid foo(int x, decltype(A::var) *&p) {}" always "struct A { int var; };\nvoid foo(int x, decltype(A::var) *&p) {}"
Line 2537
  & {lifetime[Address]=(settings1),!0}
  this always !0
  code always "struct A { int var; };\nvoid foo(int x, decltype(A::var) *&p) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2537 always 2537
  false always 0
Line 2538
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2538 always 2538
Line 2541
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2541 always 2541
  2 always 2
  func always symbolic=(scope->function)
Line 2542
  func always symbolic=(scope->function)
  1 always 1
Line 2543
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2543 always 2543
  "p" always "p"
Line 2544
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2544 always 2544
Line 2545
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2545 always 2545
Line 2549
  37 always 37
  = always "void f(int (*fp)(), int x, int y) {}"
  "void f(int (*fp)(), int x, int y) {}" always "void f(int (*fp)(), int x, int y) {}"
Line 2550
  & {lifetime[Address]=(settings1),!0}
  this always !0
  code always "void f(int (*fp)(), int x, int y) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2550 always 2550
  false always 0
Line 2551
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2551 always 2551
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2554
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2554 always 2554
  3 always 3
  func always symbolic=(scope->function)
Line 2558
  40 always 40
  = always "void f(int (*param1)[2], int param2) {}"
  "void f(int (*param1)[2], int param2) {}" always "void f(int (*param1)[2], int param2) {}"
Line 2559
  & {lifetime[Address]=(settings1),!0}
  this always !0
  code always "void f(int (*param1)[2], int param2) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2559 always 2559
  false always 0
Line 2560
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2560 always 2560
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2563
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2563 always 2563
  2 always 2
  func always symbolic=(scope->function)
Line 2567
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class base { virtual void f(); };\nclass derived : base { void f(); };\nvoid derived::f() {}" always "class base { virtual void f(); };\nclass derived : base { void f(); };\nvoid derived::f() {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2567 always 2567
  false always 0
Line 2570
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2570 always 2570
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2571
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2571 always 2571
  4 always 4
Line 2573
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2573 always 2573
  true always 1
  && always {!<=-1,!>=2}
  function always !0
  false always 0
Line 2577
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "inline void fs() {}" always "inline void fs() {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2577 always 2577
  false always 0
Line 2580
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2580 always 2580
Line 2581
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2581 always 2581
Line 2585
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "static void fs() {  }" always "static void fs() {  }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2585 always 2585
  false always 0
Line 2588
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2588 always 2588
Line 2589
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2589 always 2589
Line 2593
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "Fred::Reference foo();" always "Fred::Reference foo();"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2593 always 2593
  false always 0
Line 2594
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2594 always 2594
  1 always 1
Line 2596
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2596 always 2596
  ! always {!<=-1,!>=2}
  & {lifetime[Address]=(*db->scopeList.back().functionList.begin()),!0}
  false always 0
Line 2597
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2597 always 2597
  & {lifetime[Address]=(*db->scopeList.back().functionList.begin()),!0}
  true always 1
Line 2601
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace fred {\n    namespace barney {\n        class X { X(int); };\n    }\n}\nnamespace barney { X::X(int) { } }" always "namespace fred {\n    namespace barney {\n        class X { X(int); };\n    }\n}\nnamespace barney { X::X(int) { } }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2601 always 2601
  false always 0
Line 2609
  = always 0
  nullptr always 0
Line 2612
  = {&,!0}
  & {&,!0}
Line 2617
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2617 always 2617
  scope possible {symbolic=(&it),&,0}
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 2618
  ! always {!<=-1,!>=2}
Line 2621
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2621 always 2621
  "X" always "X"
  scope always !0
Line 2624
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2624 always 2624
  1U always 1
  scope always !0
Line 2625
  = {lifetime[Address]=(scope->functionList.front()),!0}
  & {lifetime[Address]=(scope->functionList.front()),!0}
Line 2626
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2626 always 2626
  false always 0
  function {lifetime[Address]=(scope->functionList.front()),!0}
Line 2631
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace fred {\n    namespace barney {\n        class X { X(int); };\n    }\n}\nnamespace fred {\n    namespace barney {\n        X::X(int) { }\n    }\n}" always "namespace fred {\n    namespace barney {\n        class X { X(int); };\n    }\n}\nnamespace fred {\n    namespace barney {\n        X::X(int) { }\n    }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2631 always 2631
  false always 0
Line 2643
  = always 0
  nullptr always 0
Line 2646
  = {&,!0}
  & {&,!0}
Line 2651
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2651 always 2651
  scope possible {symbolic=(&it),&,0}
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 2652
  ! always {!<=-1,!>=2}
Line 2655
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2655 always 2655
  "X" always "X"
  scope always !0
Line 2658
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2658 always 2658
  1U always 1
  scope always !0
Line 2659
  = {lifetime[Address]=(scope->functionList.front()),!0}
  & {lifetime[Address]=(scope->functionList.front()),!0}
Line 2660
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2660 always 2660
  "X" always "X"
  function {lifetime[Address]=(scope->functionList.front()),!0}
Line 2661
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2661 always 2661
  true always 1
  function {lifetime[Address]=(scope->functionList.front()),!0}
Line 2665
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace fred UNKNOWN_MACRO(default) {\n}" always "namespace fred UNKNOWN_MACRO(default) {\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2665 always 2665
  false always 0
Line 2667
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2667 always 2667
  2U always 2
Line 2668
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2668 always 2668
Line 2669
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2669 always 2669
Line 2673
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A { int a; };\nnamespace fred { struct A {}; }\nfred::A fredA;" always "struct A { int a; };\nnamespace fred { struct A {}; }\nfred::A fredA;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2673 always 2673
  false always 0
Line 2676
  2U always 2
Line 2677
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2677 always 2677
  "fredA" always "fredA"
Line 2679
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2679 always 2679
  2U always 2
Line 2683
  149 always 149
  = always "void foo() {\n    try { }\n    catch (const Error1 & x) { }\n    catch (const X::Error2 & x) { }\n    catch (Error3 x) { }\n    catch (X::Error4 x) { }\n}"
  "void foo() {\n    try { }\n    catch (const Error1 & x) { }\n    catch (const X::Error2 & x) { }\n    catch (Error3 x) { }\n    catch (X::Error4 x) { }\n}" always "void foo() {\n    try { }\n    catch (const Error1 & x) { }\n    catch (const X::Error2 & x) { }\n    catch (Error3 x) { }\n    catch (X::Error4 x) { }\n}"
Line 2690
  & {lifetime[Address]=(settings1),!0}
  this always !0
  str always "void foo() {\n    try { }\n    catch (const Error1 & x) { }\n    catch (const X::Error2 & x) { }\n    catch (Error3 x) { }\n    catch (X::Error4 x) { }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2690 always 2690
  false always 0
Line 2691
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2691 always 2691
  "" always ""
Line 2692
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2692 always 2692
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 2693
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2693 always 2693
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  7 always 7
Line 2698
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2698 always 2698
  "namespace foo {\n    class bar;\n};" always "namespace foo {\n    class bar;\n};"
Line 2701
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2701 always 2701
  "" always ""
Line 2703
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2703 always 2703
  "class foo : public bar < int, int> {\n};" always "class foo : public bar < int, int> {\n};"
Line 2705
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2705 always 2705
  "" always ""
Line 2709
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2709 always 2709
  "class foo {\npublic slots :\nfoo() { }\n};" always "class foo {\npublic slots :\nfoo() { }\n};"
Line 2713
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2713 always 2713
  "" always ""
Line 2715
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2715 always 2715
  "class foo {\nclass bar;\nfoo() { }\n};" always "class foo {\nclass bar;\nfoo() { }\n};"
Line 2719
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2719 always 2719
  "" always ""
Line 2723
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2723 always 2723
  "typedef void (func_type)();\nstruct A {\n    friend func_type f : 2;\n};" always "typedef void (func_type)();\nstruct A {\n    friend func_type f : 2;\n};"
Line 2727
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2727 always 2727
  "" always ""
Line 2731
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2731 always 2731
  "static void function_declaration_before(void) __attribute__((__used__));\nstatic void function_declaration_before(void) {}\nstatic void function_declaration_after(void) {}\nstatic void function_declaration_after(void) __attribute__((__used__));" always "static void function_declaration_before(void) __attribute__((__used__));\nstatic void function_declaration_before(void) {}\nstatic void function_declaration_after(void) {}\nstatic void function_declaration_after(void) __attribute__((__used__));"
Line 2735
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2735 always 2735
  "" always ""
Line 2737
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2737 always 2737
  "main(int argc, char *argv[]) { }" always "main(int argc, char *argv[]) { }"
  true always 1
  "test.c" always "test.c"
Line 2738
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2738 always 2738
  "[test.c:1]: (debug) SymbolDatabase::isFunction found C function 'main' without a return type.\n" always "[test.c:1]: (debug) SymbolDatabase::isFunction found C function 'main' without a return type.\n"
Line 2740
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2740 always 2740
  "namespace boost {\n    std::locale generate_locale()\n    {\n        return std::locale();\n    }\n}" always "namespace boost {\n    std::locale generate_locale()\n    {\n        return std::locale();\n    }\n}"
Line 2746
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2746 always 2746
  "" always ""
Line 2748
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2748 always 2748
  "namespace X {\n    static void function_declaration_before(void) __attribute__((__used__));\n    static void function_declaration_before(void) {}\n    static void function_declaration_after(void) {}\n    static void function_declaration_after(void) __attribute__((__used__));\n}" always "namespace X {\n    static void function_declaration_before(void) __attribute__((__used__));\n    static void function_declaration_before(void) {}\n    static void function_declaration_after(void) {}\n    static void function_declaration_after(void) __attribute__((__used__));\n}"
Line 2754
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2754 always 2754
  "" always ""
Line 2756
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2756 always 2756
  "testing::testing()\n{\n}" always "testing::testing()\n{\n}"
Line 2759
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2759 always 2759
  "[test.cpp:1]: (debug) Executable scope 'testing' with unknown function.\n" always "[test.cpp:1]: (debug) Executable scope 'testing' with unknown function.\n"
Line 2764
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2764 always 2764
  "int CL_INLINE_DECL(integer_decode_float) (int x) {\n    return (sign ? cl_I() : 0);\n}" always "int CL_INLINE_DECL(integer_decode_float) (int x) {\n    return (sign ? cl_I() : 0);\n}"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2764 always 2764
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2764 always 2764
  false always 0
Line 2771
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2771 always 2771
  "template<int i> class X { };\nX< 1>2 > x1;\nX<(1>2)> x2;\ntemplate<class T> class Y { };\nY<X<1>> x3;\nY<X<6>>1>> x4;\nY<X<(6>>1)>> x5;\n" always "template<int i> class X { };\nX< 1>2 > x1;\nX<(1>2)> x2;\ntemplate<class T> class Y { };\nY<X<1>> x3;\nY<X<6>>1>> x4;\nY<X<(6>>1)>> x5;\n"
  false always 0
Line 2778
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2778 always 2778
  "" always ""
Line 2783
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2783 always 2783
  "template<template<class> class E,class D> class C : E<D>\n{\npublic:\n    int f();\n};\nclass E : C<D,int>\n{\npublic:\n    int f() { return C< ::D,int>::f(); }\n};" always "template<template<class> class E,class D> class C : E<D>\n{\npublic:\n    int f();\n};\nclass E : C<D,int>\n{\npublic:\n    int f() { return C< ::D,int>::f(); }\n};"
Line 2793
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2793 always 2793
  "" always ""
Line 2798
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2798 always 2798
  "struct PaletteColorSpaceHolder: public rtl::StaticWithInit<uno::Reference<rendering::XColorSpace>,\n                                                           PaletteColorSpaceHolder>\n{\n    uno::Reference<rendering::XColorSpace> operator()()\n    {\n        return vcl::unotools::createStandardColorSpace();\n    }\n};" always "struct PaletteColorSpaceHolder: public rtl::StaticWithInit<uno::Reference<rendering::XColorSpace>,\n                                                           PaletteColorSpaceHolder>\n{\n    uno::Reference<rendering::XColorSpace> operator()()\n    {\n        return vcl::unotools::createStandardColorSpace();\n    }\n};"
Line 2807
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2807 always 2807
  "" always ""
Line 2812
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2812 always 2812
  "class CHyperlink : public CString\n{\npublic:\n    const CHyperlink& operator=(LPCTSTR lpsz) {\n        CString::operator=(lpsz);\n        return *this;\n    }\n};\n" always "class CHyperlink : public CString\n{\npublic:\n    const CHyperlink& operator=(LPCTSTR lpsz) {\n        CString::operator=(lpsz);\n        return *this;\n    }\n};\n"
  false always 0
Line 2821
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2821 always 2821
  "" always ""
Line 2826
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2826 always 2826
  "class A {\nprivate:\n  void f();\n};\nclass B {\n  friend void A::f();\n};" always "class A {\nprivate:\n  void f();\n};\nclass B {\n  friend void A::f();\n};"
Line 2834
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2834 always 2834
  "" always ""
Line 2839
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2839 always 2839
  "int g ();\nstruct S {\n  int i : (false ? g () : 1);\n};" always "int g ();\nstruct S {\n  int i : (false ? g () : 1);\n};"
Line 2844
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2844 always 2844
  "" always ""
Line 2849
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2849 always 2849
  "class foo {\n    void bar2 () = __null;\n};" always "class foo {\n    void bar2 () = __null;\n};"
Line 2853
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2853 always 2853
  "" always ""
Line 2858
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2858 always 2858
  "class foo {\n    void bar2 () = A::f;\n};" always "class foo {\n    void bar2 () = A::f;\n};"
Line 2862
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2862 always 2862
  "" always ""
Line 2867
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2867 always 2867
  "struct B : A\n" always "struct B : A\n"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2867 always 2867
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2867 always 2867
  false always 0
Line 2872
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2872 always 2872
  "{return f(){}}" always "{return f(){}}"
Line 2874
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2874 always 2874
  "" always ""
Line 2879
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2879 always 2879
  "::y(){x}" always "::y(){x}"
Line 2881
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2881 always 2881
  "[test.cpp:1]: (debug) Executable scope 'y' with unknown function.\n[test.cpp:1]: (debug) valueflow.cpp:1321:valueFlowConditionExpressions bailout: Skipping function due to incomplete variable x\n" always "[test.cpp:1]: (debug) Executable scope 'y' with unknown function.\n[test.cpp:1]: (debug) valueflow.cpp:1321:valueFlowConditionExpressions bailout: Skipping function due to incomplete variable x\n"
Line 2887
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2887 always 2887
  "struct x : virtual y\n" always "struct x : virtual y\n"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2887 always 2887
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2887 always 2887
  false always 0
Line 2891
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2891 always 2891
  "class Fred {\n    class Foo { };\n    void func() const;\n};\nFred::func() const {\n    Foo foo;\n}" always "class Fred {\n    class Foo { };\n    void func() const;\n};\nFred::func() const {\n    Foo foo;\n}"
Line 2899
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2899 always 2899
  "" always ""
Line 2904
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2904 always 2904
  "template <class C> struct A {};\nA<int> a;" always "template <class C> struct A {};\nA<int> a;"
Line 2906
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2906 always 2906
  "" always ""
Line 2911
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class A { std::vector<int*> ints; };" always "class A { std::vector<int*> ints; };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2911 always 2911
  false always 0
Line 2912
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2912 always 2912
  2U always 2
Line 2914
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2914 always 2914
  1U always 1
Line 2916
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2916 always 2916
  "ints" always "ints"
Line 2917
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2917 always 2917
  true always 1
Line 2922
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    ~Fred();\n    Fred();\n};\nFred::Fred() { }\nFred::~Fred() { }" always "struct Fred {\n    ~Fred();\n    Fred();\n};\nFred::Fred() { }\nFred::~Fred() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2922 always 2922
  false always 0
Line 2929
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2929 always 2929
  4U always 4
Line 2932
  = always 0
  nullptr always 0
Line 2934
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 2935
  = {&,!0}
  & {&,!0}
Line 2937
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2937 always 2937
  != always {!<=-1,!>=2}
  nullptr always 0
Line 2940
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2940 always 2940
  2U always 2
Line 2943
  constructor always !<=-1
  constructor always !<=-1
  = always 0
  0 always 0
Line 2944
  destructor always !<=-1
  destructor always !<=-1
  = always 0
  0 always 0
Line 2946
  == always {!<=-1,!>=2}
Line 2947
  constructor always !<=-1
  = always !<=-1
Line 2948
  == always {!<=-1,!>=2}
Line 2949
  destructor always !<=-1
  = always !<=-1
Line 2953
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2953 always 2953
  5U always 5
  constructor always !<=-1
Line 2956
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2956 always 2956
  6U always 6
  destructor always !<=-1
Line 2962
  43 always 43
  = always "int main() {\n    foo bar;\n    throw bar;\n}"
  "int main() {\n    foo bar;\n    throw bar;\n}" always "int main() {\n    foo bar;\n    throw bar;\n}"
Line 2966
  & {lifetime[Address]=(settings1),!0}
  this always !0
  str always "int main() {\n    foo bar;\n    throw bar;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2966 always 2966
  false always 0
Line 2967
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2967 always 2967
  "" always ""
Line 2968
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2968 always 2968
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 2973
  30 always 30
  = always "int main() {\n    throw bar;\n}"
  "int main() {\n    throw bar;\n}" always "int main() {\n    throw bar;\n}"
Line 2976
  & {lifetime[Address]=(settings1),!0}
  this always !0
  str always "int main() {\n    throw bar;\n}"
  "test.c" always "test.c"
  false always 0
Line 2977
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2977 always 2977
  "" always ""
Line 2978
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2978 always 2978
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 2983
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2983 always 2983
  "class C : public B1\n{\n    B1()\n    {} C(int) : B1() class\n};" always "class C : public B1\n{\n    B1()\n    {} C(int) : B1() class\n};"
Line 2988
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2988 always 2988
  "" always ""
Line 2992
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S {};\nvoid foo(struct S s) {}" always "struct S {};\nvoid foo(struct S s) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2992 always 2992
  false always 0
Line 2994
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2994 always 2994
  && always {!<=-1,!>=2}
  db always !0
  1 always 1
  && always {!<=-1,!>=2}
  db always !0
  1 always 1
  && always {!<=-1,!>=2}
  1 always 1
  == always {!<=-1,!>=2}
  "S" always "S"
Line 2999
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  2999 always 2999
  "struct B : A {\n    B() : A {}\n};" always "struct B : A {\n    B() : A {}\n};"
Line 3002
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3002 always 3002
  "" always ""
Line 3006
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A { void foo(const int a); };\nvoid A::foo(int a) { }" always "struct A { void foo(const int a); };\nvoid A::foo(int a) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3006 always 3006
  false always 0
Line 3008
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3008 always 3008
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  db always !0
  0 always 0
Line 3012
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo;\nclass Bar;\nclass Sub;\nclass Foo { class Sub; };\nclass Bar { class Sub; };\nclass Bar::Sub {\n    int b;\npublic:\n    Sub() { }\n    Sub(int);\n};\nBar::Sub::Sub(int) { };\nclass ::Foo::Sub {\n    int f;\npublic:\n    ~Sub();\n    Sub();\n};\n::Foo::Sub::~Sub() { }\n::Foo::Sub::Sub() { }\nclass Foo;\nclass Bar;\nclass Sub;" always "class Foo;\nclass Bar;\nclass Sub;\nclass Foo { class Sub; };\nclass Bar { class Sub; };\nclass Bar::Sub {\n    int b;\npublic:\n    Sub() { }\n    Sub(int);\n};\nBar::Sub::Sub(int) { };\nclass ::Foo::Sub {\n    int f;\npublic:\n    ~Sub();\n    Sub();\n};\n::Foo::Sub::~Sub() { }\n::Foo::Sub::Sub() { }\nclass Foo;\nclass Bar;\nclass Sub;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3012 always 3012
  false always 0
Line 3035
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3035 always 3035
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 3038
  = {lifetime[Address]=(*i++),!0}
  & {lifetime[Address]=(*i++),!0}
Line 3039
  = {lifetime[Address]=(*i++),!0}
  & {lifetime[Address]=(*i++),!0}
Line 3040
  = {lifetime[Address]=(*i++),!0}
  & {lifetime[Address]=(*i++),!0}
Line 3041
  = {lifetime[Address]=(*i++),!0}
  & {lifetime[Address]=(*i++),!0}
Line 3042
  = {lifetime[Address]=(*i),!0}
  & {lifetime[Address]=(*i),!0}
Line 3043
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3043 always 3043
  Foo {1,lifetime[Address]=(*i++)}
  && always {!<=-1,!>=2}
  Foo {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Foo {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Foo {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Foo {lifetime[Address]=(*i++),!0}
  == always {!<=-1,!>=2}
  "Foo" always "Foo"
Line 3044
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3044 always 3044
  Bar {1,lifetime[Address]=(*i++)}
  && always {!<=-1,!>=2}
  Bar {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Bar {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Bar {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Bar {lifetime[Address]=(*i++),!0}
  == always {!<=-1,!>=2}
  "Bar" always "Bar"
Line 3045
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3045 always 3045
  && always {!<=-1,!>=2}
  Sub always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  Sub always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Sub" always "Sub"
Line 3046
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3046 always 3046
  && always {!<=-1,!>=2}
  Foo_Sub always !0
  && always {!<=-1,!>=2}
  Foo_Sub always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Sub" always "Sub"
Line 3047
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3047 always 3047
  && always {!<=-1,!>=2}
  Bar_Sub always !0
  && always {!<=-1,!>=2}
  Bar_Sub always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Sub" always "Sub"
Line 3048
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3048 always 3048
  && always {!<=-1,!>=2}
  Foo_Sub always !0
  && always {!<=-1,!>=2}
  Foo_Sub always !0
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Sub" always "Sub"
Line 3049
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3049 always 3049
  && always {!<=-1,!>=2}
  Bar_Sub always !0
  && always {!<=-1,!>=2}
  Bar_Sub always !0
  == always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Sub" always "Sub"
Line 3053
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Base {\n    void foo() {}\n};\nclass Deri : Base {\n};" always "struct Base {\n    void foo() {}\n};\nclass Deri : Base {\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3053 always 3053
  false always 0
Line 3058
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3058 always 3058
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  "foo" always "foo"
Line 3062
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "static struct A::B s;\nstatic struct A::B t = { 0 };\nstatic struct A::B u(0);\nstatic struct A::B v{0};\nstatic struct A::B w({0});\nvoid foo() { }" always "static struct A::B s;\nstatic struct A::B t = { 0 };\nstatic struct A::B u(0);\nstatic struct A::B v{0};\nstatic struct A::B w({0});\nvoid foo() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3062 always 3062
  false always 0
Line 3068
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3068 always 3068
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 3072
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3072 always 3072
  "typedef _Atomic(int(A::*)) atomic_mem_ptr_to_int;\ntypedef _Atomic(int)&atomic_int_ref;\nstruct S {\n  _Atomic union { int n; };\n};" always "typedef _Atomic(int(A::*)) atomic_mem_ptr_to_int;\ntypedef _Atomic(int)&atomic_int_ref;\nstruct S {\n  _Atomic union { int n; };\n};"
Line 3077
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3077 always 3077
  "[test.cpp:2]: (debug) Failed to parse 'typedef _Atomic ( int ) & atomic_int_ref ;'. The checking continues anyway.\n" always "[test.cpp:2]: (debug) Failed to parse 'typedef _Atomic ( int ) & atomic_int_ref ;'. The checking continues anyway.\n"
Line 3081
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3081 always 3081
  "class FragmentQueue : public CL_NS(util)::PriorityQueue<CL_NS(util)::Deletor::Object<TextFragment> >\n{};" always "class FragmentQueue : public CL_NS(util)::PriorityQueue<CL_NS(util)::Deletor::Object<TextFragment> >\n{};"
Line 3083
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3083 always 3083
  "" always ""
Line 3087
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3087 always 3087
  "void struct ( ) { if ( 1 ) } int main ( ) { }" always "void struct ( ) { if ( 1 ) } int main ( ) { }"
Line 3088
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3088 always 3088
  "" always ""
Line 3092
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred {\npublic:\n    struct Wilma { };\n    struct Barney {\n        bool operator == (const struct Barney & b) const { return true; }\n        bool operator == (const struct Wilma & w) const { return true; }\n    };\n    Fred(const struct Barney & b) { barney = b; }\nprivate:\n    struct Barney barney;\n};" always "class Fred {\npublic:\n    struct Wilma { };\n    struct Barney {\n        bool operator == (const struct Barney & b) const { return true; }\n        bool operator == (const struct Wilma & w) const { return true; }\n    };\n    Fred(const struct Barney & b) { barney = b; }\nprivate:\n    struct Barney barney;\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3092 always 3092
  false always 0
Line 3103
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3103 always 3103
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 3106
  = {lifetime[Address]=(*i++),!0}
  & {lifetime[Address]=(*i++),!0}
Line 3107
  = {lifetime[Address]=(*i++),!0}
  & {lifetime[Address]=(*i++),!0}
Line 3108
  = {lifetime[Address]=(*i++),!0}
  & {lifetime[Address]=(*i++),!0}
Line 3109
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3109 always 3109
  Fred {1,lifetime[Address]=(*i++)}
  && always {!<=-1,!>=2}
  Fred {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Fred {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Fred {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Fred {lifetime[Address]=(*i++),!0}
  == always {!<=-1,!>=2}
  "Fred" always "Fred"
Line 3110
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3110 always 3110
  Wilma {1,lifetime[Address]=(*i++)}
  && always {!<=-1,!>=2}
  Wilma {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Wilma {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Wilma {lifetime[Address]=(*i++),!0}
  && always {!<=-1,!>=2}
  Wilma {lifetime[Address]=(*i++),!0}
  == always {!<=-1,!>=2}
  "Wilma" always "Wilma"
Line 3111
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3111 always 3111
  && always {!<=-1,!>=2}
  Barney always !0
  && always {!<=-1,!>=2}
  Barney always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Barney" always "Barney"
Line 3112
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3112 always 3112
  == always {!<=-1,!>=2}
  5 always 5
Line 3114
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3114 always 3114
  1 always 1
  && always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  1 always 1
  == always {!<=-1,!>=2}
  "Barney" always "Barney"
Line 3115
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3115 always 3115
  2 always 2
  && always {!<=-1,!>=2}
  2 always 2
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  "Wilma" always "Wilma"
Line 3116
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3116 always 3116
  3 always 3
  && always {!<=-1,!>=2}
  3 always 3
  && always {!<=-1,!>=2}
  3 always 3
  == always {!<=-1,!>=2}
  "Barney" always "Barney"
Line 3120
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3120 always 3120
  "template <typename T = class service> struct scoped_service;\nstruct service {};\ntemplate <> struct scoped_service<service> {};\ntemplate <typename T>\nstruct scoped_service : scoped_service<service>\n{\n  scoped_service( T* ptr ) : scoped_service<service>(ptr), m_ptr(ptr) {}\n  T* const m_ptr;\n};" always "template <typename T = class service> struct scoped_service;\nstruct service {};\ntemplate <> struct scoped_service<service> {};\ntemplate <typename T>\nstruct scoped_service : scoped_service<service>\n{\n  scoped_service( T* ptr ) : scoped_service<service>(ptr), m_ptr(ptr) {}\n  T* const m_ptr;\n};"
Line 3132
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3132 always 3132
  "void f() {\n    try {  }\n    catch (std::bad_alloc) {  }\n}" always "void f() {\n    try {  }\n    catch (std::bad_alloc) {  }\n}"
Line 3136
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3136 always 3136
  "" always ""
Line 3140
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct X1 { MACRO1 f(int spd) MACRO2; };" always "struct X1 { MACRO1 f(int spd) MACRO2; };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3140 always 3140
  false always 0
Line 3141
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3141 always 3141
  && always {!<=-1,!>=2}
  db always !0
  "X1" always "X1"
  && always {!<=-1,!>=2}
  db always !0
  "X1" always "X1"
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  "X1" always "X1"
Line 3145
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() { extern int x(); }" always "void f() { extern int x(); }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3145 always 3145
  false always 0
Line 3146
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3146 always 3146
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3147
  = possible 0
  ? possible 0
  db always !0
  "f" always "f"
  : always 0
  nullptr always 0
Line 3148
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3148 always 3148
  fscope possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 3149
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3149 always 3149
  0U always 0
  ? possible 4294967295
  : always 4294967295
  ~ always 4294967295
  0U always 0
Line 3153
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3153 always 3153
  "void f() {\n    new int;\n}" always "void f() {\n    new int;\n}"
Line 3156
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3156 always 3156
  "" always ""
Line 3160
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int i { 1 };\nint j ( i );\nvoid foo() {\n    int k { 1 };\n    int l ( 1 );\n}" always "int i { 1 };\nint j ( i );\nvoid foo() {\n    int k { 1 };\n    int l ( 1 );\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3160 always 3160
  false always 0
Line 3166
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3166 always 3166
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3167
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3167 always 3167
  4U always 4
  1 always 1
Line 3168
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3168 always 3168
  2U always 2
Line 3169
  i always !<=-1
  = always 1
  1U always 1
  i {!<=-1,1}
  < always {!<=-1,!>=2}
  i always !<=-1
  ++ always !<=-1
Line 3170
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3170 always 3170
  i always !<=-1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3174
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "typedef struct {\n    unsigned long bits;\n} S;\nstruct T {\n    S span;\n    int flags;\n};\nstruct T f(int x) {\n    return (struct T) {\n        .span = (S) { 0UL },\n        .flags = (x ? 256 : 0),\n    };\n}" always "typedef struct {\n    unsigned long bits;\n} S;\nstruct T {\n    S span;\n    int flags;\n};\nstruct T f(int x) {\n    return (struct T) {\n        .span = (S) { 0UL },\n        .flags = (x ? 256 : 0),\n    };\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3174 always 3174
  false always 0
Line 3188
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3188 always 3188
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3189
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3189 always 3189
  4U always 4
  1 always 1
Line 3190
  i always !<=-1
  = always 1
  1U always 1
  i {!<=-1,1}
  < always {!<=-1,!>=2}
  i always !<=-1
  ++ always !<=-1
Line 3191
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3191 always 3191
  i always !<=-1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3193
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3193 always 3193
  4U always 4
Line 3195
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3195 always 3195
Line 3197
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3197 always 3197
Line 3199
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3199 always 3199
Line 3201
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3201 always 3201
Line 3205
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S { };\nnamespace {\n    struct S { };\n}" always "struct S { };\nnamespace {\n    struct S { };\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3205 always 3205
  false always 0
Line 3210
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3210 always 3210
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3211
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3211 always 3211
  4U always 4
Line 3213
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3213 always 3213
Line 3215
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3215 always 3215
Line 3216
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3216 always 3216
  "S" always "S"
Line 3218
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3218 always 3218
Line 3219
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3219 always 3219
  "" always ""
Line 3221
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3221 always 3221
Line 3222
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3222 always 3222
  "S" always "S"
Line 3226
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class MyClass {\n        ~MyClass();\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() {\n    delete Example;\n}" always "namespace NS {\n    class MyClass {\n        ~MyClass();\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() {\n    delete Example;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3226 always 3226
  false always 0
Line 3235
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3235 always 3235
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  db always !0
  && always {!<=-1,!>=2}
  db always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
Line 3239
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class MyClass {\n        MyClass();\n        ~MyClass();\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() { }\nMyClass::MyClass() { }" always "namespace NS {\n    class MyClass {\n        MyClass();\n        ~MyClass();\n    };\n}\nusing namespace NS;\nMyClass::~MyClass() { }\nMyClass::MyClass() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3239 always 3239
  false always 0
Line 3248
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3248 always 3248
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  db always !0
  && always {!<=-1,!>=2}
  db always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
Line 3250
  "MyClass ( ) ;" always "MyClass ( ) ;"
Line 3251
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3251 always 3251
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  9 always 9
Line 3253
  "~ MyClass ( ) ;" always "~ MyClass ( ) ;"
Line 3255
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3255 always 3255
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3259
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace Ns { class C; }\nvoid f1() { char *p; *p = 0; }\nclass Ns::C* p;\nvoid f2() { char *p; *p = 0; }" always "namespace Ns { class C; }\nvoid f1() { char *p; *p = 0; }\nclass Ns::C* p;\nvoid f2() { char *p; *p = 0; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3259 always 3259
  false always 0
Line 3263
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3263 always 3263
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3264
  "p ; void f2" always "p ; void f2"
Line 3265
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3265 always 3265
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
Line 3266
  "f2" always "f2"
Line 3267
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3267 always 3267
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
Line 3271
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <bool del, class T>\nclass _ConstTessMemberResultCallback_0_0<del, void, T>\n   {\n public:\n  typedef void (T::*MemberSignature)() const;\n\n private:\n  const T* object_;\n  MemberSignature member_;\n\n public:\n  inline _ConstTessMemberResultCallback_0_0(\n      const T* object, MemberSignature member)\n    : object_(object),\n      member_(member) {\n  }\n};" always "template <bool del, class T>\nclass _ConstTessMemberResultCallback_0_0<del, void, T>\n   {\n public:\n  typedef void (T::*MemberSignature)() const;\n\n private:\n  const T* object_;\n  MemberSignature member_;\n\n public:\n  inline _ConstTessMemberResultCallback_0_0(\n      const T* object, MemberSignature member)\n    : object_(object),\n      member_(member) {\n  }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3271 always 3271
  false always 0
Line 3288
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3288 always 3288
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3289
  "_ConstTessMemberResultCallback_0_0 (" always "_ConstTessMemberResultCallback_0_0 ("
Line 3290
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3290 always 3290
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 3294
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "static const float f1 = 2 * foo1(a, b);\nstatic const float f2 = 2 * ::foo2(a, b);\nstatic const float f3 = 2 * std::foo3(a, b);\nstatic const float f4 = c * foo4(a, b);\nstatic const int i1 = 2 & foo5(a, b);\nstatic const bool b1 = 2 > foo6(a, b);" always "static const float f1 = 2 * foo1(a, b);\nstatic const float f2 = 2 * ::foo2(a, b);\nstatic const float f3 = 2 * std::foo3(a, b);\nstatic const float f4 = c * foo4(a, b);\nstatic const int i1 = 2 & foo5(a, b);\nstatic const bool b1 = 2 > foo6(a, b);"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3294 always 3294
  false always 0
Line 3300
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3300 always 3300
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3301
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3301 always 3301
  "foo1" always "foo1"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 3302
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3302 always 3302
  "foo2" always "foo2"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 3303
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3303 always 3303
  "foo3" always "foo3"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 3304
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3304 always 3304
  "foo4" always "foo4"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 3305
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3305 always 3305
  "foo5" always "foo5"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 3306
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3306 always 3306
  "foo6" always "foo6"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 3310
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo() {\n    int i = 0;\n    S s{ { i }, 0 };\n}" always "void foo() {\n    int i = 0;\n    S s{ { i }, 0 };\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3310 always 3310
  false always 0
Line 3315
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3315 always 3315
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3316
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3316 always 3316
  2 always 2
Line 3317
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3317 always 3317
  2 always 2
  1 always 1
Line 3318
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3318 always 3318
  1 always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3319
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3319 always 3319
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3323
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int32_t x;std::int32_t y;" always "int32_t x;std::int32_t y;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3323 always 3323
  false always 0
Line 3326
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3326 always 3326
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3327
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3327 always 3327
  1 always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3328
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3328 always 3328
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3329
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3329 always 3329
  false always 0
  1 always 1
Line 3330
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3330 always 3330
  false always 0
  2 always 2
Line 3334
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class A {\n  void getReg() const override {\n    assert(Kind == k_ShiftExtend);\n  }\n};" always "class A {\n  void getReg() const override {\n    assert(Kind == k_ShiftExtend);\n  }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3334 always 3334
  false always 0
Line 3340
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3340 always 3340
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3341
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3341 always 3341
  1U always 1
Line 3342
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3342 always 3342
  "getReg" always "getReg"
Line 3343
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3343 always 3343
  true always 1
Line 3347
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "PRIVATE S32 testfunc(void) {\n    return 0;\n}" always "PRIVATE S32 testfunc(void) {\n    return 0;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3347 always 3347
  false always 0
Line 3351
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3351 always 3351
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3352
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3352 always 3352
  1U always 1
Line 3353
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3353 always 3353
  "testfunc" always "testfunc"
Line 3358
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Class {\n    class NestedClass {\n    public:\n        virtual void f();\n    };\n    friend void NestedClass::f();\n}" always "class Class {\n    class NestedClass {\n    public:\n        virtual void f();\n    };\n    friend void NestedClass::f();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3358 always 3358
  false always 0
Line 3366
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3366 always 3366
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3367
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3367 always 3367
  0U always 0
Line 3368
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3368 always 3368
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "NestedClass" always "NestedClass"
Line 3369
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3369 always 3369
  == always {!<=-1,!>=2}
  1U always 1
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
Line 3372
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Class {\n    friend void f1();\n    friend void f2() { }\n}" always "class Class {\n    friend void f1();\n    friend void f2() { }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3372 always 3372
  false always 0
Line 3377
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3377 always 3377
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3378
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3378 always 3378
  1U always 1
Line 3379
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3379 always 3379
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "f2" always "f2"
Line 3380
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3380 always 3380
  && always {!<=-1,!>=2}
Line 3383
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "friend f1();\nfriend f2() { }" always "friend f1();\nfriend f2() { }"
  "test.c" always "test.c"
  false always 0
Line 3386
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3386 always 3386
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3387
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3387 always 3387
  2U always 2
Line 3388
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3388 always 3388
  2U always 2
Line 3393
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int bar(bool b)\n{\n    if(b)\n         return 1;\n    else\n         return 1;\n}" always "int bar(bool b)\n{\n    if(b)\n         return 1;\n    else\n         return 1;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3393 always 3393
  false always 0
Line 3400
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3400 always 3400
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3401
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3401 always 3401
  == always {!<=-1,!>=2}
  4U always 4
Line 3403
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3403 always 3403
  == always {!<=-1,!>=2}
Line 3404
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3404 always 3404
  == always {!<=-1,!>=2}
Line 3405
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3405 always 3405
  == always {!<=-1,!>=2}
Line 3406
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3406 always 3406
  == always {!<=-1,!>=2}
Line 3410
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace N2\n{\nclass B { };\n}\nusing namespace N2;\nclass C {\n    class A : public B\n    {\n    };\n};" always "namespace N2\n{\nclass B { };\n}\nusing namespace N2;\nclass C {\n    class A : public B\n    {\n    };\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3410 always 3410
  false always 0
Line 3420
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3420 always 3420
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3421
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3421 always 3421
  == always {!<=-1,!>=2}
  3U always 3
Line 3423
  = {lifetime[Address]=(*it),!0}
  & {lifetime[Address]=(*it),!0}
Line 3424
  = {lifetime[Address]=(*(++it)),!0}
  & {lifetime[Address]=(*(++it)),!0}
Line 3425
  = {lifetime[Address]=(*(++it)),!0}
  & {lifetime[Address]=(*(++it)),!0}
Line 3426
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3426 always 3426
  classA {lifetime[Address]=(*(++it)),!0}
  == always {!<=-1,!>=2}
  "A" always "A"
  && always {!<=-1,!>=2}
  classB {lifetime[Address]=(*it),!0}
  == always {!<=-1,!>=2}
  "B" always "B"
  && always {!<=-1,!>=2}
  classC {lifetime[Address]=(*(++it)),!0}
  == always {!<=-1,!>=2}
  "C" always "C"
Line 3427
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3427 always 3427
  classA {lifetime[Address]=(*(++it)),!0}
  == always {!<=-1,!>=2}
  1U always 1
Line 3428
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3428 always 3428
  0 always 0
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3429
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3429 always 3429
  0 always 0
  == always {!<=-1,!>=2}
Line 3433
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A::B ab[10];\nvoid f() {}" always "struct A::B ab[10];\nvoid f() {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3433 always 3433
  false always 0
Line 3435
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3435 always 3435
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3436
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3436 always 3436
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 3440
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A::someType A::bar() { return 0; }" always "struct A::someType A::bar() { return 0; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3440 always 3440
  false always 0
Line 3441
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3441 always 3441
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3442
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3442 always 3442
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 3446
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    struct Info { };\n};\nvoid foo() {\n    struct Fred::Info* info;\n    info = new (nothrow) struct Fred::Info();\n    info = new struct Fred::Info();\n    memset(info, 0, sizeof(struct Fred::Info));\n}" always "struct Fred {\n    struct Info { };\n};\nvoid foo() {\n    struct Fred::Info* info;\n    info = new (nothrow) struct Fred::Info();\n    info = new struct Fred::Info();\n    memset(info, 0, sizeof(struct Fred::Info));\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3446 always 3446
  false always 0
Line 3456
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3456 always 3456
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3457
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3457 always 3457
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 3462
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {\npublic:\n    struct X { int a; };\n    void Foo(const std::vector<struct X> &includes);\n};\nvoid A::Foo(const std::vector<struct A::X> &includes) {\n    for (std::vector<struct A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const struct A::X currentIncList = *it;\n    }\n}" always "struct A {\npublic:\n    struct X { int a; };\n    void Foo(const std::vector<struct X> &includes);\n};\nvoid A::Foo(const std::vector<struct A::X> &includes) {\n    for (std::vector<struct A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const struct A::X currentIncList = *it;\n    }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3462 always 3462
  false always 0
Line 3472
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3472 always 3472
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3473
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3473 always 3473
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 3474
  "A" always "A"
Line 3475
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3475 always 3475
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3476
  "Foo" always "Foo"
Line 3477
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3477 always 3477
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3478
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3478 always 3478
Line 3481
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class A {\npublic:\n    class X { public: int a; };\n    void Foo(const std::vector<class X> &includes);\n};\nvoid A::Foo(const std::vector<class A::X> &includes) {\n    for (std::vector<class A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const class A::X currentIncList = *it;\n    }\n}" always "class A {\npublic:\n    class X { public: int a; };\n    void Foo(const std::vector<class X> &includes);\n};\nvoid A::Foo(const std::vector<class A::X> &includes) {\n    for (std::vector<class A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const class A::X currentIncList = *it;\n    }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3481 always 3481
  false always 0
Line 3491
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3491 always 3491
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3492
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3492 always 3492
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 3493
  "A" always "A"
Line 3494
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3494 always 3494
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3495
  "Foo" always "Foo"
Line 3496
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3496 always 3496
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3497
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3497 always 3497
Line 3500
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {\npublic:\n    union X { int a; float b; };\n    void Foo(const std::vector<union X> &includes);\n};\nvoid A::Foo(const std::vector<union A::X> &includes) {\n    for (std::vector<union A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const union A::X currentIncList = *it;\n    }\n}" always "struct A {\npublic:\n    union X { int a; float b; };\n    void Foo(const std::vector<union X> &includes);\n};\nvoid A::Foo(const std::vector<union A::X> &includes) {\n    for (std::vector<union A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const union A::X currentIncList = *it;\n    }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3500 always 3500
  false always 0
Line 3510
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3510 always 3510
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3511
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3511 always 3511
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 3512
  "A" always "A"
Line 3513
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3513 always 3513
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3514
  "Foo" always "Foo"
Line 3515
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3515 always 3515
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3516
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3516 always 3516
Line 3519
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {\npublic:\n    enum X { a, b };\n    void Foo(const std::vector<enum X> &includes);\n};\nvoid A::Foo(const std::vector<enum A::X> &includes) {\n    for (std::vector<enum A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const enum A::X currentIncList = *it;\n    }\n}" always "struct A {\npublic:\n    enum X { a, b };\n    void Foo(const std::vector<enum X> &includes);\n};\nvoid A::Foo(const std::vector<enum A::X> &includes) {\n    for (std::vector<enum A::X>::const_iterator it = includes.begin(); it != includes.end(); ++it) {\n        const enum A::X currentIncList = *it;\n    }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3519 always 3519
  false always 0
Line 3529
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3529 always 3529
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3530
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3530 always 3530
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 3531
  "A" always "A"
Line 3532
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3532 always 3532
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3533
  "Foo" always "Foo"
Line 3534
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3534 always 3534
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3535
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3535 always 3535
Line 3541
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template class T<int> ; void foo() { }" always "template class T<int> ; void foo() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3541 always 3541
  false always 0
Line 3542
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3542 always 3542
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3543
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3543 always 3543
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 3546
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template struct T<int> ; void foo() { }" always "template struct T<int> ; void foo() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3546 always 3546
  false always 0
Line 3547
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3547 always 3547
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3548
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3548 always 3548
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 3554
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { struct impl; };\nstruct Fred::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};" always "class Fred { struct impl; };\nstruct Fred::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3554 always 3554
  false always 0
Line 3562
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3562 always 3562
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3563
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3563 always 3563
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
Line 3564
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3564 always 3564
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3565
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3565 always 3565
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3566
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3566 always 3566
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3568
  "impl ( ) { }" always "impl ( ) { }"
Line 3569
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3569 always 3569
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  3 always 3
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  3 always 3
Line 3574
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3575
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3575 always 3575
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3580
  "impl ( const impl & ) { }" always "impl ( const impl & ) { }"
Line 3581
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3581 always 3581
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
Line 3586
  "foo ( const impl & , const impl & ) const { }" always "foo ( const impl & , const impl & ) const { }"
Line 3587
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3587 always 3587
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
Line 3593
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred { struct impl; };\nstruct Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nFred::impl::impl() { }\nFred::impl::~impl() { }\nFred::impl::impl(const Fred::impl &) { }\nvoid Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }" always "class Fred { struct impl; };\nstruct Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nFred::impl::impl() { }\nFred::impl::~impl() { }\nFred::impl::impl(const Fred::impl &) { }\nvoid Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3593 always 3593
  false always 0
Line 3605
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3605 always 3605
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3606
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3606 always 3606
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
Line 3607
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3607 always 3607
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3608
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3608 always 3608
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3609
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3609 always 3609
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3611
  "impl ( ) { }" always "impl ( ) { }"
Line 3612
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3612 always 3612
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  3 always 3
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3617
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3618
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3618 always 3618
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  9 always 9
Line 3623
  "impl ( const Fred :: impl & ) { }" always "impl ( const Fred :: impl & ) { }"
Line 3624
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3624 always 3624
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  10 always 10
Line 3629
  "foo ( const Fred :: impl & , const Fred :: impl & ) const { }" always "foo ( const Fred :: impl & , const Fred :: impl & ) const { }"
Line 3630
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3630 always 3630
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 3636
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl() { }\n        ~impl() { }\n        impl(const impl &) { }\n        void foo(const impl &, const impl &) const { }\n    };\n}" always "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl() { }\n        ~impl() { }\n        impl(const impl &) { }\n        void foo(const impl &, const impl &) const { }\n    };\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3636 always 3636
  false always 0
Line 3646
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3646 always 3646
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3647
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3647 always 3647
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3648
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3648 always 3648
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3649
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3649 always 3649
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3650
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3650 always 3650
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3652
  "impl ( ) { }" always "impl ( ) { }"
Line 3653
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3653 always 3653
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3658
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3659
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3659 always 3659
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
Line 3664
  "impl ( const impl & ) { }" always "impl ( const impl & ) { }"
Line 3665
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3665 always 3665
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
Line 3670
  "foo ( const impl & , const impl & ) const { }" always "foo ( const impl & , const impl & ) const { }"
Line 3671
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3671 always 3671
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
Line 3677
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n    Fred::impl::impl() { }\n    Fred::impl::~impl() { }\n    Fred::impl::impl(const Fred::impl &) { }\n    void Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }\n}" always "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n    Fred::impl::impl() { }\n    Fred::impl::~impl() { }\n    Fred::impl::impl(const Fred::impl &) { }\n    void Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3677 always 3677
  false always 0
Line 3691
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3691 always 3691
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3692
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3692 always 3692
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3693
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3693 always 3693
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3694
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3694 always 3694
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3695
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3695 always 3695
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3697
  "impl ( ) { }" always "impl ( ) { }"
Line 3698
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3698 always 3698
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  9 always 9
Line 3703
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3704
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3704 always 3704
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  10 always 10
Line 3709
  "impl ( const Fred :: impl & ) { }" always "impl ( const Fred :: impl & ) { }"
Line 3710
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3710 always 3710
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 3715
  "foo ( const Fred :: impl & , const Fred :: impl & ) const { }" always "foo ( const Fred :: impl & , const Fred :: impl & ) const { }"
Line 3716
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3716 always 3716
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 3722
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n}\nNS::Fred::impl::impl() { }\nNS::Fred::impl::~impl() { }\nNS::Fred::impl::impl(const NS::Fred::impl &) { }\nvoid NS::Fred::impl::foo(const NS::Fred::impl &, const NS::Fred::impl &) const { }" always "namespace NS {\n    class Fred { struct impl; };\n    struct Fred::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n}\nNS::Fred::impl::impl() { }\nNS::Fred::impl::~impl() { }\nNS::Fred::impl::impl(const NS::Fred::impl &) { }\nvoid NS::Fred::impl::foo(const NS::Fred::impl &, const NS::Fred::impl &) const { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3722 always 3722
  false always 0
Line 3736
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3736 always 3736
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3737
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3737 always 3737
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3738
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3738 always 3738
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3739
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3739 always 3739
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3740
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3740 always 3740
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3742
  "impl ( ) { }" always "impl ( ) { }"
Line 3743
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3743 always 3743
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  10 always 10
Line 3748
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3749
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3749 always 3749
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 3754
  "impl ( const NS :: Fred :: impl & ) { }" always "impl ( const NS :: Fred :: impl & ) { }"
Line 3755
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3755 always 3755
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 3760
  "foo ( const NS :: Fred :: impl & , const NS :: Fred :: impl & ) const { }" always "foo ( const NS :: Fred :: impl & , const NS :: Fred :: impl & ) const { }"
Line 3761
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3761 always 3761
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  13 always 13
Line 3767
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};" always "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3767 always 3767
  false always 0
Line 3777
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3777 always 3777
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3778
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3778 always 3778
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3779
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3779 always 3779
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3780
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3780 always 3780
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3781
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3781 always 3781
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3783
  "impl ( ) { }" always "impl ( ) { }"
Line 3784
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3784 always 3784
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
Line 3789
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3790
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3790 always 3790
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
Line 3795
  "impl ( const impl & ) { }" always "impl ( const impl & ) { }"
Line 3796
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3796 always 3796
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
Line 3801
  "foo ( const impl & , const impl & ) const { }" always "foo ( const impl & , const impl & ) const { }"
Line 3802
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3802 always 3802
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3808
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nNS::Fred::impl::impl() { }\nNS::Fred::impl::~impl() { }\nNS::Fred::impl::impl(const NS::Fred::impl &) { }\nvoid NS::Fred::impl::foo(const NS::Fred::impl &, const NS::Fred::impl &) const { }" always "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nNS::Fred::impl::impl() { }\nNS::Fred::impl::~impl() { }\nNS::Fred::impl::impl(const NS::Fred::impl &) { }\nvoid NS::Fred::impl::foo(const NS::Fred::impl &, const NS::Fred::impl &) const { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3808 always 3808
  false always 0
Line 3822
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3822 always 3822
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3823
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3823 always 3823
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3824
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3824 always 3824
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3825
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3825 always 3825
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3826
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3826 always 3826
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3828
  "impl ( ) { }" always "impl ( ) { }"
Line 3829
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3829 always 3829
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  10 always 10
Line 3834
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3835
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3835 always 3835
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 3840
  "impl ( const NS :: Fred :: impl & ) { }" always "impl ( const NS :: Fred :: impl & ) { }"
Line 3841
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3841 always 3841
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 3846
  "foo ( const NS :: Fred :: impl & , const NS :: Fred :: impl & ) const { }" always "foo ( const NS :: Fred :: impl & , const NS :: Fred :: impl & ) const { }"
Line 3847
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3847 always 3847
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  13 always 13
Line 3853
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nnamespace NS {\n    Fred::impl::impl() { }\n    Fred::impl::~impl() { }\n    Fred::impl::impl(const Fred::impl &) { }\n    void Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }\n}" always "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nnamespace NS {\n    Fred::impl::impl() { }\n    Fred::impl::~impl() { }\n    Fred::impl::impl(const Fred::impl &) { }\n    void Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3853 always 3853
  false always 0
Line 3869
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3869 always 3869
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3870
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3870 always 3870
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3871
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3871 always 3871
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3872
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3872 always 3872
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3873
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3873 always 3873
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3875
  "impl ( ) { }" always "impl ( ) { }"
Line 3876
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3876 always 3876
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 3881
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3882
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3882 always 3882
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 3887
  "impl ( const Fred :: impl & ) { }" always "impl ( const Fred :: impl & ) { }"
Line 3888
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3888 always 3888
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  13 always 13
Line 3893
  "foo ( const Fred :: impl & , const Fred :: impl & ) const { }" always "foo ( const Fred :: impl & , const Fred :: impl & ) const { }"
Line 3894
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3894 always 3894
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  14 always 14
Line 3900
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nusing namespace NS;\nFred::impl::impl() { }\nFred::impl::~impl() { }\nFred::impl::impl(const Fred::impl &) { }\nvoid Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }" always "namespace NS {\n    class Fred { struct impl; };\n}\nstruct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nusing namespace NS;\nFred::impl::impl() { }\nFred::impl::~impl() { }\nFred::impl::impl(const Fred::impl &) { }\nvoid Fred::impl::foo(const Fred::impl &, const Fred::impl &) const { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3900 always 3900
  false always 0
Line 3915
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3915 always 3915
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3916
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3916 always 3916
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 3917
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3917 always 3917
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3918
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3918 always 3918
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3919
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3919 always 3919
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3921
  "impl ( ) { }" always "impl ( ) { }"
Line 3922
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3922 always 3922
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 3927
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3928
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3928 always 3928
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 3933
  "impl ( const Fred :: impl & ) { }" always "impl ( const Fred :: impl & ) { }"
Line 3934
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3934 always 3934
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  13 always 13
Line 3939
  "foo ( const Fred :: impl & , const Fred :: impl & ) const { }" always "foo ( const Fred :: impl & , const Fred :: impl & ) const { }"
Line 3940
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3940 always 3940
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  14 always 14
Line 3946
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <typename A> class Fred { struct impl; };\ntemplate <typename A> struct Fred<A>::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};" always "template <typename A> class Fred { struct impl; };\ntemplate <typename A> struct Fred<A>::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3946 always 3946
  false always 0
Line 3954
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3954 always 3954
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3955
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3955 always 3955
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
Line 3956
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3956 always 3956
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3957
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3957 always 3957
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 3958
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3958 always 3958
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3960
  "impl ( ) { }" always "impl ( ) { }"
Line 3961
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3961 always 3961
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  3 always 3
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  3 always 3
Line 3966
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 3967
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3967 always 3967
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 3972
  "impl ( const impl & ) { }" always "impl ( const impl & ) { }"
Line 3973
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3973 always 3973
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
Line 3978
  "foo ( const impl & , const impl & ) const { }" always "foo ( const impl & , const impl & ) const { }"
Line 3979
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3979 always 3979
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
Line 3985
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <typename A> class Fred { struct impl; };\ntemplate <typename A> struct Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\ntemplate <typename A> Fred<A>::impl::impl() { }\ntemplate <typename A> Fred<A>::impl::~impl() { }\ntemplate <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\ntemplate <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }" always "template <typename A> class Fred { struct impl; };\ntemplate <typename A> struct Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\ntemplate <typename A> Fred<A>::impl::impl() { }\ntemplate <typename A> Fred<A>::impl::~impl() { }\ntemplate <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\ntemplate <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3985 always 3985
  false always 0
Line 3997
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3997 always 3997
  != always {!<=-1,!>=2}
  nullptr always 0
Line 3998
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3998 always 3998
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
Line 3999
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  3999 always 3999
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4000
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4000 always 4000
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4001
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4001 always 4001
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4003
  "impl ( ) { }" always "impl ( ) { }"
Line 4004
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4004 always 4004
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  3 always 3
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4009
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 4010
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4010 always 4010
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  9 always 9
Line 4015
  "impl ( const Fred < A > :: impl & ) { }" always "impl ( const Fred < A > :: impl & ) { }"
Line 4016
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4016 always 4016
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  10 always 10
Line 4021
  "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }" always "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }"
Line 4022
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4022 always 4022
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 4028
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl() { }\n        ~impl() { }\n        impl(const impl &) { }\n        void foo(const impl &, const impl &) const { }\n    };\n}" always "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl() { }\n        ~impl() { }\n        impl(const impl &) { }\n        void foo(const impl &, const impl &) const { }\n    };\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4028 always 4028
  false always 0
Line 4038
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4038 always 4038
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4039
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4039 always 4039
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4040
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4040 always 4040
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4041
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4041 always 4041
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4042
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4042 always 4042
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4044
  "impl ( ) { }" always "impl ( ) { }"
Line 4045
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4045 always 4045
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4050
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 4051
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4051 always 4051
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
Line 4056
  "impl ( const impl & ) { }" always "impl ( const impl & ) { }"
Line 4057
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4057 always 4057
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
Line 4062
  "foo ( const impl & , const impl & ) const { }" always "foo ( const impl & , const impl & ) const { }"
Line 4063
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4063 always 4063
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
Line 4069
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n    template <typename A> Fred<A>::impl::impl() { }\n    template <typename A> Fred<A>::impl::~impl() { }\n    template <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\n    template <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }\n}" always "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n    template <typename A> Fred<A>::impl::impl() { }\n    template <typename A> Fred<A>::impl::~impl() { }\n    template <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\n    template <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4069 always 4069
  false always 0
Line 4083
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4083 always 4083
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4084
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4084 always 4084
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4085
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4085 always 4085
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4086
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4086 always 4086
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4087
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4087 always 4087
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4089
  "impl ( ) { }" always "impl ( ) { }"
Line 4090
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4090 always 4090
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  9 always 9
Line 4095
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 4096
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4096 always 4096
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  10 always 10
Line 4101
  "impl ( const Fred < A > :: impl & ) { }" always "impl ( const Fred < A > :: impl & ) { }"
Line 4102
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4102 always 4102
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 4107
  "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }" always "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }"
Line 4108
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4108 always 4108
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 4114
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n}\ntemplate <typename A> NS::Fred<A>::impl::impl() { }\ntemplate <typename A> NS::Fred<A>::impl::~impl() { }\ntemplate <typename A> NS::Fred<A>::impl::impl(const NS::Fred<A>::impl &) { }\ntemplate <typename A> void NS::Fred<A>::impl::foo(const NS::Fred<A>::impl &, const NS::Fred<A>::impl &) const { }" always "namespace NS {\n    template <typename A> class Fred { struct impl; };\n    template <typename A> struct Fred<A>::impl {\n        impl();\n        ~impl();\n        impl(const impl &);\n        void foo(const impl &, const impl &) const;\n    };\n}\ntemplate <typename A> NS::Fred<A>::impl::impl() { }\ntemplate <typename A> NS::Fred<A>::impl::~impl() { }\ntemplate <typename A> NS::Fred<A>::impl::impl(const NS::Fred<A>::impl &) { }\ntemplate <typename A> void NS::Fred<A>::impl::foo(const NS::Fred<A>::impl &, const NS::Fred<A>::impl &) const { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4114 always 4114
  false always 0
Line 4128
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4128 always 4128
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4129
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4129 always 4129
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4130
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4130 always 4130
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4131
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4131 always 4131
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4132
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4132 always 4132
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4134
  "impl ( ) { }" always "impl ( ) { }"
Line 4135
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4135 always 4135
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  10 always 10
Line 4140
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 4141
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4141 always 4141
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 4146
  "impl ( const NS :: Fred < A > :: impl & ) { }" always "impl ( const NS :: Fred < A > :: impl & ) { }"
Line 4147
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4147 always 4147
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 4152
  "foo ( const NS :: Fred < A > :: impl & , const NS :: Fred < A > :: impl & ) const { }" always "foo ( const NS :: Fred < A > :: impl & , const NS :: Fred < A > :: impl & ) const { }"
Line 4153
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4153 always 4153
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  13 always 13
Line 4159
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};" always "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl() { }\n    ~impl() { }\n    impl(const impl &) { }\n    void foo(const impl &, const impl &) const { }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4159 always 4159
  false always 0
Line 4169
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4169 always 4169
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4170
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4170 always 4170
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4171
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4171 always 4171
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4172
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4172 always 4172
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4173
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4173 always 4173
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4175
  "impl ( ) { }" always "impl ( ) { }"
Line 4176
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4176 always 4176
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
Line 4181
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 4182
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4182 always 4182
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
Line 4187
  "impl ( const impl & ) { }" always "impl ( const impl & ) { }"
Line 4188
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4188 always 4188
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
Line 4193
  "foo ( const impl & , const impl & ) const { }" always "foo ( const impl & , const impl & ) const { }"
Line 4194
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4194 always 4194
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4200
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\ntemplate <typename A> NS::Fred<A>::impl::impl() { }\ntemplate <typename A> NS::Fred<A>::impl::~impl() { }\ntemplate <typename A> NS::Fred<A>::impl::impl(const NS::Fred<A>::impl &) { }\ntemplate <typename A> void NS::Fred<A>::impl::foo(const NS::Fred<A>::impl &, const NS::Fred<A>::impl &) const { }" always "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\ntemplate <typename A> NS::Fred<A>::impl::impl() { }\ntemplate <typename A> NS::Fred<A>::impl::~impl() { }\ntemplate <typename A> NS::Fred<A>::impl::impl(const NS::Fred<A>::impl &) { }\ntemplate <typename A> void NS::Fred<A>::impl::foo(const NS::Fred<A>::impl &, const NS::Fred<A>::impl &) const { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4200 always 4200
  false always 0
Line 4214
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4214 always 4214
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4215
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4215 always 4215
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4216
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4216 always 4216
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4217
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4217 always 4217
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4218
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4218 always 4218
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4220
  "impl ( ) { }" always "impl ( ) { }"
Line 4221
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4221 always 4221
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  10 always 10
Line 4226
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 4227
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4227 always 4227
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 4232
  "impl ( const NS :: Fred < A > :: impl & ) { }" always "impl ( const NS :: Fred < A > :: impl & ) { }"
Line 4233
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4233 always 4233
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 4238
  "foo ( const NS :: Fred < A > :: impl & , const NS :: Fred < A > :: impl & ) const { }" always "foo ( const NS :: Fred < A > :: impl & , const NS :: Fred < A > :: impl & ) const { }"
Line 4239
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4239 always 4239
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  13 always 13
Line 4245
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nnamespace NS {\n    template <typename A> Fred<A>::impl::impl() { }\n    template <typename A> Fred<A>::impl::~impl() { }\n    template <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\n    template <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }\n}" always "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred<A>::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nnamespace NS {\n    template <typename A> Fred<A>::impl::impl() { }\n    template <typename A> Fred<A>::impl::~impl() { }\n    template <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\n    template <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4245 always 4245
  false always 0
Line 4261
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4261 always 4261
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4262
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4262 always 4262
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4263
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4263 always 4263
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4264
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4264 always 4264
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4265
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4265 always 4265
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4267
  "impl ( ) { }" always "impl ( ) { }"
Line 4268
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4268 always 4268
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 4273
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 4274
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4274 always 4274
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 4279
  "impl ( const Fred < A > :: impl & ) { }" always "impl ( const Fred < A > :: impl & ) { }"
Line 4280
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4280 always 4280
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  13 always 13
Line 4285
  "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }" always "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }"
Line 4286
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4286 always 4286
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  14 always 14
Line 4292
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nusing namespace NS;\ntemplate <typename A> Fred<A>::impl::impl() { }\ntemplate <typename A> Fred<A>::impl::~impl() { }\ntemplate <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\ntemplate <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }" always "namespace NS {\n    template <typename A> class Fred { struct impl; };\n}\ntemplate <typename A> struct NS::Fred::impl {\n    impl();\n    ~impl();\n    impl(const impl &);\n    void foo(const impl &, const impl &) const;\n};\nusing namespace NS;\ntemplate <typename A> Fred<A>::impl::impl() { }\ntemplate <typename A> Fred<A>::impl::~impl() { }\ntemplate <typename A> Fred<A>::impl::impl(const Fred<A>::impl &) { }\ntemplate <typename A> void Fred<A>::impl::foo(const Fred<A>::impl &, const Fred<A>::impl &) const { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4292 always 4292
  false always 0
Line 4307
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4307 always 4307
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4308
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4308 always 4308
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
Line 4309
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4309 always 4309
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4310
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4310 always 4310
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  2 always 2
Line 4311
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4311 always 4311
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  4 always 4
Line 4313
  "impl ( ) { }" always "impl ( ) { }"
Line 4314
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4314 always 4314
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  5 always 5
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  11 always 11
Line 4319
  "~ impl ( ) { }" always "~ impl ( ) { }"
Line 4320
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4320 always 4320
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  6 always 6
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  12 always 12
Line 4325
  "impl ( const Fred < A > :: impl & ) { }" always "impl ( const Fred < A > :: impl & ) { }"
Line 4326
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4326 always 4326
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  7 always 7
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  13 always 13
Line 4331
  "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }" always "foo ( const Fred < A > :: impl & , const Fred < A > :: impl & ) const { }"
Line 4332
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4332 always 4332
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  14 always 14
Line 4341
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4341 always 4341
  "int ( * X0 ) ( long ) < int ( ) ( long ) > :: f0 ( int * ) { return 0 ; }" always "int ( * X0 ) ( long ) < int ( ) ( long ) > :: f0 ( int * ) { return 0 ; }"
Line 4342
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4342 always 4342
  "[test.cpp:1]: (debug) SymbolDatabase::findFunction found '>' without link.\n" always "[test.cpp:1]: (debug) SymbolDatabase::findFunction found '>' without link.\n"
Line 4346
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum class ENUM1;\nenum class ENUM2 { MEMBER2 };\nenum class ENUM3 : int { MEMBER1, };" always "enum class ENUM1;\nenum class ENUM2 { MEMBER2 };\nenum class ENUM3 : int { MEMBER1, };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4346 always 4346
  false always 0
Line 4349
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4349 always 4349
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4350
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4350 always 4350
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 4351
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4351 always 4351
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 4355
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::string get_endpoint_url() const noexcept override;" always "std::string get_endpoint_url() const noexcept override;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4355 always 4355
  false always 0
Line 4356
  = possible 0
  ? possible 0
  & {lifetime[Address]=(db->scopeList.front().functionList.front()),!0}
  db always !0
  nullptr always 0
Line 4357
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4357 always 4357
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 4358
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4358 always 4358
  && always {!<=-1,!>=2}
  f always !0
Line 4359
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4359 always 4359
  && always {!<=-1,!>=2}
  f always !0
Line 4360
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4360 always 4360
  && always {!<=-1,!>=2}
  f always !0
Line 4364
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Bar {\n    virtual std::string get_endpoint_url() const noexcept;\n};\nstruct Foo : Bar {\n    virtual std::string get_endpoint_url() const noexcept override final;\n};" always "struct Bar {\n    virtual std::string get_endpoint_url() const noexcept;\n};\nstruct Foo : Bar {\n    virtual std::string get_endpoint_url() const noexcept override final;\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4364 always 4364
  false always 0
Line 4370
  = possible 0
  ? possible 0
  "get_endpoint_url ( ) const noexcept ;" always "get_endpoint_url ( ) const noexcept ;"
  : always 0
  nullptr always 0
Line 4371
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4371 always 4371
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 4372
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4372 always 4372
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 4373
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4373 always 4373
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4374
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4374 always 4374
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
Line 4375
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4375 always 4375
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
Line 4376
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4376 always 4376
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4377
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4377 always 4377
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4378
  = possible 0
  ? possible 0
  "get_endpoint_url ( ) const noexcept override final ;" always "get_endpoint_url ( ) const noexcept override final ;"
  : always 0
  nullptr always 0
Line 4379
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4379 always 4379
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 4380
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4380 always 4380
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 4381
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4381 always 4381
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4382
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4382 always 4382
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4383
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4383 always 4383
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4384
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4384 always 4384
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4385
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4385 always 4385
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4389
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    int x, y;\n    void foo() const volatile { }\n    void foo() volatile { }\n    void foo() const { }\n    void foo() { }\n};" always "struct Fred {\n    int x, y;\n    void foo() const volatile { }\n    void foo() volatile { }\n    void foo() const { }\n    void foo() { }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4389 always 4389
  false always 0
Line 4396
  = possible 0
  ? possible 0
  "foo ( ) const volatile {" always "foo ( ) const volatile {"
  : always 0
  nullptr always 0
Line 4397
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4397 always 4397
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 4398
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4398 always 4398
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 4399
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4399 always 4399
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4400
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4400 always 4400
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4401
  = possible 0
  ? possible 0
  "foo ( ) volatile {" always "foo ( ) volatile {"
  : always 0
  nullptr always 0
Line 4402
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4402 always 4402
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 4403
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4403 always 4403
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 4404
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4404 always 4404
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
Line 4405
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4405 always 4405
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4406
  = possible 0
  ? possible 0
  "foo ( ) const {" always "foo ( ) const {"
  : always 0
  nullptr always 0
Line 4407
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4407 always 4407
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 4408
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4408 always 4408
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 4409
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4409 always 4409
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
Line 4410
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4410 always 4410
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
Line 4411
  = possible 0
  ? possible 0
  "foo ( ) {" always "foo ( ) {"
  : always 0
  nullptr always 0
Line 4412
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4412 always 4412
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 4413
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4413 always 4413
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 4414
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4414 always 4414
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
Line 4415
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4415 always 4415
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
Line 4420
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Map<String,Entry>::Entry* e;" always "class Map<String,Entry>::Entry* e;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4420 always 4420
  false always 0
Line 4421
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4421 always 4421
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4422
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4422 always 4422
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 4423
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4423 always 4423
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 4426
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template class boost::token_iterator_generator<boost::offset_separator>::type; void foo() { }" always "template class boost::token_iterator_generator<boost::offset_separator>::type; void foo() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4426 always 4426
  false always 0
Line 4427
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4427 always 4427
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4428
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4428 always 4428
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 4431
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo() {\n    return class Arm_relocate_functions<big_endian>::thumb32_branch_offset(upper_insn, lower_insn);\n}" always "void foo() {\n    return class Arm_relocate_functions<big_endian>::thumb32_branch_offset(upper_insn, lower_insn);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4431 always 4431
  false always 0
Line 4434
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4434 always 4434
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4435
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4435 always 4435
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 4440
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class A { };\nclass B final : public A { };" always "class A { };\nclass B final : public A { };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4440 always 4440
  false always 0
Line 4442
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4442 always 4442
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 4443
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4443 always 4443
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 4447
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A { struct B; };\nstruct A::B {\n    B() = default;\n    B(const B&) {}\n};" always "struct A { struct B; };\nstruct A::B {\n    B() = default;\n    B(const B&) {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4447 always 4447
  false always 0
Line 4453
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4453 always 4453
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 4454
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4454 always 4454
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 4455
  = possible 0
  ? possible 0
  "B ( const B & ) { }" always "B ( const B & ) { }"
  : always 0
  nullptr always 0
Line 4456
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4456 always 4456
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 4457
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4457 always 4457
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 4458
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4458 always 4458
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
Line 4462
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base { virtual int f() const = 0; };\nclass Derived : Base { virtual int f() const final { return 6; } };" always "class Base { virtual int f() const = 0; };\nclass Derived : Base { virtual int f() const final { return 6; } };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4462 always 4462
  false always 0
Line 4465
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4465 always 4465
  4 always 4
Line 4466
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4466 always 4466
  1 always 1
Line 4468
  0 always 0
Line 4469
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4469 always 4469
  f1 always symbolic=(db->functionScopes[0])
Line 4473
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <typename T>\nclass optional {\n  auto     value() & -> T &;\n  auto     value() && -> T &&;\n  auto     value() const& -> T const &;\n};\ntemplate <typename T>\nauto optional<T>::value() & -> T & {}\ntemplate <typename T>\nauto optional<T>::value() && -> T && {}\ntemplate <typename T>\nauto optional<T>::value() const & -> T const & {}\noptional<int> i;" always "template <typename T>\nclass optional {\n  auto     value() & -> T &;\n  auto     value() && -> T &&;\n  auto     value() const& -> T const &;\n};\ntemplate <typename T>\nauto optional<T>::value() & -> T & {}\ntemplate <typename T>\nauto optional<T>::value() && -> T && {}\ntemplate <typename T>\nauto optional<T>::value() const & -> T const & {}\noptional<int> i;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4473 always 4473
  false always 0
Line 4487
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4487 always 4487
  5 always 5
Line 4488
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4488 always 4488
  3 always 3
Line 4490
  0 always 0
Line 4491
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4491 always 4491
  f always symbolic=(db->functionScopes[0])
Line 4492
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4492 always 4492
  ! always {!<=-1,!>=2}
  f always symbolic=(db->functionScopes[0])
Line 4493
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4493 always 4493
Line 4494
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4494 always 4494
Line 4496
  1 always 1
Line 4497
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4497 always 4497
  f always symbolic=(db->functionScopes[1])
Line 4498
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4498 always 4498
  ! always {!<=-1,!>=2}
  f always symbolic=(db->functionScopes[1])
Line 4499
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4499 always 4499
Line 4500
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4500 always 4500
Line 4502
  2 always 2
Line 4503
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4503 always 4503
  f always symbolic=(db->functionScopes[2])
Line 4504
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4504 always 4504
  f always symbolic=(db->functionScopes[2])
Line 4505
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4505 always 4505
Line 4506
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4506 always 4506
Line 4510
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace foo {\n  using namespace bar::baz;\n  auto func(int arg) -> bar::quux {}\n}" always "namespace foo {\n  using namespace bar::baz;\n  auto func(int arg) -> bar::quux {}\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4510 always 4510
  false always 0
Line 4514
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4514 always 4514
  2 always 2
Line 4518
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <class T1, class T2>\nvoid f() {\n  using T3 = typename T1::template T3<T2>;\n  T3 t;\n}" always "template <class T1, class T2>\nvoid f() {\n  using T3 = typename T1::template T3<T2>;\n  T3 t;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4518 always 4518
  false always 0
Line 4523
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4523 always 4523
  2 always 2
Line 4527
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <class...> struct a;\nnamespace {\ntemplate <class, class> struct b;\ntemplate <template <class> class c, class... f, template <class...> class d>\nstruct b<c<f...>, d<>>;\n}\nvoid e() { using c = a<>; }" always "template <class...> struct a;\nnamespace {\ntemplate <class, class> struct b;\ntemplate <template <class> class c, class... f, template <class...> class d>\nstruct b<c<f...>, d<>>;\n}\nvoid e() { using c = a<>; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4527 always 4527
  false always 0
Line 4534
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4534 always 4534
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4535
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4535 always 4535
  "" always ""
Line 4540
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class C { C(); };\nC::C() = default;" always "class C { C(); };\nC::C() = default;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4540 always 4540
  false always 0
Line 4542
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4542 always 4542
  == always {!<=-1,!>=2}
  2 always 2
Line 4543
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4543 always 4543
  == always {!<=-1,!>=2}
  1 always 1
Line 4544
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4544 always 4544
  == always {!<=-1,!>=2}
  true always 1
Line 4547
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace ns {\nclass C { C(); };\n}\nusing namespace ns;\nC::C() = default;" always "namespace ns {\nclass C { C(); };\n}\nusing namespace ns;\nC::C() = default;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4547 always 4547
  false always 0
Line 4552
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4552 always 4552
  == always {!<=-1,!>=2}
  3 always 3
Line 4553
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4553 always 4553
  == always {!<=-1,!>=2}
  1 always 1
Line 4554
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4554 always 4554
  == always {!<=-1,!>=2}
  true always 1
Line 4560
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace ns {\nclass A {};\n}\nclass AA {\nprivate:\n    void f(const ns::A&);\n};\nusing namespace ns;\nvoid AA::f(const A&) { }" always "namespace ns {\nclass A {};\n}\nclass AA {\nprivate:\n    void f(const ns::A&);\n};\nusing namespace ns;\nvoid AA::f(const A&) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4560 always 4560
  false always 0
Line 4569
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4569 always 4569
  == always {!<=-1,!>=2}
  5 always 5
Line 4570
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4570 always 4570
  == always {!<=-1,!>=2}
  1 always 1
Line 4571
  "AA" always "AA"
Line 4572
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4572 always 4572
Line 4573
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4573 always 4573
  == always {!<=-1,!>=2}
  1 always 1
Line 4574
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4574 always 4574
  == always {!<=-1,!>=2}
  "f" always "f"
Line 4575
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4575 always 4575
  == always {!<=-1,!>=2}
  true always 1
Line 4578
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace ns {\nnamespace ns1 {\nclass A {};\n}\n}\nclass AA {\nprivate:\n    void f(const ns::ns1::A&);\n};\nusing namespace ns::ns1;\nvoid AA::f(const A&) { }" always "namespace ns {\nnamespace ns1 {\nclass A {};\n}\n}\nclass AA {\nprivate:\n    void f(const ns::ns1::A&);\n};\nusing namespace ns::ns1;\nvoid AA::f(const A&) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4578 always 4578
  false always 0
Line 4589
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4589 always 4589
  == always {!<=-1,!>=2}
  6 always 6
Line 4590
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4590 always 4590
  == always {!<=-1,!>=2}
  1 always 1
Line 4591
  "AA" always "AA"
Line 4592
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4592 always 4592
Line 4593
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4593 always 4593
  == always {!<=-1,!>=2}
  1 always 1
Line 4594
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4594 always 4594
  == always {!<=-1,!>=2}
  "f" always "f"
Line 4595
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4595 always 4595
  == always {!<=-1,!>=2}
  true always 1
Line 4598
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace ns {\nnamespace ns1 {\nclass A {};\n}\n}\nclass AA {\nprivate:\n    void f(const ns::ns1::A&);\n};\nusing namespace ns;\nvoid AA::f(const ns1::A&) { }" always "namespace ns {\nnamespace ns1 {\nclass A {};\n}\n}\nclass AA {\nprivate:\n    void f(const ns::ns1::A&);\n};\nusing namespace ns;\nvoid AA::f(const ns1::A&) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4598 always 4598
  false always 0
Line 4609
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4609 always 4609
  == always {!<=-1,!>=2}
  6 always 6
Line 4610
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4610 always 4610
  == always {!<=-1,!>=2}
  1 always 1
Line 4611
  "AA" always "AA"
Line 4612
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4612 always 4612
Line 4613
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4613 always 4613
  == always {!<=-1,!>=2}
  1 always 1
Line 4614
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4614 always 4614
  == always {!<=-1,!>=2}
  "f" always "f"
Line 4615
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4615 always 4615
  == always {!<=-1,!>=2}
  true always 1
Line 4621
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace Terminal {\n    class Complete {\n    public:\n        std::string act(const Parser::Action *act);\n    };\n}\nusing namespace std;\nusing namespace Parser;\nusing namespace Terminal;\nstring Complete::act(const Action *act) { }" always "namespace Terminal {\n    class Complete {\n    public:\n        std::string act(const Parser::Action *act);\n    };\n}\nusing namespace std;\nusing namespace Parser;\nusing namespace Terminal;\nstring Complete::act(const Action *act) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4621 always 4621
  false always 0
Line 4631
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4631 always 4631
  == always {!<=-1,!>=2}
  4 always 4
Line 4632
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4632 always 4632
  == always {!<=-1,!>=2}
  1 always 1
Line 4633
  "Complete" always "Complete"
Line 4634
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4634 always 4634
Line 4635
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4635 always 4635
  == always {!<=-1,!>=2}
  1 always 1
Line 4636
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4636 always 4636
  == always {!<=-1,!>=2}
  "act" always "act"
Line 4637
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4637 always 4637
  == always {!<=-1,!>=2}
  true always 1
Line 4640
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace Terminal {\n    class Complete {\n    public:\n        std::string act(const Foo::Parser::Action *act);\n    };\n}\nusing namespace std;\nusing namespace Foo::Parser;\nusing namespace Terminal;\nstring Complete::act(const Action *act) { }" always "namespace Terminal {\n    class Complete {\n    public:\n        std::string act(const Foo::Parser::Action *act);\n    };\n}\nusing namespace std;\nusing namespace Foo::Parser;\nusing namespace Terminal;\nstring Complete::act(const Action *act) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4640 always 4640
  false always 0
Line 4650
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4650 always 4650
  == always {!<=-1,!>=2}
  4 always 4
Line 4651
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4651 always 4651
  == always {!<=-1,!>=2}
  1 always 1
Line 4652
  "Complete" always "Complete"
Line 4653
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4653 always 4653
Line 4654
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4654 always 4654
  == always {!<=-1,!>=2}
  1 always 1
Line 4655
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4655 always 4655
  == always {!<=-1,!>=2}
  "act" always "act"
Line 4656
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4656 always 4656
  == always {!<=-1,!>=2}
  true always 1
Line 4661
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace foo { void foo() {} }" always "namespace foo { void foo() {} }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4661 always 4661
  false always 0
Line 4662
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4662 always 4662
  == always {!<=-1,!>=2}
  1 always 1
Line 4663
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4663 always 4663
  false always 0
  0 always 0
Line 4667
  old always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 4668
  = always 1
  true always 1
Line 4669
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct a { a() noexcept; };\na::a() noexcept = default;" always "struct a { a() noexcept; };\na::a() noexcept = default;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4669 always 4669
  false always 0
Line 4671
  = always {!<=-1,!>=2}
  old always {!<=-1,!>=2}
Line 4672
  "a" always "a"
Line 4673
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4673 always 4673
Line 4674
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4674 always 4674
  == always {!<=-1,!>=2}
  1 always 1
Line 4675
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4675 always 4675
  == always {!<=-1,!>=2}
  "a" always "a"
Line 4676
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4676 always 4676
  == always {!<=-1,!>=2}
  false always 0
Line 4677
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4677 always 4677
  == always {!<=-1,!>=2}
  true always 1
Line 4678
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4678 always 4678
  == always {!<=-1,!>=2}
  true always 1
Line 4679
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4679 always 4679
  == always {!<=-1,!>=2}
  true always 1
Line 4680
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4680 always 4680
  "" always ""
Line 4685
  old always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 4686
  = always 1
  true always 1
Line 4687
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct a { a() noexcept(false); };\na::a() noexcept(false) = default;" always "struct a { a() noexcept(false); };\na::a() noexcept(false) = default;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4687 always 4687
  false always 0
Line 4689
  = always {!<=-1,!>=2}
  old always {!<=-1,!>=2}
Line 4690
  "a" always "a"
Line 4691
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4691 always 4691
Line 4692
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4692 always 4692
  == always {!<=-1,!>=2}
  1 always 1
Line 4693
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4693 always 4693
  == always {!<=-1,!>=2}
  "a" always "a"
Line 4694
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4694 always 4694
  == always {!<=-1,!>=2}
  false always 0
Line 4695
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4695 always 4695
  == always {!<=-1,!>=2}
  true always 1
Line 4696
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4696 always 4696
  == always {!<=-1,!>=2}
  true always 1
Line 4697
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4697 always 4697
  == always {!<=-1,!>=2}
  false always 0
Line 4698
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4698 always 4698
  "" always ""
Line 4701
  old always {!<=-1,!>=2}
  = always {!<=-1,!>=2}
Line 4702
  = always 1
  true always 1
Line 4703
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct a { a() noexcept(true); };\na::a() noexcept(true) = default;" always "struct a { a() noexcept(true); };\na::a() noexcept(true) = default;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4703 always 4703
  false always 0
Line 4705
  = always {!<=-1,!>=2}
  old always {!<=-1,!>=2}
Line 4706
  "a" always "a"
Line 4707
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4707 always 4707
Line 4708
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4708 always 4708
  == always {!<=-1,!>=2}
  1 always 1
Line 4709
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4709 always 4709
  == always {!<=-1,!>=2}
  "a" always "a"
Line 4710
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4710 always 4710
  == always {!<=-1,!>=2}
  false always 0
Line 4711
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4711 always 4711
  == always {!<=-1,!>=2}
  true always 1
Line 4712
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4712 always 4712
  == always {!<=-1,!>=2}
  true always 1
Line 4713
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4713 always 4713
  == always {!<=-1,!>=2}
  true always 1
Line 4714
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4714 always 4714
  "" always ""
Line 4719
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred {\n  enum Mode { Mode1, Mode2, Mode3 };\n  void f() { _mode = x; }\n  Mode _mode;\n  DECLARE_PROPERTY_FIELD(_mode);\n};" always "class Fred {\n  enum Mode { Mode1, Mode2, Mode3 };\n  void f() { _mode = x; }\n  Mode _mode;\n  DECLARE_PROPERTY_FIELD(_mode);\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4719 always 4719
  false always 0
Line 4725
  "_mode =" always "_mode ="
Line 4726
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4726 always 4726
Line 4727
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4727 always 4727
Line 4728
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4728 always 4728
Line 4730
  "( _mode ) ;" always "( _mode ) ;"
Line 4731
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4731 always 4731
Line 4735
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class C { auto operator=(const C&) -> C&; };\nauto C::operator=(const C&) -> C& = default;" always "class C { auto operator=(const C&) -> C&; };\nauto C::operator=(const C&) -> C& = default;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4735 always 4735
  false always 0
Line 4737
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4737 always 4737
  == always {!<=-1,!>=2}
  2 always 2
Line 4738
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4738 always 4738
  == always {!<=-1,!>=2}
  1 always 1
Line 4739
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4739 always 4739
  == always {!<=-1,!>=2}
  true always 1
Line 4740
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4740 always 4740
  == always {!<=-1,!>=2}
  false always 0
Line 4744
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "extern const char ( * x [ 256 ] ) ;" always "extern const char ( * x [ 256 ] ) ;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4744 always 4744
  false always 0
Line 4745
  "x" always "x"
Line 4746
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4746 always 4746
Line 4750
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4750 always 4750
  "namespace external {\nnamespace ns {\nenum class s { O };\n}\n}\nnamespace internal {\nnamespace ns1 {\ntemplate <typename T>\nvoid make(external::ns::s) {\n}\n}\n}\nusing namespace external::ns;\nstruct A { };\nstatic void make(external::ns::s ss) {\n  internal::ns1::make<A>(ss);\n}\n" always "namespace external {\nnamespace ns {\nenum class s { O };\n}\n}\nnamespace internal {\nnamespace ns1 {\ntemplate <typename T>\nvoid make(external::ns::s) {\n}\n}\n}\nusing namespace external::ns;\nstruct A { };\nstatic void make(external::ns::s ss) {\n  internal::ns1::make<A>(ss);\n}\n"
  true always 1
Line 4767
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4767 always 4767
  "" always ""
Line 4771
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace external {\nnamespace ns1 {\nclass A {\npublic:\n  struct S { };\n  A(const S&) { }\n};\nstatic const A::S AS = A::S();\n}\n}\nusing namespace external::ns1;\nA a{AS};" always "namespace external {\nnamespace ns1 {\nclass A {\npublic:\n  struct S { };\n  A(const S&) { }\n};\nstatic const A::S AS = A::S();\n}\n}\nusing namespace external::ns1;\nA a{AS};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4771 always 4771
  false always 0
Line 4783
  "A a" always "A a"
Line 4784
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4784 always 4784
Line 4785
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4785 always 4785
Line 4786
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4786 always 4786
Line 4787
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4787 always 4787
Line 4788
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4788 always 4788
  == always {!<=-1,!>=2}
  "external::ns1::A" always "external::ns1::A"
Line 4792
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    void foo(const int * const x);\n};\nvoid Fred::foo(const int * x) { }" always "struct Fred {\n    void foo(const int * const x);\n};\nvoid Fred::foo(const int * x) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4792 always 4792
  false always 0
Line 4796
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4796 always 4796
  "" always ""
Line 4797
  "foo ( const int * x )" always "foo ( const int * x )"
Line 4798
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4798 always 4798
Line 4799
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4799 always 4799
Line 4800
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4800 always 4800
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 4804
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace Fred {\n    struct Value {};\n    void foo(const std::vector<std::function<void(const Fred::Value &)>> &callbacks);\n}\nvoid Fred::foo(const std::vector<std::function<void(const Fred::Value &)>> &callbacks) { }" always "namespace Fred {\n    struct Value {};\n    void foo(const std::vector<std::function<void(const Fred::Value &)>> &callbacks);\n}\nvoid Fred::foo(const std::vector<std::function<void(const Fred::Value &)>> &callbacks) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4804 always 4804
  false always 0
Line 4809
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4809 always 4809
  "" always ""
Line 4811
  "foo ( const std :: vector < std :: function < void ( const Fred :: Value & ) > > & callbacks ) { }" always "foo ( const std :: vector < std :: function < void ( const Fred :: Value & ) > > & callbacks ) { }"
Line 4812
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4812 always 4812
Line 4813
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4813 always 4813
Line 4814
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4814 always 4814
  == always {!<=-1,!>=2}
  "foo" always "foo"
Line 4818
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <size_t, typename...> struct a;\ntemplate <size_t b, typename c, typename... d>\nstruct a<b, c, d...> : a<1, d...> {};\ntemplate <typename... e> struct f : a<0, e...> {};" always "template <size_t, typename...> struct a;\ntemplate <size_t b, typename c, typename... d>\nstruct a<b, c, d...> : a<1, d...> {};\ntemplate <typename... e> struct f : a<0, e...> {};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4818 always 4818
  false always 0
Line 4822
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4822 always 4822
  "" always ""
Line 4826
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct alignas(int) A{\n};\n" always "struct alignas(int) A{\n};\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4826 always 4826
  false always 0
Line 4829
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4829 always 4829
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4830
  "A" always "A"
Line 4831
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4831 always 4831
Line 4835
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int foo() { auto [x,y] = xy(); return x+y; }" always "int foo() { auto [x,y] = xy(); return x+y; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4835 always 4835
  false always 0
Line 4836
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4836 always 4836
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4837
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4837 always 4837
  1 always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4838
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4838 always 4838
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 4842
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct B {\n    void foo1(void);\n    void foo2();\n};\nvoid B::foo1() {}\nvoid B::foo2(void) {}\n" always "struct B {\n    void foo1(void);\n    void foo2();\n};\nvoid B::foo1() {}\nvoid B::foo2(void) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4842 always 4842
  false always 0
Line 4848
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4848 always 4848
  "" always ""
Line 4849
  "foo1 ( ) { }" always "foo1 ( ) { }"
Line 4850
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4850 always 4850
Line 4851
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4851 always 4851
Line 4852
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4852 always 4852
  == always {!<=-1,!>=2}
  "foo1" always "foo1"
Line 4853
  "foo2 ( ) { }" always "foo2 ( ) { }"
Line 4854
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4854 always 4854
Line 4855
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4855 always 4855
Line 4856
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4856 always 4856
  == always {!<=-1,!>=2}
  "foo2" always "foo2"
Line 4860
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {\n    int i, j;\n};\nstd::map<int, A> m{ { 0, A{0,0} }, {0, A{0,0} } };\n" always "struct A {\n    int i, j;\n};\nstd::map<int, A> m{ { 0, A{0,0} }, {0, A{0,0} } };\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4860 always 4860
  false always 0
Line 4864
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4864 always 4864
  "" always ""
Line 4868
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template<> struct A<void> final {\n    A() {}\n};\n" always "template<> struct A<void> final {\n    A() {}\n};\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4868 always 4868
  false always 0
Line 4871
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4871 always 4871
Line 4872
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4872 always 4872
  3 always 3
Line 4874
  "%name% (" always "%name% ("
Line 4875
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4875 always 4875
Line 4876
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4876 always 4876
Line 4877
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4877 always 4877
Line 4882
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A { typedef struct {} B; };\nvoid f() {\n    auto g = [](A::B b) -> void { A::B b2 = b; };\n};\n" always "struct A { typedef struct {} B; };\nvoid f() {\n    auto g = [](A::B b) -> void { A::B b2 = b; };\n};\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4882 always 4882
  false always 0
Line 4886
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4886 always 4886
Line 4887
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4887 always 4887
  5 always 5
Line 4890
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "typedef union {\n    int i;\n} U;\ntemplate <auto U::*>\nvoid f();\n" always "typedef union {\n    int i;\n} U;\ntemplate <auto U::*>\nvoid f();\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4890 always 4890
  false always 0
Line 4895
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4895 always 4895
Line 4896
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4896 always 4896
  2 always 2
Line 4901
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4901 always 4901
  "void f() { std::map<std::string, int> m; }" always "void f() { std::map<std::string, int> m; }"
Line 4902
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4902 always 4902
  "" always ""
Line 4907
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace N {\n    struct S {};\n    struct T { void f(S s); };\n    void T::f(N::S s) {}\n}\n" always "namespace N {\n    struct S {};\n    struct T { void f(S s); };\n    void T::f(N::S s) {}\n}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4907 always 4907
  false always 0
Line 4912
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4912 always 4912
Line 4913
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4913 always 4913
  1 always 1
Line 4915
  == always {!<=-1,!>=2}
  "T" always "T"
Line 4917
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4917 always 4917
  != always {!<=-1,!>=2}
Line 4918
  "f" always "f"
  & {lifetime[Address]=(*it),!0}
Line 4919
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4919 always 4919
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "f" always "f"
Line 4920
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4920 always 4920
Line 4923
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace N {\n    class I {};\n    class A {\n    public:\n        A(I*);\n    };\n}\nusing N::I;\nnamespace N {\n    A::A(I*) {}\n}\n" always "namespace N {\n    class I {};\n    class A {\n    public:\n        A(I*);\n    };\n}\nusing N::I;\nnamespace N {\n    A::A(I*) {}\n}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4923 always 4923
  false always 0
Line 4934
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4934 always 4934
Line 4935
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4935 always 4935
  1 always 1
Line 4937
  == always {!<=-1,!>=2}
  "A" always "A"
Line 4939
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4939 always 4939
  != always {!<=-1,!>=2}
Line 4940
  "A" always "A"
  & {lifetime[Address]=(*it),!0}
Line 4941
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4941 always 4941
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "A" always "A"
Line 4942
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4942 always 4942
Line 4945
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace N {\n    namespace O {\n        struct B;\n    }\n}\nstruct I {\n    using B = N::O::B;\n};\nstruct A : I {\n    void f(B*);\n};\nvoid A::f(N::O::B*) {}\n" always "namespace N {\n    namespace O {\n        struct B;\n    }\n}\nstruct I {\n    using B = N::O::B;\n};\nstruct A : I {\n    void f(B*);\n};\nvoid A::f(N::O::B*) {}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4945 always 4945
  false always 0
Line 4957
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4957 always 4957
Line 4958
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4958 always 4958
  1 always 1
Line 4960
  == always {!<=-1,!>=2}
  "A" always "A"
Line 4962
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4962 always 4962
  != always {!<=-1,!>=2}
Line 4963
  "f" always "f"
  & {lifetime[Address]=(*it),!0}
Line 4964
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4964 always 4964
  && always {!<=-1,!>=2}
  function always !0
  == always {!<=-1,!>=2}
  "f" always "f"
Line 4965
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4965 always 4965
Line 4970
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() { union {int x; char *p;} a={0}; }" always "void f() { union {int x; char *p;} a={0}; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4970 always 4970
  false always 0
Line 4971
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4971 always 4971
  == always {!<=-1,!>=2}
  3 always 3
Line 4972
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4972 always 4972
Line 4976
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace ns { auto var1{0}; }\nnamespace ns { auto var2{0}; }\n" always "namespace ns { auto var1{0}; }\nnamespace ns { auto var2{0}; }\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4976 always 4976
  false always 0
Line 4978
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4978 always 4978
Line 4979
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4979 always 4979
  2 always 2
Line 4980
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4980 always 4980
  2 always 2
Line 4981
  "var1" always "var1"
Line 4982
  "var2" always "var2"
Line 4983
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4983 always 4983
Line 4984
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4984 always 4984
Line 4988
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace ns {\n\nnamespace ns_details {\ntemplate <typename T, typename = void> struct has_A : std::false_type {};\ntemplate <typename T> struct has_A<T, typename make_void<typename T::A>::type> : std::true_type {};\ntemplate <typename T, bool> struct is_A_impl : public std::is_trivially_copyable<T> {};\ntemplate <typename T> struct is_A_impl<T, true> : public std::is_same<typename T::A, std::true_type> {};\n}\n\ntemplate <typename T> struct is_A : ns_details::is_A_impl<T, ns_details::has_A<T>::value> {};\ntemplate <class T, class U> struct is_A<std::pair<T, U>> : std::integral_constant<bool, is_A<T>::value && is_A<U>::value> {};\n}\n\nextern \"C\" {\nstatic const int foo = 8;\n}\n" always "namespace ns {\n\nnamespace ns_details {\ntemplate <typename T, typename = void> struct has_A : std::false_type {};\ntemplate <typename T> struct has_A<T, typename make_void<typename T::A>::type> : std::true_type {};\ntemplate <typename T, bool> struct is_A_impl : public std::is_trivially_copyable<T> {};\ntemplate <typename T> struct is_A_impl<T, true> : public std::is_same<typename T::A, std::true_type> {};\n}\n\ntemplate <typename T> struct is_A : ns_details::is_A_impl<T, ns_details::has_A<T>::value> {};\ntemplate <class T, class U> struct is_A<std::pair<T, U>> : std::integral_constant<bool, is_A<T>::value && is_A<U>::value> {};\n}\n\nextern \"C\" {\nstatic const int foo = 8;\n}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  4988 always 4988
  false always 0
Line 5004
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5004 always 5004
Line 5005
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5005 always 5005
  6 always 6
Line 5006
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5006 always 5006
  1 always 1
Line 5008
  list always symbolic=(db->scopeList)
Line 5010
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5010 always 5010
  0 always 0
Line 5016
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct a {\n  void b() {\n    std::set<int> c;\n    a{[&] {\n      auto d{c.lower_bound(0)};\n      c.emplace_hint(d);\n    }};\n  }\n  template <class e> a(e);\n};\n" always "struct a {\n  void b() {\n    std::set<int> c;\n    a{[&] {\n      auto d{c.lower_bound(0)};\n      c.emplace_hint(d);\n    }};\n  }\n  template <class e> a(e);\n};\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5016 always 5016
  false always 0
Line 5026
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5026 always 5026
Line 5027
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5027 always 5027
  4 always 4
Line 5028
  "d" always "d"
Line 5029
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5029 always 5029
Line 5033
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum BOOL { FALSE, TRUE }; enum BOOL b;" always "enum BOOL { FALSE, TRUE }; enum BOOL b;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5033 always 5033
  false always 0
Line 5036
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5036 always 5036
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  "BOOL" always "BOOL"
Line 5039
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5039 always 5039
  && always {!<=-1,!>=2}
  db always !0
  1 always 1
Line 5043
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum BOOL { FALSE, TRUE } b;" always "enum BOOL { FALSE, TRUE } b;"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5043 always 5043
  false always 0
Line 5046
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5046 always 5046
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  "BOOL" always "BOOL"
Line 5049
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5049 always 5049
  && always {!<=-1,!>=2}
  db always !0
  1 always 1
Line 5053
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum ABC { A=11,B,C=A+B };" always "enum ABC { A=11,B,C=A+B };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5053 always 5053
  false always 0
Line 5054
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5054 always 5054
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
Line 5057
  "A" always "A"
Line 5058
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5058 always 5058
  && always {!<=-1,!>=2}
  A always !0
  == always {!<=-1,!>=2}
  11 always 11
  && always {!<=-1,!>=2}
  A always !0
Line 5061
  "B" always "B"
Line 5062
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5062 always 5062
  && always {!<=-1,!>=2}
  B always !0
  == always {!<=-1,!>=2}
  12 always 12
  && always {!<=-1,!>=2}
  B always !0
Line 5065
  "C" always "C"
Line 5066
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5066 always 5066
  && always {!<=-1,!>=2}
  C always !0
  == always {!<=-1,!>=2}
  23 always 23
  && always {!<=-1,!>=2}
  C always !0
Line 5070
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum Offsets { O1, O2, O3=5, O4 };\nenum MyEnums { E1=O1+1, E2, E3=O3+1 };" always "enum Offsets { O1, O2, O3=5, O4 };\nenum MyEnums { E1=O1+1, E2, E3=O3+1 };"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5070 always 5070
  false always 0
Line 5072
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5072 always 5072
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5074
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5074 always 5074
  3U always 3
Line 5081
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5081 always 5081
  ( always !<=-1
  ( always !<=-1
Line 5082
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5082 always 5082
  4U always 4
Line 5084
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5084 always 5084
  0 always 0
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(scope->enumeratorList[0]),!0}
  0 always 0
Line 5085
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5085 always 5085
  ( always !<=-1
  ( always !<=-1
  0 always 0
Line 5086
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5086 always 5086
  0 always 0
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 5087
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5087 always 5087
  "O1" always "O1"
  0 always 0
Line 5088
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5088 always 5088
  0 always 0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5089
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5089 always 5089
  0 always 0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5090
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5090 always 5090
  true always 1
  0 always 0
Line 5091
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5091 always 5091
  0 always 0
  0 always 0
Line 5093
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5093 always 5093
  1 always 1
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(scope->enumeratorList[1]),!0}
  1 always 1
Line 5094
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5094 always 5094
  ( always !<=-1
  ( always !<=-1
  1 always 1
Line 5095
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5095 always 5095
  1 always 1
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 5096
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5096 always 5096
  "O2" always "O2"
  1 always 1
Line 5097
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5097 always 5097
  1 always 1
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5098
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5098 always 5098
  1 always 1
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5099
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5099 always 5099
  true always 1
  1 always 1
Line 5100
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5100 always 5100
  1 always 1
  1 always 1
Line 5102
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5102 always 5102
  2 always 2
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(scope->enumeratorList[2]),!0}
  2 always 2
Line 5103
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5103 always 5103
  ( always !<=-1
  ( always !<=-1
  2 always 2
Line 5104
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5104 always 5104
  2 always 2
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 5105
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5105 always 5105
  "O3" always "O3"
  2 always 2
Line 5106
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5106 always 5106
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5107
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5107 always 5107
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5108
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5108 always 5108
  true always 1
  2 always 2
Line 5109
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5109 always 5109
  5 always 5
  2 always 2
Line 5111
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5111 always 5111
  3 always 3
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(scope->enumeratorList[3]),!0}
  3 always 3
Line 5112
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5112 always 5112
  ( always !<=-1
  ( always !<=-1
  3 always 3
Line 5113
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5113 always 5113
  3 always 3
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 5114
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5114 always 5114
  "O4" always "O4"
  3 always 3
Line 5115
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5115 always 5115
  3 always 3
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5116
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5116 always 5116
  3 always 3
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5117
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5117 always 5117
  true always 1
  3 always 3
Line 5118
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5118 always 5118
  6 always 6
  3 always 3
Line 5122
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5122 always 5122
  ( always !<=-1
  ( always !<=-1
Line 5123
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5123 always 5123
  3U always 3
Line 5125
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5125 always 5125
  0 always 0
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(scope->enumeratorList[0]),!0}
  0 always 0
Line 5126
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5126 always 5126
  ( always !<=-1
  ( always !<=-1
  0 always 0
Line 5127
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5127 always 5127
  0 always 0
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 5128
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5128 always 5128
  "E1" always "E1"
  0 always 0
Line 5129
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5129 always 5129
  0 always 0
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5130
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5130 always 5130
  0 always 0
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5131
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5131 always 5131
  true always 1
  0 always 0
Line 5132
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5132 always 5132
  1 always 1
  0 always 0
Line 5134
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5134 always 5134
  1 always 1
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(scope->enumeratorList[1]),!0}
  1 always 1
Line 5135
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5135 always 5135
  ( always !<=-1
  ( always !<=-1
  1 always 1
Line 5136
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5136 always 5136
  1 always 1
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 5137
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5137 always 5137
  "E2" always "E2"
  1 always 1
Line 5138
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5138 always 5138
  1 always 1
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5139
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5139 always 5139
  1 always 1
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5140
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5140 always 5140
  true always 1
  1 always 1
Line 5141
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5141 always 5141
  2 always 2
  1 always 1
Line 5143
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5143 always 5143
  2 always 2
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(scope->enumeratorList[2]),!0}
  2 always 2
Line 5144
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5144 always 5144
  ( always !<=-1
  ( always !<=-1
  2 always 2
Line 5145
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5145 always 5145
  2 always 2
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 5146
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5146 always 5146
  "E3" always "E3"
  2 always 2
Line 5147
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5147 always 5147
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5148
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5148 always 5148
  2 always 2
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5149
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5149 always 5149
  true always 1
  2 always 2
Line 5150
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5150 always 5150
  6 always 6
  2 always 2
Line 5154
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum { A = 10, B = 2 };\nint a[10 + 2];\nint b[A];\nint c[A + 2];\nint d[10 + B];\nint e[A + B];" always "enum { A = 10, B = 2 };\nint a[10 + 2];\nint b[A];\nint c[A + 2];\nint d[10 + B];\nint e[A + B];"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5154 always 5154
  false always 0
Line 5160
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5160 always 5160
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5162
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5162 always 5162
  2U always 2
Line 5168
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5168 always 5168
  ( always !<=-1
  ( always !<=-1
Line 5169
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5169 always 5169
  2U always 2
Line 5170
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5170 always 5170
  true always 1
  0 always 0
Line 5171
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5171 always 5171
  10 always 10
  0 always 0
Line 5172
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5172 always 5172
  true always 1
  1 always 1
Line 5173
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5173 always 5173
  2 always 2
  1 always 1
Line 5175
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5175 always 5175
  == always {!<=-1,!>=2}
  6 always 6
Line 5176
  1 always 1
Line 5177
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5177 always 5177
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5179
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5179 always 5179
Line 5180
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5180 always 5180
  1U always 1
Line 5181
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5181 always 5181
  12U always 12
  0 always 0
Line 5182
  2 always 2
Line 5183
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5183 always 5183
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5185
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5185 always 5185
Line 5186
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5186 always 5186
  1U always 1
Line 5187
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5187 always 5187
  10U always 10
  0 always 0
Line 5188
  3 always 3
Line 5189
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5189 always 5189
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5191
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5191 always 5191
Line 5192
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5192 always 5192
  1U always 1
Line 5193
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5193 always 5193
  12U always 12
  0 always 0
Line 5194
  4 always 4
Line 5195
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5195 always 5195
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5197
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5197 always 5197
Line 5198
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5198 always 5198
  1U always 1
Line 5199
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5199 always 5199
  12U always 12
  0 always 0
Line 5200
  5 always 5
Line 5201
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5201 always 5201
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5203
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5203 always 5203
Line 5204
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5204 always 5204
  1U always 1
Line 5205
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5205 always 5205
  12U always 12
  0 always 0
Line 5209
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    enum Enum { E0, E1 };\n};\nstruct Barney : public Fred {\n    Enum func(Enum e) { return e; }\n};" always "struct Fred {\n    enum Enum { E0, E1 };\n};\nstruct Barney : public Fred {\n    Enum func(Enum e) { return e; }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5209 always 5209
  false always 0
Line 5215
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5215 always 5215
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5217
  "func" always "func"
Line 5218
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5218 always 5218
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5221
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5221 always 5221
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5223
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5223 always 5223
  == always {!<=-1,!>=2}
  "func" always "func"
Line 5224
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5224 always 5224
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Enum" always "Enum"
Line 5225
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5225 always 5225
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "Enum" always "Enum"
Line 5236
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum E { X };\nenum EC : char { C };\nenum ES : short { S };\nenum EI : int { I };\nenum EL : long { L };\nenum ELL : long long { LL };\nchar array1[sizeof(E)];\nchar array2[sizeof(X)];\nchar array3[sizeof(EC)];\nchar array4[sizeof(C)];\nchar array5[sizeof(ES)];\nchar array6[sizeof(S)];\nchar array7[sizeof(EI)];\nchar array8[sizeof(I)];\nchar array9[sizeof(EL)];\nchar array10[sizeof(L)];\nchar array11[sizeof(ELL)];\nchar array12[sizeof(LL)];" always "enum E { X };\nenum EC : char { C };\nenum ES : short { S };\nenum EI : int { I };\nenum EL : long { L };\nenum ELL : long long { LL };\nchar array1[sizeof(E)];\nchar array2[sizeof(X)];\nchar array3[sizeof(EC)];\nchar array4[sizeof(C)];\nchar array5[sizeof(ES)];\nchar array6[sizeof(S)];\nchar array7[sizeof(EI)];\nchar array8[sizeof(I)];\nchar array9[sizeof(EL)];\nchar array10[sizeof(L)];\nchar array11[sizeof(ELL)];\nchar array12[sizeof(LL)];"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5236 always 5236
  false always 0
Line 5254
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5254 always 5254
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5256
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5256 always 5256
  == always {!<=-1,!>=2}
  13 always 13
Line 5258
  id always !<=-1
  id always !<=-1
  = always 1
  1 always 1
Line 5259
  id always 1
  ++ always 1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5259 always 5259
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5259 always 5259
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5259 always 5259
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5259 always 5259
  0 always 0
Line 5260
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5260 always 5260
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5260 always 5260
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5260 always 5260
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5260 always 5260
  0 always 0
Line 5261
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5261 always 5261
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5261 always 5261
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5261 always 5261
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5261 always 5261
  1 always 1
  0 always 0
Line 5262
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5262 always 5262
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5262 always 5262
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5262 always 5262
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5262 always 5262
  1 always 1
  0 always 0
Line 5263
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5263 always 5263
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5263 always 5263
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5263 always 5263
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5263 always 5263
  0 always 0
Line 5264
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5264 always 5264
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5264 always 5264
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5264 always 5264
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5264 always 5264
  0 always 0
Line 5265
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5265 always 5265
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5265 always 5265
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5265 always 5265
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5265 always 5265
  0 always 0
Line 5266
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5266 always 5266
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5266 always 5266
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5266 always 5266
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5266 always 5266
  0 always 0
Line 5267
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5267 always 5267
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5267 always 5267
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5267 always 5267
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5267 always 5267
  0 always 0
Line 5268
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5268 always 5268
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5268 always 5268
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5268 always 5268
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5268 always 5268
  0 always 0
Line 5269
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5269 always 5269
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5269 always 5269
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5269 always 5269
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5269 always 5269
  0 always 0
Line 5270
  id always !<=-1
  ++ always !<=-1
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5270 always 5270
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5270 always 5270
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5270 always 5270
  1U always 1
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5270 always 5270
  0 always 0
Line 5274
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum E { X0 = x, X1, X2 = 2, X3, X4 = y, X5 };\n" always "enum E { X0 = x, X1, X2 = 2, X3, X4 = y, X5 };\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5274 always 5274
  false always 0
Line 5275
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5275 always 5275
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5276
  "X0" always "X0"
Line 5277
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5277 always 5277
Line 5278
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5278 always 5278
  ! always {!<=-1,!>=2}
Line 5279
  "X1" always "X1"
Line 5280
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5280 always 5280
Line 5281
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5281 always 5281
  ! always {!<=-1,!>=2}
Line 5282
  "X2" always "X2"
Line 5283
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5283 always 5283
Line 5284
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5284 always 5284
Line 5285
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5285 always 5285
  2 always 2
Line 5286
  "X3" always "X3"
Line 5287
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5287 always 5287
Line 5288
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5288 always 5288
Line 5289
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5289 always 5289
  3 always 3
Line 5290
  "X4" always "X4"
Line 5291
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5291 always 5291
Line 5292
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5292 always 5292
  ! always {!<=-1,!>=2}
Line 5293
  "X5" always "X5"
Line 5294
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5294 always 5294
Line 5295
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5295 always 5295
  ! always {!<=-1,!>=2}
Line 5299
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "const int x = 7; enum E { X0 = x, X1 };\n" always "const int x = 7; enum E { X0 = x, X1 };\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5299 always 5299
  false always 0
Line 5300
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5300 always 5300
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5301
  "X0" always "X0"
Line 5302
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5302 always 5302
Line 5303
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5303 always 5303
Line 5304
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5304 always 5304
  7 always 7
Line 5305
  "X1" always "X1"
Line 5306
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5306 always 5306
Line 5307
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5307 always 5307
Line 5308
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5308 always 5308
  8 always 8
Line 5312
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int b = sizeof(enum etag {X, Y});\n" always "int b = sizeof(enum etag {X, Y});\n"
  "test.c" always "test.c"
  false always 0
Line 5313
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5313 always 5313
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5314
  "X" always "X"
Line 5315
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5315 always 5315
Line 5316
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5316 always 5316
Line 5317
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5317 always 5317
  0 always 0
Line 5318
  "Y" always "Y"
Line 5319
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5319 always 5319
Line 5320
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5320 always 5320
Line 5321
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5321 always 5321
  1 always 1
Line 5326
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum e;\nvoid foo() {\n    e abc[] = {A,B,C};\n    int i = abc[ARRAY_SIZE(cats)];\n}" always "enum e;\nvoid foo() {\n    e abc[] = {A,B,C};\n    int i = abc[ARRAY_SIZE(cats)];\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5326 always 5326
  false always 0
Line 5331
  "e abc" always "e abc"
Line 5337
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" always "class Base {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5337 always 5337
  false always 0
Line 5343
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5343 always 5343
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
Line 5346
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    virtual void foo() {}\n};\nclass Deri1 : Base {\n    void foo() {}\n};\nclass Deri2 : Deri1 {\n    void foo() {}\n};" always "class Base {\n    virtual void foo() {}\n};\nclass Deri1 : Base {\n    void foo() {}\n};\nclass Deri2 : Deri1 {\n    void foo() {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5346 always 5346
  false always 0
Line 5355
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5355 always 5355
  && always {!<=-1,!>=2}
  db always !0
  "Deri2" always "Deri2"
  && always {!<=-1,!>=2}
  db always !0
  "Deri2" always "Deri2"
Line 5358
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" always "class Base {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5358 always 5358
  false always 0
Line 5364
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5364 always 5364
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  true always 1
Line 5367
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo(std::string& s) {}\n};" always "class Base {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo(std::string& s) {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5367 always 5367
  false always 0
Line 5373
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5373 always 5373
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  true always 1
Line 5376
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    virtual void foo() {}\n};\nclass Deri1 : Base {\n    void foo(int i) {}\n};\nclass Deri2 : Deri1 {\n    void foo() {}\n};" always "class Base {\n    virtual void foo() {}\n};\nclass Deri1 : Base {\n    void foo(int i) {}\n};\nclass Deri2 : Deri1 {\n    void foo() {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5376 always 5376
  false always 0
Line 5385
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5385 always 5385
  && always {!<=-1,!>=2}
  db always !0
  "Deri2" always "Deri2"
  && always {!<=-1,!>=2}
  db always !0
  "Deri2" always "Deri2"
Line 5388
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base : Base2 {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" always "class Base : Base2 {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5388 always 5388
  false always 0
Line 5394
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5394 always 5394
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  true always 1
Line 5397
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base : Base2 {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" always "class Base : Base2 {\n    void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5397 always 5397
  false always 0
Line 5403
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5403 always 5403
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  false always 0
Line 5406
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base : Base2 {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};" always "class Base : Base2 {\n    virtual void foo() {}\n};\nclass Deri : Base {\n    void foo() {}\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5406 always 5406
  false always 0
Line 5412
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5412 always 5412
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  && always {!<=-1,!>=2}
  db always !0
  "Deri" always "Deri"
  false always 0
Line 5416
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template<>\nclass Bar<void, void> {\n};\ntemplate<typename K, typename V, int KeySize>\nclass Bar : private Bar<void, void> {\n   void foo() {\n   }\n};" always "template<>\nclass Bar<void, void> {\n};\ntemplate<typename K, typename V, int KeySize>\nclass Bar : private Bar<void, void> {\n   void foo() {\n   }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5416 always 5416
  false always 0
Line 5424
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5424 always 5424
  && always {!<=-1,!>=2}
  db always !0
  "Bar" always "Bar"
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  db always !0
  "Bar" always "Bar"
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  "Bar" always "Bar"
  false always 0
Line 5425
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5425 always 5425
  1 always 1
  "Bar" always "Bar"
Line 5430
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class InfiniteB : InfiniteA {\n    class D {\n    };\n};\nnamespace N {\n    class InfiniteA : InfiniteB {\n    };\n}\nclass InfiniteA : InfiniteB {\n    void foo();\n};\nvoid InfiniteA::foo() {\n    C a;\n}" always "class InfiniteB : InfiniteA {\n    class D {\n    };\n};\nnamespace N {\n    class InfiniteA : InfiniteB {\n    };\n}\nclass InfiniteA : InfiniteB {\n    void foo();\n};\nvoid InfiniteA::foo() {\n    C a;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5430 always 5430
  false always 0
Line 5445
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5445 always 5445
  1 always 1
  0 always 0
  "InfiniteA" always "InfiniteA"
Line 5450
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class C {\n    void f() = 0;\n    C(B b) = 0;\n    C(C& c) = default;    void g();\n};" always "class C {\n    void f() = 0;\n    C(B b) = 0;\n    C(C& c) = default;    void g();\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5450 always 5450
  false always 0
Line 5456
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5456 always 5456
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5458
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5458 always 5458
Line 5459
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5459 always 5459
Line 5460
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5460 always 5460
  ! always {!<=-1,!>=2}
Line 5461
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5461 always 5461
  ! always {!<=-1,!>=2}
Line 5465
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "TEST(a,b) {\n  std::vector<int> messages;\n  foo(messages[2].size());\n}" always "TEST(a,b) {\n  std::vector<int> messages;\n  foo(messages[2].size());\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5465 always 5465
  false always 0
Line 5469
  = possible 0
  ? possible 0
  db always !0
  1U always 1
  : always 0
  nullptr always 0
Line 5470
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5470 always 5470
  && always {!<=-1,!>=2}
  db always !0
  "TEST" always "TEST"
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  var always !0
  && always {!<=-1,!>=2}
  var always !0
  == always {!<=-1,!>=2}
  "std" always "std"
Line 5478
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void set_cur_cpu_spec()\n{\n    t = PTRRELOC(t);\n}\n\ncpu_spec * __init setup_cpu_spec()\n{\n    t = PTRRELOC(t);\n    *PTRRELOC(&x) = &y;\n}" always "void set_cur_cpu_spec()\n{\n    t = PTRRELOC(t);\n}\n\ncpu_spec * __init setup_cpu_spec()\n{\n    t = PTRRELOC(t);\n    *PTRRELOC(&x) = &y;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5478 always 5478
  false always 0
Line 5488
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5488 always 5488
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5489
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5489 always 5489
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  db always !0
  "PTRRELOC ( &" always "PTRRELOC ( &"
  & {lifetime[Address]=(db->scopeList.back()),!0}
  db always !0
  nullptr always 0
  nullptr always 0
  nullptr always 0
Line 5490
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5490 always 5490
  "set_cur_cpu_spec" always "set_cur_cpu_spec"
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5491
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5491 always 5491
  "setup_cpu_spec" always "setup_cpu_spec"
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5492
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5492 always 5492
  "PTRRELOC" always "PTRRELOC"
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5497
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int foo(int x);\nvoid foo();\nvoid bar() {\n    foo();\n    foo(1);\n}" always "int foo(int x);\nvoid foo();\nvoid bar() {\n    foo();\n    foo(1);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5497 always 5497
  false always 0
Line 5503
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5503 always 5503
  "" always ""
Line 5504
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5504 always 5504
Line 5505
  "bar" always "bar"
Line 5506
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5506 always 5506
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5507
  2 always 2
  2 always 2
  1 always 1
Line 5508
  index always !<=-1
  index always !<=-1
  = always 0
  0 always 0
Line 5509
  != always {!<=-1,!>=2}
Line 5510
  "%name% (" always "%name% ("
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  1 always 1
  ") ;" always ") ;"
Line 5512
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5512 always 5512
  function possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 5515
  "Function call on line " always "Function call on line "
  " calls function on line " always " calls function on line "
  linenrs always {
  [ always !<=-1
  index always !<=-1
Line 5517
  "Function call on line " always "Function call on line "
  " calls function on line " always " calls function on line "
  function always !0
Line 5518
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5518 always 5518
Line 5520
  index always !<=-1
  ++ always !<=-1
Line 5527
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func(const int x, const Fred &fred);\nvoid otherfunc() {\n    float t;\n    func(x, &t);\n}" always "void func(const int x, const Fred &fred);\nvoid otherfunc() {\n    float t;\n    func(x, &t);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5527 always 5527
  false always 0
Line 5532
  "func ( x , & t ) ;" always "func ( x , & t ) ;"
Line 5533
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5533 always 5533
  "" always ""
Line 5534
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5534 always 5534
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5535
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5535 always 5535
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5536
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5536 always 5536
  false always 0
  && always {!<=-1,!>=2}
  callfunc always !0
Line 5540
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct base { void foo() { } };\nstruct derived : public base { void foo() { } };\nvoid foo() {\n    derived d;\n    d.foo();\n}" always "struct base { void foo() { } };\nstruct derived : public base { void foo() { } };\nvoid foo() {\n    derived d;\n    d.foo();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5540 always 5540
  false always 0
Line 5547
  "d . foo ( ) ;" always "d . foo ( ) ;"
Line 5548
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5548 always 5548
  "" always ""
Line 5549
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5549 always 5549
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5550
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5550 always 5550
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5551
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5551 always 5551
  true always 1
  && always {!<=-1,!>=2}
  callfunc always !0
  2 always 2
  && always {!<=-1,!>=2}
  callfunc always !0
  2 always 2
  == always {!<=-1,!>=2}
  2 always 2
Line 5555
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(UNKNOWN) { }\nvoid foo(int a) { }\nvoid foo(unsigned int a) { }\nvoid foo(unsigned long a) { }\nvoid foo(unsigned long long a) { }\nvoid foo(float a) { }\nvoid foo(double a) { }\nvoid foo(long double a) { }\nint i;\nunsigned int ui;\nunsigned long ul;\nunsigned long long ull;\nfloat f;\ndouble d;\nlong double ld;\nint & ri = i;\nunsigned int & rui = ui;\nunsigned long & rul = ul;\nunsigned long long & rull = ull;\nfloat & rf = f;\ndouble & rd = d;\nlong double & rld = ld;\nconst int & cri = i;\nconst unsigned int & crui = ui;\nconst unsigned long & crul = ul;\nconst unsigned long long & crull = ull;\nconst float & crf = f;\nconst double & crd = d;\nconst long double & crld = ld;\nvoid foo() {\n    foo(1);\n    foo(1U);\n    foo(1UL);\n    foo(1ULL);\n    foo(1.0F);\n    foo(1.0);\n    foo(1.0L);\n    foo(i);\n    foo(ui);\n    foo(ul);\n    foo(ull);\n    foo(f);\n    foo(d);\n    foo(ld);\n    foo(ri);\n    foo(rui);\n    foo(rul);\n    foo(rull);\n    foo(rf);\n    foo(rd);\n    foo(rld);\n    foo(cri);\n    foo(crui);\n    foo(crul);\n    foo(crull);\n    foo(crf);\n    foo(crd);\n    foo(crld);\n}" always "void foo(UNKNOWN) { }\nvoid foo(int a) { }\nvoid foo(unsigned int a) { }\nvoid foo(unsigned long a) { }\nvoid foo(unsigned long long a) { }\nvoid foo(float a) { }\nvoid foo(double a) { }\nvoid foo(long double a) { }\nint i;\nunsigned int ui;\nunsigned long ul;\nunsigned long long ull;\nfloat f;\ndouble d;\nlong double ld;\nint & ri = i;\nunsigned int & rui = ui;\nunsigned long & rul = ul;\nunsigned long long & rull = ull;\nfloat & rf = f;\ndouble & rd = d;\nlong double & rld = ld;\nconst int & cri = i;\nconst unsigned int & crui = ui;\nconst unsigned long & crul = ul;\nconst unsigned long long & crull = ull;\nconst float & crf = f;\nconst double & crd = d;\nconst long double & crld = ld;\nvoid foo() {\n    foo(1);\n    foo(1U);\n    foo(1UL);\n    foo(1ULL);\n    foo(1.0F);\n    foo(1.0);\n    foo(1.0L);\n    foo(i);\n    foo(ui);\n    foo(ul);\n    foo(ull);\n    foo(f);\n    foo(d);\n    foo(ld);\n    foo(ri);\n    foo(rui);\n    foo(rul);\n    foo(rull);\n    foo(rf);\n    foo(rd);\n    foo(rld);\n    foo(cri);\n    foo(crui);\n    foo(crul);\n    foo(crull);\n    foo(crf);\n    foo(crd);\n    foo(crld);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5555 always 5555
  false always 0
Line 5615
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5615 always 5615
  "" always ""
Line 5617
  "foo ( 1 ) ;" always "foo ( 1 ) ;"
Line 5618
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5618 always 5618
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5620
  "foo ( 1U ) ;" always "foo ( 1U ) ;"
Line 5621
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5621 always 5621
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5623
  "foo ( 1UL ) ;" always "foo ( 1UL ) ;"
Line 5624
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5624 always 5624
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5626
  "foo ( 1ULL ) ;" always "foo ( 1ULL ) ;"
Line 5627
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5627 always 5627
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5629
  "foo ( 1.0F ) ;" always "foo ( 1.0F ) ;"
Line 5630
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5630 always 5630
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 5632
  "foo ( 1.0 ) ;" always "foo ( 1.0 ) ;"
Line 5633
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5633 always 5633
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  7 always 7
Line 5635
  "foo ( 1.0L ) ;" always "foo ( 1.0L ) ;"
Line 5636
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5636 always 5636
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  8 always 8
Line 5638
  "foo ( i ) ;" always "foo ( i ) ;"
Line 5639
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5639 always 5639
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5641
  "foo ( ui ) ;" always "foo ( ui ) ;"
Line 5642
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5642 always 5642
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5644
  "foo ( ul ) ;" always "foo ( ul ) ;"
Line 5645
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5645 always 5645
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5647
  "foo ( ull ) ;" always "foo ( ull ) ;"
Line 5648
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5648 always 5648
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5650
  "foo ( f ) ;" always "foo ( f ) ;"
Line 5651
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5651 always 5651
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 5653
  "foo ( d ) ;" always "foo ( d ) ;"
Line 5654
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5654 always 5654
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  7 always 7
Line 5656
  "foo ( ld ) ;" always "foo ( ld ) ;"
Line 5657
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5657 always 5657
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  8 always 8
Line 5659
  "foo ( ri ) ;" always "foo ( ri ) ;"
Line 5660
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5660 always 5660
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5662
  "foo ( rui ) ;" always "foo ( rui ) ;"
Line 5663
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5663 always 5663
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5665
  "foo ( rul ) ;" always "foo ( rul ) ;"
Line 5666
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5666 always 5666
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5668
  "foo ( rull ) ;" always "foo ( rull ) ;"
Line 5669
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5669 always 5669
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5671
  "foo ( rf ) ;" always "foo ( rf ) ;"
Line 5672
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5672 always 5672
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 5674
  "foo ( rd ) ;" always "foo ( rd ) ;"
Line 5675
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5675 always 5675
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  7 always 7
Line 5677
  "foo ( rld ) ;" always "foo ( rld ) ;"
Line 5678
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5678 always 5678
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  8 always 8
Line 5680
  "foo ( cri ) ;" always "foo ( cri ) ;"
Line 5681
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5681 always 5681
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5683
  "foo ( crui ) ;" always "foo ( crui ) ;"
Line 5684
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5684 always 5684
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5686
  "foo ( crul ) ;" always "foo ( crul ) ;"
Line 5687
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5687 always 5687
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5689
  "foo ( crull ) ;" always "foo ( crull ) ;"
Line 5690
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5690 always 5690
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5692
  "foo ( crf ) ;" always "foo ( crf ) ;"
Line 5693
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5693 always 5693
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 5695
  "foo ( crd ) ;" always "foo ( crd ) ;"
Line 5696
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5696 always 5696
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  7 always 7
Line 5698
  "foo ( crld ) ;" always "foo ( crld ) ;"
Line 5699
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5699 always 5699
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  8 always 8
Line 5703
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    void Sync(dsmp_t& type, int& len, int limit = 123);\n    void Sync(int& syncpos, dsmp_t& type, int& len, int limit = 123);\n    void FindSyncPoint();\n};\nvoid Fred::FindSyncPoint() {\n    dsmp_t type;\n    int syncpos, len;\n    Sync(syncpos, type, len);\n    Sync(type, len);\n}" always "struct Fred {\n    void Sync(dsmp_t& type, int& len, int limit = 123);\n    void Sync(int& syncpos, dsmp_t& type, int& len, int limit = 123);\n    void FindSyncPoint();\n};\nvoid Fred::FindSyncPoint() {\n    dsmp_t type;\n    int syncpos, len;\n    Sync(syncpos, type, len);\n    Sync(type, len);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5703 always 5703
  false always 0
Line 5714
  "Sync ( syncpos" always "Sync ( syncpos"
Line 5715
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5715 always 5715
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5717
  "Sync ( type" always "Sync ( type"
Line 5718
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5718 always 5718
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5722
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void addtoken(Token** rettail, const Token *tok);\nvoid CheckMemoryLeakInFunction::getcode(const Token *tok ) {\n   addtoken(&rettail, tok);\n}" always "void addtoken(Token** rettail, const Token *tok);\nvoid CheckMemoryLeakInFunction::getcode(const Token *tok ) {\n   addtoken(&rettail, tok);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5722 always 5722
  false always 0
Line 5726
  "void addtoken ( Token * *" always "void addtoken ( Token * *"
Line 5727
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5727 always 5727
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
Line 5731
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class ResultEnsemble {\npublic:\n    std::vector<int> &nodeResults() const;\n    std::vector<int> &nodeResults();\n};\nclass Simulator {\n    int generatePinchResultEnsemble(const ResultEnsemble &power, const ResultEnsemble &ground) {\n        power.nodeResults().size();\n        assert(power.nodeResults().size()==ground.nodeResults().size());\n    }\n};" always "class ResultEnsemble {\npublic:\n    std::vector<int> &nodeResults() const;\n    std::vector<int> &nodeResults();\n};\nclass Simulator {\n    int generatePinchResultEnsemble(const ResultEnsemble &power, const ResultEnsemble &ground) {\n        power.nodeResults().size();\n        assert(power.nodeResults().size()==ground.nodeResults().size());\n    }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5731 always 5731
  false always 0
Line 5742
  "power . nodeResults ( ) . size ( ) ;" always "power . nodeResults ( ) . size ( ) ;"
Line 5743
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5743 always 5743
  "" always ""
Line 5744
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5744 always 5744
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5745
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5745 always 5745
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 5746
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5746 always 5746
  true always 1
  && always {!<=-1,!>=2}
  callfunc always !0
  2 always 2
  && always {!<=-1,!>=2}
  callfunc always !0
  2 always 2
  == always {!<=-1,!>=2}
  3 always 3
Line 5750
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S {\n    void f()   { }\n    void f() & { }\n    void f() &&{ }\n    void f() const   { }\n    void f() const & { }\n    void f() const &&{ }\n    void g()   ;\n    void g() & ;\n    void g() &&;\n    void g() const   ;\n    void g() const & ;\n    void g() const &&;\n};\nvoid S::g()   { }\nvoid S::g() & { }\nvoid S::g() &&{ }\nvoid S::g() const   { }\nvoid S::g() const & { }\nvoid S::g() const &&{ }" always "struct S {\n    void f()   { }\n    void f() & { }\n    void f() &&{ }\n    void f() const   { }\n    void f() const & { }\n    void f() const &&{ }\n    void g()   ;\n    void g() & ;\n    void g() &&;\n    void g() const   ;\n    void g() const & ;\n    void g() const &&;\n};\nvoid S::g()   { }\nvoid S::g() & { }\nvoid S::g() &&{ }\nvoid S::g() const   { }\nvoid S::g() const & { }\nvoid S::g() const &&{ }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5750 always 5750
  false always 0
Line 5770
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5770 always 5770
  "" always ""
Line 5772
  "f ( ) {" always "f ( ) {"
Line 5773
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5773 always 5773
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5775
  "f ( ) & {" always "f ( ) & {"
Line 5776
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5776 always 5776
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5778
  "f ( ) && {" always "f ( ) && {"
Line 5779
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5779 always 5779
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5781
  "f ( ) const {" always "f ( ) const {"
Line 5782
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5782 always 5782
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5784
  "f ( ) const & {" always "f ( ) const & {"
Line 5785
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5785 always 5785
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 5787
  "f ( ) const && {" always "f ( ) const && {"
Line 5788
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5788 always 5788
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  7 always 7
Line 5790
  "g ( ) {" always "g ( ) {"
Line 5791
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5791 always 5791
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  15 always 15
Line 5793
  "g ( ) & {" always "g ( ) & {"
Line 5794
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5794 always 5794
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  9 always 9
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  16 always 16
Line 5796
  "g ( ) && {" always "g ( ) && {"
Line 5797
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5797 always 5797
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  10 always 10
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  17 always 17
Line 5799
  "g ( ) const {" always "g ( ) const {"
Line 5800
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5800 always 5800
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  11 always 11
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  18 always 18
Line 5802
  "g ( ) const & {" always "g ( ) const & {"
Line 5803
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5803 always 5803
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  12 always 12
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  19 always 19
Line 5805
  "g ( ) const && {" always "g ( ) const && {"
Line 5806
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5806 always 5806
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  13 always 13
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  20 always 20
Line 5808
  "S :: g ( ) {" always "S :: g ( ) {"
Line 5809
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5809 always 5809
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  == always {!<=-1,!>=2}
  8 always 8
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  15 always 15
Line 5811
  "S :: g ( ) & {" always "S :: g ( ) & {"
Line 5812
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5812 always 5812
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  == always {!<=-1,!>=2}
  9 always 9
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  16 always 16
Line 5814
  "S :: g ( ) && {" always "S :: g ( ) && {"
Line 5815
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5815 always 5815
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  == always {!<=-1,!>=2}
  10 always 10
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  17 always 17
Line 5817
  "S :: g ( ) const {" always "S :: g ( ) const {"
Line 5818
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5818 always 5818
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  == always {!<=-1,!>=2}
  11 always 11
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  18 always 18
Line 5820
  "S :: g ( ) const & {" always "S :: g ( ) const & {"
Line 5821
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5821 always 5821
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  == always {!<=-1,!>=2}
  12 always 12
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  19 always 19
Line 5823
  "S :: g ( ) const && {" always "S :: g ( ) const && {"
Line 5824
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5824 always 5824
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  == always {!<=-1,!>=2}
  13 always 13
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  20 always 20
Line 5828
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    void foo(const int * p);\n};\nvoid Fred::foo(const int * const p) { }" always "struct Fred {\n    void foo(const int * p);\n};\nvoid Fred::foo(const int * const p) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5828 always 5828
  false always 0
Line 5832
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5832 always 5832
  "" always ""
Line 5834
  "foo ( const int * const p ) {" always "foo ( const int * const p ) {"
Line 5835
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5835 always 5835
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5839
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    void foo(const int * p);\n};\nvoid Fred::foo(const int p []) { }" always "struct Fred {\n    void foo(const int * p);\n};\nvoid Fred::foo(const int p []) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5839 always 5839
  false always 0
Line 5843
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5843 always 5843
  "" always ""
Line 5845
  "foo ( const int p [ ] ) {" always "foo ( const int p [ ] ) {"
Line 5846
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5846 always 5846
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5850
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred : public QObject {\n    Q_OBJECT\nprivate slots:\n    void foo();\n};\nvoid Fred::foo() { }" always "class Fred : public QObject {\n    Q_OBJECT\nprivate slots:\n    void foo();\n};\nvoid Fred::foo() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5850 always 5850
  false always 0
Line 5856
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5856 always 5856
  "" always ""
Line 5858
  "foo ( ) {" always "foo ( ) {"
Line 5859
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5859 always 5859
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5863
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(std::string a) { }\nvoid foo(long long a) { }\nvoid func(char* cp) {\n    foo(0);\n    foo(0L);\n    foo(0.f);\n    foo(bar());\n    foo(cp);\n    foo(\"\");\n}" always "void foo(std::string a) { }\nvoid foo(long long a) { }\nvoid func(char* cp) {\n    foo(0);\n    foo(0L);\n    foo(0.f);\n    foo(bar());\n    foo(cp);\n    foo(\"\");\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5863 always 5863
  false always 0
Line 5874
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5874 always 5874
  "" always ""
Line 5876
  "foo ( 0 ) ;" always "foo ( 0 ) ;"
Line 5877
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5877 always 5877
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5879
  "foo ( 0L ) ;" always "foo ( 0L ) ;"
Line 5880
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5880 always 5880
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5882
  "foo ( 0.f ) ;" always "foo ( 0.f ) ;"
Line 5883
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5883 always 5883
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5885
  "foo ( bar ( ) ) ;" always "foo ( bar ( ) ) ;"
Line 5886
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5886 always 5886
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5888
  "foo ( cp ) ;" always "foo ( cp ) ;"
Line 5889
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5889 always 5889
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 5891
  "foo ( \"\" ) ;" always "foo ( \"\" ) ;"
Line 5892
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5892 always 5892
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 5896
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(std::string a) { }\nvoid foo(double a) { }\nvoid foo(long long a) { }\nvoid foo(int* a) { }\nvoid foo(void* a) { }\nvoid func(int i, const float f, int* ip, float* fp, char* cp) {\n    foo(0);\n    foo(0L);\n    foo(0.f);\n    foo(false);\n    foo(bar());\n    foo(i);\n    foo(f);\n    foo(&i);\n    foo(&f);\n    foo(ip);\n    foo(fp);\n    foo(cp);\n    foo(\"\");\n}" always "void foo(std::string a) { }\nvoid foo(double a) { }\nvoid foo(long long a) { }\nvoid foo(int* a) { }\nvoid foo(void* a) { }\nvoid func(int i, const float f, int* ip, float* fp, char* cp) {\n    foo(0);\n    foo(0L);\n    foo(0.f);\n    foo(false);\n    foo(bar());\n    foo(i);\n    foo(f);\n    foo(&i);\n    foo(&f);\n    foo(ip);\n    foo(fp);\n    foo(cp);\n    foo(\"\");\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5896 always 5896
  false always 0
Line 5917
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5917 always 5917
  "" always ""
Line 5919
  "foo ( 0 ) ;" always "foo ( 0 ) ;"
Line 5920
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5920 always 5920
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5922
  "foo ( 0L ) ;" always "foo ( 0L ) ;"
Line 5923
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5923 always 5923
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5925
  "foo ( 0.f ) ;" always "foo ( 0.f ) ;"
Line 5926
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5926 always 5926
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5928
  "foo ( false ) ;" always "foo ( false ) ;"
Line 5929
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5929 always 5929
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5931
  "foo ( bar ( ) ) ;" always "foo ( bar ( ) ) ;"
Line 5932
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5932 always 5932
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5934
  "foo ( i ) ;" always "foo ( i ) ;"
Line 5935
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5935 always 5935
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5937
  "foo ( f ) ;" always "foo ( f ) ;"
Line 5938
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5938 always 5938
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5940
  "foo ( & i ) ;" always "foo ( & i ) ;"
Line 5941
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5941 always 5941
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5943
  "foo ( & f ) ;" always "foo ( & f ) ;"
Line 5944
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5944 always 5944
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 5946
  "foo ( ip ) ;" always "foo ( ip ) ;"
Line 5947
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5947 always 5947
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5949
  "foo ( fp ) ;" always "foo ( fp ) ;"
Line 5950
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5950 always 5950
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5952
  "foo ( cp ) ;" always "foo ( cp ) ;"
Line 5953
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5953 always 5953
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5955
  "foo ( \"\" ) ;" always "foo ( \"\" ) ;"
Line 5956
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5956 always 5956
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 5960
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int* a) { }\nvoid foo(const int* a) { }\nvoid foo(void* a) { }\nvoid foo(const float a) { }\nvoid foo(bool a) { }\nvoid foo2(Foo* a) { }\nvoid foo2(Foo a) { }\nvoid func(int* ip, const int* cip, const char* ccp, char* cp, float f, bool b) {\n    foo(ip);\n    foo(cip);\n    foo(cp);\n    foo(ccp);\n    foo(f);\n    foo(b);\n    foo2(0);\n    foo2(nullptr);\n    foo2(NULL);\n}" always "void foo(int* a) { }\nvoid foo(const int* a) { }\nvoid foo(void* a) { }\nvoid foo(const float a) { }\nvoid foo(bool a) { }\nvoid foo2(Foo* a) { }\nvoid foo2(Foo a) { }\nvoid func(int* ip, const int* cip, const char* ccp, char* cp, float f, bool b) {\n    foo(ip);\n    foo(cip);\n    foo(cp);\n    foo(ccp);\n    foo(f);\n    foo(b);\n    foo2(0);\n    foo2(nullptr);\n    foo2(NULL);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5960 always 5960
  false always 0
Line 5979
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5979 always 5979
  "" always ""
Line 5981
  "foo ( ip ) ;" always "foo ( ip ) ;"
Line 5982
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5982 always 5982
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 5984
  "foo ( cip ) ;" always "foo ( cip ) ;"
Line 5985
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5985 always 5985
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 5987
  "foo ( cp ) ;" always "foo ( cp ) ;"
Line 5988
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5988 always 5988
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 5990
  "foo ( ccp ) ;" always "foo ( ccp ) ;"
Line 5991
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5991 always 5991
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5993
  "foo ( f ) ;" always "foo ( f ) ;"
Line 5994
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5994 always 5994
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 5996
  "foo ( b ) ;" always "foo ( b ) ;"
Line 5997
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  5997 always 5997
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  5 always 5
Line 5999
  "foo2 ( 0 ) ;" always "foo2 ( 0 ) ;"
Line 6000
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6000 always 6000
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 6002
  "foo2 ( nullptr ) ;" always "foo2 ( nullptr ) ;"
Line 6003
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6003 always 6003
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 6005
  "foo2 ( NULL ) ;" always "foo2 ( NULL ) ;"
Line 6006
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6006 always 6006
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 6010
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo1(int, char* a) { }\nvoid foo1(int, char a) { }\nvoid foo1(int, wchar_t a) { }\nvoid foo1(int, char16_t a) { }\nvoid foo2(int, float a) { }\nvoid foo2(int, wchar_t a) { }\nvoid foo3(int, float a) { }\nvoid foo3(int, char a) { }\nvoid func() {\n    foo1(1, 'c');\n    foo1(2, L'c');\n    foo1(3, u'c');\n    foo2(4, 'c');\n    foo2(5, L'c');\n    foo3(6, 'c');\n    foo3(7, L'c');\n}" always "void foo1(int, char* a) { }\nvoid foo1(int, char a) { }\nvoid foo1(int, wchar_t a) { }\nvoid foo1(int, char16_t a) { }\nvoid foo2(int, float a) { }\nvoid foo2(int, wchar_t a) { }\nvoid foo3(int, float a) { }\nvoid foo3(int, char a) { }\nvoid func() {\n    foo1(1, 'c');\n    foo1(2, L'c');\n    foo1(3, u'c');\n    foo2(4, 'c');\n    foo2(5, L'c');\n    foo3(6, 'c');\n    foo3(7, L'c');\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6010 always 6010
  false always 0
Line 6028
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6028 always 6028
  "" always ""
Line 6030
  "foo1 ( 1" always "foo1 ( 1"
Line 6031
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6031 always 6031
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 6033
  "foo1 ( 2" always "foo1 ( 2"
Line 6034
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6034 always 6034
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 6036
  "foo1 ( 3" always "foo1 ( 3"
Line 6037
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6037 always 6037
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 6039
  "foo2 ( 4" always "foo2 ( 4"
Line 6040
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6040 always 6040
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 6042
  "foo2 ( 5" always "foo2 ( 5"
Line 6043
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6043 always 6043
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  6 always 6
Line 6045
  "foo3 ( 6" always "foo3 ( 6"
Line 6046
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6046 always 6046
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  8 always 8
Line 6054
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct C { int i; static int si; float f; int* ip; float* fp};\nvoid foo(float a) { }\nvoid foo(int a) { }\nvoid foo(int* a) { }\nvoid func(C c, C* cp) {\n    foo(c.i);\n    foo(cp->i);\n    foo(c.f);\n    foo(c.si);\n    foo(C::si);\n    foo(c.ip);\n    foo(c.fp);\n}" always "struct C { int i; static int si; float f; int* ip; float* fp};\nvoid foo(float a) { }\nvoid foo(int a) { }\nvoid foo(int* a) { }\nvoid func(C c, C* cp) {\n    foo(c.i);\n    foo(cp->i);\n    foo(c.f);\n    foo(c.si);\n    foo(C::si);\n    foo(c.ip);\n    foo(c.fp);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6054 always 6054
  false always 0
Line 6068
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6068 always 6068
  "" always ""
Line 6070
  "foo ( c . i ) ;" always "foo ( c . i ) ;"
Line 6071
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6071 always 6071
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 6073
  "foo ( cp . i ) ;" always "foo ( cp . i ) ;"
Line 6074
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6074 always 6074
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 6076
  "foo ( c . f ) ;" always "foo ( c . f ) ;"
Line 6077
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6077 always 6077
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 6079
  "foo ( c . si ) ;" always "foo ( c . si ) ;"
Line 6080
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6080 always 6080
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 6082
  "foo ( C :: si ) ;" always "foo ( C :: si ) ;"
Line 6083
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6083 always 6083
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 6085
  "foo ( c . ip ) ;" always "foo ( c . ip ) ;"
Line 6086
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6086 always 6086
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 6088
  "foo ( c . fp ) ;" always "foo ( c . fp ) ;"
Line 6089
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6089 always 6089
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  nullptr always 0
Line 6093
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(int a) { }\nvoid foo(float a) { }\nvoid foo(void* a) { }\nvoid foo(bool a) { }\nvoid func(int i, float f, bool b) {\n    foo(i + i);\n    foo(f + f);\n    foo(!b);\n    foo(i > 0);\n    foo(f + i);\n}" always "void foo(int a) { }\nvoid foo(float a) { }\nvoid foo(void* a) { }\nvoid foo(bool a) { }\nvoid func(int i, float f, bool b) {\n    foo(i + i);\n    foo(f + f);\n    foo(!b);\n    foo(i > 0);\n    foo(f + i);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6093 always 6093
  false always 0
Line 6105
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6105 always 6105
  "" always ""
Line 6107
  "foo ( i + i ) ;" always "foo ( i + i ) ;"
Line 6108
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6108 always 6108
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 6110
  "foo ( f + f ) ;" always "foo ( f + f ) ;"
Line 6111
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6111 always 6111
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 6113
  "foo ( ! b ) ;" always "foo ( ! b ) ;"
Line 6114
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6114 always 6114
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 6116
  "foo ( i > 0 ) ;" always "foo ( i > 0 ) ;"
Line 6117
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6117 always 6117
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  4 always 4
Line 6119
  "foo ( f + i ) ;" always "foo ( f + i ) ;"
Line 6120
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6120 always 6120
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 6124
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred {\n    void f(int i) { }\n    void f(float f) const { }\n    void a() { f(1); }\n    void b() { f(1.f); }\n};" always "class Fred {\n    void f(int i) { }\n    void f(float f) const { }\n    void a() { f(1); }\n    void b() { f(1.f); }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6124 always 6124
  false always 0
Line 6131
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6131 always 6131
  "" always ""
Line 6133
  "f ( 1 ) ;" always "f ( 1 ) ;"
Line 6134
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6134 always 6134
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 6136
  "f ( 1.f ) ;" always "f ( 1.f ) ;"
Line 6137
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6137 always 6137
  true always 1
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 6141
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred {\n    enum E1 { e1 };\n    enum class E2 : unsigned short { e2 };\n    bool               get(bool x) { return x; }\n    char               get(char x) { return x; }\n    short              get(short x) { return x; }\n    int                get(int x) { return x; }\n    long               get(long x) { return x; }\n    long long          get(long long x) { return x; }\n    unsigned char      get(unsigned char x) { return x; }\n    signed char        get(signed char x) { return x; }\n    unsigned short     get(unsigned short x) { return x; }\n    unsigned int       get(unsigned int x) { return x; }\n    unsigned long      get(unsigned long x) { return x; }\n    unsigned long long get(unsigned long long x) { return x; }\n    E1                 get(E1 x) { return x; }\n    E2                 get(E2 x) { return x; }\n    void foo() {\n        bool               v1  = true;   v1  = get(get(v1));\n        char               v2  = '1';    v2  = get(get(v2));\n        short              v3  = 1;      v3  = get(get(v3));\n        int                v4  = 1;      v4  = get(get(v4));\n        long               v5  = 1;      v5  = get(get(v5));\n        long long          v6  = 1;      v6  = get(get(v6));\n        unsigned char      v7  = '1';    v7  = get(get(v7));\n        signed char        v8  = '1';    v8  = get(get(v8));\n        unsigned short     v9  = 1;      v9  = get(get(v9));\n        unsigned int       v10 = 1;      v10 = get(get(v10));\n        unsigned long      v11 = 1;      v11 = get(get(v11));\n        unsigned long long v12 = 1;      v12 = get(get(v12));\n        E1                 v13 = e1;     v13 = get(get(v13));\n        E2                 v14 = E2::e2; v14 = get(get(v14));\n    }\n};" always "class Fred {\n    enum E1 { e1 };\n    enum class E2 : unsigned short { e2 };\n    bool               get(bool x) { return x; }\n    char               get(char x) { return x; }\n    short              get(short x) { return x; }\n    int                get(int x) { return x; }\n    long               get(long x) { return x; }\n    long long          get(long long x) { return x; }\n    unsigned char      get(unsigned char x) { return x; }\n    signed char        get(signed char x) { return x; }\n    unsigned short     get(unsigned short x) { return x; }\n    unsigned int       get(unsigned int x) { return x; }\n    unsigned long      get(unsigned long x) { return x; }\n    unsigned long long get(unsigned long long x) { return x; }\n    E1                 get(E1 x) { return x; }\n    E2                 get(E2 x) { return x; }\n    void foo() {\n        bool               v1  = true;   v1  = get(get(v1));\n        char               v2  = '1';    v2  = get(get(v2));\n        short              v3  = 1;      v3  = get(get(v3));\n        int                v4  = 1;      v4  = get(get(v4));\n        long               v5  = 1;      v5  = get(get(v5));\n        long long          v6  = 1;      v6  = get(get(v6));\n        unsigned char      v7  = '1';    v7  = get(get(v7));\n        signed char        v8  = '1';    v8  = get(get(v8));\n        unsigned short     v9  = 1;      v9  = get(get(v9));\n        unsigned int       v10 = 1;      v10 = get(get(v10));\n        unsigned long      v11 = 1;      v11 = get(get(v11));\n        unsigned long long v12 = 1;      v12 = get(get(v12));\n        E1                 v13 = e1;     v13 = get(get(v13));\n        E2                 v14 = E2::e2; v14 = get(get(v14));\n    }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6141 always 6141
  false always 0
Line 6176
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6176 always 6176
  "" always ""
Line 6177
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6177 always 6177
Line 6179
  "get ( get ( v1 ) ) ;" always "get ( get ( v1 ) ) ;"
Line 6180
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6180 always 6180
Line 6181
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6181 always 6181
Line 6182
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6182 always 6182
  4 always 4
Line 6184
  "get ( get ( v2 ) ) ;" always "get ( get ( v2 ) ) ;"
Line 6185
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6185 always 6185
Line 6186
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6186 always 6186
Line 6187
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6187 always 6187
  5 always 5
Line 6189
  "get ( get ( v3 ) ) ;" always "get ( get ( v3 ) ) ;"
Line 6190
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6190 always 6190
Line 6191
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6191 always 6191
Line 6192
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6192 always 6192
  6 always 6
Line 6194
  "get ( get ( v4 ) ) ;" always "get ( get ( v4 ) ) ;"
Line 6195
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6195 always 6195
Line 6196
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6196 always 6196
Line 6197
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6197 always 6197
  7 always 7
Line 6199
  "get ( get ( v5 ) ) ;" always "get ( get ( v5 ) ) ;"
Line 6200
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6200 always 6200
Line 6201
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6201 always 6201
Line 6202
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6202 always 6202
  8 always 8
Line 6204
  "get ( get ( v6 ) ) ;" always "get ( get ( v6 ) ) ;"
Line 6205
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6205 always 6205
Line 6206
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6206 always 6206
Line 6207
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6207 always 6207
  9 always 9
Line 6209
  "get ( get ( v7 ) ) ;" always "get ( get ( v7 ) ) ;"
Line 6210
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6210 always 6210
Line 6211
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6211 always 6211
Line 6213
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6213 always 6213
  10 always 10
Line 6215
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6215 always 6215
  5 always 5
Line 6218
  "get ( get ( v8 ) ) ;" always "get ( get ( v8 ) ) ;"
Line 6219
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6219 always 6219
Line 6220
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6220 always 6220
Line 6222
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6222 always 6222
  5 always 5
Line 6224
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6224 always 6224
  11 always 11
Line 6227
  "get ( get ( v9 ) ) ;" always "get ( get ( v9 ) ) ;"
Line 6228
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6228 always 6228
Line 6229
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6229 always 6229
Line 6230
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6230 always 6230
  12 always 12
Line 6232
  "get ( get ( v10 ) ) ;" always "get ( get ( v10 ) ) ;"
Line 6233
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6233 always 6233
Line 6234
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6234 always 6234
Line 6235
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6235 always 6235
  13 always 13
Line 6237
  "get ( get ( v11 ) ) ;" always "get ( get ( v11 ) ) ;"
Line 6238
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6238 always 6238
Line 6239
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6239 always 6239
Line 6240
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6240 always 6240
  14 always 14
Line 6242
  "get ( get ( v12 ) ) ;" always "get ( get ( v12 ) ) ;"
Line 6243
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6243 always 6243
Line 6244
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6244 always 6244
Line 6245
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6245 always 6245
  15 always 15
Line 6247
  "get ( get ( v13 ) ) ;" always "get ( get ( v13 ) ) ;"
Line 6248
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6248 always 6248
Line 6249
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6249 always 6249
Line 6250
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6250 always 6250
  16 always 16
Line 6252
  "get ( get ( v14 ) ) ;" always "get ( get ( v14 ) ) ;"
Line 6253
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6253 always 6253
Line 6254
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6254 always 6254
Line 6255
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6255 always 6255
  17 always 17
Line 6259
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Foo {\npublic:\n    Foo() : _x(0), _y(0) {}\n    Foo(const Foo& f) {\n        copy(&f);\n    }\n    void copy(const Foo* f) {\n        _x=f->_x;\n        copy(*f);\n    }\nprivate:\n    void copy(const Foo& f) {\n        _y=f._y;\n    }\n    int _x;\n    int _y;\n};" always "class Foo {\npublic:\n    Foo() : _x(0), _y(0) {}\n    Foo(const Foo& f) {\n        copy(&f);\n    }\n    void copy(const Foo* f) {\n        _x=f->_x;\n        copy(*f);\n    }\nprivate:\n    void copy(const Foo& f) {\n        _y=f._y;\n    }\n    int _x;\n    int _y;\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6259 always 6259
  false always 0
Line 6277
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6277 always 6277
  "" always ""
Line 6279
  "copy ( & f ) ;" always "copy ( & f ) ;"
Line 6280
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6280 always 6280
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  7 always 7
Line 6282
  "copy ( * f ) ;" always "copy ( * f ) ;"
Line 6283
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6283 always 6283
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  12 always 12
Line 6287
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(foo *myFoo) {\n    int* myThing = myFoo->GetThing();\n}" always "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(foo *myFoo) {\n    int* myThing = myFoo->GetThing();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6287 always 6287
  false always 0
Line 6296
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6296 always 6296
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6298
  "myFoo . GetThing ( ) ;" always "myFoo . GetThing ( ) ;"
Line 6300
  && always {!<=-1,!>=2}
  tok1 always !0
  2 always 2
  tok1 always !0
  2 always 2
  : always 0
  nullptr always 0
Line 6301
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6301 always 6301
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6302
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6302 always 6302
  true always 1
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  f always !0
Line 6306
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(const foo *myFoo) {\n    int* myThing = myFoo->GetThing();\n}" always "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(const foo *myFoo) {\n    int* myThing = myFoo->GetThing();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6306 always 6306
  false always 0
Line 6315
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6315 always 6315
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6317
  ". GetThing ( ) ;" always ". GetThing ( ) ;"
Line 6319
  = possible 0
  ? possible 0
  tok1 always !0
  : always 0
  nullptr always 0
Line 6320
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6320 always 6320
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 6321
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6321 always 6321
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 6325
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(foo *myFoo) {\n    int* myThing = ((const foo *)myFoo)->GetThing();\n}" always "struct foo {\n    int GetThing( ) const { return m_thing; }\n    int* GetThing( ) { return &m_thing; }\n};\n\nvoid f(foo *myFoo) {\n    int* myThing = ((const foo *)myFoo)->GetThing();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6325 always 6325
  false always 0
Line 6334
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6334 always 6334
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6336
  ". GetThing ( ) ;" always ". GetThing ( ) ;"
Line 6338
  = possible 0
  ? possible 0
  tok1 always !0
  : always 0
  nullptr always 0
Line 6339
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6339 always 6339
  f possible 0
  != {!<=-1,!>=2,0}
  nullptr always 0
Line 6340
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6340 always 6340
  true always 1
  && always {!<=-1,!>=2}
  f always !0
Line 6344
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct foo {\n  void dostuff();\n}\n\nvoid f(std::shared_ptr<foo> p) {\n  p->dostuff();\n}" always "struct foo {\n  void dostuff();\n}\n\nvoid f(std::shared_ptr<foo> p) {\n  p->dostuff();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6344 always 6344
  false always 0
Line 6351
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6351 always 6351
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6352
  ". dostuff ( ) ;" always ". dostuff ( ) ;"
Line 6353
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6353 always 6353
Line 6357
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct foo {\n  void dostuff();\n}\n\nvoid f1(std::vector<std::shared_ptr<foo>> v)\n{\n    for (auto p : v)\n    {\n        p->dostuff();\n    }\n}" always "struct foo {\n  void dostuff();\n}\n\nvoid f1(std::vector<std::shared_ptr<foo>> v)\n{\n    for (auto p : v)\n    {\n        p->dostuff();\n    }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6357 always 6357
  false always 0
Line 6368
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6368 always 6368
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6369
  ". dostuff ( ) ;" always ". dostuff ( ) ;"
Line 6370
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6370 always 6370
Line 6374
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void dostuff(const int *p) {}\nvoid dostuff(float) {}\nvoid f(int *p) {\n  dostuff(p);\n}" always "void dostuff(const int *p) {}\nvoid dostuff(float) {}\nvoid f(int *p) {\n  dostuff(p);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6374 always 6374
  false always 0
Line 6379
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6379 always 6379
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6380
  "dostuff ( p ) ;" always "dostuff ( p ) ;"
Line 6381
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6381 always 6381
Line 6382
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6382 always 6382
  && always {!<=-1,!>=2}
Line 6383
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6383 always 6383
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
Line 6387
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace { void a(int); }\nvoid f() { a(9); }" always "namespace { void a(int); }\nvoid f() { a(9); }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6387 always 6387
  false always 0
Line 6389
  "a ( 9 )" always "a ( 9 )"
Line 6390
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6390 always 6390
Line 6391
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6391 always 6391
Line 6395
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace { void a(int); }\nstruct S {\n  void foo() { a(7); }\n  void a(int);\n};" always "namespace { void a(int); }\nstruct S {\n  void foo() { a(7); }\n  void a(int);\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6395 always 6395
  false always 0
Line 6400
  "a ( 7 )" always "a ( 7 )"
Line 6401
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6401 always 6401
Line 6402
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6402 always 6402
Line 6403
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6403 always 6403
Line 6404
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6404 always 6404
  4 always 4
Line 6408
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {\n    int foo() const;\n};\n\nstruct B {\n    A a;\n};\n\ntypedef std::shared_ptr<B> BPtr;\n\nvoid bar(BPtr b) {\n    int x = b->a.foo();\n}" always "struct A {\n    int foo() const;\n};\n\nstruct B {\n    A a;\n};\n\ntypedef std::shared_ptr<B> BPtr;\n\nvoid bar(BPtr b) {\n    int x = b->a.foo();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6408 always 6408
  false always 0
Line 6421
  "foo ( ) ;" always "foo ( ) ;"
Line 6422
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6422 always 6422
Line 6423
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6423 always 6423
Line 6424
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6424 always 6424
Line 6425
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6425 always 6425
  2 always 2
Line 6429
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A;\nvoid foo(std::shared_ptr<A> ptr) {\n    int x = ptr->bar();\n}" always "struct A;\nvoid foo(std::shared_ptr<A> ptr) {\n    int x = ptr->bar();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6429 always 6429
  false always 0
Line 6433
  "bar ( ) ;" always "bar ( ) ;"
Line 6434
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6434 always 6434
Line 6435
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6435 always 6435
  ! always {!<=-1,!>=2}
Line 6439
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(bool);\nvoid foo(std::string s);\nvoid bar() { foo(\"123\"); }" always "void foo(bool);\nvoid foo(std::string s);\nvoid bar() { foo(\"123\"); }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6439 always 6439
  false always 0
Line 6442
  "foo ( \"123\" ) ;" always "foo ( \"123\" ) ;"
Line 6443
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6443 always 6443
Line 6444
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6444 always 6444
Line 6445
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6445 always 6445
Line 6446
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6446 always 6446
  1 always 1
Line 6450
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(char *p);\nvoid bar() { foo(\"123\"); }" always "void foo(char *p);\nvoid bar() { foo(\"123\"); }"
  "test.c" always "test.c"
  false always 0
Line 6453
  "foo ( \"123\" ) ;" always "foo ( \"123\" ) ;"
Line 6454
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6454 always 6454
Line 6455
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6455 always 6455
Line 6456
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6456 always 6456
Line 6457
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6457 always 6457
  1 always 1
Line 6462
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo();\n    }\n};" always "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo();\n    }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6462 always 6462
  false always 0
Line 6475
  "foo ( ) ;" always "foo ( ) ;"
Line 6476
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6476 always 6476
Line 6477
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6477 always 6477
Line 6478
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6478 always 6478
Line 6479
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6479 always 6479
  4 always 4
Line 6482
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1);\n    }\n};" always "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1);\n    }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6482 always 6482
  false always 0
Line 6495
  "foo ( 1 ) ;" always "foo ( 1 ) ;"
Line 6496
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6496 always 6496
Line 6497
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6497 always 6497
Line 6498
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6498 always 6498
Line 6499
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6499 always 6499
  4 always 4
Line 6502
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1,2);\n    }\n};" always "class Base {\n    int i{};\npublic:\n    void foo(...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1,2);\n    }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6502 always 6502
  false always 0
Line 6515
  "foo ( 1 , 2 ) ;" always "foo ( 1 , 2 ) ;"
Line 6516
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6516 always 6516
Line 6517
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6517 always 6517
Line 6518
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6518 always 6518
Line 6519
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6519 always 6519
  4 always 4
Line 6522
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    int i{};\npublic:\n    void foo(int, ...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1);\n    }\n};" always "class Base {\n    int i{};\npublic:\n    void foo(int, ...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1);\n    }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6522 always 6522
  false always 0
Line 6535
  "foo ( 1 ) ;" always "foo ( 1 ) ;"
Line 6536
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6536 always 6536
Line 6537
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6537 always 6537
Line 6538
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6538 always 6538
Line 6539
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6539 always 6539
  4 always 4
Line 6542
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    int i{};\npublic:\n    void foo(int,...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1,2);\n    }\n};" always "class Base {\n    int i{};\npublic:\n    void foo(int,...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1,2);\n    }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6542 always 6542
  false always 0
Line 6555
  "foo ( 1 , 2 ) ;" always "foo ( 1 , 2 ) ;"
Line 6556
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6556 always 6556
Line 6557
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6557 always 6557
Line 6558
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6558 always 6558
Line 6559
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6559 always 6559
  4 always 4
Line 6562
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Base {\n    int i{};\npublic:\n    void foo(int,...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1, 2, 3);\n    }\n};" always "class Base {\n    int i{};\npublic:\n    void foo(int,...) const { bar(); }\n    int bar() const { return i; }\n};\nclass Derived : public Base {\npublic:\n    void doIt() const {\n        foo(1, 2, 3);\n    }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6562 always 6562
  false always 0
Line 6575
  "foo ( 1 , 2 , 3 ) ;" always "foo ( 1 , 2 , 3 ) ;"
Line 6576
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6576 always 6576
Line 6577
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6577 always 6577
Line 6578
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6578 always 6578
Line 6579
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6579 always 6579
  4 always 4
Line 6584
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace cppcheck {\n    class Platform {\n    public:\n        enum PlatformType { Unspecified };\n    };\n}\nclass ImportProject {\n    void selectOneVsConfig(cppcheck::Platform::PlatformType);\n};\nclass Settings : public cppcheck::Platform { };\nvoid ImportProject::selectOneVsConfig(Settings::PlatformType) { }" always "namespace cppcheck {\n    class Platform {\n    public:\n        enum PlatformType { Unspecified };\n    };\n}\nclass ImportProject {\n    void selectOneVsConfig(cppcheck::Platform::PlatformType);\n};\nclass Settings : public cppcheck::Platform { };\nvoid ImportProject::selectOneVsConfig(Settings::PlatformType) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6584 always 6584
  false always 0
Line 6596
  "selectOneVsConfig ( Settings :: PlatformType ) { }" always "selectOneVsConfig ( Settings :: PlatformType ) { }"
Line 6597
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6597 always 6597
Line 6598
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6598 always 6598
Line 6599
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6599 always 6599
Line 6600
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6600 always 6600
  8 always 8
Line 6604
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace clangimport {\n    class AstNode {\n    public:\n        AstNode();\n        void createTokens();\n    };\n}\n::clangimport::AstNode::AstNode() { }\nvoid ::clangimport::AstNode::createTokens() { }" always "namespace clangimport {\n    class AstNode {\n    public:\n        AstNode();\n        void createTokens();\n    };\n}\n::clangimport::AstNode::AstNode() { }\nvoid ::clangimport::AstNode::createTokens() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6604 always 6604
  false always 0
Line 6614
  "AstNode ( ) { }" always "AstNode ( ) { }"
Line 6615
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6615 always 6615
Line 6616
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6616 always 6616
Line 6617
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6617 always 6617
Line 6618
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6618 always 6618
  4 always 4
Line 6619
  "createTokens ( ) { }" always "createTokens ( ) { }"
Line 6620
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6620 always 6620
Line 6621
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6621 always 6621
Line 6622
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6622 always 6622
Line 6623
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6623 always 6623
  5 always 5
Line 6627
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace external {\n    enum class T { };\n}\nnamespace ns {\n    class A {\n    public:\n        void f(external::T);\n    };\n}\nnamespace ns {\n    void A::f(external::T link_type) { }\n}" always "namespace external {\n    enum class T { };\n}\nnamespace ns {\n    class A {\n    public:\n        void f(external::T);\n    };\n}\nnamespace ns {\n    void A::f(external::T link_type) { }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6627 always 6627
  false always 0
Line 6639
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6639 always 6639
  "" always ""
Line 6640
  "f ( external :: T link_type )" always "f ( external :: T link_type )"
Line 6641
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6641 always 6641
Line 6642
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6642 always 6642
Line 6643
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6643 always 6643
  == always {!<=-1,!>=2}
  "f" always "f"
Line 6644
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6644 always 6644
  7 always 7
Line 6648
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace ns {\n    class V { };\n}\nclass A {\npublic:\n    void f(const ns::V&);\n};\nusing ::ns::V;\nvoid A::f(const V&) { }" always "namespace ns {\n    class V { };\n}\nclass A {\npublic:\n    void f(const ns::V&);\n};\nusing ::ns::V;\nvoid A::f(const V&) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6648 always 6648
  false always 0
Line 6657
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6657 always 6657
  "" always ""
Line 6658
  "f ( const :: ns :: V & )" always "f ( const :: ns :: V & )"
Line 6659
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6659 always 6659
Line 6660
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6660 always 6660
Line 6661
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6661 always 6661
  == always {!<=-1,!>=2}
  "f" always "f"
Line 6662
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6662 always 6662
  6 always 6
Line 6666
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace ns {\n    class V { };\n    using Var = V;\n}\nclass A {\n    void f(const ns::Var&);\n};\nusing ::ns::Var;\nvoid A::f(const Var&) {}" always "namespace ns {\n    class V { };\n    using Var = V;\n}\nclass A {\n    void f(const ns::Var&);\n};\nusing ::ns::Var;\nvoid A::f(const Var&) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6666 always 6666
  false always 0
Line 6675
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6675 always 6675
  "" always ""
Line 6676
  "f ( const :: ns :: V & )" always "f ( const :: ns :: V & )"
Line 6677
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6677 always 6677
Line 6678
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6678 always 6678
Line 6679
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6679 always 6679
  == always {!<=-1,!>=2}
  "f" always "f"
Line 6680
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6680 always 6680
  6 always 6
Line 6684
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "namespace external {\n    class V {\n    public:\n        using I = int;\n    };\n}\nclass A {\n    void f(external::V::I);\n};\nusing ::external::V;\nvoid A::f(V::I) {}" always "namespace external {\n    class V {\n    public:\n        using I = int;\n    };\n}\nclass A {\n    void f(external::V::I);\n};\nusing ::external::V;\nvoid A::f(V::I) {}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6684 always 6684
  false always 0
Line 6695
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6695 always 6695
  "" always ""
Line 6696
  "f ( int )" always "f ( int )"
Line 6697
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6697 always 6697
Line 6698
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6698 always 6698
Line 6699
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6699 always 6699
  == always {!<=-1,!>=2}
  "f" always "f"
Line 6700
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6700 always 6700
  8 always 8
Line 6704
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class E : public std::exception {\npublic:\n    const char* what() const noexcept override;\n};\nconst char* E::what() const noexcept {\n    return nullptr;\n}" always "class E : public std::exception {\npublic:\n    const char* what() const noexcept override;\n};\nconst char* E::what() const noexcept {\n    return nullptr;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6704 always 6704
  false always 0
Line 6711
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6711 always 6711
  "" always ""
Line 6712
  "what ( ) const noexcept {" always "what ( ) const noexcept {"
Line 6713
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6713 always 6713
Line 6714
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6714 always 6714
Line 6715
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6715 always 6715
  == always {!<=-1,!>=2}
  "what" always "what"
Line 6716
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6716 always 6716
  3 always 3
Line 6721
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {};\nconst int* g(const A&);\nint* g(A&);\nvoid f(A& x) {\n    int* y = g(x);\n    *y = 0;\n}\n" always "struct A {};\nconst int* g(const A&);\nint* g(A&);\nvoid f(A& x) {\n    int* y = g(x);\n    *y = 0;\n}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6721 always 6721
  false always 0
Line 6728
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6728 always 6728
  "" always ""
Line 6729
  "g ( x )" always "g ( x )"
Line 6730
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6730 always 6730
Line 6731
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6731 always 6731
Line 6732
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6732 always 6732
  == always {!<=-1,!>=2}
  "g" always "g"
Line 6733
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6733 always 6733
  3 always 3
Line 6736
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {};\nconst int* g(const A&);\nint* g(A&);\nvoid f(const A& x) {\n    int* y = g(x);\n    *y = 0;\n}\n" always "struct A {};\nconst int* g(const A&);\nint* g(A&);\nvoid f(const A& x) {\n    int* y = g(x);\n    *y = 0;\n}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6736 always 6736
  false always 0
Line 6743
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6743 always 6743
  "" always ""
Line 6744
  "g ( x )" always "g ( x )"
Line 6745
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6745 always 6745
Line 6746
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6746 always 6746
Line 6747
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6747 always 6747
  == always {!<=-1,!>=2}
  "g" always "g"
Line 6748
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6748 always 6748
  2 always 2
Line 6753
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void a(const std::string &, const std::string &);\nvoid a(long, long);\nvoid b() { a(true, false); }\n" always "void a(const std::string &, const std::string &);\nvoid a(long, long);\nvoid b() { a(true, false); }\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6753 always 6753
  false always 0
Line 6756
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6756 always 6756
  "" always ""
Line 6757
  "a ( true , false )" always "a ( true , false )"
Line 6758
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6758 always 6758
Line 6759
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6759 always 6759
Line 6760
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6760 always 6760
  == always {!<=-1,!>=2}
  "a" always "a"
Line 6761
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6761 always 6761
  2 always 2
Line 6766
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {};\nconst A* g(const std::string&);\nconst A& g(std::vector<A>::size_type i);\nconst A& f(std::vector<A>::size_type i) { return g(i); }\n" always "struct A {};\nconst A* g(const std::string&);\nconst A& g(std::vector<A>::size_type i);\nconst A& f(std::vector<A>::size_type i) { return g(i); }\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6766 always 6766
  false always 0
Line 6770
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6770 always 6770
  "" always ""
Line 6771
  "g ( i )" always "g ( i )"
Line 6772
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6772 always 6772
Line 6773
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6773 always 6773
Line 6774
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6774 always 6774
  == always {!<=-1,!>=2}
  "g" always "g"
Line 6775
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6775 always 6775
  3 always 3
Line 6778
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct A {};\nconst A& g(std::vector<A>::size_type i);\nconst A* g(const std::string&);\nconst A& f(std::vector<A>::size_type i) { return g(i); }\n" always "struct A {};\nconst A& g(std::vector<A>::size_type i);\nconst A* g(const std::string&);\nconst A& f(std::vector<A>::size_type i) { return g(i); }\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6778 always 6778
  false always 0
Line 6782
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6782 always 6782
  "" always ""
Line 6783
  "g ( i )" always "g ( i )"
Line 6784
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6784 always 6784
Line 6785
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6785 always 6785
Line 6786
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6786 always 6786
  == always {!<=-1,!>=2}
  "g" always "g"
Line 6787
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6787 always 6787
  2 always 2
Line 6794
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void dostuff(std::vector<int> v);\nvoid f(std::vector<int> v) {\n  dostuff(v);\n}" always "void dostuff(std::vector<int> v);\nvoid f(std::vector<int> v) {\n  dostuff(v);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6794 always 6794
  false always 0
Line 6799
  "dostuff ( v ) ;" always "dostuff ( v ) ;"
Line 6800
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6800 always 6800
Line 6801
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6801 always 6801
  && always {!<=-1,!>=2}
Line 6802
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6802 always 6802
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  1 always 1
Line 6805
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void dostuff(std::vector<int> v);\nvoid dostuff(int *i);\nvoid f(std::vector<char> v) {\n  dostuff(v);\n}" always "void dostuff(std::vector<int> v);\nvoid dostuff(int *i);\nvoid f(std::vector<char> v) {\n  dostuff(v);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6805 always 6805
  false always 0
Line 6811
  "dostuff ( v ) ;" always "dostuff ( v ) ;"
Line 6812
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6812 always 6812
  ! always {!<=-1,!>=2}
Line 6817
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "extern \"C\" { void foo(int); }\nvoid bar() {\n    foo(42);\n}" always "extern \"C\" { void foo(int); }\nvoid bar() {\n    foo(42);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6817 always 6817
  false always 0
Line 6821
  "foo ( 42 )" always "foo ( 42 )"
Line 6822
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6822 always 6822
Line 6823
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6823 always 6823
Line 6827
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S {\n    void foo();\n    int x;\n};\n\nint bar(int x);\n\nvoid S::foo() {\n    x = ::bar(x);\n}" always "struct S {\n    void foo();\n    int x;\n};\n\nint bar(int x);\n\nvoid S::foo() {\n    x = ::bar(x);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6827 always 6827
  false always 0
Line 6837
  "bar ( x )" always "bar ( x )"
Line 6838
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6838 always 6838
Line 6839
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6839 always 6839
Line 6843
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S {\n    int operator()(int);\n};\n\nvoid foo(S x) {\n    x(123);\n}" always "struct S {\n    int operator()(int);\n};\n\nvoid foo(S x) {\n    x(123);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6843 always 6843
  false always 0
Line 6850
  "x . operator() ( 123 )" always "x . operator() ( 123 )"
Line 6851
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6851 always 6851
Line 6852
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6852 always 6852
  2 always 2
Line 6856
  0 always 0
Line 6857
  0 always 0
  1 always 1
Line 6858
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6858 always 6858
  & {lifetime[Address]=(vt_int),!0}
  & {lifetime[Address]=(vt_int),!0}
Line 6859
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6859 always 6859
  & {lifetime[Address]=(vt_const_int),!0}
  & {lifetime[Address]=(vt_int),!0}
Line 6860
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6860 always 6860
  & {lifetime[Address]=(vt_int),!0}
  & {lifetime[Address]=(vt_const_int),!0}
Line 6862
  1 always 1
Line 6863
  1 always 1
Line 6864
  1 always 1
Line 6865
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6865 always 6865
  & {lifetime[Address]=(vt_char_pointer),!0}
  & {lifetime[Address]=(vt_void_pointer),!0}
Line 6866
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6866 always 6866
  & {lifetime[Address]=(vt_char_pointer),!0}
  & {lifetime[Address]=(vt_int_pointer),!0}
Line 6868
  2 always 2
Line 6869
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6869 always 6869
  & {lifetime[Address]=(vt_char_pointer2),!0}
  & {lifetime[Address]=(vt_void_pointer),!0}
Line 6871
  1 always 1
  1 always 1
Line 6872
  0 always 0
  0 always 0
Line 6873
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6873 always 6873
  & {lifetime[Address]=(vt_const_float_pointer),!0}
  & {lifetime[Address]=(vt_long_long),!0}
Line 6883
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func1() noexcept;\nvoid func2() noexcept { }\nvoid func3() noexcept(true);\nvoid func4() noexcept(true) { }" always "void func1() noexcept;\nvoid func2() noexcept { }\nvoid func3() noexcept(true);\nvoid func4() noexcept(true) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6883 always 6883
  false always 0
Line 6887
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6887 always 6887
  "" always ""
Line 6888
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6888 always 6888
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6890
  "func1" always "func1"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6890 always 6890
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6890 always 6890
  true always 1
  false always 0
Line 6891
  "func2" always "func2"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6891 always 6891
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6891 always 6891
  true always 1
  false always 0
Line 6892
  "func3" always "func3"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6892 always 6892
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6892 always 6892
  true always 1
  false always 0
Line 6893
  "func4" always "func4"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6893 always 6893
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6893 always 6893
  true always 1
  false always 0
Line 6897
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template <class T> void self_assign(T& t) noexcept(noexcept(t = t)) {t = t; }" always "template <class T> void self_assign(T& t) noexcept(noexcept(t = t)) {t = t; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6897 always 6897
  false always 0
Line 6899
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6899 always 6899
  "" always ""
Line 6900
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6900 always 6900
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6902
  "self_assign" always "self_assign"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6902 always 6902
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6902 always 6902
  true always 1
  false always 0
Line 6912
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    void func1() noexcept;\n    void func2() noexcept { }\n    void func3() noexcept(true);\n    void func4() noexcept(true) { }\n    void func5() const noexcept;\n    void func6() const noexcept { }\n    void func7() const noexcept(true);\n    void func8() const noexcept(true) { }\n    void func9() noexcept = 0;\n    void func10() noexcept = 0;\n    void func11() const noexcept(true) = 0;\n    void func12() const noexcept(true) = 0;\n    void func13() const noexcept(false) = 0;\n};" always "struct Fred {\n    void func1() noexcept;\n    void func2() noexcept { }\n    void func3() noexcept(true);\n    void func4() noexcept(true) { }\n    void func5() const noexcept;\n    void func6() const noexcept { }\n    void func7() const noexcept(true);\n    void func8() const noexcept(true) { }\n    void func9() noexcept = 0;\n    void func10() noexcept = 0;\n    void func11() const noexcept(true) = 0;\n    void func12() const noexcept(true) = 0;\n    void func13() const noexcept(false) = 0;\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6912 always 6912
  false always 0
Line 6927
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6927 always 6927
  "" always ""
Line 6928
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6928 always 6928
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6930
  "Fred" always "Fred"
Line 6931
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6931 always 6931
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6932
  "func1" always "func1"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6932 always 6932
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6932 always 6932
  true always 1
  false always 0
Line 6933
  "func2" always "func2"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6933 always 6933
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6933 always 6933
  true always 1
  false always 0
Line 6934
  "func3" always "func3"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6934 always 6934
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6934 always 6934
  true always 1
  false always 0
Line 6935
  "func4" always "func4"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6935 always 6935
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6935 always 6935
  true always 1
  false always 0
Line 6936
  "func5" always "func5"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6936 always 6936
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6936 always 6936
  true always 1
  false always 0
Line 6937
  "func6" always "func6"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6937 always 6937
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6937 always 6937
  true always 1
  false always 0
Line 6938
  "func7" always "func7"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6938 always 6938
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6938 always 6938
  true always 1
  false always 0
Line 6939
  "func8" always "func8"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6939 always 6939
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6939 always 6939
  true always 1
  false always 0
Line 6940
  "func9" always "func9"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6940 always 6940
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6940 always 6940
  true always 1
  false always 0
Line 6941
  "func10" always "func10"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6941 always 6941
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6941 always 6941
  true always 1
  false always 0
Line 6942
  "func11" always "func11"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6942 always 6942
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6942 always 6942
  true always 1
  false always 0
Line 6943
  "func12" always "func12"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6943 always 6943
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6943 always 6943
  true always 1
  false always 0
Line 6944
  "func13" always "func13"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6944 always 6944
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6944 always 6944
  false always 0
  false always 0
Line 6948
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class A {\npublic:\n   A(A&& a) {\n      throw std::runtime_error(\"err\");\n   }\n};\nclass B {\n   A a;\n   B(B&& b) noexcept\n   :a(std::move(b.a)) { }\n};" always "class A {\npublic:\n   A(A&& a) {\n      throw std::runtime_error(\"err\");\n   }\n};\nclass B {\n   A a;\n   B(B&& b) noexcept\n   :a(std::move(b.a)) { }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6948 always 6948
  false always 0
Line 6959
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6959 always 6959
  "" always ""
Line 6960
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6960 always 6960
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6961
  "B" always "B"
Line 6962
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6962 always 6962
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6963
  "B" always "B"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6963 always 6963
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6963 always 6963
  true always 1
  false always 0
Line 6973
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func1() throw();\nvoid func2() throw() { }\nvoid func3() throw(int);\nvoid func4() throw(int) { }" always "void func1() throw();\nvoid func2() throw() { }\nvoid func3() throw(int);\nvoid func4() throw(int) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6973 always 6973
  false always 0
Line 6977
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6977 always 6977
  "" always ""
Line 6978
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6978 always 6978
  != always {!<=-1,!>=2}
  nullptr always 0
Line 6980
  "func1" always "func1"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6980 always 6980
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6980 always 6980
  true always 1
  false always 0
Line 6981
  "func2" always "func2"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6981 always 6981
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6981 always 6981
  true always 1
  false always 0
Line 6982
  "func3" always "func3"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6982 always 6982
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6982 always 6982
  true always 1
  false always 0
Line 6983
  "func4" always "func4"
  & {lifetime[Address]=(db->scopeList.front()),!0}
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6983 always 6983
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6983 always 6983
  true always 1
  false always 0
Line 6992
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Fred {\n    void func1() throw();\n    void func2() throw() { }\n    void func3() throw(int);\n    void func4() throw(int) { }\n    void func5() const throw();\n    void func6() const throw() { }\n    void func7() const throw(int);\n    void func8() const throw(int) { }\n    void func9() throw() = 0;\n    void func10() throw(int) = 0;\n    void func11() const throw() = 0;\n    void func12() const throw(int) = 0;\n};" always "struct Fred {\n    void func1() throw();\n    void func2() throw() { }\n    void func3() throw(int);\n    void func4() throw(int) { }\n    void func5() const throw();\n    void func6() const throw() { }\n    void func7() const throw(int);\n    void func8() const throw(int) { }\n    void func9() throw() = 0;\n    void func10() throw(int) = 0;\n    void func11() const throw() = 0;\n    void func12() const throw(int) = 0;\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  6992 always 6992
  false always 0
Line 7006
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7006 always 7006
  "" always ""
Line 7007
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7007 always 7007
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7009
  "Fred" always "Fred"
Line 7010
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7010 always 7010
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7011
  "func1" always "func1"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7011 always 7011
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7011 always 7011
  true always 1
  false always 0
Line 7012
  "func2" always "func2"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7012 always 7012
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7012 always 7012
  true always 1
  false always 0
Line 7013
  "func3" always "func3"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7013 always 7013
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7013 always 7013
  true always 1
  false always 0
Line 7014
  "func4" always "func4"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7014 always 7014
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7014 always 7014
  true always 1
  false always 0
Line 7015
  "func5" always "func5"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7015 always 7015
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7015 always 7015
  true always 1
  false always 0
Line 7016
  "func6" always "func6"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7016 always 7016
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7016 always 7016
  true always 1
  false always 0
Line 7017
  "func7" always "func7"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7017 always 7017
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7017 always 7017
  true always 1
  false always 0
Line 7018
  "func8" always "func8"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7018 always 7018
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7018 always 7018
  true always 1
  false always 0
Line 7019
  "func9" always "func9"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7019 always 7019
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7019 always 7019
  true always 1
  false always 0
Line 7020
  "func10" always "func10"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7020 always 7020
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7020 always 7020
  true always 1
  false always 0
Line 7021
  "func11" always "func11"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7021 always 7021
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7021 always 7021
  true always 1
  false always 0
Line 7022
  "func12" always "func12"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7022 always 7022
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7022 always 7022
  true always 1
  false always 0
Line 7026
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func() __attribute__((nothrow));\nvoid func() { }" always "void func() __attribute__((nothrow));\nvoid func() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7026 always 7026
  false always 0
Line 7028
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7028 always 7028
  "" always ""
Line 7029
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7029 always 7029
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7031
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7032
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7032 always 7032
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7033
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7033 always 7033
  true always 1
Line 7037
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void __declspec(nothrow) func() { }" always "void __declspec(nothrow) func() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7037 always 7037
  false always 0
Line 7038
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7038 always 7038
  "" always ""
Line 7039
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7039 always 7039
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7041
  "func" always "func"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7042
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7042 always 7042
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7043
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7043 always 7043
  true always 1
Line 7047
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "[[noreturn]] void func1();\nvoid func1() { }\n[[noreturn]] void func2();\n[[noreturn]] void func3() { }\ntemplate <class T> [[noreturn]] void func4() { }" always "[[noreturn]] void func1();\nvoid func1() { }\n[[noreturn]] void func2();\n[[noreturn]] void func3() { }\ntemplate <class T> [[noreturn]] void func4() { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7047 always 7047
  false always 0
Line 7052
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7052 always 7052
  "" always ""
Line 7053
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7053 always 7053
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7055
  "func1" always "func1"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7056
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7056 always 7056
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7057
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7057 always 7057
  true always 1
Line 7059
  "func2" always "func2"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7060
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7060 always 7060
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7061
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7061 always 7061
  true always 1
Line 7063
  "func3" always "func3"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7064
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7064 always 7064
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7065
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7065 always 7065
  true always 1
Line 7067
  "func4" always "func4"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7068
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7068 always 7068
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7069
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7069 always 7069
  true always 1
Line 7074
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "[[nodiscard]] int func1();\nint func1() { }\n[[nodiscard]] int func2();\n[[nodiscard]] int func3() { }\ntemplate <class T> [[nodiscard]] int func4() { }std::pair<bool, char> [[nodiscard]] func5();\n[[nodiscard]] std::pair<bool, char> func6();\n" always "[[nodiscard]] int func1();\nint func1() { }\n[[nodiscard]] int func2();\n[[nodiscard]] int func3() { }\ntemplate <class T> [[nodiscard]] int func4() { }std::pair<bool, char> [[nodiscard]] func5();\n[[nodiscard]] std::pair<bool, char> func6();\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7074 always 7074
  false always 0
Line 7082
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7082 always 7082
  "" always ""
Line 7083
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7083 always 7083
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7085
  "func1" always "func1"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7086
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7086 always 7086
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7087
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7087 always 7087
  true always 1
Line 7089
  "func2" always "func2"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7090
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7090 always 7090
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7091
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7091 always 7091
  true always 1
Line 7093
  "func3" always "func3"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7094
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7094 always 7094
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7095
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7095 always 7095
  true always 1
Line 7097
  "func4" always "func4"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7098
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7098 always 7098
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7099
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7099 always 7099
  true always 1
Line 7101
  "func5" always "func5"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7102
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7102 always 7102
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7103
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7103 always 7103
  true always 1
Line 7105
  "func6" always "func6"
  & {lifetime[Address]=(db->scopeList.front()),!0}
Line 7106
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7106 always 7106
  true always 1
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7107
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7107 always 7107
  true always 1
Line 7111
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() { bool b; char c; unsigned char uc; short s; unsigned short us; int i; unsigned u; unsigned int ui; long l; unsigned long ul; long long ll; }" always "void f() { bool b; char c; unsigned char uc; short s; unsigned short us; int i; unsigned u; unsigned int ui; long l; unsigned long ul; long long ll; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7111 always 7111
  false always 0
Line 7112
  1 always 1
Line 7113
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7113 always 7113
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7114
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7114 always 7114
  "b" always "b"
Line 7115
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7115 always 7115
  false always 0
Line 7117
  2 always 2
Line 7118
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7118 always 7118
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7119
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7119 always 7119
  "c" always "c"
Line 7120
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7120 always 7120
  false always 0
Line 7122
  3 always 3
Line 7123
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7123 always 7123
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7124
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7124 always 7124
  "uc" always "uc"
Line 7125
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7125 always 7125
  false always 0
Line 7127
  4 always 4
Line 7128
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7128 always 7128
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7129
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7129 always 7129
  "s" always "s"
Line 7130
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7130 always 7130
  false always 0
Line 7132
  5 always 5
Line 7133
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7133 always 7133
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7134
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7134 always 7134
  "us" always "us"
Line 7135
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7135 always 7135
  false always 0
Line 7137
  6 always 6
Line 7138
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7138 always 7138
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7139
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7139 always 7139
  "i" always "i"
Line 7140
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7140 always 7140
  false always 0
Line 7142
  7 always 7
Line 7143
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7143 always 7143
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7144
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7144 always 7144
  "u" always "u"
Line 7145
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7145 always 7145
  false always 0
Line 7147
  8 always 8
Line 7148
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7148 always 7148
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7149
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7149 always 7149
  "ui" always "ui"
Line 7150
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7150 always 7150
  false always 0
Line 7152
  9 always 9
Line 7153
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7153 always 7153
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7154
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7154 always 7154
  "l" always "l"
Line 7155
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7155 always 7155
  false always 0
Line 7157
  10 always 10
Line 7158
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7158 always 7158
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7159
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7159 always 7159
  "ul" always "ul"
Line 7160
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7160 always 7160
  false always 0
Line 7162
  11 always 11
Line 7163
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7163 always 7163
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7164
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7164 always 7164
  "ll" always "ll"
Line 7165
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7165 always 7165
  false always 0
Line 7170
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() { float f; double d; long double ld; }" always "void f() { float f; double d; long double ld; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7170 always 7170
  false always 0
Line 7171
  1 always 1
Line 7172
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7172 always 7172
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7173
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7173 always 7173
  "f" always "f"
Line 7174
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7174 always 7174
  true always 1
Line 7176
  2 always 2
Line 7177
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7177 always 7177
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7178
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7178 always 7178
  "d" always "d"
Line 7179
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7179 always 7179
  true always 1
Line 7181
  3 always 3
Line 7182
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7182 always 7182
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7183
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7183 always 7183
  "ld" always "ld"
Line 7184
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7184 always 7184
  true always 1
Line 7187
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() { float * f; static const float * scf; }" always "void f() { float * f; static const float * scf; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7187 always 7187
  false always 0
Line 7188
  1 always 1
Line 7189
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7189 always 7189
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7190
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7190 always 7190
  "f" always "f"
Line 7191
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7191 always 7191
  true always 1
Line 7192
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7192 always 7192
  true always 1
Line 7194
  2 always 2
Line 7195
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7195 always 7195
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7196
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7196 always 7196
  "scf" always "scf"
Line 7197
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7197 always 7197
  true always 1
Line 7198
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7198 always 7198
  true always 1
Line 7201
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() { float fa[42]; }" always "void f() { float fa[42]; }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7201 always 7201
  false always 0
Line 7202
  1 always 1
Line 7203
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7203 always 7203
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7204
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7204 always 7204
  "fa" always "fa"
Line 7205
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7205 always 7205
  true always 1
Line 7206
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7206 always 7206
  true always 1
Line 7211
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() { class A {} a; void *b;  }" always "void f() { class A {} a; void *b;  }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7211 always 7211
  false always 0
Line 7212
  1 always 1
Line 7213
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7213 always 7213
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7214
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7214 always 7214
  "a" always "a"
Line 7215
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7215 always 7215
  false always 0
Line 7217
  2 always 2
Line 7218
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7218 always 7218
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7219
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7219 always 7219
  "b" always "b"
Line 7220
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7220 always 7220
  false always 0
Line 7224
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7224 always 7224
  "int foo(int x) {\n    extern int func1();\n    extern int func2(int);\n    int func3();\n    int func4(int);\n    return func4(x);\n}\n" always "int foo(int x) {\n    extern int func1();\n    extern int func2(int);\n    int func3();\n    int func4(int);\n    return func4(x);\n}\n"
  true always 1
Line 7231
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7231 always 7231
  "" always ""
Line 7235
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func() {\n    float y = 0.0f;\n    auto lambda = [&]()\n    {\n        float x = 1.0f;\n        y += 10.0f - x;\n    }\n    lambda();\n}" always "void func() {\n    float y = 0.0f;\n    auto lambda = [&]()\n    {\n        float x = 1.0f;\n        y += 10.0f - x;\n    }\n    lambda();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7235 always 7235
  false always 0
Line 7245
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7245 always 7245
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 7247
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7247 always 7247
Line 7249
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7249 always 7249
Line 7251
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7251 always 7251
Line 7255
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func() {\n    float y = 0.0f;\n    auto lambda = [&]() -> bool\n    {\n        float x = 1.0f;\n    }\n    lambda();\n}" always "void func() {\n    float y = 0.0f;\n    auto lambda = [&]() -> bool\n    {\n        float x = 1.0f;\n    }\n    lambda();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7255 always 7255
  false always 0
Line 7264
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7264 always 7264
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 7266
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7266 always 7266
Line 7268
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7268 always 7268
Line 7270
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7270 always 7270
Line 7275
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void func() {\n    auto f = []() mutable {}\n}" always "void func() {\n    auto f = []() mutable {}\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7275 always 7275
  false always 0
Line 7279
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7279 always 7279
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 7281
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7281 always 7281
Line 7283
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7283 always 7283
Line 7285
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7285 always 7285
Line 7290
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7290 always 7290
  "template<template<class> class E,class D> class C : E<D> {\n	public:\n		int f();\n};\nclass E : C<D,int> {\n	public:\n		int f() { return C< ::D,int>::f(); }\n};\nint main() {\n	E c;\n	c.f();\n}" always "template<template<class> class E,class D> class C : E<D> {\n	public:\n		int f();\n};\nclass E : C<D,int> {\n	public:\n		int f() { return C< ::D,int>::f(); }\n};\nint main() {\n	E c;\n	c.f();\n}"
Line 7305
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class Fred {\n    void foo(const std::string & a = \"\");\n};\nFred::foo(const std::string & b) { }" always "class Fred {\n    void foo(const std::string & a = \"\");\n};\nFred::foo(const std::string & b) { }"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7305 always 7305
  false always 0
Line 7310
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7310 always 7310
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 7312
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7312 always 7312
Line 7314
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7314 always 7314
Line 7315
  = {lifetime[Address]=(*scope),!0}
  & {lifetime[Address]=(*scope),!0}
Line 7317
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7317 always 7317
  class_scope {lifetime[Address]=(*scope),!0}
  == always {!<=-1,!>=2}
  1 always 1
Line 7318
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7318 always 7318
  class_scope {lifetime[Address]=(*scope),!0}
Line 7319
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7319 always 7319
  == always {!<=-1,!>=2}
  & {lifetime[Address]=(*scope),!0}
Line 7323
  , always "test.cpp"
  9 always 9
  = always "test.cpp"
  "test.cpp" always "test.cpp"
  , always 0
  = always 0
  nullptr always 0
Line 7324
  settings possible {lifetime[Address]=(s)@26,lifetime[Address]=(s)@27,lifetime[Address]=(s)@28,lifetime[Address]=(s)@29,lifetime[Address]=(s)@30,lifetime[Address]=(s)@31,lifetime[Address]=(s)@32,lifetime[Address]=(s)@33,lifetime[Address]=(s)@34,lifetime[Address]=(s)@35}
  ? possible 1
  settings {!0,lifetime[Address]=(s)@26,lifetime[Address]=(s)@27,lifetime[Address]=(s)@28,lifetime[Address]=(s)@29,lifetime[Address]=(s)@30,lifetime[Address]=(s)@31,lifetime[Address]=(s)@32,lifetime[Address]=(s)@33,lifetime[Address]=(s)@34}
  : always 1
  & {lifetime[Address]=(settings2),!0}
  this always !0
Line 7325
  code inconclusive {"1;"@26,"(-1);"@27,"32767;"@28,"(-32767);"@29,"32768;"@30,"(-32768);"@31,"32768l;"@32,"32768U;"@33,"2147483648;"@34,"2147483648u;"@35}
Line 7326
  ( always {!<=-1,!>=2}
  file inconclusive {"cppcheck-2.8/test/testsymboldatabase.cpp"@26,"cppcheck-2.8/test/testsymboldatabase.cpp"@27,"cppcheck-2.8/test/testsymboldatabase.cpp"@28,"cppcheck-2.8/test/testsymboldatabase.cpp"@29,"cppcheck-2.8/test/testsymboldatabase.cpp"@30,"cppcheck-2.8/test/testsymboldatabase.cpp"@31,"cppcheck-2.8/test/testsymboldatabase.cpp"@32,"cppcheck-2.8/test/testsymboldatabase.cpp"@33,"cppcheck-2.8/test/testsymboldatabase.cpp"@34,"cppcheck-2.8/test/testsymboldatabase.cpp"@35}
  line inconclusive {7349@26,7350@27,7351@28,7352@29,7353@30,7354@31,7355@32,7356@33,7357@34,7358@35}
  filename inconclusive {"test.c"@26,"test.c"@27,"test.c"@28,"test.c"@29,"test.c"@30,"test.c"@31,"test.c"@32,"test.c"@33,"test.c"@34,"test.c"@35}
Line 7329
  pattern inconclusive {"1"@26,"-1"@27,"32767"@28,"-32767"@29,"32768"@30,"-32768"@31,"32768l"@32,"32768U"@33,"2147483648"@34,"2147483648u"@35}
  ( {!<=-1,1@26,2@27,5@28,6@29}
  pattern inconclusive {"1"@26,"-1"@27,"32767"@28,"-32767"@29,"32768"@30,"-32768"@31,"32768l"@32,"32768U"@33,"2147483648"@34,"2147483648u"@35}
Line 7336
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7336 always 7336
  "" always ""
Line 7339
  = always 16
  16 always 16
Line 7340
  = always 32
  32 always 32
Line 7341
  = always 64
  64 always 64
Line 7344
  = always 32
  32 always 32
Line 7345
  = always 64
  64 always 64
Line 7346
  = always 64
  64 always 64
Line 7349
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7349 always 7349
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7349 always 7349
  "1;" always "1;"
  "1" always "1"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7350
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7350 always 7350
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7350 always 7350
  "(-1);" always "(-1);"
  "-1" always "-1"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7351
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7351 always 7351
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7351 always 7351
  "32767;" always "32767;"
  "32767" always "32767"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7352
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7352 always 7352
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7352 always 7352
  "(-32767);" always "(-32767);"
  "-32767" always "-32767"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7353
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7353 always 7353
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7353 always 7353
  "32768;" always "32768;"
  "32768" always "32768"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7354
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7354 always 7354
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7354 always 7354
  "(-32768);" always "(-32768);"
  "-32768" always "-32768"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7355
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7355 always 7355
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7355 always 7355
  "32768l;" always "32768l;"
  "32768l" always "32768l"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7356
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7356 always 7356
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7356 always 7356
  "32768U;" always "32768U;"
  "32768U" always "32768U"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7357
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7357 always 7357
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7357 always 7357
  "2147483648;" always "2147483648;"
  "2147483648" always "2147483648"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7358
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7358 always 7358
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7358 always 7358
  "2147483648u;" always "2147483648u;"
  "2147483648u" always "2147483648u"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7359
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7359 always 7359
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7359 always 7359
  "2147483648L;" always "2147483648L;"
  "2147483648L" always "2147483648L"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7360
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7360 always 7360
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7360 always 7360
  "18446744069414584320;" always "18446744069414584320;"
  "18446744069414584320" always "18446744069414584320"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7361
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7361 always 7361
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7361 always 7361
  "0xFF;" always "0xFF;"
  "0xFF" always "0xFF"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7362
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7362 always 7362
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7362 always 7362
  "0xFFU;" always "0xFFU;"
  "0xFFU" always "0xFFU"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7363
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7363 always 7363
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7363 always 7363
  "0xFFFF;" always "0xFFFF;"
  "0xFFFF" always "0xFFFF"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7364
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7364 always 7364
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7364 always 7364
  "0xFFFFFF;" always "0xFFFFFF;"
  "0xFFFFFF" always "0xFFFFFF"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7365
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7365 always 7365
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7365 always 7365
  "0xFFFFFFU;" always "0xFFFFFFU;"
  "0xFFFFFFU" always "0xFFFFFFU"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7366
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7366 always 7366
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7366 always 7366
  "0xFFFFFFFF;" always "0xFFFFFFFF;"
  "0xFFFFFFFF" always "0xFFFFFFFF"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7367
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7367 always 7367
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7367 always 7367
  "0xFFFFFFFFFFFF;" always "0xFFFFFFFFFFFF;"
  "0xFFFFFFFFFFFF" always "0xFFFFFFFFFFFF"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7368
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7368 always 7368
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7368 always 7368
  "0xFFFFFFFFFFFFU;" always "0xFFFFFFFFFFFFU;"
  "0xFFFFFFFFFFFFU" always "0xFFFFFFFFFFFFU"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7369
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7369 always 7369
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7369 always 7369
  "0xFFFFFFFF00000000;" always "0xFFFFFFFF00000000;"
  "0xFFFFFFFF00000000" always "0xFFFFFFFF00000000"
  "test.c" always "test.c"
  & {lifetime[Address]=(s),!0}
Line 7371
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7371 always 7371
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7371 always 7371
  "2147483648;" always "2147483648;"
  "2147483648" always "2147483648"
  "test.c" always "test.c"
  & {lifetime[Address]=(sSameSize),!0}
Line 7372
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7372 always 7372
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7372 always 7372
  "0xc000000000000000;" always "0xc000000000000000;"
  "0xc000000000000000" always "0xc000000000000000"
  "test.c" always "test.c"
  & {lifetime[Address]=(sSameSize),!0}
Line 7374
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7374 always 7374
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7374 always 7374
  "1U;" always "1U;"
  "1U" always "1U"
Line 7375
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7375 always 7375
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7375 always 7375
  "1L;" always "1L;"
  "1L" always "1L"
Line 7376
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7376 always 7376
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7376 always 7376
  "1UL;" always "1UL;"
  "1UL" always "1UL"
Line 7377
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7377 always 7377
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7377 always 7377
  "1LL;" always "1LL;"
  "1LL" always "1LL"
Line 7378
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7378 always 7378
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7378 always 7378
  "1ULL;" always "1ULL;"
  "1ULL" always "1ULL"
Line 7379
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7379 always 7379
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7379 always 7379
  "1LLU;" always "1LLU;"
  "1LLU" always "1LLU"
Line 7380
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7380 always 7380
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7380 always 7380
  "1i64;" always "1i64;"
  "1i64" always "1i64"
Line 7381
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7381 always 7381
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7381 always 7381
  "1ui64;" always "1ui64;"
  "1ui64" always "1ui64"
Line 7382
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7382 always 7382
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7382 always 7382
  "1u;" always "1u;"
  "1u" always "1u"
Line 7383
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7383 always 7383
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7383 always 7383
  "1l;" always "1l;"
  "1l" always "1l"
Line 7384
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7384 always 7384
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7384 always 7384
  "1ul;" always "1ul;"
  "1ul" always "1ul"
Line 7385
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7385 always 7385
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7385 always 7385
  "1ll;" always "1ll;"
  "1ll" always "1ll"
Line 7386
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7386 always 7386
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7386 always 7386
  "1ull;" always "1ull;"
  "1ull" always "1ull"
Line 7387
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7387 always 7387
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7387 always 7387
  "1llu;" always "1llu;"
  "1llu" always "1llu"
Line 7388
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7388 always 7388
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7388 always 7388
  "01;" always "01;"
  "01" always "01"
Line 7389
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7389 always 7389
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7389 always 7389
  "01U;" always "01U;"
  "01U" always "01U"
Line 7390
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7390 always 7390
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7390 always 7390
  "01L;" always "01L;"
  "01L" always "01L"
Line 7391
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7391 always 7391
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7391 always 7391
  "01UL;" always "01UL;"
  "01UL" always "01UL"
Line 7392
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7392 always 7392
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7392 always 7392
  "01LL;" always "01LL;"
  "01LL" always "01LL"
Line 7393
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7393 always 7393
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7393 always 7393
  "01ULL;" always "01ULL;"
  "01ULL" always "01ULL"
Line 7394
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7394 always 7394
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7394 always 7394
  "0B1;" always "0B1;"
  "0B1" always "0B1"
Line 7395
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7395 always 7395
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7395 always 7395
  "0b1;" always "0b1;"
  "0b1" always "0b1"
Line 7396
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7396 always 7396
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7396 always 7396
  "0b1U;" always "0b1U;"
  "0b1U" always "0b1U"
Line 7397
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7397 always 7397
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7397 always 7397
  "0b1L;" always "0b1L;"
  "0b1L" always "0b1L"
Line 7398
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7398 always 7398
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7398 always 7398
  "0b1UL;" always "0b1UL;"
  "0b1UL" always "0b1UL"
Line 7399
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7399 always 7399
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7399 always 7399
  "0b1LL;" always "0b1LL;"
  "0b1LL" always "0b1LL"
Line 7400
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7400 always 7400
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7400 always 7400
  "0b1ULL;" always "0b1ULL;"
  "0b1ULL" always "0b1ULL"
Line 7401
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7401 always 7401
  "float" always "float"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7401 always 7401
  "1.0F;" always "1.0F;"
  "1.0F" always "1.0F"
Line 7402
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7402 always 7402
  "float" always "float"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7402 always 7402
  "1.0f;" always "1.0f;"
  "1.0f" always "1.0f"
Line 7403
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7403 always 7403
  "double" always "double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7403 always 7403
  "1.0;" always "1.0;"
  "1.0" always "1.0"
Line 7404
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7404 always 7404
  "double" always "double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7404 always 7404
  "1E3;" always "1E3;"
  "1E3" always "1E3"
Line 7405
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7405 always 7405
  "double" always "double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7405 always 7405
  "0x1.2p3;" always "0x1.2p3;"
  "0x1.2p3" always "0x1.2p3"
Line 7406
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7406 always 7406
  "long double" always "long double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7406 always 7406
  "1.23L;" always "1.23L;"
  "1.23L" always "1.23L"
Line 7407
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7407 always 7407
  "long double" always "long double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7407 always 7407
  "1.23l;" always "1.23l;"
  "1.23l" always "1.23l"
Line 7410
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7410 always 7410
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7410 always 7410
  "1 + 2;" always "1 + 2;"
  "+" always "+"
Line 7411
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7411 always 7411
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7411 always 7411
  "1L + 2;" always "1L + 2;"
  "+" always "+"
Line 7412
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7412 always 7412
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7412 always 7412
  "1LL + 2;" always "1LL + 2;"
  "+" always "+"
Line 7413
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7413 always 7413
  "float" always "float"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7413 always 7413
  "1.2f + 3;" always "1.2f + 3;"
  "+" always "+"
Line 7414
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7414 always 7414
  "float" always "float"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7414 always 7414
  "1 + 2.3f;" always "1 + 2.3f;"
  "+" always "+"
Line 7417
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7417 always 7417
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7417 always 7417
  "(char)1 +  (char)2;" always "(char)1 +  (char)2;"
  "+" always "+"
Line 7418
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7418 always 7418
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7418 always 7418
  "(short)1 + (short)2;" always "(short)1 + (short)2;"
  "+" always "+"
Line 7419
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7419 always 7419
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7419 always 7419
  "(signed int)1 + (signed char)2;" always "(signed int)1 + (signed char)2;"
  "+" always "+"
Line 7420
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7420 always 7420
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7420 always 7420
  "(signed int)1 + (unsigned char)2;" always "(signed int)1 + (unsigned char)2;"
  "+" always "+"
Line 7421
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7421 always 7421
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7421 always 7421
  "(unsigned int)1 + (signed char)2;" always "(unsigned int)1 + (signed char)2;"
  "+" always "+"
Line 7422
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7422 always 7422
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7422 always 7422
  "(unsigned int)1 + (unsigned char)2;" always "(unsigned int)1 + (unsigned char)2;"
  "+" always "+"
Line 7423
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7423 always 7423
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7423 always 7423
  "(unsigned int)1 + (signed int)2;" always "(unsigned int)1 + (signed int)2;"
  "+" always "+"
Line 7424
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7424 always 7424
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7424 always 7424
  "(unsigned int)1 + (unsigned int)2;" always "(unsigned int)1 + (unsigned int)2;"
  "+" always "+"
Line 7425
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7425 always 7425
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7425 always 7425
  "(signed long)1 + (unsigned int)2;" always "(signed long)1 + (unsigned int)2;"
  "+" always "+"
Line 7426
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7426 always 7426
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7426 always 7426
  "(unsigned long)1 + (signed int)2;" always "(unsigned long)1 + (signed int)2;"
  "+" always "+"
Line 7429
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7429 always 7429
  "char" always "char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7429 always 7429
  "'a';" always "'a';"
  "'a'" always "'a'"
  "test.cpp" always "test.cpp"
Line 7430
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7430 always 7430
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7430 always 7430
  "'a';" always "'a';"
  "'a'" always "'a'"
  "test.c" always "test.c"
Line 7431
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7431 always 7431
  "wchar_t" always "wchar_t"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7431 always 7431
  "L'a';" always "L'a';"
  "L'a'" always "L'a'"
  "test.cpp" always "test.cpp"
Line 7432
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7432 always 7432
  "wchar_t" always "wchar_t"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7432 always 7432
  "L'a';" always "L'a';"
  "L'a'" always "L'a'"
  "test.c" always "test.c"
Line 7433
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7433 always 7433
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7433 always 7433
  "'aaa';" always "'aaa';"
  "'aaa'" always "'aaa'"
  "test.cpp" always "test.cpp"
Line 7434
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7434 always 7434
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7434 always 7434
  "'aaa';" always "'aaa';"
  "'aaa'" always "'aaa'"
  "test.c" always "test.c"
Line 7437
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7437 always 7437
  "const char *" always "const char *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7437 always 7437
  "\"hello\" + 1;" always "\"hello\" + 1;"
  "+" always "+"
Line 7438
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7438 always 7438
  "const char" always "const char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7438 always 7438
  "\"hello\"[1];" always "\"hello\"[1];"
  "[" always "["
Line 7439
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7439 always 7439
  "const char" always "const char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7439 always 7439
  ";*\"hello\";" always ";*\"hello\";"
  "*" always "*"
Line 7440
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7440 always 7440
  "const wchar_t *" always "const wchar_t *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7440 always 7440
  "L\"hello\" + 1;" always "L\"hello\" + 1;"
  "+" always "+"
Line 7443
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7443 always 7443
  "void *" always "void *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7443 always 7443
  "void *p; a = p + 1;" always "void *p; a = p + 1;"
  "+" always "+"
Line 7444
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7444 always 7444
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7444 always 7444
  "int x; a = x + 1;" always "int x; a = x + 1;"
  "+" always "+"
Line 7445
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7445 always 7445
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7445 always 7445
  "int x; a = x | 1;" always "int x; a = x | 1;"
  "|" always "|"
Line 7446
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7446 always 7446
  "float" always "float"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7446 always 7446
  "float x; a = x + 1;" always "float x; a = x + 1;"
  "+" always "+"
Line 7447
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7447 always 7447
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7447 always 7447
  "signed x; a = x + 1;" always "signed x; a = x + 1;"
  "x +" always "x +"
Line 7448
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7448 always 7448
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7448 always 7448
  "unsigned x; a = x + 1;" always "unsigned x; a = x + 1;"
  "x +" always "x +"
Line 7449
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7449 always 7449
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7449 always 7449
  "unsigned int u1, u2; a = u1 + 1;" always "unsigned int u1, u2; a = u1 + 1;"
  "u1 +" always "u1 +"
Line 7450
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7450 always 7450
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7450 always 7450
  "unsigned int u1, u2; a = u1 + 1U;" always "unsigned int u1, u2; a = u1 + 1U;"
  "u1 +" always "u1 +"
Line 7451
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7451 always 7451
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7451 always 7451
  "unsigned int u1, u2; a = u1 + u2;" always "unsigned int u1, u2; a = u1 + u2;"
  "u1 +" always "u1 +"
Line 7452
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7452 always 7452
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7452 always 7452
  "unsigned int u1, u2; a = u1 * 2;" always "unsigned int u1, u2; a = u1 * 2;"
  "u1 *" always "u1 *"
Line 7453
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7453 always 7453
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7453 always 7453
  "unsigned int u1, u2; a = u1 * u2;" always "unsigned int u1, u2; a = u1 * u2;"
  "u1 *" always "u1 *"
Line 7454
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7454 always 7454
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7454 always 7454
  "int x; a = &x;" always "int x; a = &x;"
  "&" always "&"
Line 7455
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7455 always 7455
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7455 always 7455
  "int x; a = &x;" always "int x; a = &x;"
  "&" always "&"
Line 7456
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7456 always 7456
  "long double" always "long double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7456 always 7456
  "long double x; dostuff(x,1);" always "long double x; dostuff(x,1);"
  "x ," always "x ,"
Line 7457
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7457 always 7457
  "long double *" always "long double *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7457 always 7457
  "long double x; dostuff(&x,1);" always "long double x; dostuff(&x,1);"
  "& x ," always "& x ,"
Line 7458
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7458 always 7458
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7458 always 7458
  "struct X {int i;}; void f(struct X x) { x.i }" always "struct X {int i;}; void f(struct X x) { x.i }"
  "." always "."
Line 7459
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7459 always 7459
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7459 always 7459
  "int *p; a = p++;" always "int *p; a = p++;"
  "++" always "++"
Line 7460
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7460 always 7460
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7460 always 7460
  "int x; a = x++;" always "int x; a = x++;"
  "++" always "++"
Line 7461
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7461 always 7461
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7461 always 7461
  "enum AB {A,B}; AB *ab; x=ab+2;" always "enum AB {A,B}; AB *ab; x=ab+2;"
  "+" always "+"
Line 7462
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7462 always 7462
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7462 always 7462
  "enum AB {A,B}; enum AB *ab; x=ab+2;" always "enum AB {A,B}; enum AB *ab; x=ab+2;"
  "+" always "+"
Line 7463
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7463 always 7463
  "AB *" always "AB *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7463 always 7463
  "struct AB {int a; int b;}; AB ab; x=&ab;" always "struct AB {int a; int b;}; AB ab; x=&ab;"
  "&" always "&"
Line 7464
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7464 always 7464
  "AB *" always "AB *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7464 always 7464
  "struct AB {int a; int b;}; struct AB ab; x=&ab;" always "struct AB {int a; int b;}; struct AB ab; x=&ab;"
  "&" always "&"
Line 7465
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7465 always 7465
  "A::BC *" always "A::BC *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7465 always 7465
  "namespace A { struct BC { int b; int c; }; }; struct A::BC abc; x=&abc;" always "namespace A { struct BC { int b; int c; }; }; struct A::BC abc; x=&abc;"
  "&" always "&"
Line 7466
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7466 always 7466
  "A::BC *" always "A::BC *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7466 always 7466
  "namespace A { struct BC { int b; int c; }; }; struct A::BC *abc; x=abc+1;" always "namespace A { struct BC { int b; int c; }; }; struct A::BC *abc; x=abc+1;"
  "+" always "+"
Line 7467
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7467 always 7467
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7467 always 7467
  "auto a(int& x, int& y) { return x + y; }" always "auto a(int& x, int& y) { return x + y; }"
  "+" always "+"
Line 7468
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7468 always 7468
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7468 always 7468
  "auto a(int& x) { return x << 1; }" always "auto a(int& x) { return x << 1; }"
  "<<" always "<<"
Line 7469
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7469 always 7469
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7469 always 7469
  "void a(int& x, int& y) { x = y; }" always "void a(int& x, int& y) { x = y; }"
  "=" always "="
Line 7470
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7470 always 7470
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7470 always 7470
  "auto a(int* y) { return *y; }" always "auto a(int* y) { return *y; }"
  "*" always "*"
Line 7473
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7473 always 7473
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7473 always 7473
  "int x; a = -x;" always "int x; a = -x;"
  "-" always "-"
Line 7474
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7474 always 7474
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7474 always 7474
  "int x; a = ~x;" always "int x; a = ~x;"
  "~" always "~"
Line 7475
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7475 always 7475
  "double" always "double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7475 always 7475
  "double x; a = -x;" always "double x; a = -x;"
  "-" always "-"
Line 7478
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7478 always 7478
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7478 always 7478
  "int x; a = (b ? x : x);" always "int x; a = (b ? x : x);"
  "?" always "?"
Line 7479
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7479 always 7479
  "" always ""
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7479 always 7479
  "int x; a = (b ? x : y);" always "int x; a = (b ? x : y);"
  "?" always "?"
Line 7480
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7480 always 7480
  "double" always "double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7480 always 7480
  "int x; double y; a = (b ? x : y);" always "int x; double y; a = (b ? x : y);"
  "?" always "?"
Line 7481
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7481 always 7481
  "const char *" always "const char *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7481 always 7481
  "int x; double y; a = (b ? \"a\" : \"b\");" always "int x; double y; a = (b ? \"a\" : \"b\");"
  "?" always "?"
Line 7482
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7482 always 7482
  "" always ""
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7482 always 7482
  "int x; double y; a = (b ? \"a\" : std::string(\"b\"));" always "int x; double y; a = (b ? \"a\" : std::string(\"b\"));"
  "?" always "?"
Line 7483
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7483 always 7483
  "bool" always "bool"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7483 always 7483
  "int x; a = (b ? false : true);" always "int x; a = (b ? false : true);"
  "?" always "?"
Line 7486
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7486 always 7486
  "bool" always "bool"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7486 always 7486
  "a > b;" always "a > b;"
  ">" always ">"
Line 7487
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7487 always 7487
  "bool" always "bool"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7487 always 7487
  ";!b;" always ";!b;"
  "!" always "!"
Line 7488
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7488 always 7488
  "bool" always "bool"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7488 always 7488
  "c = a && b;" always "c = a && b;"
  "&&" always "&&"
Line 7489
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7489 always 7489
  "bool" always "bool"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7489 always 7489
  "a = false;" always "a = false;"
  "false" always "false"
Line 7490
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7490 always 7490
  "bool" always "bool"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7490 always 7490
  "a = true;" always "a = true;"
  "true" always "true"
Line 7493
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7493 always 7493
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7493 always 7493
  "int x; a = x << 1U;" always "int x; a = x << 1U;"
  "<<" always "<<"
Line 7494
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7494 always 7494
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7494 always 7494
  "int x; a = x >> 1U;" always "int x; a = x >> 1U;"
  ">>" always ">>"
Line 7495
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7495 always 7495
  "" always ""
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7495 always 7495
  "a = 12 >> x;" always "a = 12 >> x;"
  ">>" always ">>"
  "test.cpp" always "test.cpp"
Line 7496
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7496 always 7496
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7496 always 7496
  "a = 12 >> x;" always "a = 12 >> x;"
  ">>" always ">>"
  "test.c" always "test.c"
Line 7497
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7497 always 7497
  "" always ""
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7497 always 7497
  "a = 12 << x;" always "a = 12 << x;"
  "<<" always "<<"
  "test.cpp" always "test.cpp"
Line 7498
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7498 always 7498
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7498 always 7498
  "a = 12 << x;" always "a = 12 << x;"
  "<<" always "<<"
  "test.c" always "test.c"
Line 7499
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7499 always 7499
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7499 always 7499
  "a = true << 1U;" always "a = true << 1U;"
  "<<" always "<<"
Line 7502
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7502 always 7502
  "unsigned short" always "unsigned short"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7502 always 7502
  "unsigned short x; x = 3;" always "unsigned short x; x = 3;"
  "=" always "="
Line 7505
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7505 always 7505
  "void * *" always "void * *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7505 always 7505
  "void * x[10]; a = x + 0;" always "void * x[10]; a = x + 0;"
  "+" always "+"
Line 7506
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7506 always 7506
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7506 always 7506
  "int x[10]; a = x + 1;" always "int x[10]; a = x + 1;"
  "+" always "+"
Line 7507
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7507 always 7507
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7507 always 7507
  "int x[10]; a = x[0] + 1;" always "int x[10]; a = x[0] + 1;"
  "+" always "+"
Line 7508
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7508 always 7508
  "" always ""
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7508 always 7508
  "a = x[\"hello\"];" always "a = x[\"hello\"];"
  "[" always "["
  "test.cpp" always "test.cpp"
Line 7509
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7509 always 7509
  "const char" always "const char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7509 always 7509
  "a = x[\"hello\"];" always "a = x[\"hello\"];"
  "[" always "["
  "test.c" always "test.c"
Line 7512
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7512 always 7512
  "void *" always "void *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7512 always 7512
  "a = (void *)0;" always "a = (void *)0;"
  "(" always "("
Line 7513
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7513 always 7513
  "char" always "char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7513 always 7513
  "a = (char)32;" always "a = (char)32;"
  "(" always "("
Line 7514
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7514 always 7514
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7514 always 7514
  "a = (long)32;" always "a = (long)32;"
  "(" always "("
Line 7515
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7515 always 7515
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7515 always 7515
  "a = (long int)32;" always "a = (long int)32;"
  "(" always "("
Line 7516
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7516 always 7516
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7516 always 7516
  "a = (long long)32;" always "a = (long long)32;"
  "(" always "("
Line 7517
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7517 always 7517
  "long double" always "long double"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7517 always 7517
  "a = (long double)32;" always "a = (long double)32;"
  "(" always "("
Line 7518
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7518 always 7518
  "char" always "char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7518 always 7518
  "a = static_cast<char>(32);" always "a = static_cast<char>(32);"
  "(" always "("
Line 7519
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7519 always 7519
  "" always ""
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7519 always 7519
  "a = (unsigned x)0;" always "a = (unsigned x)0;"
  "(" always "("
Line 7520
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7520 always 7520
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7520 always 7520
  "a = unsigned(123);" always "a = unsigned(123);"
  "(" always "("
Line 7523
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7523 always 7523
  "char" always "char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7523 always 7523
  "sizeof(char);" always "sizeof(char);"
  "char" always "char"
Line 7526
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7526 always 7526
  "const char *" always "const char *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7526 always 7526
  "a = \"123\";" always "a = \"123\";"
  "\"123\"" always "\"123\""
Line 7527
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7527 always 7527
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7527 always 7527
  "const int *a; x = a + 1;" always "const int *a; x = a + 1;"
  "a +" always "a +"
Line 7528
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7528 always 7528
  "signed int * const" always "signed int * const"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7528 always 7528
  "int * const a; x = a + 1;" always "int * const a; x = a + 1;"
  "+" always "+"
Line 7529
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7529 always 7529
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7529 always 7529
  "const int a[20]; x = a + 1;" always "const int a[20]; x = a + 1;"
  "+" always "+"
Line 7530
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7530 always 7530
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7530 always 7530
  "const int x; a = &x;" always "const int x; a = &x;"
  "&" always "&"
Line 7531
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7531 always 7531
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7531 always 7531
  "int * const a; x = *a;" always "int * const a; x = *a;"
  "*" always "*"
Line 7532
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7532 always 7532
  "const signed int" always "const signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7532 always 7532
  "const int * const a; x = *a;" always "const int * const a; x = *a;"
  "*" always "*"
Line 7535
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7535 always 7535
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7535 always 7535
  "int a(int); a(5);" always "int a(int); a(5);"
  "( 5" always "( 5"
Line 7536
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7536 always 7536
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7536 always 7536
  "auto a(int) -> int; a(5);" always "auto a(int) -> int; a(5);"
  "( 5" always "( 5"
Line 7537
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7537 always 7537
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7537 always 7537
  "sizeof(x);" always "sizeof(x);"
  "(" always "("
Line 7538
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7538 always 7538
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7538 always 7538
  "int (*a)(int); a(5);" always "int (*a)(int); a(5);"
  "( 5" always "( 5"
Line 7539
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7539 always 7539
  "s" always "s"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7539 always 7539
  "struct s { s foo(); s(int, int); }; s s::foo() { return s(1, 2); } " always "struct s { s foo(); s(int, int); }; s s::foo() { return s(1, 2); } "
  "( 1 , 2 )" always "( 1 , 2 )"
Line 7541
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7541 always 7541
  "signed int &&" always "signed int &&"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7541 always 7541
  "std::move(5);" always "std::move(5);"
  "( 5 )" always "( 5 )"
Line 7544
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7544 always 7544
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7544 always 7544
  "struct AB { int a; int b; } ab; x = ab.a;" always "struct AB { int a; int b; } ab; x = ab.a;"
  "." always "."
Line 7545
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7545 always 7545
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7545 always 7545
  "struct AB { int a; int b; } *ab; x = ab[1].a;" always "struct AB { int a; int b; } *ab; x = ab[1].a;"
  "." always "."
Line 7548
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7548 always 7548
  "Fred &" always "Fred &"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7548 always 7548
  "class Fred { Fred& operator<(int); }; void f() { Fred fred; x=fred<123; }" always "class Fred { Fred& operator<(int); }; void f() { Fred fred; x=fred<123; }"
  "<" always "<"
Line 7551
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7551 always 7551
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7551 always 7551
  "struct AB { static int a; }; x = AB::a;" always "struct AB { static int a; }; x = AB::a;"
  "::" always "::"
Line 7554
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7554 always 7554
  "*" always "*"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7554 always 7554
  "Bar* b;" always "Bar* b;"
  "b" always "b"
Line 7557
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7557 always 7557
  "char" always "char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7557 always 7557
  "enum E : char { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : char { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7558
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7558 always 7558
  "signed char" always "signed char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7558 always 7558
  "enum E : signed char { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : signed char { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7559
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7559 always 7559
  "unsigned char" always "unsigned char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7559 always 7559
  "enum E : unsigned char { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : unsigned char { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7560
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7560 always 7560
  "signed short" always "signed short"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7560 always 7560
  "enum E : short { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : short { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7561
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7561 always 7561
  "unsigned short" always "unsigned short"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7561 always 7561
  "enum E : unsigned short { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : unsigned short { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7562
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7562 always 7562
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7562 always 7562
  "enum E : int { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : int { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7563
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7563 always 7563
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7563 always 7563
  "enum E : unsigned int { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : unsigned int { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7564
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7564 always 7564
  "signed long" always "signed long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7564 always 7564
  "enum E : long { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : long { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7565
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7565 always 7565
  "unsigned long" always "unsigned long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7565 always 7565
  "enum E : unsigned long { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : unsigned long { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7566
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7566 always 7566
  "signed long long" always "signed long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7566 always 7566
  "enum E : long long { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : long long { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7567
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7567 always 7567
  "unsigned long long" always "unsigned long long"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7567 always 7567
  "enum E : unsigned long long { }; void foo() { E e[3]; bar(e[0]); }" always "enum E : unsigned long long { }; void foo() { E e[3]; bar(e[0]); }"
  "[ 0" always "[ 0"
Line 7583
  94 always 94
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"bool\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"bool\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"bool\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"bool\"/>\n</function>\n</def>"
  sizeof always 94
  ( always 94
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"bool\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7583 always 7583
  "bool" always "bool"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7583 always 7583
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7584
  100 always 100
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedchar\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedchar\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedchar\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedchar\"/>\n</function>\n</def>"
  sizeof always 100
  ( always 100
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedchar\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7584 always 7584
  "signedchar" always "signedchar"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7584 always 7584
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7585
  102 always 102
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedchar\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedchar\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedchar\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedchar\"/>\n</function>\n</def>"
  sizeof always 102
  ( always 102
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedchar\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7585 always 7585
  "unsignedchar" always "unsignedchar"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7585 always 7585
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7586
  101 always 101
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedshort\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedshort\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedshort\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedshort\"/>\n</function>\n</def>"
  sizeof always 101
  ( always 101
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedshort\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7586 always 7586
  "signedshort" always "signedshort"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7586 always 7586
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7587
  103 always 103
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedshort\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedshort\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedshort\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedshort\"/>\n</function>\n</def>"
  sizeof always 103
  ( always 103
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedshort\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7587 always 7587
  "unsignedshort" always "unsignedshort"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7587 always 7587
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7588
  99 always 99
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedint\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedint\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedint\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedint\"/>\n</function>\n</def>"
  sizeof always 99
  ( always 99
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedint\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7588 always 7588
  "signedint" always "signedint"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7588 always 7588
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7589
  101 always 101
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedint\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedint\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedint\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedint\"/>\n</function>\n</def>"
  sizeof always 101
  ( always 101
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedint\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7589 always 7589
  "unsignedint" always "unsignedint"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7589 always 7589
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7590
  100 always 100
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlong\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlong\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlong\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlong\"/>\n</function>\n</def>"
  sizeof always 100
  ( always 100
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlong\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7590 always 7590
  "signedlong" always "signedlong"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7590 always 7590
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7591
  102 always 102
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlong\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlong\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlong\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlong\"/>\n</function>\n</def>"
  sizeof always 102
  ( always 102
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlong\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7591 always 7591
  "unsignedlong" always "unsignedlong"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7591 always 7591
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7592
  104 always 104
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlonglong\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlonglong\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlonglong\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlonglong\"/>\n</function>\n</def>"
  sizeof always 104
  ( always 104
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"signedlonglong\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7592 always 7592
  "signedlonglong" always "signedlonglong"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7592 always 7592
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7593
  106 always 106
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlonglong\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlonglong\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlonglong\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlonglong\"/>\n</function>\n</def>"
  sizeof always 106
  ( always 106
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"unsignedlonglong\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7593 always 7593
  "unsignedlonglong" always "unsignedlonglong"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7593 always 7593
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7594
  95 always 95
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void*\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void*\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void*\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void*\"/>\n</function>\n</def>"
  sizeof always 95
  ( always 95
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void*\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7594 always 7594
  "void*" always "void*"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7594 always 7594
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7595
  96 always 96
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void**\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void**\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void**\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void**\"/>\n</function>\n</def>"
  sizeof always 96
  ( always 96
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"void**\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7595 always 7595
  "void**" always "void**"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7595 always 7595
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7596
  100 always 100
  = always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"constvoid*\"/>\n</function>\n</def>"
  "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"constvoid*\"/>\n</function>\n</def>" always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"constvoid*\"/>\n</function>\n</def>"
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"constvoid*\"/>\n</function>\n</def>"
  sizeof always 100
  ( always 100
  xmldata always "<?xml version=\"1.0\"?>\n<def>\n<function name=\"g\">\n<returnValue type=\"constvoid*\"/>\n</function>\n</def>"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7596 always 7596
  "constvoid*" always "constvoid*"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7596 always 7596
  "void f() { auto x = g(); }" always "void f() { auto x = g(); }"
  "x" always "x"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sF),!0}
  false always 0
Line 7604
  1 always 1
  'u' always 117
Line 7605
  2 always 2
  'u' always 117
Line 7606
  4 always 4
  'u' always 117
Line 7607
  "char8_t" always "char8_t"
Line 7608
  "char16_t" always "char16_t"
Line 7609
  "char32_t" always "char32_t"
Line 7610
  = always 2
  2 always 2
Line 7611
  = always 4
  4 always 4
Line 7613
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7613 always 7613
  "unsigned char" always "unsigned char"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7613 always 7613
  "u8'a';" always "u8'a';"
  "u8'a'" always "u8'a'"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settings),!0}
Line 7614
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7614 always 7614
  "unsigned short" always "unsigned short"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7614 always 7614
  "u'a';" always "u'a';"
  "u'a'" always "u'a'"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settings),!0}
Line 7615
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7615 always 7615
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7615 always 7615
  "U'a';" always "U'a';"
  "U'a'" always "U'a'"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settings),!0}
Line 7616
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7616 always 7616
  "const unsigned char *" always "const unsigned char *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7616 always 7616
  "u8\"a\";" always "u8\"a\";"
  "u8\"a\"" always "u8\"a\""
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settings),!0}
Line 7617
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7617 always 7617
  "const unsigned short *" always "const unsigned short *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7617 always 7617
  "u\"a\";" always "u\"a\";"
  "u\"a\"" always "u\"a\""
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settings),!0}
Line 7618
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7618 always 7618
  "const unsigned int *" always "const unsigned int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7618 always 7618
  "U\"a\";" always "U\"a\";"
  "U\"a\"" always "U\"a\""
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settings),!0}
Line 7624
  4 always 4
  'u' always 117
Line 7625
  0 always 0
  'u' always 117
Line 7626
  "u32" always "u32"
Line 7627
  "xyz::x" always "xyz::x"
  = always symbolic=(settingsWin64.library.mPodTypes["u32"])
  u32 always symbolic=(settingsWin64.library.mPodTypes["u32"])
Line 7628
  "podtype2" always "podtype2"
Line 7630
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7630 always 7630
  true always 1
  "u32" always "u32"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7631
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7631 always 7631
  true always 1
  "xyz::x" always "xyz::x"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7632
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7632 always 7632
Line 7634
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7634 always 7634
  true always 1
  "podtype2" always "podtype2"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7635
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7635 always 7635
Line 7636
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7636 always 7636
  "unsigned int *" always "unsigned int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7636 always 7636
  ";void *data = new u32[10];" always ";void *data = new u32[10];"
  "new" always "new"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7637
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7637 always 7637
  "unsigned int *" always "unsigned int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7637 always 7637
  ";void *data = new xyz::x[10];" always ";void *data = new xyz::x[10];"
  "new" always "new"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7638
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7638 always 7638
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7638 always 7638
  "; x = (xyz::x)12;" always "; x = (xyz::x)12;"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7639
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7639 always 7639
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7639 always 7639
  ";u32(12);" always ";u32(12);"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7640
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7640 always 7640
  "unsigned int" always "unsigned int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7640 always 7640
  "x = u32(y[i]);" always "x = u32(y[i]);"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7647
  = always "int"
  "int" always "int"
Line 7648
  "s32" always "s32"
Line 7650
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7650 always 7650
  true always 1
  "s32" always "s32"
  & {lifetime[Address]=(settingsUnix32),!0}
Line 7651
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7651 always 7651
Line 7658
  = always "wchar_t"
  "wchar_t" always "wchar_t"
Line 7659
  "LPCTSTR" always "LPCTSTR"
Line 7661
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7661 always 7661
  true always 1
  "LPCTSTR" always "LPCTSTR"
  & {lifetime[Address]=(settingsWin64),!0}
Line 7662
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7662 always 7662
Line 7668
  = always "C"
  "C" always "C"
Line 7669
  = always "C !!::"
  "C !!::" always "C !!::"
Line 7670
  "C" always "C"
Line 7671
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7671 always 7671
  "container(C) *" always "container(C) *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7671 always 7671
  "C*c=new C;" always "C*c=new C;"
  "new" always "new"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sC),!0}
Line 7672
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7672 always 7672
  "container(C) *" always "container(C) *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7672 always 7672
  "x=(C*)c;" always "x=(C*)c;"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sC),!0}
Line 7673
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7673 always 7673
  "container(C)" always "container(C)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7673 always 7673
  "C c = C();" always "C c = C();"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sC),!0}
Line 7679
  = always "Vector <"
  "Vector <" always "Vector <"
Line 7680
  = always "Vector !!::"
  "Vector !!::" always "Vector !!::"
Line 7681
  = always 0
  0 always 0
Line 7682
  = always 1
  true always 1
Line 7683
  "front" always "front"
Line 7685
  "data" always "data"
Line 7687
  "begin" always "begin"
Line 7689
  "Vector" always "Vector"
Line 7691
  = always "test :: string"
  "test :: string" always "test :: string"
Line 7692
  = always "test :: string !!::"
  "test :: string !!::" always "test :: string !!::"
Line 7693
  = always 1
  = always 1
  true always 1
Line 7694
  "test::string" always "test::string"
Line 7695
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7695 always 7695
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7695 always 7695
  "Vector<int> v; v[0]=3;" always "Vector<int> v; v[0]=3;"
  "[" always "["
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7696
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7696 always 7696
  "container(test :: string)" always "container(test :: string)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7696 always 7696
  "{return test::string();}" always "{return test::string();}"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7697
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7697 always 7697
  "container(test :: string)" always "container(test :: string)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7697 always 7697
  "void foo(Vector<test::string> v) { for (auto s: v) { x=s+s; } }" always "void foo(Vector<test::string> v) { for (auto s: v) { x=s+s; } }"
  "s" always "s"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7700
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7700 always 7700
  "container(test :: string)" always "container(test :: string)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7700 always 7700
  "void foo(Vector<test::string> v) { for (auto s: v) { x=s+s; } }" always "void foo(Vector<test::string> v) { for (auto s: v) { x=s+s; } }"
  "+" always "+"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7703
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7703 always 7703
  "container(test :: string) &" always "container(test :: string) &"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7703 always 7703
  "Vector<test::string> v; x = v.front();" always "Vector<test::string> v; x = v.front();"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7705
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7705 always 7705
  "container(test :: string) *" always "container(test :: string) *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7705 always 7705
  "Vector<test::string> v; x = v.data();" always "Vector<test::string> v; x = v.data();"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7707
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7707 always 7707
  "signed int &" always "signed int &"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7707 always 7707
  "Vector<int> v; x = v.front();" always "Vector<int> v; x = v.front();"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7708
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7708 always 7708
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7708 always 7708
  "Vector<int> v; x = v.data();" always "Vector<int> v; x = v.data();"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7709
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7709 always 7709
  "signed int * *" always "signed int * *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7709 always 7709
  "Vector<int*> v; x = v.data();" always "Vector<int*> v; x = v.data();"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7710
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7710 always 7710
  "iterator(Vector <)" always "iterator(Vector <)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7710 always 7710
  "Vector<int> v; x = v.begin();" always "Vector<int> v; x = v.begin();"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7711
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7711 always 7711
  "signed int &" always "signed int &"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7711 always 7711
  "Vector<int> v; x = *v.begin();" always "Vector<int> v; x = *v.begin();"
  "*" always "*"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7712
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7712 always 7712
  "container(test :: string)" always "container(test :: string)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7712 always 7712
  "void foo(){test::string s; return \"x\"+s;}" always "void foo(){test::string s; return \"x\"+s;}"
  "+" always "+"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7714
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7714 always 7714
  "container(test :: string)" always "container(test :: string)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7714 always 7714
  "void foo(){test::string s; return s+\"x\";}" always "void foo(){test::string s; return s+\"x\";}"
  "+" always "+"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7716
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7716 always 7716
  "container(test :: string)" always "container(test :: string)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7716 always 7716
  "void foo(){test::string s; return 'x'+s;}" always "void foo(){test::string s; return 'x'+s;}"
  "+" always "+"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7718
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7718 always 7718
  "container(test :: string)" always "container(test :: string)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7718 always 7718
  "void foo(){test::string s; return s+'x';}" always "void foo(){test::string s; return s+'x';}"
  "+" always "+"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7723
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7723 always 7723
  "C *" always "C *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7723 always 7723
  "class C {}; x = new C();" always "class C {}; x = new C();"
  "new" always "new"
Line 7726
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7726 always 7726
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7726 always 7726
  "; auto x = 3;" always "; auto x = 3;"
  "x" always "x"
Line 7727
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7727 always 7727
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7727 always 7727
  "; auto *p = (int *)0;" always "; auto *p = (int *)0;"
  "p" always "p"
Line 7728
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7728 always 7728
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7728 always 7728
  "; auto *p = (const int *)0;" always "; auto *p = (const int *)0;"
  "p" always "p"
Line 7729
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7729 always 7729
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7729 always 7729
  "; auto *p = (constexpr int *)0;" always "; auto *p = (constexpr int *)0;"
  "p" always "p"
Line 7730
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7730 always 7730
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7730 always 7730
  "; const auto *p = (int *)0;" always "; const auto *p = (int *)0;"
  "p" always "p"
Line 7731
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7731 always 7731
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7731 always 7731
  "; constexpr auto *p = (int *)0;" always "; constexpr auto *p = (int *)0;"
  "p" always "p"
Line 7732
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7732 always 7732
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7732 always 7732
  "; const auto *p = (const int *)0;" always "; const auto *p = (const int *)0;"
  "p" always "p"
Line 7733
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7733 always 7733
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7733 always 7733
  "; constexpr auto *p = (constexpr int *)0;" always "; constexpr auto *p = (constexpr int *)0;"
  "p" always "p"
Line 7734
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7734 always 7734
  "const signed int *" always "const signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7734 always 7734
  "; const constexpr auto *p = (int *)0;" always "; const constexpr auto *p = (int *)0;"
  "p" always "p"
Line 7735
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7735 always 7735
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7735 always 7735
  "; auto data = new int[100];" always "; auto data = new int[100];"
  "data" always "data"
Line 7736
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7736 always 7736
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7736 always 7736
  "; auto data = new X::Y; int x=1000; x=x/5;" always "; auto data = new X::Y; int x=1000; x=x/5;"
  "/" always "/"
Line 7737
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7737 always 7737
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7737 always 7737
  "; auto data = new (nothrow) int[100];" always "; auto data = new (nothrow) int[100];"
  "data" always "data"
Line 7738
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7738 always 7738
  "signed int *" always "signed int *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7738 always 7738
  "; auto data = new (std::nothrow) int[100];" always "; auto data = new (std::nothrow) int[100];"
  "data" always "data"
Line 7739
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7739 always 7739
  "const signed short" always "const signed short"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7739 always 7739
  "short values[10]; void f() { for (const auto x : values); }" always "short values[10]; void f() { for (const auto x : values); }"
  "x" always "x"
Line 7740
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7740 always 7740
  "const signed short &" always "const signed short &"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7740 always 7740
  "short values[10]; void f() { for (const auto& x : values); }" always "short values[10]; void f() { for (const auto& x : values); }"
  "x" always "x"
Line 7741
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7741 always 7741
  "signed short &" always "signed short &"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7741 always 7741
  "short values[10]; void f() { for (auto& x : values); }" always "short values[10]; void f() { for (auto& x : values); }"
  "x" always "x"
Line 7742
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7742 always 7742
  "signed int * &" always "signed int * &"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7742 always 7742
  "int* values[10]; void f() { for (auto& p : values); }" always "int* values[10]; void f() { for (auto& p : values); }"
  "p" always "p"
Line 7743
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7743 always 7743
  "signed int * const &" always "signed int * const &"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7743 always 7743
  "int* values[10]; void f() { for (const auto& p : values); }" always "int* values[10]; void f() { for (const auto& p : values); }"
  "p" always "p"
Line 7744
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7744 always 7744
  "const signed int" always "const signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7744 always 7744
  "; const auto x = 3;" always "; const auto x = 3;"
  "x" always "x"
Line 7745
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7745 always 7745
  "const signed int" always "const signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7745 always 7745
  "; constexpr auto x = 3;" always "; constexpr auto x = 3;"
  "x" always "x"
Line 7746
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7746 always 7746
  "const signed int" always "const signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7746 always 7746
  "; const constexpr auto x = 3;" always "; const constexpr auto x = 3;"
  "x" always "x"
Line 7749
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7749 always 7749
  "char *" always "char *"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7749 always 7749
  "; char abc[] = \"abc\";" always "; char abc[] = \"abc\";"
  "[" always "["
Line 7750
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7750 always 7750
  "" always ""
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7750 always 7750
  "; int x[10] = { [3]=1 };" always "; int x[10] = { [3]=1 };"
  "[ 3 ]" always "[ 3 ]"
Line 7756
  = always "std::shared_ptr"
  "std::shared_ptr" always "std::shared_ptr"
Line 7757
  "std::shared_ptr" always "std::shared_ptr"
Line 7758
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7758 always 7758
  "smart-pointer(std::shared_ptr)" always "smart-pointer(std::shared_ptr)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7758 always 7758
  "class C {}; x = std::make_shared<C>();" always "class C {}; x = std::make_shared<C>();"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7767
  = always "C"
  "C" always "C"
Line 7768
  = always "C !!::"
  "C !!::" always "C !!::"
Line 7769
  "C" always "C"
Line 7770
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7770 always 7770
  "container(C)" always "container(C)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7770 always 7770
  "C f(char *p) { char data[10]; return data; }" always "C f(char *p) { char data[10]; return data; }"
  "return" always "return"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(sC),!0}
Line 7776
  = always "MyPtr"
  "MyPtr" always "MyPtr"
Line 7777
  "MyPtr" always "MyPtr"
Line 7778
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7778 always 7778
  "smart-pointer(MyPtr)" always "smart-pointer(MyPtr)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7778 always 7778
  "void f() { MyPtr<int> p; return p; }" always "void f() { MyPtr<int> p; return p; }"
  "p ;" always "p ;"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7780
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7780 always 7780
  "signed int" always "signed int"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7780 always 7780
  "void f() { MyPtr<int> p; return *p; }" always "void f() { MyPtr<int> p; return *p; }"
  "* p ;" always "* p ;"
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7781
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7781 always 7781
  "smart-pointer(MyPtr)" always "smart-pointer(MyPtr)"
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7781 always 7781
  "void f() {return MyPtr<int>();}" always "void f() {return MyPtr<int>();}"
  "(" always "("
  "test.cpp" always "test.cpp"
  & {lifetime[Address]=(set),!0}
Line 7787
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "CBase* create(const char *c1, ...);\nint    create(COther& ot, const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(ot, \"AAAA\", 44, (char*)0);\n}" always "CBase* create(const char *c1, ...);\nint    create(COther& ot, const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(ot, \"AAAA\", 44, (char*)0);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7787 always 7787
  false always 0
Line 7795
  "create ( \"AAAA\"" always "create ( \"AAAA\""
Line 7796
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7796 always 7796
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 7797
  "create ( ot" always "create ( ot"
Line 7798
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7798 always 7798
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 7801
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int    create(COther& ot, const char *c1, ...);\nCBase* create(const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(ot, \"AAAA\", 44, (char*)0);\n}" always "int    create(COther& ot, const char *c1, ...);\nCBase* create(const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(ot, \"AAAA\", 44, (char*)0);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7801 always 7801
  false always 0
Line 7809
  "create ( \"AAAA\"" always "create ( \"AAAA\""
Line 7810
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7810 always 7810
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 7811
  "create ( ot" always "create ( ot"
Line 7812
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7812 always 7812
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 7818
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "CBase* create(const char *c1, ...);\nCBase* create(const wchar_t *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(L\"AAAA\", 44, (char*)0);\n}" always "CBase* create(const char *c1, ...);\nCBase* create(const wchar_t *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(L\"AAAA\", 44, (char*)0);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7818 always 7818
  false always 0
Line 7826
  "cp1 = create (" always "cp1 = create ("
Line 7827
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7827 always 7827
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  1 always 1
Line 7828
  "cp2 = create (" always "cp2 = create ("
Line 7829
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7829 always 7829
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  2 always 2
Line 7832
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "CBase* create(const wchar_t *c1, ...);\nCBase* create(const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(L\"AAAA\", 44, (char*)0);\n}" always "CBase* create(const wchar_t *c1, ...);\nCBase* create(const char *c1, ...);\nint foo(COther & ot)\n{\n   CBase* cp1 = create(\"AAAA\", 44, (char*)0);\n   CBase* cp2 = create(L\"AAAA\", 44, (char*)0);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7832 always 7832
  false always 0
Line 7840
  "cp1 = create (" always "cp1 = create ("
Line 7841
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7841 always 7841
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  2 always 2
Line 7842
  "cp2 = create (" always "cp2 = create ("
Line 7843
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7843 always 7843
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  f always !0
  2 always 2
  && always {!<=-1,!>=2}
  2 always 2
  == always {!<=-1,!>=2}
  1 always 1
Line 7849
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "int zdcalc(const XYZ & per, short rs = 0);\ndouble zdcalc(long& length, const XYZ * per);\nlong mycalc( ) {\n    long length;\n    XYZ per;\n    zdcalc(length, &per);\n}" always "int zdcalc(const XYZ & per, short rs = 0);\ndouble zdcalc(long& length, const XYZ * per);\nlong mycalc( ) {\n    long length;\n    XYZ per;\n    zdcalc(length, &per);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7849 always 7849
  false always 0
Line 7857
  "zdcalc ( length" always "zdcalc ( length"
Line 7858
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7858 always 7858
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 7861
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "double zdcalc(long& length, const XYZ * per);\nint zdcalc(const XYZ & per, short rs = 0);\nlong mycalc( ) {\n    long length;\n    XYZ per;\n    zdcalc(length, &per);\n}" always "double zdcalc(long& length, const XYZ * per);\nint zdcalc(const XYZ & per, short rs = 0);\nlong mycalc( ) {\n    long length;\n    XYZ per;\n    zdcalc(length, &per);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7861 always 7861
  false always 0
Line 7869
  "zdcalc ( length" always "zdcalc ( length"
Line 7870
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7870 always 7870
  true always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 7875
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "func() { }" always "func() { }"
  "test.c" always "test.c"
  false always 0
Line 7877
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7877 always 7877
  && always {!<=-1,!>=2}
  db always !0
  == always {!<=-1,!>=2}
  1 always 1
Line 7878
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7878 always 7878
  0 always 0
  != always {!<=-1,!>=2}
  nullptr always 0
Line 7879
  0 always 0
Line 7880
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7880 always 7880
  "func" always "func"
  ? possible ""
  : always ""
  "" always ""
Line 7884
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "; auto x = \"abc\";" always "; auto x = \"abc\";"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7884 always 7884
  false always 0
Line 7886
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7886 always 7886
  && always {!<=-1,!>=2}
  autotok always !0
Line 7887
  = possible 0
  ? possible 0
  db always !0
  1 always 1
  : always 0
  nullptr always 0
Line 7888
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7888 always 7888
  var possible 0
  && always {!<=-1,!>=2}
  var always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  var always !0
Line 7892
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S { int i; };\nint foo() {\n    auto a = new S;\n    auto * b = new S;\n    auto c = new S[10];\n    auto * d = new S[10];\n    return a->i + b->i + c[0]->i + d[0]->i;\n}" always "struct S { int i; };\nint foo() {\n    auto a = new S;\n    auto * b = new S;\n    auto c = new S[10];\n    auto * d = new S[10];\n    return a->i + b->i + c[0]->i + d[0]->i;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7892 always 7892
  false always 0
Line 7900
  "auto" always "auto"
Line 7901
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7901 always 7901
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 7903
  "auto" always "auto"
Line 7904
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7904 always 7904
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7906
  "auto" always "auto"
Line 7907
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7907 always 7907
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 7909
  "auto" always "auto"
Line 7910
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7910 always 7910
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7912
  "a =" always "a ="
Line 7913
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7913 always 7913
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7915
  "b =" always "b ="
Line 7916
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7916 always 7916
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7918
  "c =" always "c ="
Line 7919
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7919 always 7919
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7921
  "d =" always "d ="
Line 7922
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7922 always 7922
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7924
  "return" always "return"
Line 7926
  "a" always "a"
Line 7927
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7927 always 7927
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7929
  "b" always "b"
Line 7930
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7930 always 7930
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7932
  "c" always "c"
Line 7933
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7933 always 7933
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7935
  "d" always "d"
Line 7936
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7936 always 7936
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 7938
  "return" always "return"
Line 7940
  "i" always "i"
Line 7941
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7941 always 7941
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 7943
  "i" always "i"
Line 7944
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7944 always 7944
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 7946
  "i" always "i"
Line 7947
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7947 always 7947
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 7949
  "i" always "i"
Line 7950
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7950 always 7950
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 7954
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "enum E : unsigned short { A, B, C };\nint foo() {\n    auto a = new E;\n    auto * b = new E;\n    auto c = new E[10];\n    auto * d = new E[10];\n    return *a + *b + c[0] + d[0];\n}" always "enum E : unsigned short { A, B, C };\nint foo() {\n    auto a = new E;\n    auto * b = new E;\n    auto c = new E[10];\n    auto * d = new E[10];\n    return *a + *b + c[0] + d[0];\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7954 always 7954
  false always 0
Line 7962
  "auto" always "auto"
Line 7963
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7963 always 7963
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 7965
  "auto" always "auto"
Line 7966
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7966 always 7966
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7968
  "auto" always "auto"
Line 7969
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7969 always 7969
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  1 always 1
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  nullptr always 0
Line 7971
  "auto" always "auto"
Line 7972
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7972 always 7972
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7974
  "a =" always "a ="
Line 7975
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7975 always 7975
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7977
  "b =" always "b ="
Line 7978
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7978 always 7978
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7980
  "c =" always "c ="
Line 7981
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7981 always 7981
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7983
  "d =" always "d ="
Line 7984
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7984 always 7984
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7986
  "return" always "return"
Line 7988
  "a" always "a"
Line 7989
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7989 always 7989
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7991
  "b" always "b"
Line 7992
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7992 always 7992
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7994
  "c" always "c"
Line 7995
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7995 always 7995
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 7997
  "d" always "d"
Line 7998
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  7998 always 7998
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "E" always "E"
Line 8002
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S { int i; };\nint foo() {\n    S array[10];\n    for (auto a : array)\n        a.i = 0;\n    for (auto & b : array)\n        b.i = 1;\n    for (const auto & c : array)\n        auto ci = c.i;\n    for (auto * d : array)\n        d->i = 0;\n    for (const auto * e : array)\n        auto ei = e->i;\n    return array[0].i;\n}" always "struct S { int i; };\nint foo() {\n    S array[10];\n    for (auto a : array)\n        a.i = 0;\n    for (auto & b : array)\n        b.i = 1;\n    for (const auto & c : array)\n        auto ci = c.i;\n    for (auto * d : array)\n        d->i = 0;\n    for (const auto * e : array)\n        auto ei = e->i;\n    return array[0].i;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8002 always 8002
  false always 0
Line 8017
  "auto a" always "auto a"
Line 8018
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8018 always 8018
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8019
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8019 always 8019
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8021
  "auto & b" always "auto & b"
Line 8022
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8022 always 8022
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8023
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8023 always 8023
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8025
  "auto & c" always "auto & c"
Line 8026
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8026 always 8026
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8027
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8027 always 8027
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8029
  "auto * d" always "auto * d"
Line 8030
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8030 always 8030
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8031
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8031 always 8031
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8033
  "auto * e" always "auto * e"
Line 8034
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8034 always 8034
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8035
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8035 always 8035
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8037
  "a :" always "a :"
Line 8038
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8038 always 8038
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8039
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8039 always 8039
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
Line 8040
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8040 always 8040
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8042
  "b :" always "b :"
Line 8043
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8043 always 8043
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8044
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8044 always 8044
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
Line 8046
  "c :" always "c :"
Line 8047
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8047 always 8047
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8048
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8048 always 8048
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
Line 8050
  "d :" always "d :"
Line 8051
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8051 always 8051
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8052
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8052 always 8052
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
Line 8054
  "e :" always "e :"
Line 8055
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8055 always 8055
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8056
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8056 always 8056
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
Line 8058
  "a . i" always "a . i"
Line 8059
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8059 always 8059
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8061
  "i" always "i"
Line 8062
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8062 always 8062
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8064
  "b . i" always "b . i"
Line 8065
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8065 always 8065
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8067
  "i" always "i"
Line 8068
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8068 always 8068
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8070
  "c . i" always "c . i"
Line 8071
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8071 always 8071
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8073
  "i" always "i"
Line 8074
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8074 always 8074
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8076
  "d . i" always "d . i"
Line 8077
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8077 always 8077
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8079
  "i" always "i"
Line 8080
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8080 always 8080
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8082
  "e . i" always "e . i"
Line 8083
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8083 always 8083
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8085
  "i" always "i"
Line 8086
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8086 always 8086
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8088
  "i" always "i"
Line 8089
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8089 always 8089
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8093
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct S { int i; };\nint foo() {\n    std::vector<S> vec(10);\n    for (auto a : vec)\n        a.i = 0;\n    for (auto & b : vec)\n        b.i = 0;\n    for (const auto & c : vec)\n        auto ci = c.i;\n    for (auto * d : vec)\n        d.i = 0;\n    for (const auto * e : vec)\n        auto ei = e->i;\n    return vec[0].i;\n}" always "struct S { int i; };\nint foo() {\n    std::vector<S> vec(10);\n    for (auto a : vec)\n        a.i = 0;\n    for (auto & b : vec)\n        b.i = 0;\n    for (const auto & c : vec)\n        auto ci = c.i;\n    for (auto * d : vec)\n        d.i = 0;\n    for (const auto * e : vec)\n        auto ei = e->i;\n    return vec[0].i;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8093 always 8093
  false always 0
Line 8108
  "auto a" always "auto a"
Line 8109
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8109 always 8109
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8110
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8110 always 8110
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8112
  "auto & b" always "auto & b"
Line 8113
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8113 always 8113
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8114
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8114 always 8114
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8116
  "auto & c" always "auto & c"
Line 8117
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8117 always 8117
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8118
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8118 always 8118
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8120
  "auto * d" always "auto * d"
Line 8121
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8121 always 8121
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8122
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8122 always 8122
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8124
  "auto * e" always "auto * e"
Line 8125
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8125 always 8125
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  0 always 0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8126
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8126 always 8126
  && always {!<=-1,!>=2}
  autotok always !0
  && always {!<=-1,!>=2}
  autotok always !0
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8128
  "a :" always "a :"
Line 8129
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8129 always 8129
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8130
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8130 always 8130
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
Line 8131
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8131 always 8131
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8133
  "b :" always "b :"
Line 8134
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8134 always 8134
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8135
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8135 always 8135
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
Line 8137
  "c :" always "c :"
Line 8138
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8138 always 8138
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8139
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8139 always 8139
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
Line 8141
  "d :" always "d :"
Line 8142
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8142 always 8142
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8143
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8143 always 8143
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
Line 8145
  "e :" always "e :"
Line 8146
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8146 always 8146
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8147
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8147 always 8147
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
Line 8150
  "a . i" always "a . i"
Line 8151
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8151 always 8151
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8153
  "i" always "i"
Line 8154
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8154 always 8154
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8156
  "b . i" always "b . i"
Line 8157
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8157 always 8157
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8159
  "i" always "i"
Line 8160
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8160 always 8160
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8162
  "c . i" always "c . i"
Line 8163
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8163 always 8163
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8165
  "i" always "i"
Line 8166
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8166 always 8166
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8168
  "d . i" always "d . i"
Line 8169
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8169 always 8169
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8171
  "i" always "i"
Line 8172
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8172 always 8172
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8174
  "e . i" always "e . i"
Line 8175
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8175 always 8175
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  && always {!<=-1,!>=2}
  == always {!<=-1,!>=2}
  "S" always "S"
Line 8177
  "i" always "i"
Line 8178
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8178 always 8178
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8180
  "i" always "i"
Line 8181
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8181 always 8181
  && always {!<=-1,!>=2}
  vartok always !0
  && always {!<=-1,!>=2}
  vartok always !0
  == always {!<=-1,!>=2}
  "int" always "int"
Line 8185
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class WebGLTransformFeedback final\n: public nsWrapperCache\n, public WebGLRefCountedObject < WebGLTransformFeedback >\n, public LinkedListElement < WebGLTransformFeedback >\n{\nprivate :\nstd :: vector < IndexedBufferBinding > mIndexedBindings ;\n} ;\nstruct IndexedBufferBinding\n{\nIndexedBufferBinding ( ) ;\n} ;\nconst decltype ( WebGLTransformFeedback :: mBuffersForTF ) &\nWebGLTransformFeedback :: BuffersForTF ( ) const\n{\nmBuffersForTF . clear ( ) ;\nfor ( const auto & cur : mIndexedBindings ) {}\nreturn mBuffersForTF ;\n}" always "class WebGLTransformFeedback final\n: public nsWrapperCache\n, public WebGLRefCountedObject < WebGLTransformFeedback >\n, public LinkedListElement < WebGLTransformFeedback >\n{\nprivate :\nstd :: vector < IndexedBufferBinding > mIndexedBindings ;\n} ;\nstruct IndexedBufferBinding\n{\nIndexedBufferBinding ( ) ;\n} ;\nconst decltype ( WebGLTransformFeedback :: mBuffersForTF ) &\nWebGLTransformFeedback :: BuffersForTF ( ) const\n{\nmBuffersForTF . clear ( ) ;\nfor ( const auto & cur : mIndexedBindings ) {}\nreturn mBuffersForTF ;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8185 always 8185
  false always 0
Line 8207
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "struct Foo { int a; int b[10]; };\nclass Bar {\n    Foo foo1;\n    Foo foo2[10];\npublic:\n    const Foo & getFoo1() { return foo1; }\n    const Foo * getFoo2() { return foo2; }\n};\nint main() {\n    Bar bar;\n    auto v1 = bar.getFoo1().a;\n    auto v2 = bar.getFoo1().b[0];\n    auto v3 = bar.getFoo1().b;\n    const auto v4 = bar.getFoo1().b;\n    const auto * v5 = bar.getFoo1().b;\n    auto v6 = bar.getFoo2()[0].a;\n    auto v7 = bar.getFoo2()[0].b[0];\n    auto v8 = bar.getFoo2()[0].b;\n    const auto v9 = bar.getFoo2()[0].b;\n    const auto * v10 = bar.getFoo2()[0].b;\n    auto v11 = v1 + v2 + v3[0] + v4[0] + v5[0] + v6 + v7 + v8[0] + v9[0] + v10[0];\n    return v11;\n}" always "struct Foo { int a; int b[10]; };\nclass Bar {\n    Foo foo1;\n    Foo foo2[10];\npublic:\n    const Foo & getFoo1() { return foo1; }\n    const Foo * getFoo2() { return foo2; }\n};\nint main() {\n    Bar bar;\n    auto v1 = bar.getFoo1().a;\n    auto v2 = bar.getFoo1().b[0];\n    auto v3 = bar.getFoo1().b;\n    const auto v4 = bar.getFoo1().b;\n    const auto * v5 = bar.getFoo1().b;\n    auto v6 = bar.getFoo2()[0].a;\n    auto v7 = bar.getFoo2()[0].b[0];\n    auto v8 = bar.getFoo2()[0].b;\n    const auto v9 = bar.getFoo2()[0].b;\n    const auto * v10 = bar.getFoo2()[0].b;\n    auto v11 = v1 + v2 + v3[0] + v4[0] + v5[0] + v6 + v7 + v8[0] + v9[0] + v10[0];\n    return v11;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8207 always 8207
  false always 0
Line 8230
  "auto v1" always "auto v1"
Line 8233
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8233 always 8233
Line 8234
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8234 always 8234
Line 8235
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8235 always 8235
  0 always 0
Line 8236
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8236 always 8236
  0 always 0
Line 8237
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8237 always 8237
Line 8238
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8238 always 8238
Line 8239
  "v1 =" always "v1 ="
Line 8240
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8240 always 8240
Line 8241
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8241 always 8241
Line 8242
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8242 always 8242
  0 always 0
Line 8243
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8243 always 8243
  0 always 0
Line 8244
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8244 always 8244
Line 8245
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8245 always 8245
Line 8248
  "auto v2" always "auto v2"
Line 8249
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8249 always 8249
Line 8250
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8250 always 8250
Line 8251
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8251 always 8251
  0 always 0
Line 8252
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8252 always 8252
  0 always 0
Line 8253
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8253 always 8253
Line 8254
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8254 always 8254
Line 8255
  "v2 =" always "v2 ="
Line 8256
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8256 always 8256
Line 8257
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8257 always 8257
Line 8258
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8258 always 8258
  0 always 0
Line 8259
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8259 always 8259
  0 always 0
Line 8260
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8260 always 8260
Line 8261
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8261 always 8261
Line 8264
  "auto v3" always "auto v3"
Line 8265
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8265 always 8265
Line 8266
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8266 always 8266
Line 8267
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8267 always 8267
  1 always 1
Line 8268
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8268 always 8268
  1 always 1
Line 8269
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8269 always 8269
Line 8270
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8270 always 8270
Line 8271
  "v3 =" always "v3 ="
Line 8272
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8272 always 8272
Line 8273
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8273 always 8273
Line 8274
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8274 always 8274
  1 always 1
Line 8275
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8275 always 8275
  1 always 1
Line 8276
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8276 always 8276
Line 8277
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8277 always 8277
Line 8280
  "auto v4" always "auto v4"
Line 8281
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8281 always 8281
Line 8282
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8282 always 8282
Line 8283
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8283 always 8283
  0 always 0
  1 always 1
Line 8284
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8284 always 8284
  1 always 1
Line 8285
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8285 always 8285
Line 8286
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8286 always 8286
Line 8287
  "v4 =" always "v4 ="
Line 8288
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8288 always 8288
Line 8289
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8289 always 8289
Line 8290
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8290 always 8290
  1 always 1
Line 8291
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8291 always 8291
  1 always 1
Line 8292
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8292 always 8292
Line 8293
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8293 always 8293
Line 8296
  "auto * v5" always "auto * v5"
Line 8297
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8297 always 8297
Line 8298
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8298 always 8298
Line 8299
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8299 always 8299
  0 always 0
  1 always 1
Line 8300
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8300 always 8300
  0 always 0
Line 8301
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8301 always 8301
Line 8302
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8302 always 8302
Line 8303
  "v5 =" always "v5 ="
Line 8304
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8304 always 8304
Line 8305
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8305 always 8305
Line 8306
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8306 always 8306
  1 always 1
Line 8307
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8307 always 8307
  1 always 1
Line 8308
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8308 always 8308
Line 8309
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8309 always 8309
Line 8312
  "auto v6" always "auto v6"
Line 8313
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8313 always 8313
Line 8314
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8314 always 8314
Line 8315
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8315 always 8315
  0 always 0
Line 8316
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8316 always 8316
  0 always 0
Line 8317
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8317 always 8317
Line 8318
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8318 always 8318
Line 8319
  "v6 =" always "v6 ="
Line 8320
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8320 always 8320
Line 8321
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8321 always 8321
Line 8322
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8322 always 8322
  0 always 0
Line 8323
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8323 always 8323
  0 always 0
Line 8324
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8324 always 8324
Line 8325
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8325 always 8325
Line 8328
  "auto v7" always "auto v7"
Line 8329
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8329 always 8329
Line 8330
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8330 always 8330
Line 8331
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8331 always 8331
  0 always 0
Line 8332
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8332 always 8332
  0 always 0
Line 8333
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8333 always 8333
Line 8334
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8334 always 8334
Line 8335
  "v7 =" always "v7 ="
Line 8336
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8336 always 8336
Line 8337
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8337 always 8337
Line 8338
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8338 always 8338
  0 always 0
Line 8339
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8339 always 8339
  0 always 0
Line 8340
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8340 always 8340
Line 8341
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8341 always 8341
Line 8344
  "auto v8" always "auto v8"
Line 8345
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8345 always 8345
Line 8346
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8346 always 8346
Line 8347
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8347 always 8347
  1 always 1
Line 8348
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8348 always 8348
  1 always 1
Line 8349
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8349 always 8349
Line 8350
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8350 always 8350
Line 8351
  "v8 =" always "v8 ="
Line 8352
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8352 always 8352
Line 8353
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8353 always 8353
Line 8354
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8354 always 8354
  1 always 1
Line 8355
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8355 always 8355
  1 always 1
Line 8356
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8356 always 8356
Line 8357
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8357 always 8357
Line 8360
  "auto v9" always "auto v9"
Line 8361
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8361 always 8361
Line 8362
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8362 always 8362
Line 8363
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8363 always 8363
  0 always 0
  1 always 1
Line 8364
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8364 always 8364
  1 always 1
Line 8365
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8365 always 8365
Line 8366
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8366 always 8366
Line 8367
  "v9 =" always "v9 ="
Line 8368
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8368 always 8368
Line 8369
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8369 always 8369
Line 8370
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8370 always 8370
  1 always 1
Line 8371
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8371 always 8371
  1 always 1
Line 8372
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8372 always 8372
Line 8373
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8373 always 8373
Line 8376
  "auto * v10" always "auto * v10"
Line 8377
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8377 always 8377
Line 8378
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8378 always 8378
Line 8379
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8379 always 8379
  0 always 0
  1 always 1
Line 8380
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8380 always 8380
  0 always 0
Line 8381
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8381 always 8381
Line 8382
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8382 always 8382
Line 8383
  "v10 =" always "v10 ="
Line 8384
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8384 always 8384
Line 8385
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8385 always 8385
Line 8386
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8386 always 8386
  1 always 1
Line 8387
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8387 always 8387
  1 always 1
Line 8388
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8388 always 8388
Line 8389
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8389 always 8389
Line 8392
  "auto v11" always "auto v11"
Line 8393
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8393 always 8393
Line 8394
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8394 always 8394
Line 8395
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8395 always 8395
  0 always 0
Line 8396
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8396 always 8396
  0 always 0
Line 8397
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8397 always 8397
Line 8398
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8398 always 8398
Line 8401
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8401 always 8401
Line 8402
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8402 always 8402
Line 8403
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8403 always 8403
  0 always 0
Line 8404
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8404 always 8404
  0 always 0
Line 8405
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8405 always 8405
Line 8406
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8406 always 8406
Line 8410
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "std::vector<int> vec;\nvoid foo() {\n    for (auto it = vec.begin(); it != vec.end(); ++it) { }\n}" always "std::vector<int> vec;\nvoid foo() {\n    for (auto it = vec.begin(); it != vec.end(); ++it) { }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8410 always 8410
  false always 0
Line 8414
  "auto it" always "auto it"
Line 8416
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8416 always 8416
Line 8417
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8417 always 8417
Line 8418
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8418 always 8418
  0 always 0
Line 8419
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8419 always 8419
  0 always 0
Line 8420
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8420 always 8420
Line 8421
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8421 always 8421
Line 8423
  "it =" always "it ="
Line 8424
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8424 always 8424
Line 8425
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8425 always 8425
Line 8426
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8426 always 8426
  0 always 0
Line 8427
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8427 always 8427
  0 always 0
Line 8428
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8428 always 8428
Line 8429
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8429 always 8429
Line 8433
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "class DHTTokenTracker {\n  static const size_t SECRET_SIZE = 4;\n  unsigned char secret_[2][SECRET_SIZE];\n  void validateToken();\n};\ntemplate <typename T> struct DerefEqual<T> derefEqual(const T& t) {\n  return DerefEqual<T>(t);\n}\ntemplate <typename T>\nstruct RefLess {\n  bool operator()(const std::shared_ptr<T>& lhs,\n                  const std::shared_ptr<T>& rhs)\n  {\n    return lhs.get() < rhs.get();\n  }\n};\nvoid DHTTokenTracker::validateToken()\n{\n  for (auto& elem : secret_) {\n  }\n}" always "class DHTTokenTracker {\n  static const size_t SECRET_SIZE = 4;\n  unsigned char secret_[2][SECRET_SIZE];\n  void validateToken();\n};\ntemplate <typename T> struct DerefEqual<T> derefEqual(const T& t) {\n  return DerefEqual<T>(t);\n}\ntemplate <typename T>\nstruct RefLess {\n  bool operator()(const std::shared_ptr<T>& lhs,\n                  const std::shared_ptr<T>& rhs)\n  {\n    return lhs.get() < rhs.get();\n  }\n};\nvoid DHTTokenTracker::validateToken()\n{\n  for (auto& elem : secret_) {\n  }\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8433 always 8433
  false always 0
Line 8457
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() {\n    std::vector<int> ints(4);\n    auto iter = ints.begin() + (ints.size() - 1);\n}" always "void f() {\n    std::vector<int> ints(4);\n    auto iter = ints.begin() + (ints.size() - 1);\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8457 always 8457
  false always 0
Line 8461
  "auto iter" always "auto iter"
Line 8463
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8463 always 8463
Line 8464
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8464 always 8464
Line 8465
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8465 always 8465
  0 always 0
Line 8466
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8466 always 8466
  0 always 0
Line 8467
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8467 always 8467
Line 8468
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8468 always 8468
Line 8472
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f() {\n  const auto v1 = 3;\n  const auto *v2 = 0;\n}" always "void f() {\n  const auto v1 = 3;\n  const auto *v2 = 0;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8472 always 8472
  false always 0
Line 8477
  "v1" always "v1"
Line 8478
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8478 always 8478
  && always {!<=-1,!>=2}
  v1tok always !0
  && always {!<=-1,!>=2}
  v1tok always !0
Line 8480
  "v2" always "v2"
Line 8481
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8481 always 8481
  && always {!<=-1,!>=2}
  v2tok always !0
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  v2tok always !0
Line 8485
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void f(const std::string &x) {\n  auto y = x;\n  if (y.empty()) {}\n}" always "void f(const std::string &x) {\n  auto y = x;\n  if (y.empty()) {}\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8485 always 8485
  false always 0
Line 8492
  "y =" always "y ="
Line 8493
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8493 always 8493
  && always {!<=-1,!>=2}
  tok always !0
  && always {!<=-1,!>=2}
  tok always !0
Line 8495
  "y ." always "y ."
Line 8496
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8496 always 8496
  && always {!<=-1,!>=2}
  tok always !0
  && always {!<=-1,!>=2}
  tok always !0
Line 8500
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "uint8_t *get();\n\nuint8_t *test()\n{\n    auto *next = get();\n    return next;\n}" always "uint8_t *get();\n\nuint8_t *test()\n{\n    auto *next = get();\n    return next;\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8500 always 8500
  false always 0
Line 8510
  "return" always "return"
Line 8511
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8511 always 8511
Line 8512
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8512 always 8512
Line 8513
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8513 always 8513
Line 8514
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8514 always 8514
Line 8515
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8515 always 8515
Line 8519
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "static void foo() {\n    auto combo = widget->combo = new Combo{};\n    combo->addItem();\n}" always "static void foo() {\n    auto combo = widget->combo = new Combo{};\n    combo->addItem();\n}"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8519 always 8519
  false always 0
Line 8526
  "combo =" always "combo ="
Line 8527
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8527 always 8527
  && always {!<=-1,!>=2}
  ! always {!<=-1,!>=2}
  tok always !0
Line 8531
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "auto var1{3};\nauto var2{4.0};" always "auto var1{3};\nauto var2{4.0};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8531 always 8531
  false always 0
Line 8533
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8533 always 8533
  3 always 3
Line 8534
  1 always 1
Line 8535
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8535 always 8535
Line 8536
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8536 always 8536
Line 8537
  2 always 2
Line 8538
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8538 always 8538
Line 8539
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8539 always 8539
Line 8543
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "void foo(std::map<std::string, bool> x) {\n    for (const auto& i: x) {}\n}\n" always "void foo(std::map<std::string, bool> x) {\n    for (const auto& i: x) {}\n}\n"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8543 always 8543
  false always 0
Line 8546
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8546 always 8546
  3 always 3
Line 8548
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8548 always 8548
Line 8549
  ! always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8549 always 8549
Line 8553
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "union Fred {\n    Fred(int x) : i(x) { }\n    Fred(float x) : f(x) { }\n    int i;\n    float f;\n};" always "union Fred {\n    Fred(int x) : i(x) { }\n    Fred(float x) : f(x) { }\n    int i;\n    float f;\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8553 always 8553
  false always 0
Line 8560
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8560 always 8560
  "" always ""
Line 8562
  "Fred ( int" always "Fred ( int"
Line 8563
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8563 always 8563
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  2 always 2
Line 8565
  "Fred ( float" always "Fred ( float"
Line 8566
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8566 always 8566
  && always {!<=-1,!>=2}
  f always !0
  && always {!<=-1,!>=2}
  f always !0
  == always {!<=-1,!>=2}
  3 always 3
Line 8570
  & {lifetime[Address]=(settings1),!0}
  this always !0
  "template<class _Ty,\n  class _Alloc = std::allocator<_Ty>>\n  class SLSurfaceLayerData\n  : public _Vector_alloc<_Vec_base_types<_Ty, _Alloc>>\n{     // varying size array of values\n\n  using reverse_iterator = _STD reverse_iterator<iterator>;\n  using const_reverse_iterator = _STD reverse_iterator<const_iterator>;\n  const_reverse_iterator crend() const noexcept\n  {   // return iterator for end of reversed nonmutable sequence\n    return (rend());\n  }\n};" always "template<class _Ty,\n  class _Alloc = std::allocator<_Ty>>\n  class SLSurfaceLayerData\n  : public _Vector_alloc<_Vec_base_types<_Ty, _Alloc>>\n{     // varying size array of values\n\n  using reverse_iterator = _STD reverse_iterator<iterator>;\n  using const_reverse_iterator = _STD reverse_iterator<const_iterator>;\n  const_reverse_iterator crend() const noexcept\n  {   // return iterator for end of reversed nonmutable sequence\n    return (rend());\n  }\n};"
  "test.cpp" always "test.cpp"
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8570 always 8570
  false always 0
Line 8584
  ! always {!<=-1,!>=2}
  ( always {!<=-1,!>=2}
  "cppcheck-2.8/test/testsymboldatabase.cpp" always "cppcheck-2.8/test/testsymboldatabase.cpp"
  8584 always 8584
  "" always ""
